{
  "accessibility": {
    "doclet": {
      "description": "Options for configuring accessibility for the chart. Requires the\n[accessibility module](https://code.highcharts.com/modules/accessibility.js)\nto be loaded. For a description of the module and information\non its features, see\n[Highcharts Accessibility](https://www.highcharts.com/docs/accessibility/accessibility-module).",
      "since": "5.0.0",
      "requires": ["module:modules/accessibility"],
      "type": { "names": ["*"] }
    },
    "meta": {
      "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
      "name": "accessibility",
      "fullname": "accessibility",
      "line": 85,
      "lineEnd": 95,
      "column": 4
    },
    "children": {
      "announceNewData": {
        "doclet": {
          "description": "Options for announcing new data to screen reader users. Useful\nfor dynamic data applications and drilldown.\n\nKeep in mind that frequent announcements will not be useful to\nusers, as they won't have time to explore the new data. For these\napplications, consider making snapshots of the data accessible, and\ndo the announcements in batches.",
          "declare": "Highcharts.AccessibilityAnnounceNewDataOptionsObject",
          "since": "7.1.0",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "accessibility.announceNewData",
          "name": "announceNewData",
          "line": 671,
          "lineEnd": 682,
          "column": 8,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js"
        },
        "children": {
          "announcementFormatter": {
            "doclet": {
              "description": "Optional formatter callback for the announcement. Receives\nup to three arguments. The first argument is always an array\nof all series that received updates. If an announcement is\nalready queued, the series that received updates for that\nannouncement are also included in this array. The second\nargument is provided if `chart.addSeries` was called, and\nthere is a new series. In that case, this argument is a\nreference to the new series. The third argument, similarly,\nis provided if `series.addPoint` was called, and there is a\nnew point. In that case, this argument is a reference to the\nnew point.\n\nThe function should return a string with the text to announce\nto the user. Return empty string to not announce anything.\nReturn `false` to use the default announcement format.",
              "samples": [
                {
                  "name": "High priority live alerts",
                  "value": "highcharts/accessibility/custom-dynamic"
                }
              ],
              "type": {
                "names": ["Highcharts.AccessibilityAnnouncementFormatter"]
              },
              "since": "7.1.0"
            },
            "meta": {
              "fullname": "accessibility.announceNewData.announcementFormatter",
              "name": "announcementFormatter",
              "line": 684,
              "lineEnd": 706,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "enabled": {
            "doclet": {
              "description": "Enable announcing new data to screen reader users",
              "samples": [
                {
                  "name": "Dynamic data accessible",
                  "value": "highcharts/accessibility/accessible-dynamic"
                }
              ],
              "since": "7.1.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "accessibility.announceNewData.enabled",
              "name": "enabled",
              "line": 684,
              "lineEnd": 706,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "interruptUser": {
            "doclet": {
              "description": "Choose whether or not the announcements should interrupt the\nscreen reader. If not enabled, the user will be notified once\nidle. It is recommended not to enable this setting unless\nthere is a specific reason to do so.",
              "since": "7.1.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "accessibility.announceNewData.interruptUser",
              "name": "interruptUser",
              "line": 723,
              "lineEnd": 728,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "minAnnounceInterval": {
            "doclet": {
              "description": "Minimum interval between announcements in milliseconds. If\nnew data arrives before this amount of time has passed, it is\nqueued for announcement. If another new data event happens\nwhile an announcement is queued, the queued announcement is\ndropped, and the latest announcement is queued instead. Set\nto 0 to allow all announcements, but be warned that frequent\nannouncements are disturbing to users.",
              "since": "7.1.0",
              "type": { "names": ["number"] },
              "defaultvalue": 5000
            },
            "meta": {
              "fullname": "accessibility.announceNewData.minAnnounceInterval",
              "name": "minAnnounceInterval",
              "line": 713,
              "lineEnd": 721,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "default": 5000
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsAccessibilityAnnounceNewDataOptions",
        "extended": 1
      },
      "customComponents": {
        "doclet": {
          "description": "A hook for adding custom components to the accessibility module.\nShould be an object mapping component names to instances of classes\ninheriting from the Highcharts.AccessibilityComponent base class.\nRemember to add the component to the\n[keyboardNavigation.order](#accessibility.keyboardNavigation.order)\nfor the keyboard navigation to be usable.",
          "samples": [
            {
              "name": "Custom accessibility component",
              "value": "highcharts/accessibility/custom-component"
            }
          ],
          "type": { "names": ["*"] },
          "since": "7.1.0"
        },
        "meta": {
          "fullname": "accessibility.customComponents",
          "name": "customComponents",
          "line": 459,
          "lineEnd": 473,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "description": {
        "doclet": {
          "description": "A text description of the chart.\n\n**Note: Prefer using [linkedDescription](#accessibility.linkedDescription)\nor [caption](#caption.text) instead.**\n\nIf the Accessibility module is loaded, this option is included by\ndefault as a long description of the chart in the hidden screen\nreader information region.\n\nNote: Since Highcharts now supports captions and linked descriptions,\nit is preferred to define the description using those methods, as a\nvisible caption/description benefits all users. If the\n`accessibility.description` option is defined, the linked description\nis ignored, and the caption is hidden from screen reader users.",
          "see": [
            "[linkedDescription](#accessibility.linkedDescription)",
            "[caption](#caption)",
            "[typeDescription](#accessibility.typeDescription)"
          ],
          "type": { "names": ["string"] },
          "since": "5.0.0"
        },
        "meta": {
          "fullname": "accessibility.description",
          "name": "description",
          "line": 493,
          "lineEnd": 516,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "enabled": {
        "doclet": {
          "description": "Enable accessibility functionality for the chart. For more\ninformation on how to include these features, and why this is\nrecommended, see [Highcharts Accessibility](https://www.highcharts.com/docs/accessibility/accessibility-module).\n\nHighcharts will by default emit a warning to the console if\nthe [accessibility module](https://code.highcharts.com/modules/accessibility.js)\nis not loaded. Setting this option to `false` will override\nand silence the warning.\n\nOnce the module is loaded, setting this option to `false`\nwill disable the module for this chart.",
          "since": "5.0.0",
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "accessibility.enabled",
          "name": "enabled",
          "line": 97,
          "lineEnd": 111,
          "column": 8,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "highContrastMode": {
        "doclet": {
          "description": "Controls how [highContrastTheme](#accessibility.highContrastTheme)\nis applied.\n\nThe default option is `auto`, which applies the high contrast theme\nthe user's system has a high contrast theme active.",
          "since": "11.4.0",
          "type": { "names": ["string"] },
          "defaultvalue": "auto"
        },
        "meta": {
          "fullname": "accessibility.highContrastMode",
          "name": "highContrastMode",
          "line": 458,
          "lineEnd": 458,
          "column": 91,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
          "default": "auto"
        },
        "children": {},
        "extended": 1
      },
      "highContrastTheme": {
        "doclet": {
          "description": "Theme to apply to the chart when Windows High Contrast Mode is\ndetected. By default, a high contrast theme matching the high\ncontrast system colors is used.",
          "type": { "names": ["*"] },
          "since": "7.1.3"
        },
        "meta": {
          "fullname": "accessibility.highContrastTheme",
          "name": "highContrastTheme",
          "line": 474,
          "lineEnd": 482,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "keyboardNavigation": {
        "doclet": {
          "description": "Options for keyboard navigation.",
          "declare": "Highcharts.KeyboardNavigationOptionsObject",
          "since": "5.0.0",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "accessibility.keyboardNavigation",
          "name": "keyboardNavigation",
          "line": 493,
          "lineEnd": 516,
          "column": 8,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js"
        },
        "children": {
          "enabled": {
            "doclet": {
              "description": "Enable keyboard navigation for the chart.",
              "since": "5.0.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "accessibility.keyboardNavigation.enabled",
              "name": "enabled",
              "line": 538,
              "lineEnd": 542,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "focusBorder": {
            "doclet": {
              "description": "Options for the focus border drawn around elements while\nnavigating through them.",
              "samples": [
                {
                  "name": "Custom focus ring",
                  "value": "highcharts/accessibility/custom-focus"
                }
              ],
              "declare": "Highcharts.KeyboardNavigationFocusBorderOptionsObject",
              "since": "6.0.3",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "accessibility.keyboardNavigation.focusBorder",
              "name": "focusBorder",
              "line": 544,
              "lineEnd": 553,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js"
            },
            "children": {
              "enabled": {
                "doclet": {
                  "description": "Enable/disable focus border for chart.",
                  "since": "6.0.3",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "accessibility.keyboardNavigation.focusBorder.enabled",
                  "name": "enabled",
                  "line": 555,
                  "lineEnd": 559,
                  "column": 16,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "hideBrowserFocusOutline": {
                "doclet": {
                  "description": "Hide the browser's default focus indicator.",
                  "since": "6.0.4",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "accessibility.keyboardNavigation.focusBorder.hideBrowserFocusOutline",
                  "name": "hideBrowserFocusOutline",
                  "line": 561,
                  "lineEnd": 565,
                  "column": 16,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "margin": {
                "doclet": {
                  "description": "Focus border margin around the elements.",
                  "since": "6.0.3",
                  "type": { "names": ["number"] },
                  "defaultvalue": 2
                },
                "meta": {
                  "fullname": "accessibility.keyboardNavigation.focusBorder.margin",
                  "name": "margin",
                  "line": 587,
                  "lineEnd": 591,
                  "column": 16,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "default": 2
                },
                "children": {},
                "extended": 1
              },
              "style": {
                "doclet": {
                  "description": "Style options for the focus border drawn around elements\nwhile navigating through them. Note that some browsers in\naddition draw their own borders for focused elements. These\nautomatic borders cannot be styled by Highcharts.\n\nIn styled mode, the border is given the\n`.highcharts-focus-border` class.",
                  "type": { "names": ["Highcharts.CSSObject"] },
                  "since": "6.0.3"
                },
                "meta": {
                  "fullname": "accessibility.keyboardNavigation.focusBorder.style",
                  "name": "style",
                  "line": 567,
                  "lineEnd": 578,
                  "column": 16,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js"
                },
                "children": {
                  "borderRadius": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["number"] },
                      "defaultvalue": 3
                    },
                    "meta": {
                      "fullname": "accessibility.keyboardNavigation.focusBorder.style.borderRadius",
                      "name": "borderRadius",
                      "line": 584,
                      "lineEnd": 584,
                      "column": 20,
                      "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                      "default": 3
                    },
                    "children": {},
                    "extended": 1
                  },
                  "color": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["string"] },
                      "defaultvalue": "#334eff"
                    },
                    "meta": {
                      "fullname": "accessibility.keyboardNavigation.focusBorder.style.color",
                      "name": "color",
                      "line": 580,
                      "lineEnd": 580,
                      "column": 20,
                      "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                      "default": "#334eff"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "lineWidth": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["number"] },
                      "defaultvalue": 2
                    },
                    "meta": {
                      "fullname": "accessibility.keyboardNavigation.focusBorder.style.lineWidth",
                      "name": "lineWidth",
                      "line": 582,
                      "lineEnd": 582,
                      "column": 20,
                      "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                      "default": 2
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsAccessibilityKeyboardNavigationFocusBorderStyleOptions",
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsAccessibilityKeyboardNavigationFocusBorderOptions",
            "extended": 1
          },
          "order": {
            "doclet": {
              "description": "Order of tab navigation in the chart. Determines which elements\nare tabbed to first. Available elements are: `series`, `zoom`,\n`rangeSelector`, `navigator`, `chartMenu`, `legend` and `container`.\nIn addition, any custom components can be added here. Adding\n`container` first in order will make the keyboard focus stop on\nthe chart container first, requiring the user to tab again to\nenter the chart.",
              "type": { "names": ["Array.<string>"] },
              "since": "7.1.0"
            },
            "meta": {
              "fullname": "accessibility.keyboardNavigation.order",
              "name": "order",
              "line": 594,
              "lineEnd": 605,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "seriesNavigation": {
            "doclet": {
              "description": "Options for the keyboard navigation of data points and series.",
              "declare": "Highcharts.KeyboardNavigationSeriesNavigationOptionsObject",
              "since": "8.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "accessibility.keyboardNavigation.seriesNavigation",
              "name": "seriesNavigation",
              "line": 616,
              "lineEnd": 621,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js"
            },
            "children": {
              "mode": {
                "doclet": {
                  "description": "Set the keyboard navigation mode for the chart. Can be\n\"normal\" or \"serialize\". In normal mode, left/right arrow\nkeys move between points in a series, while up/down arrow\nkeys move between series. Up/down navigation acts\nintelligently to figure out which series makes sense to move\nto from any given point.\n\nIn \"serialize\" mode, points are instead navigated as a single\nlist. Left/right behaves as in \"normal\" mode. Up/down arrow\nkeys will behave like left/right. This can be useful for\nunifying navigation behavior with/without screen readers\nenabled.",
                  "type": { "names": ["\"normal\"", "\"serialize\""] },
                  "defaultvalue": "normal",
                  "since": "8.0.0"
                },
                "meta": {
                  "fullname": "accessibility.keyboardNavigation.seriesNavigation.mode",
                  "name": "mode",
                  "line": 623,
                  "lineEnd": 642,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "pointNavigationEnabledThreshold": {
                "doclet": {
                  "description": "When a series contains more points than this, we no longer\nallow keyboard navigation for it.\n\nSet to `false` to disable.",
                  "type": { "names": ["boolean", "number"] },
                  "since": "8.0.0",
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "accessibility.keyboardNavigation.seriesNavigation.pointNavigationEnabledThreshold",
                  "name": "pointNavigationEnabledThreshold",
                  "line": 650,
                  "lineEnd": 658,
                  "column": 16,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "rememberPointFocus": {
                "doclet": {
                  "description": "Remember which point was focused even after navigating away\nfrom the series, so that when navigating back to the series\nyou start at the last focused point.",
                  "type": { "names": ["boolean"] },
                  "since": "10.1.0",
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "accessibility.keyboardNavigation.seriesNavigation.rememberPointFocus",
                  "name": "rememberPointFocus",
                  "line": 660,
                  "lineEnd": 667,
                  "column": 16,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "skipNullPoints": {
                "doclet": {
                  "description": "Skip null points when navigating through points with the\nkeyboard.",
                  "since": "8.0.0",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "accessibility.keyboardNavigation.seriesNavigation.skipNullPoints",
                  "name": "skipNullPoints",
                  "line": 623,
                  "lineEnd": 642,
                  "column": 16,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsAccessibilityKeyboardNavigationSeriesNavigationOptions",
            "extended": 1
          },
          "wrapAround": {
            "doclet": {
              "description": "Whether or not to wrap around when reaching the end of arrow-key\nnavigation for an element in the chart.",
              "since": "7.1.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "accessibility.keyboardNavigation.wrapAround",
              "name": "wrapAround",
              "line": 610,
              "lineEnd": 614,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsAccessibilityKeyboardNavigationOptions",
        "extended": 1
      },
      "landmarkVerbosity": {
        "doclet": {
          "description": "Amount of landmarks/regions to create for screen reader users. More\nlandmarks can make navigation with screen readers easier, but can\nbe distracting if there are lots of charts on the page. Three modes\nare available:\n - `all`: Adds regions for all series, legend, information\n     region.\n - `one`: Adds a single landmark per chart.\n - `disabled`: No landmarks are added.",
          "since": "7.1.0",
          "values": "[\"all\", \"one\", \"disabled\"]",
          "type": { "names": ["string"] },
          "defaultvalue": "all"
        },
        "meta": {
          "fullname": "accessibility.landmarkVerbosity",
          "name": "landmarkVerbosity",
          "line": 404,
          "lineEnd": 416,
          "column": 8,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
          "default": "all"
        },
        "children": {},
        "extended": 1
      },
      "linkedDescription": {
        "doclet": {
          "description": "Link the chart to an HTML element describing the contents of the\nchart.\n\nIt is always recommended to describe charts using visible text, to\nimprove SEO as well as accessibility for users with disabilities.\nThis option lets an HTML element with a description be linked to the\nchart, so that screen reader users can connect the two.\n\nBy setting this option to a string, Highcharts runs the string as an\nHTML selector query on the entire document. If there is only a single\nmatch, this element is linked to the chart. The content of the linked\nelement will be included in the chart description for screen reader\nusers.\n\nBy default, the chart looks for an adjacent sibling element with the\n`highcharts-description` class.\n\nThe feature can be disabled by setting the option to an empty string,\nor overridden by providing the\n[accessibility.description](#accessibility.description) option.\nAlternatively, the HTML element to link can be passed in directly as\nan HTML node.\n\nIf you need the description to be part of the exported image,\nconsider using the [caption](#caption) feature.\n\nIf you need the description to be hidden visually, use the\n[accessibility.description](#accessibility.description) option.",
          "see": [
            "[caption](#caption)",
            "[description](#accessibility.description)",
            "[typeDescription](#accessibility.typeDescription)"
          ],
          "samples": [
            {
              "name": "Accessible line chart",
              "value": "highcharts/accessibility/accessible-line"
            }
          ],
          "type": { "names": ["string", "Highcharts.HTMLDOMElement"] },
          "since": "8.0.0",
          "defaultvalue": "*[data-highcharts-chart=\"{index}\"] + .highcharts-description"
        },
        "meta": {
          "fullname": "accessibility.linkedDescription",
          "name": "linkedDescription",
          "line": 418,
          "lineEnd": 457,
          "column": 8,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
          "default": "*[data-highcharts-chart=\"{index}\"] + .highcharts-description"
        },
        "children": {},
        "extended": 1
      },
      "point": {
        "doclet": {
          "description": "Options for descriptions of individual data points.",
          "since": "8.0.0",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "accessibility.point",
          "name": "point",
          "line": 279,
          "lineEnd": 283,
          "column": 8,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js"
        },
        "children": {
          "dateFormat": {
            "doclet": {
              "description": "Date format to use for points on datetime axes when describing\nthem to screen reader users.\n\nDefaults to the same format as in tooltip.\n\nFor an overview of the replacement codes, see\n[dateFormat](/class-reference/Highcharts.Time#dateFormat).",
              "see": ["[dateFormatter](#accessibility.point.dateFormatter)"],
              "type": { "names": ["string"] },
              "since": "8.0.0"
            },
            "meta": {
              "fullname": "accessibility.point.dateFormat",
              "name": "dateFormat",
              "line": 285,
              "lineEnd": 299,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "dateFormatter": {
            "doclet": {
              "description": "Formatter function to determine the date/time format used with\npoints on datetime axes when describing them to screen reader\nusers. Receives one argument, `point`, referring to the point\nto describe. Should return a date format string compatible with\n[dateFormat](/class-reference/Highcharts.Time#dateFormat).",
              "see": ["[dateFormat](#accessibility.point.dateFormat)"],
              "type": {
                "names": [
                  "Highcharts.ScreenReaderFormatterCallbackFunction.<Highcharts.Point>"
                ]
              },
              "since": "8.0.0"
            },
            "meta": {
              "fullname": "accessibility.point.dateFormatter",
              "name": "dateFormatter",
              "line": 300,
              "lineEnd": 312,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "describeNull": {
            "doclet": {
              "description": "Whether or not to describe points with the value `null` to\nassistive technology, such as screen readers.",
              "samples": [
                {
                  "name": "Accessible map with null points",
                  "value": "maps/demo/all-areas-as-null",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["boolean"] },
              "since": "10.1.0",
              "defaultvalue": true
            },
            "meta": {
              "fullname": "accessibility.point.describeNull",
              "name": "describeNull",
              "line": 392,
              "lineEnd": 401,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "descriptionFormat": {
            "doclet": {
              "description": "A [format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\nto use instead of the default for point descriptions.\n\nThe context of the format string is the point instance.\n\nAs opposed to [accessibility.point.valueDescriptionFormat](#accessibility.point.valueDescriptionFormat),\nthis option replaces the whole description.",
              "type": { "names": ["string"] },
              "since": "11.1.0",
              "samples": [
                {
                  "name": "Description format",
                  "value": "highcharts/demo/advanced-accessible"
                }
              ]
            },
            "meta": {
              "fullname": "accessibility.point.descriptionFormat",
              "name": "descriptionFormat",
              "line": 337,
              "lineEnd": 351,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "descriptionFormatter": {
            "doclet": {
              "description": "Formatter function to use instead of the default for point\ndescriptions.\n\nReceives one argument, `point`, referring to the point to\ndescribe. Should return a string with the description of the\npoint for a screen reader user. If `false` is returned, the\ndefault formatter will be used for that point.\n\nNote: Prefer using [accessibility.point.valueDescriptionFormat](#accessibility.point.valueDescriptionFormat)\ninstead if possible, as default functionality such as describing\nannotations will be preserved.",
              "see": [
                "[accessibility.point.valueDescriptionFormat](#accessibility.point.valueDescriptionFormat)",
                "[point.accessibility.description](#series.line.data.accessibility.description)"
              ],
              "type": {
                "names": [
                  "Highcharts.ScreenReaderFormatterCallbackFunction.<Highcharts.Point>"
                ]
              },
              "since": "8.0.0"
            },
            "meta": {
              "fullname": "accessibility.point.descriptionFormatter",
              "name": "descriptionFormatter",
              "line": 352,
              "lineEnd": 371,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "valueDecimals": {
            "doclet": {
              "description": "Decimals to use for the values in the point descriptions. Uses\n[tooltip.valueDecimals](#tooltip.valueDecimals) if not defined.",
              "type": { "names": ["number"] },
              "since": "8.0.0"
            },
            "meta": {
              "fullname": "accessibility.point.valueDecimals",
              "name": "valueDecimals",
              "line": 329,
              "lineEnd": 336,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "valueDescriptionFormat": {
            "doclet": {
              "description": "Format to use for describing the values of data points\nto assistive technology - including screen readers.\nThe point context is available as `{point}`.\n\nOther available context variables include `{index}`, `{value}`, and `{xDescription}`.\n\nAdditionally, the series name, annotation info, and\ndescription added in `point.accessibility.description`\nis added by default if relevant. To override this, use the\n[accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter)\noption.",
              "see": [
                "[point.accessibility.description](#series.line.data.accessibility.description)",
                "[accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter)"
              ],
              "type": { "names": ["string"] },
              "since": "8.0.1",
              "defaultvalue": "{xDescription}{separator}{value}."
            },
            "meta": {
              "fullname": "accessibility.point.valueDescriptionFormat",
              "name": "valueDescriptionFormat",
              "line": 285,
              "lineEnd": 299,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "default": "{xDescription}{separator}{value}."
            },
            "children": {},
            "extended": 1
          },
          "valuePrefix": {
            "doclet": {
              "description": "Prefix to add to the values in the point descriptions. Uses\n[tooltip.valuePrefix](#tooltip.valuePrefix) if not defined.",
              "type": { "names": ["string"] },
              "since": "8.0.0"
            },
            "meta": {
              "fullname": "accessibility.point.valuePrefix",
              "name": "valuePrefix",
              "line": 313,
              "lineEnd": 320,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "valueSuffix": {
            "doclet": {
              "description": "Suffix to add to the values in the point descriptions. Uses\n[tooltip.valueSuffix](#tooltip.valueSuffix) if not defined.",
              "type": { "names": ["string"] },
              "since": "8.0.0"
            },
            "meta": {
              "fullname": "accessibility.point.valueSuffix",
              "name": "valueSuffix",
              "line": 321,
              "lineEnd": 328,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsAccessibilityPointOptions",
        "extended": 1
      },
      "screenReaderSection": {
        "doclet": {
          "description": "Accessibility options for the screen reader information sections\nadded before and after the chart.",
          "since": "8.0.0",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "accessibility.screenReaderSection",
          "name": "screenReaderSection",
          "line": 113,
          "lineEnd": 118,
          "column": 8,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js"
        },
        "children": {
          "afterChartFormat": {
            "doclet": {
              "description": "Format for the screen reader information region after the chart.\nAnalogous to [beforeChartFormat](#accessibility.screenReaderSection.beforeChartFormat).",
              "since": "8.0.0",
              "type": { "names": ["string"] },
              "defaultvalue": "{endOfChartMarker}"
            },
            "meta": {
              "fullname": "accessibility.screenReaderSection.afterChartFormat",
              "name": "afterChartFormat",
              "line": 179,
              "lineEnd": 187,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "default": "{endOfChartMarker}"
            },
            "children": {},
            "extended": 1
          },
          "afterChartFormatter": {
            "doclet": {
              "description": "A formatter function to create the HTML contents of the hidden\nscreen reader information region after the chart. Analogous to\n[beforeChartFormatter](#accessibility.screenReaderSection.beforeChartFormatter).",
              "type": {
                "names": [
                  "Highcharts.ScreenReaderFormatterCallbackFunction.<Highcharts.Chart>"
                ]
              },
              "since": "8.0.0"
            },
            "meta": {
              "fullname": "accessibility.screenReaderSection.afterChartFormatter",
              "name": "afterChartFormatter",
              "line": 179,
              "lineEnd": 187,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "axisRangeDateFormat": {
            "doclet": {
              "description": "Date format to use to describe range of datetime axes.\n\nFor an overview of the replacement codes, see\n[dateFormat](/class-reference/Highcharts.Time#dateFormat).",
              "see": ["[point.dateFormat](#accessibility.point.dateFormat)"],
              "since": "8.0.0",
              "type": { "names": ["string"] },
              "defaultvalue": "%Y-%m-%d %H:%M:%S"
            },
            "meta": {
              "fullname": "accessibility.screenReaderSection.axisRangeDateFormat",
              "name": "axisRangeDateFormat",
              "line": 195,
              "lineEnd": 204,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "default": "%Y-%m-%d %H:%M:%S"
            },
            "children": {},
            "extended": 1
          },
          "beforeChartFormat": {
            "doclet": {
              "description": "Format for the screen reader information region before the chart.\nSupported HTML tags are `<h1-6>`, `<p>`, `<div>`, `<a>`, `<ul>`,\n`<ol>`, `<li>`, and `<button>`. Attributes are not supported,\nexcept for id on `<div>`, `<a>`, and `<button>`. Id is required\non `<a>` and `<button>` in the format `<tag id=\"abcd\">`. Numbers,\nlower- and uppercase letters, \"-\" and \"#\" are valid characters in\nIDs.\n\nThe headingTagName is an auto-detected heading (h1-h6) that\ncorresponds to the heading level below the previous heading in\nthe DOM.\n\nSet to empty string to remove the region altogether.",
              "since": "8.0.0",
              "type": { "names": ["string"] },
              "defaultvalue": "<{headingTagName}>{chartTitle}</{headingTagName}><div>{typeDescription}</div><div>{chartSubtitle}</div><div>{chartLongdesc}</div><div>{playAsSoundButton}</div><div>{viewTableButton}</div><div>{xAxisDescription}</div><div>{yAxisDescription}</div><div>{annotationsTitle}{annotationsList}</div>"
            },
            "meta": {
              "fullname": "accessibility.screenReaderSection.beforeChartFormat",
              "name": "beforeChartFormat",
              "line": 120,
              "lineEnd": 130,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "default": "<{headingTagName}>{chartTitle}</{headingTagName}><div>{typeDescription}</div><div>{chartSubtitle}</div><div>{chartLongdesc}</div><div>{playAsSoundButton}</div><div>{viewTableButton}</div><div>{xAxisDescription}</div><div>{yAxisDescription}</div><div>{annotationsTitle}{annotationsList}</div>"
            },
            "children": {},
            "extended": 1
          },
          "beforeChartFormatter": {
            "doclet": {
              "description": "A formatter function to create the HTML contents of the hidden\nscreen reader information region before the chart. Receives one\nargument, `chart`, referring to the chart object. Should return a\nstring with the HTML content of the region. By default this\nreturns an automatic description of the chart based on\n[beforeChartFormat](#accessibility.screenReaderSection.beforeChartFormat).",
              "type": {
                "names": [
                  "Highcharts.ScreenReaderFormatterCallbackFunction.<Highcharts.Chart>"
                ]
              },
              "since": "8.0.0"
            },
            "meta": {
              "fullname": "accessibility.screenReaderSection.beforeChartFormatter",
              "name": "beforeChartFormatter",
              "line": 141,
              "lineEnd": 152,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "onPlayAsSoundClick": {
            "doclet": {
              "description": "Function to run upon clicking the \"Play as sound\" button in\nthe screen reader region.\n\nBy default Highcharts will call the `chart.sonify` function.",
              "type": {
                "names": ["Highcharts.ScreenReaderClickCallbackFunction"]
              },
              "since": "8.0.1"
            },
            "meta": {
              "fullname": "accessibility.screenReaderSection.onPlayAsSoundClick",
              "name": "onPlayAsSoundClick",
              "line": 131,
              "lineEnd": 140,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "onViewDataTableClick": {
            "doclet": {
              "description": "Function to run upon clicking the \"View as Data Table\" link in\nthe screen reader region.\n\nBy default Highcharts will insert and set focus to a data table\nrepresentation of the chart.",
              "type": {
                "names": ["Highcharts.ScreenReaderClickCallbackFunction"]
              },
              "since": "8.0.0"
            },
            "meta": {
              "fullname": "accessibility.screenReaderSection.onViewDataTableClick",
              "name": "onViewDataTableClick",
              "line": 120,
              "lineEnd": 130,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsAccessibilityScreenReaderSectionOptions",
        "extended": 1
      },
      "series": {
        "doclet": {
          "description": "Accessibility options global to all data series. Individual series\ncan also have specific [accessibility options](#plotOptions.series.accessibility)\nset.",
          "since": "8.0.0",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "accessibility.series",
          "name": "series",
          "line": 207,
          "lineEnd": 213,
          "column": 8,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js"
        },
        "children": {
          "describeSingleSeries": {
            "doclet": {
              "description": "Whether or not to add series descriptions to charts with a single\nseries.",
              "since": "8.0.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "accessibility.series.describeSingleSeries",
              "name": "describeSingleSeries",
              "line": 259,
              "lineEnd": 264,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "descriptionFormat": {
            "doclet": {
              "description": "Format to use for describing the data series group to assistive\ntechnology - including screen readers.\n\nThe series context and its subproperties are available under the\nvariable `{series}`, for example `{series.name}` for the series\nname, and `{series.points.length}` for the number of data points.\n\nThe chart context and its subproperties are available under the\nvariable `{chart}`, for example `{chart.series.length}` for the\nnumber of series in the chart.\n\n`{seriesDescription}` refers to the automatic description of the\nseries type and number of points added by Highcharts by default.\n`{authorDescription}` refers to the description added in\n[series.description](#plotOptions.series.description) if one is\npresent. `{axisDescription}` refers to the description added if\nthe chart has multiple X or Y axes.\n\nNote that if [series.descriptionFormatter](#accessibility.series.descriptionFormatter)\nis declared it will take precedence, and this option will be\noverridden.",
              "samples": [
                {
                  "name": "Accessible low-medium-high chart",
                  "value": "highcharts/accessibility/advanced-accessible"
                }
              ],
              "type": { "names": ["string"] },
              "since": "10.1.0",
              "defaultvalue": "{seriesDescription}{authorDescription}{axisDescription}"
            },
            "meta": {
              "fullname": "accessibility.series.descriptionFormat",
              "name": "descriptionFormat",
              "line": 215,
              "lineEnd": 228,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "default": "{seriesDescription}{authorDescription}{axisDescription}"
            },
            "children": {},
            "extended": 1
          },
          "descriptionFormatter": {
            "doclet": {
              "description": "Formatter function to use instead of the default for series\ndescriptions. Receives one argument, `series`, referring to the\nseries to describe. Should return a string with the description\nof the series for a screen reader user. If `false` is returned,\nthe default formatter will be used for that series.",
              "see": [
                "[series.descriptionFormat](#accessibility.series.descriptionFormat)",
                "[series.description](#plotOptions.series.description)"
              ],
              "type": {
                "names": [
                  "Highcharts.ScreenReaderFormatterCallbackFunction.<Highcharts.Series>"
                ]
              },
              "since": "8.0.0"
            },
            "meta": {
              "fullname": "accessibility.series.descriptionFormatter",
              "name": "descriptionFormatter",
              "line": 215,
              "lineEnd": 228,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "pointDescriptionEnabledThreshold": {
            "doclet": {
              "description": "When a series contains more points than this, we no longer expose\ninformation about individual points to screen readers.\nNote that the keyboard navigation remains functional, but points\nwon't have accessible descriptions unless handled separately.\n\nSet to `false` to disable.",
              "type": { "names": ["boolean", "number"] },
              "since": "8.0.0",
              "defaultvalue": 200
            },
            "meta": {
              "fullname": "accessibility.series.pointDescriptionEnabledThreshold",
              "name": "pointDescriptionEnabledThreshold",
              "line": 266,
              "lineEnd": 276,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "default": 200
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsAccessibilitySeriesOptions",
        "extended": 1
      },
      "typeDescription": {
        "doclet": {
          "description": "A text description of the chart type.\n\nIf the Accessibility module is loaded, this will be included in the\ndescription of the chart in the screen reader information region.\n\nHighcharts will by default attempt to guess the chart type, but for\nmore complex charts it is recommended to specify this property for\nclarity.",
          "type": { "names": ["string"] },
          "since": "5.0.0"
        },
        "meta": {
          "fullname": "accessibility.typeDescription",
          "name": "typeDescription",
          "line": 517,
          "lineEnd": 530,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsAccessibilityOptions",
    "extended": 1
  },
  "annotations": {
    "doclet": {
      "description": "A basic type of an annotation. It allows to add custom labels\nor shapes. The items can be tied to points, axis coordinates\nor chart pixel coordinates.",
      "samples": [
        {
          "name": "Basic annotations",
          "value": "highcharts/annotations/basic/"
        },
        {
          "name": "Advanced annotations",
          "value": "highcharts/demo/annotations/"
        },
        { "name": "Styled mode", "value": "highcharts/css/annotations" },
        {
          "name": "Controllable items",
          "value": "highcharts/annotations-advanced/controllable"
        },
        {
          "name": "Custom annotation, Fibonacci retracement",
          "value": "stock/annotations/fibonacci-retracements",
          "products": ["highstock"]
        }
      ],
      "type": { "names": ["Array.<*>"] },
      "since": "6.0.0",
      "requires": ["module:modules/annotations"]
    },
    "meta": {
      "filename": "code/es-modules/Extensions/Annotations/Types/VerticalLine.js",
      "name": "annotations",
      "fullname": "annotations",
      "line": 83,
      "lineEnd": 93,
      "column": 0
    },
    "children": {
      "animation": {
        "doclet": {
          "description": "Enable or disable the initial animation when a series is\ndisplayed for the `annotation`. The animation can also be set\nas a configuration object. Please note that this option only\napplies to the initial animation.\nFor other animations, see [chart.animation](#chart.animation)\nand the animation parameter under the API methods.\nThe following properties are supported:\n\n- `defer`: The animation delay time in milliseconds.",
          "samples": [
            {
              "name": "Animation defer settings",
              "value": "highcharts/annotations/defer/",
              "products": ["highcharts"]
            }
          ],
          "type": {
            "names": ["boolean", "Partial.<Highcharts.AnimationOptionsObject>"]
          },
          "since": "8.2.0"
        },
        "meta": {
          "fullname": "annotations.animation",
          "name": "animation",
          "line": 50,
          "lineEnd": 65,
          "column": 4,
          "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js"
        },
        "children": {
          "defer": {
            "doclet": {
              "description": "The animation delay time in milliseconds.\nSet to `0` renders annotation immediately.\nAs `undefined` inherits defer time from the [series.animation.defer](#plotOptions.series.animation.defer).",
              "type": { "names": ["number"] },
              "since": "8.2.0"
            },
            "meta": {
              "fullname": "annotations.animation.defer",
              "name": "defer",
              "line": 77,
              "lineEnd": 85,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsAnnotationsAnimationOptions",
        "extended": 1
      },
      "controlPointOptions": {
        "doclet": {
          "description": "Options for annotation's control points. Each control point\ninherits options from controlPointOptions object.\nOptions from the controlPointOptions can be overwritten\nby options in a specific control point.",
          "declare": "Highcharts.AnnotationControlPointOptionsObject",
          "requires": ["module:modules/annotations"],
          "since": "6.0.0",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "annotations.controlPointOptions",
          "name": "controlPointOptions",
          "line": 552,
          "lineEnd": 560,
          "column": 4,
          "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js"
        },
        "children": {
          "events": {
            "doclet": {
              "type": { "names": ["Highcharts.Dictionary.<function()>"] }
            },
            "meta": {
              "fullname": "annotations.controlPointOptions.events",
              "name": "events",
              "line": 562,
              "lineEnd": 565,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "height": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 10 },
            "meta": {
              "fullname": "annotations.controlPointOptions.height",
              "name": "height",
              "line": 579,
              "lineEnd": 579,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": 10
            },
            "children": {},
            "extended": 1
          },
          "positioner": {
            "doclet": {
              "type": {
                "names": ["Highcharts.AnnotationControlPointPositionerFunction"]
              }
            },
            "meta": {
              "fullname": "annotations.controlPointOptions.positioner",
              "name": "positioner",
              "line": 562,
              "lineEnd": 565,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "style": {
            "doclet": { "type": { "names": ["Highcharts.SVGAttributes"] } },
            "meta": {
              "fullname": "annotations.controlPointOptions.style",
              "name": "style",
              "line": 570,
              "lineEnd": 572,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js"
            },
            "children": {
              "cursor": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "pointer"
                },
                "meta": {
                  "fullname": "annotations.controlPointOptions.style.cursor",
                  "name": "cursor",
                  "line": 574,
                  "lineEnd": 574,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
                  "default": "pointer"
                },
                "children": {},
                "extended": 1
              },
              "fill": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "#ffffff"
                },
                "meta": {
                  "fullname": "annotations.controlPointOptions.style.fill",
                  "name": "fill",
                  "line": 575,
                  "lineEnd": 575,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
                  "default": "#ffffff"
                },
                "children": {},
                "extended": 1
              },
              "stroke": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "#000000"
                },
                "meta": {
                  "fullname": "annotations.controlPointOptions.style.stroke",
                  "name": "stroke",
                  "line": 576,
                  "lineEnd": 576,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
                  "default": "#000000"
                },
                "children": {},
                "extended": 1
              },
              "stroke-width": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 2
                },
                "meta": {
                  "fullname": "annotations.controlPointOptions.style.stroke-width",
                  "name": "stroke-width",
                  "line": 577,
                  "lineEnd": 577,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
                  "default": 2
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsAnnotationsControlPointStyleOptions",
            "extended": 1
          },
          "symbol": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "circle"
            },
            "meta": {
              "fullname": "annotations.controlPointOptions.symbol",
              "name": "symbol",
              "line": 580,
              "lineEnd": 580,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": "circle"
            },
            "children": {},
            "extended": 1
          },
          "visible": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "annotations.controlPointOptions.visible",
              "name": "visible",
              "line": 581,
              "lineEnd": 581,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "width": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 10 },
            "meta": {
              "fullname": "annotations.controlPointOptions.width",
              "name": "width",
              "line": 582,
              "lineEnd": 582,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": 10
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsAnnotationsControlPointOptions",
        "extended": 1
      },
      "crop": {
        "doclet": {
          "description": "Whether to hide the part of the annotation\nthat is outside the plot area.",
          "samples": [
            {
              "name": "Crop line annotation",
              "value": "highcharts/annotations/label-crop-overflow/"
            }
          ],
          "type": { "names": ["boolean"] },
          "since": "9.3.0",
          "defaultvalue": true
        },
        "meta": {
          "fullname": "annotations.crop",
          "name": "crop",
          "line": 67,
          "lineEnd": 75,
          "column": 4,
          "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "draggable": {
        "doclet": {
          "description": "Allow an annotation to be draggable by a user. Possible\nvalues are `'x'`, `'xy'`, `'y'` and `''` (disabled).",
          "samples": [
            {
              "name": "Annotations draggable: 'xy'",
              "value": "highcharts/annotations/draggable/"
            }
          ],
          "type": { "names": ["Highcharts.AnnotationDraggableValue"] },
          "since": "6.0.0",
          "defaultvalue": "xy"
        },
        "meta": {
          "fullname": "annotations.draggable",
          "name": "draggable",
          "line": 77,
          "lineEnd": 85,
          "column": 4,
          "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
          "default": "xy"
        },
        "children": {},
        "extended": 1
      },
      "events": {
        "doclet": {
          "description": "Events available in annotations.",
          "requires": ["module:modules/annotations"],
          "since": "6.0.0",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "annotations.events",
          "name": "events",
          "line": 584,
          "lineEnd": 590,
          "column": 4,
          "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js"
        },
        "children": {
          "add": {
            "doclet": {
              "description": "Event callback when annotation is added to the chart.",
              "type": {
                "names": [
                  "Highcharts.EventCallbackFunction.<Highcharts.Annotation>"
                ]
              },
              "since": "7.1.0"
            },
            "meta": {
              "fullname": "annotations.events.add",
              "name": "add",
              "line": 584,
              "lineEnd": 590,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "afterUpdate": {
            "doclet": {
              "description": "Event callback when annotation is updated (e.g. drag and\ndropped or resized by control points).",
              "type": {
                "names": [
                  "Highcharts.EventCallbackFunction.<Highcharts.Annotation>"
                ]
              },
              "since": "7.1.0"
            },
            "meta": {
              "fullname": "annotations.events.afterUpdate",
              "name": "afterUpdate",
              "line": 591,
              "lineEnd": 598,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "click": {
            "doclet": {
              "description": "Fires when the annotation is clicked.",
              "type": {
                "names": [
                  "Highcharts.EventCallbackFunction.<Highcharts.Annotation>"
                ]
              },
              "since": "7.1.0"
            },
            "meta": {
              "fullname": "annotations.events.click",
              "name": "click",
              "line": 599,
              "lineEnd": 605,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "drag": {
            "doclet": {
              "description": "Fires when the annotation is dragged.",
              "type": {
                "names": [
                  "Highcharts.EventCallbackFunction.<Highcharts.Annotation>"
                ]
              },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.events.drag",
              "name": "drag",
              "line": 606,
              "lineEnd": 611,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "remove": {
            "doclet": {
              "description": "Event callback when annotation is removed from the chart.",
              "type": {
                "names": [
                  "Highcharts.EventCallbackFunction.<Highcharts.Annotation>"
                ]
              },
              "since": "7.1.0"
            },
            "meta": {
              "fullname": "annotations.events.remove",
              "name": "remove",
              "line": 612,
              "lineEnd": 618,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsAnnotationsEventsOptions",
        "extended": 1
      },
      "id": {
        "doclet": {
          "description": "Sets an ID for an annotation. Can be user later when\nremoving an annotation in [Chart#removeAnnotation(id)](/class-reference/Highcharts.Chart#removeAnnotation) method.",
          "type": { "names": ["number", "string"] },
          "since": "6.0.0"
        },
        "meta": {
          "fullname": "annotations.id",
          "name": "id",
          "line": 35,
          "lineEnd": 42,
          "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "labelOptions": {
        "meta": {
          "fullname": "annotations.labelOptions",
          "name": "labelOptions",
          "line": 96,
          "lineEnd": 102,
          "column": 4,
          "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js"
        },
        "doclet": {
          "description": "Options for annotation's labels. Each label inherits options\nfrom the labelOptions object. An option from the labelOptions\ncan be overwritten by config for a specific label.",
          "requires": ["module:modules/annotations"],
          "since": "6.0.0",
          "type": { "names": ["*"] }
        },
        "children": {
          "accessibility": {
            "doclet": {
              "description": "Accessibility options for an annotation label.",
              "declare": "Highcharts.AnnotationLabelAccessibilityOptionsObject",
              "since": "8.0.1",
              "requires": ["module:modules/accessibility"],
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "annotations.labelOptions.accessibility",
              "name": "accessibility",
              "line": 832,
              "lineEnd": 839,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {
              "description": {
                "doclet": {
                  "description": "Description of an annotation label for screen readers and other assistive\ntechnology.",
                  "type": { "names": ["string"] },
                  "since": "8.0.1"
                },
                "meta": {
                  "fullname": "annotations.labelOptions.accessibility.description",
                  "name": "description",
                  "line": 840,
                  "lineEnd": 847,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsAnnotationsLabelAccessibilityOptions",
            "extended": 1
          },
          "align": {
            "doclet": {
              "description": "The alignment of the annotation's label. If right,\nthe right side of the label should be touching the point.",
              "samples": [
                {
                  "name": "Set labels position",
                  "value": "highcharts/annotations/label-position/"
                }
              ],
              "type": { "names": ["Highcharts.AlignValue"] },
              "since": "6.0.0",
              "defaultvalue": "center"
            },
            "meta": {
              "fullname": "annotations.labelOptions.align",
              "name": "align",
              "line": 104,
              "lineEnd": 112,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": "center"
            },
            "children": {},
            "extended": 1
          },
          "allowOverlap": {
            "doclet": {
              "description": "Whether to allow the annotation's labels to overlap.\nTo make the labels less sensitive for overlapping,\nthe can be set to 0.",
              "samples": [
                {
                  "name": "Hide overlapping labels",
                  "value": "highcharts/annotations/tooltip-like/"
                }
              ],
              "since": "6.0.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "annotations.labelOptions.allowOverlap",
              "name": "allowOverlap",
              "line": 114,
              "lineEnd": 121,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "backgroundColor": {
            "doclet": {
              "description": "The background color or gradient for the annotation's\nlabel.",
              "samples": [
                {
                  "name": "Set labels graphic options",
                  "value": "highcharts/annotations/label-presentation/"
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "6.0.0",
              "defaultvalue": "rgba(0, 0, 0, 0.75)"
            },
            "meta": {
              "fullname": "annotations.labelOptions.backgroundColor",
              "name": "backgroundColor",
              "line": 123,
              "lineEnd": 131,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": "rgba(0, 0, 0, 0.75)"
            },
            "children": {},
            "extended": 1
          },
          "borderColor": {
            "doclet": {
              "description": "The border color for the annotation's label.",
              "samples": [
                {
                  "name": "Set labels graphic options",
                  "value": "highcharts/annotations/label-presentation/"
                }
              ],
              "type": { "names": ["Highcharts.ColorString"] },
              "since": "6.0.0",
              "defaultvalue": "#000000"
            },
            "meta": {
              "fullname": "annotations.labelOptions.borderColor",
              "name": "borderColor",
              "line": 133,
              "lineEnd": 140,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": "#000000"
            },
            "children": {},
            "extended": 1
          },
          "borderRadius": {
            "doclet": {
              "description": "The border radius in pixels for the annotation's label.",
              "samples": [
                {
                  "name": "Set labels graphic options",
                  "value": "highcharts/annotations/label-presentation/"
                }
              ],
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 3
            },
            "meta": {
              "fullname": "annotations.labelOptions.borderRadius",
              "name": "borderRadius",
              "line": 142,
              "lineEnd": 147,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": 3
            },
            "children": {},
            "extended": 1
          },
          "borderWidth": {
            "doclet": {
              "description": "The border width in pixels for the annotation's label",
              "samples": [
                {
                  "name": "Set labels graphic options",
                  "value": "highcharts/annotations/label-presentation/"
                }
              ],
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "annotations.labelOptions.borderWidth",
              "name": "borderWidth",
              "line": 149,
              "lineEnd": 154,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "className": {
            "doclet": {
              "description": "A class name for styling by CSS.",
              "samples": [
                {
                  "name": "Styled mode annotations",
                  "value": "highcharts/css/annotations"
                }
              ],
              "since": "6.0.5",
              "type": { "names": ["string"] },
              "defaultvalue": "highcharts-no-tooltip"
            },
            "meta": {
              "fullname": "annotations.labelOptions.className",
              "name": "className",
              "line": 156,
              "lineEnd": 163,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": "highcharts-no-tooltip"
            },
            "children": {},
            "extended": 1
          },
          "crop": {
            "doclet": {
              "description": "Whether to hide the annotation's label\nthat is outside the plot area.",
              "samples": [
                {
                  "name": "Crop or justify labels",
                  "value": "highcharts/annotations/label-crop-overflow/"
                }
              ],
              "since": "6.0.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "annotations.labelOptions.crop",
              "name": "crop",
              "line": 165,
              "lineEnd": 171,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "distance": {
            "doclet": {
              "description": "The label's pixel distance from the point.",
              "samples": [
                {
                  "name": "Set labels position",
                  "value": "highcharts/annotations/label-position/"
                }
              ],
              "type": { "names": ["number"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.labelOptions.distance",
              "name": "distance",
              "line": 173,
              "lineEnd": 181,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "format": {
            "doclet": {
              "description": "A\n[format](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\nstring for the data label.",
              "see": [
                "[plotOptions.series.dataLabels.format](plotOptions.series.dataLabels.format.html)"
              ],
              "samples": [
                {
                  "name": "Set labels text",
                  "value": "highcharts/annotations/label-text/"
                }
              ],
              "type": { "names": ["string"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.labelOptions.format",
              "name": "format",
              "line": 182,
              "lineEnd": 194,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "formatter": {
            "doclet": {
              "description": "Callback JavaScript function to format the annotation's\nlabel. Note that if a `format` or `text` are defined,\nthe format or text take precedence and the formatter is\nignored. `This` refers to a point object.",
              "samples": [
                {
                  "name": "Set labels text",
                  "value": "highcharts/annotations/label-text/"
                }
              ],
              "type": {
                "names": [
                  "Highcharts.FormatterCallbackFunction.<Highcharts.Point>"
                ]
              },
              "defaultvalue": "function () { return defined(this.y) ? this.y : 'Annotation label'; }",
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.labelOptions.formatter",
              "name": "formatter",
              "line": 173,
              "lineEnd": 181,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "includeInDataExport": {
            "doclet": {
              "description": "Whether the annotation is visible in the exported data\ntable.",
              "samples": [
                {
                  "name": "Do not include in the data export",
                  "value": "highcharts/annotations/include-in-data-export/"
                }
              ],
              "since": "8.2.0",
              "requires": ["module:modules/export-data"],
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "annotations.labelOptions.includeInDataExport",
              "name": "includeInDataExport",
              "line": 221,
              "lineEnd": 230,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "overflow": {
            "doclet": {
              "description": "How to handle the annotation's label that flow outside\nthe plot area. The justify option aligns the label inside\nthe plot area.",
              "samples": [
                {
                  "name": "Crop or justify labels",
                  "value": "highcharts/annotations/label-crop-overflow/"
                }
              ],
              "values": "[\"allow\", \"justify\"]",
              "since": "6.0.0",
              "type": { "names": ["string"] },
              "defaultvalue": "justify"
            },
            "meta": {
              "fullname": "annotations.labelOptions.overflow",
              "name": "overflow",
              "line": 232,
              "lineEnd": 241,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": "justify"
            },
            "children": {},
            "extended": 1
          },
          "padding": {
            "doclet": {
              "description": "When either the borderWidth or the backgroundColor is\nset, this is the padding within the box.",
              "samples": [
                {
                  "name": "Set labels graphic options",
                  "value": "highcharts/annotations/label-presentation/"
                }
              ],
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 5
            },
            "meta": {
              "fullname": "annotations.labelOptions.padding",
              "name": "padding",
              "line": 243,
              "lineEnd": 249,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": 5
            },
            "children": {},
            "extended": 1
          },
          "shadow": {
            "doclet": {
              "description": "The shadow of the box. The shadow can be an object\nconfiguration containing `color`, `offsetX`, `offsetY`,\n`opacity` and `width`.",
              "samples": [
                {
                  "name": "Set labels graphic options",
                  "value": "highcharts/annotations/label-presentation/"
                }
              ],
              "type": {
                "names": ["boolean", "Highcharts.ShadowOptionsObject"]
              },
              "since": "6.0.0",
              "defaultvalue": false
            },
            "meta": {
              "fullname": "annotations.labelOptions.shadow",
              "name": "shadow",
              "line": 251,
              "lineEnd": 260,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "shape": {
            "doclet": {
              "description": "The name of a symbol to use for the border around the\nlabel. Symbols are predefined functions on the Renderer\nobject.",
              "samples": [
                {
                  "name": "Available shapes for labels",
                  "value": "highcharts/annotations/shapes/"
                }
              ],
              "since": "6.0.0",
              "type": { "names": ["string"] },
              "defaultvalue": "callout"
            },
            "meta": {
              "fullname": "annotations.labelOptions.shape",
              "name": "shape",
              "line": 262,
              "lineEnd": 269,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": "callout"
            },
            "children": {},
            "extended": 1
          },
          "style": {
            "doclet": {
              "description": "Styles for the annotation's label.",
              "see": [
                "[plotOptions.series.dataLabels.style](plotOptions.series.dataLabels.style.html)"
              ],
              "samples": [
                {
                  "name": "Set labels graphic options",
                  "value": "highcharts/annotations/label-presentation/"
                }
              ],
              "type": { "names": ["Highcharts.CSSObject"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.labelOptions.style",
              "name": "style",
              "line": 271,
              "lineEnd": 280,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "text": {
            "doclet": {
              "description": "Alias for the format option.",
              "see": ["[format](annotations.labelOptions.format.html)"],
              "samples": [
                {
                  "name": "Set labels text",
                  "value": "highcharts/annotations/label-text/"
                }
              ],
              "type": { "names": ["string"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.labelOptions.text",
              "name": "text",
              "line": 195,
              "lineEnd": 205,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "useHTML": {
            "doclet": {
              "description": "Whether to [use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\nto render the annotation's label.",
              "since": "6.0.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "annotations.labelOptions.useHTML",
              "name": "useHTML",
              "line": 289,
              "lineEnd": 292,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "verticalAlign": {
            "doclet": {
              "description": "The vertical alignment of the annotation's label.",
              "samples": [
                {
                  "name": "Set labels position",
                  "value": "highcharts/annotations/label-position/"
                }
              ],
              "type": { "names": ["Highcharts.VerticalAlignValue"] },
              "since": "6.0.0",
              "defaultvalue": "bottom"
            },
            "meta": {
              "fullname": "annotations.labelOptions.verticalAlign",
              "name": "verticalAlign",
              "line": 294,
              "lineEnd": 301,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": "bottom"
            },
            "children": {},
            "extended": 1
          },
          "x": {
            "doclet": {
              "description": "The x position offset of the label relative to the point.\nNote that if a `distance` is defined, the distance takes\nprecedence over `x` and `y` options.",
              "samples": [
                {
                  "name": "Set labels position",
                  "value": "highcharts/annotations/label-position/"
                }
              ],
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "annotations.labelOptions.x",
              "name": "x",
              "line": 303,
              "lineEnd": 310,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "y": {
            "doclet": {
              "description": "The y position offset of the label relative to the point.\nNote that if a `distance` is defined, the distance takes\nprecedence over `x` and `y` options.",
              "samples": [
                {
                  "name": "Set labels position",
                  "value": "highcharts/annotations/label-position/"
                }
              ],
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": -16
            },
            "meta": {
              "fullname": "annotations.labelOptions.y",
              "name": "y",
              "line": 312,
              "lineEnd": 319,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": -16
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsAnnotationsLabelOptions",
        "extended": 1
      },
      "labels": {
        "doclet": {
          "description": "An array of labels for the annotation. For options that apply\nto multiple labels, they can be added to the\n[labelOptions](annotations.labelOptions.html).",
          "type": { "names": ["Array.<*>"] },
          "extends": "annotations.labelOptions",
          "since": "6.0.0"
        },
        "meta": {
          "fullname": "annotations.labels",
          "name": "labels",
          "line": 322,
          "lineEnd": 330,
          "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
          "column": 0
        },
        "children": {
          "point": {
            "doclet": {
              "description": "This option defines the point to which the label will be\nconnected. It can be either the point which exists in the\nseries - it is referenced by the point's id - or a new point\nwith defined x, y properties and optionally axes.",
              "samples": [
                {
                  "name": "Attach annotation to a mock point",
                  "value": "highcharts/annotations/mock-point/"
                },
                {
                  "name": "Attach annotation to a mock point with different ways",
                  "value": "highcharts/annotations/mock-points/"
                }
              ],
              "declare": "Highcharts.AnnotationMockPointOptionsObject",
              "type": {
                "names": [
                  "string",
                  "Highcharts.AnnotationMockPointOptionsObject",
                  "Highcharts.AnnotationMockPointFunction"
                ]
              },
              "requires": ["module:modules/annotations"],
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.labels.point",
              "name": "point",
              "line": 331,
              "lineEnd": 350,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "accessibility": {},
          "align": {},
          "allowOverlap": {},
          "backgroundColor": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "className": {},
          "crop": {},
          "distance": {},
          "format": {},
          "formatter": {},
          "includeInDataExport": {},
          "overflow": {},
          "padding": {},
          "shadow": {},
          "shape": {},
          "style": {},
          "text": {},
          "useHTML": {},
          "verticalAlign": {},
          "x": {},
          "y": {}
        },
        "flutterClassName": "HighchartsAnnotationsLabelsOptions",
        "extended": 1
      },
      "shapeOptions": {
        "doclet": {
          "description": "Options for annotation's shapes. Each shape inherits options\nfrom the shapeOptions object. An option from the shapeOptions\ncan be overwritten by config for a specific shape.",
          "requires": ["module:modules/annotations"],
          "since": "6.0.0",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "annotations.shapeOptions",
          "name": "shapeOptions",
          "line": 322,
          "lineEnd": 330,
          "column": 4,
          "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js"
        },
        "children": {
          "dashStyle": {
            "doclet": {
              "description": "Name of the dash style to use for the shape's stroke.",
              "samples": [
                {
                  "name": "Possible values demonstrated",
                  "value": "highcharts/plotoptions/series-dashstyle-all/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.DashStyleValue"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.shapeOptions.dashStyle",
              "name": "dashStyle",
              "line": 505,
              "lineEnd": 513,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fill": {
            "doclet": {
              "description": "The color of the shape's fill.",
              "samples": [
                {
                  "name": "Basic shape annotation",
                  "value": "highcharts/annotations/shape/"
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "6.0.0",
              "defaultvalue": "rgba(0, 0, 0, 0.75)"
            },
            "meta": {
              "fullname": "annotations.shapeOptions.fill",
              "name": "fill",
              "line": 530,
              "lineEnd": 537,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": "rgba(0, 0, 0, 0.75)"
            },
            "children": {},
            "extended": 1
          },
          "height": {
            "doclet": {
              "description": "The height of the shape.",
              "samples": [
                {
                  "name": "Basic shape annotation",
                  "value": "highcharts/annotations/shape/"
                }
              ],
              "type": { "names": ["number"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.shapeOptions.height",
              "name": "height",
              "line": 471,
              "lineEnd": 479,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "r": {
            "doclet": {
              "description": "The radius of the shape.",
              "samples": [
                {
                  "name": "Basic shape annotation",
                  "value": "highcharts/annotations/shape/"
                }
              ],
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "annotations.shapeOptions.r",
              "name": "r",
              "line": 539,
              "lineEnd": 544,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "ry": {
            "doclet": {
              "description": "The radius of the shape in y direction.\nUsed for the ellipse.",
              "samples": [
                {
                  "name": "Ellipse annotation",
                  "value": "highcharts/annotations/ellipse/"
                }
              ],
              "type": { "names": ["number"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.shapeOptions.ry",
              "name": "ry",
              "line": 436,
              "lineEnd": 446,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "snap": {
            "doclet": {
              "description": "Defines additional snapping area around an annotation\nmaking this annotation to focus. Defined in pixels.",
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 2
            },
            "meta": {
              "fullname": "annotations.shapeOptions.snap",
              "name": "snap",
              "line": 546,
              "lineEnd": 549,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": 2
            },
            "children": {},
            "extended": 1
          },
          "src": {
            "doclet": {
              "description": "The URL for an image to use as the annotation shape.\nNote, type has to be set to `'image'`.",
              "see": [
                "[annotations.shapeOptions.type](annotations.shapeOptions.type)"
              ],
              "samples": [
                {
                  "name": "Define a marker image url for annotations",
                  "value": "highcharts/annotations/shape-src/"
                }
              ],
              "type": { "names": ["string"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.shapeOptions.src",
              "name": "src",
              "line": 494,
              "lineEnd": 504,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "stroke": {
            "doclet": {
              "description": "The color of the shape's stroke.",
              "samples": [
                {
                  "name": "Basic shape annotation",
                  "value": "highcharts/annotations/shape/"
                }
              ],
              "type": { "names": ["Highcharts.ColorString"] },
              "since": "6.0.0",
              "defaultvalue": "rgba(0, 0, 0, 0.75)"
            },
            "meta": {
              "fullname": "annotations.shapeOptions.stroke",
              "name": "stroke",
              "line": 436,
              "lineEnd": 446,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": "rgba(0, 0, 0, 0.75)"
            },
            "children": {},
            "extended": 1
          },
          "strokeWidth": {
            "doclet": {
              "description": "The pixel stroke width of the shape.",
              "samples": [
                {
                  "name": "Basic shape annotation",
                  "value": "highcharts/annotations/shape/"
                }
              ],
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "annotations.shapeOptions.strokeWidth",
              "name": "strokeWidth",
              "line": 523,
              "lineEnd": 528,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "type": {
            "doclet": {
              "description": "The type of the shape.\nAvailable options are circle, rect and ellipse.",
              "samples": [
                {
                  "name": "Basic shape annotation",
                  "value": "highcharts/annotations/shape/"
                },
                {
                  "name": "Ellipse annotation",
                  "value": "highcharts/annotations/ellipse/"
                }
              ],
              "type": { "names": ["string"] },
              "defaultvalue": "rect",
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.shapeOptions.type",
              "name": "type",
              "line": 480,
              "lineEnd": 493,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "width": {
            "doclet": {
              "description": "The width of the shape.",
              "samples": [
                {
                  "name": "Basic shape annotation",
                  "value": "highcharts/annotations/shape/"
                }
              ],
              "type": { "names": ["number"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.shapeOptions.width",
              "name": "width",
              "line": 462,
              "lineEnd": 470,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "xAxis": {
            "doclet": {
              "description": "The xAxis index to which the points should be attached.\nUsed for the ellipse.",
              "type": { "names": ["number"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.shapeOptions.xAxis",
              "name": "xAxis",
              "line": 447,
              "lineEnd": 454,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "yAxis": {
            "doclet": {
              "description": "The yAxis index to which the points should be attached.\nUsed for the ellipse.",
              "type": { "names": ["number"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.shapeOptions.yAxis",
              "name": "yAxis",
              "line": 455,
              "lineEnd": 461,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsAnnotationsShapeOptions",
        "extended": 1
      },
      "shapes": {
        "doclet": {
          "description": "An array of shapes for the annotation. For options that apply\nto multiple shapes, then can be added to the\n[shapeOptions](annotations.shapeOptions.html).",
          "type": { "names": ["Array.<*>"] },
          "extends": "annotations.shapeOptions",
          "since": "6.0.0"
        },
        "meta": {
          "fullname": "annotations.shapes",
          "name": "shapes",
          "line": 351,
          "lineEnd": 359,
          "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
          "column": 0
        },
        "children": {
          "markerEnd": {
            "doclet": {
              "description": "Id of the marker which will be drawn at the final vertex of\nthe path. Custom markers can be defined in defs property.",
              "see": ["[defs.markers](defs.markers.html)"],
              "samples": [
                {
                  "name": "Define a custom marker for annotations",
                  "value": "highcharts/annotations/custom-markers/"
                }
              ],
              "type": { "names": ["string"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.shapes.markerEnd",
              "name": "markerEnd",
              "line": 404,
              "lineEnd": 415,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "markerStart": {
            "doclet": {
              "description": "Id of the marker which will be drawn at the first vertex of\nthe path. Custom markers can be defined in defs property.",
              "see": ["[defs.markers](defs.markers.html)"],
              "samples": [
                {
                  "name": "Define a custom marker for annotations",
                  "value": "highcharts/annotations/custom-markers/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["string"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.shapes.markerStart",
              "name": "markerStart",
              "line": 416,
              "lineEnd": 427,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "point": {
            "doclet": {
              "description": "This option defines the point to which the shape will be\nconnected. It can be either the point which exists in the\nseries - it is referenced by the point's id - or a new point\nwith defined x, y properties and optionally axes.",
              "samples": [
                {
                  "name": "Attach annotation to a mock point with different ways",
                  "value": "highcharts/annotations/mock-points/"
                }
              ],
              "declare": "Highcharts.AnnotationMockPointOptionsObject",
              "type": {
                "names": [
                  "string",
                  "Highcharts.AnnotationMockPointOptionsObject",
                  "Highcharts.AnnotationMockPointFunction"
                ]
              },
              "extends": "annotations.labels.point",
              "requires": ["module:modules/annotations"],
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.shapes.point",
              "name": "point",
              "line": 360,
              "lineEnd": 378,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "flutterClassName": "HighchartsAnnotationsShapesPointOptions",
            "extended": 1
          },
          "points": {
            "doclet": {
              "description": "An array of points for the shape\nor a callback function that returns that shape point.\n\nThis option is available\nfor shapes which can use multiple points such as path. A\npoint can be either a point object or a point's id.",
              "see": [
                "[annotations.shapes.point](annotations.shapes.point.html)"
              ],
              "type": {
                "names": ["Array.<Highcharts.AnnotationShapePointOptions>"]
              },
              "extends": "annotations.labels.point",
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.shapes.points",
              "name": "points",
              "line": 379,
              "lineEnd": 392,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "flutterClassName": "HighchartsAnnotationsShapesPointsOptions",
            "extended": 1
          },
          "src": {
            "doclet": {
              "description": "The URL for an image to use as the annotation shape. Note,\ntype has to be set to `'image'`.",
              "see": ["[annotations.shapes.type](annotations.shapes.type)"],
              "samples": [
                {
                  "name": "Define a marker image url for annotations",
                  "value": "highcharts/annotations/shape-src/"
                }
              ],
              "type": { "names": ["string"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "annotations.shapes.src",
              "name": "src",
              "line": 393,
              "lineEnd": 403,
              "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "dashStyle": {},
          "fill": {},
          "height": {},
          "r": {},
          "ry": {},
          "snap": {},
          "stroke": {},
          "strokeWidth": {},
          "type": {},
          "width": {},
          "xAxis": {},
          "yAxis": {}
        },
        "flutterClassName": "HighchartsAnnotationsShapesOptions",
        "extended": 1
      },
      "visible": {
        "doclet": {
          "description": "Whether the annotation is visible.",
          "samples": [
            {
              "name": "Set annotation visibility",
              "value": "highcharts/annotations/visible/"
            }
          ],
          "since": "6.0.0",
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "annotations.visible",
          "name": "visible",
          "line": 35,
          "lineEnd": 42,
          "column": 4,
          "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "zIndex": {
        "doclet": {
          "description": "The Z index of the annotation.",
          "since": "6.0.0",
          "type": { "names": ["number"] },
          "defaultvalue": 6
        },
        "meta": {
          "fullname": "annotations.zIndex",
          "name": "zIndex",
          "line": 625,
          "lineEnd": 627,
          "column": 4,
          "filename": "code/es-modules/Extensions/Annotations/AnnotationDefaults.js",
          "default": 6
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsAnnotationsOptions",
    "extended": 1
  },
  "boost": {
    "doclet": {
      "description": "Options for the Boost module. The Boost module allows certain series types\nto be rendered by WebGL instead of the default SVG. This allows hundreds of\nthousands of data points to be rendered in milliseconds. In addition to the\nWebGL rendering it saves time by skipping processing and inspection of the\ndata wherever possible. This introduces some limitations to what features are\navailable in boost mode. See [the docs](https://www.highcharts.com/docs/advanced-chart-features/boost-module) for\ndetails.\n\nIn addition to the global `boost` option, each series has a\n[boostThreshold](#plotOptions.series.boostThreshold) that defines when the\nboost should kick in.\n\nRequires the `modules/boost.js` module.",
      "samples": [
        {
          "name": "Stock chart",
          "value": "highcharts/boost/line-series-heavy-stock",
          "products": ["highstock"]
        },
        {
          "name": "Dynamic stock chart",
          "value": "highcharts/boost/line-series-heavy-dynamic",
          "products": ["highstock"]
        },
        { "name": "Line chart", "value": "highcharts/boost/line" },
        {
          "name": "Line chart with hundreds of series",
          "value": "highcharts/boost/line-series-heavy"
        },
        { "name": "Scatter chart", "value": "highcharts/boost/scatter" },
        { "name": "Area chart", "value": "highcharts/boost/area" },
        { "name": "Area range chart", "value": "highcharts/boost/arearange" },
        { "name": "Column chart", "value": "highcharts/boost/column" },
        {
          "name": "Column range chart",
          "value": "highcharts/boost/columnrange"
        },
        { "name": "Bubble chart", "value": "highcharts/boost/bubble" },
        { "name": "Heat map", "value": "highcharts/boost/heatmap" },
        { "name": "Tree map", "value": "highcharts/boost/treemap" }
      ],
      "products": ["highcharts", "highstock"],
      "requires": ["module:modules/boost"],
      "type": { "names": ["*"] }
    },
    "meta": {
      "fullname": "boost",
      "name": "boost",
      "line": 135,
      "lineEnd": 179,
      "filename": "code/es-modules/Extensions/Boost/Boost.js",
      "column": 0
    },
    "children": {
      "allowForce": {
        "doclet": {
          "description": "The chart will be boosted, if one of the series crosses its threshold and all\nthe series in the chart can be boosted.",
          "type": { "names": ["boolean"] },
          "defaultvalue": "true"
        },
        "meta": {
          "fullname": "boost.allowForce",
          "name": "allowForce",
          "line": 180,
          "lineEnd": 187,
          "filename": "code/es-modules/Extensions/Boost/Boost.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "debug": {
        "doclet": {
          "description": "Debugging options for boost.\nUseful for benchmarking, and general timing.",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "boost.debug",
          "name": "debug",
          "line": 195,
          "lineEnd": 200,
          "filename": "code/es-modules/Extensions/Boost/Boost.js",
          "column": 0
        },
        "children": {
          "showSkipSummary": {
            "doclet": {
              "description": "Show the number of points skipped through culling.\n\nWhen set to true, the number of points skipped in series processing\nis outputted. Points are skipped if they are closer than 1 pixel from\neach other.",
              "type": { "names": ["boolean"] },
              "defaultvalue": "false"
            },
            "meta": {
              "fullname": "boost.debug.showSkipSummary",
              "name": "showSkipSummary",
              "line": 244,
              "lineEnd": 254,
              "filename": "code/es-modules/Extensions/Boost/Boost.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "timeBufferCopy": {
            "doclet": {
              "description": "Time the WebGL to SVG buffer copy\n\nAfter rendering, the result is copied to an image which is injected\ninto the SVG.\n\nIf this property is set to true, the time it takes for the buffer copy\nto complete is outputted.",
              "type": { "names": ["boolean"] },
              "defaultvalue": "false"
            },
            "meta": {
              "fullname": "boost.debug.timeBufferCopy",
              "name": "timeBufferCopy",
              "line": 255,
              "lineEnd": 267,
              "filename": "code/es-modules/Extensions/Boost/Boost.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "timeKDTree": {
            "doclet": {
              "description": "Time the building of the k-d tree.\n\nThis outputs the time spent building the k-d tree used for\nmarkers etc.\n\nNote that the k-d tree is built async, and runs post-rendering.\nFollowing, it does not affect the performance of the rendering itself.",
              "type": { "names": ["boolean"] },
              "defaultvalue": "false"
            },
            "meta": {
              "fullname": "boost.debug.timeKDTree",
              "name": "timeKDTree",
              "line": 231,
              "lineEnd": 243,
              "filename": "code/es-modules/Extensions/Boost/Boost.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "timeRendering": {
            "doclet": {
              "description": "Time the series rendering.\n\nThis outputs the time spent on actual rendering in the console when\nset to true.",
              "type": { "names": ["boolean"] },
              "defaultvalue": "false"
            },
            "meta": {
              "fullname": "boost.debug.timeRendering",
              "name": "timeRendering",
              "line": 201,
              "lineEnd": 210,
              "filename": "code/es-modules/Extensions/Boost/Boost.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "timeSeriesProcessing": {
            "doclet": {
              "description": "Time the series processing.\n\nThis outputs the time spent on transforming the series data to\nvertex buffers when set to true.",
              "type": { "names": ["boolean"] },
              "defaultvalue": "false"
            },
            "meta": {
              "fullname": "boost.debug.timeSeriesProcessing",
              "name": "timeSeriesProcessing",
              "line": 211,
              "lineEnd": 220,
              "filename": "code/es-modules/Extensions/Boost/Boost.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "timeSetup": {
            "doclet": {
              "description": "Time the WebGL setup.\n\nThis outputs the time spent on setting up the WebGL context,\ncreating shaders, and textures.",
              "type": { "names": ["boolean"] },
              "defaultvalue": "false"
            },
            "meta": {
              "fullname": "boost.debug.timeSetup",
              "name": "timeSetup",
              "line": 221,
              "lineEnd": 230,
              "filename": "code/es-modules/Extensions/Boost/Boost.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsBoostDebugOptions",
        "extended": 1
      },
      "enabled": {
        "doclet": {
          "description": "Enable or disable boost on a chart.",
          "type": { "names": ["boolean"] },
          "defaultvalue": "true"
        },
        "meta": {
          "fullname": "boost.enabled",
          "name": "enabled",
          "line": 188,
          "lineEnd": 194,
          "filename": "code/es-modules/Extensions/Boost/Boost.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "pixelRatio": {
        "doclet": {
          "description": "The pixel ratio for the WebGL content. If 0, the `window.devicePixelRatio` is\nused. This ensures sharp graphics on high DPI displays like Apple's Retina,\nas well as when a page is zoomed.\n\nThe default is left at 1 for now, as this is a new feature that has the\npotential to break existing setups. Over time, when it has been battle\ntested, the intention is to set it to 0 by default.\n\nAnother use case for this option is to set it to 2 in order to make exported\nand upscaled charts render sharp.\n\nOne limitation when using the `pixelRatio` is that the line width of graphs\nis scaled down. Since the Boost module currently can only render 1px line\nwidths, it is scaled down to a thin 0.5 pixels on a Retina display.",
          "samples": [
            {
              "name": "Enable the `devicePixelRatio`",
              "value": "highcharts/boost/line-devicepixelratio"
            },
            {
              "name": "Sharper graphics in export",
              "value": "highcharts/boost/line-export-pixelratio"
            }
          ],
          "type": { "names": ["number"] },
          "since": "10.0.0",
          "defaultvalue": "1"
        },
        "meta": {
          "fullname": "boost.pixelRatio",
          "name": "pixelRatio",
          "line": 268,
          "lineEnd": 293,
          "filename": "code/es-modules/Extensions/Boost/Boost.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "seriesThreshold": {
        "doclet": {
          "description": "Set the series threshold for when the boost should kick in globally.\n\nSetting to e.g. 20 will cause the whole chart to enter boost mode\nif there are 20 or more series active. When the chart is in boost mode,\nevery series in it will be rendered to a common canvas. This offers\na significant speed improvement in charts with a very high\namount of series.",
          "type": { "names": ["number"] },
          "defaultvalue": "50"
        },
        "meta": {
          "fullname": "boost.seriesThreshold",
          "name": "seriesThreshold",
          "line": 294,
          "lineEnd": 306,
          "filename": "code/es-modules/Extensions/Boost/Boost.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "useGPUTranslations": {
        "doclet": {
          "description": "Enable or disable GPU translations. GPU translations are faster than doing\nthe translation in JavaScript.\n\nThis option may cause rendering issues with certain datasets.\nNamely, if your dataset has large numbers with small increments (such as\ntimestamps), it won't work correctly. This is due to floating point\nprecision.",
          "type": { "names": ["boolean"] },
          "defaultvalue": "false"
        },
        "meta": {
          "fullname": "boost.useGPUTranslations",
          "name": "useGPUTranslations",
          "line": 307,
          "lineEnd": 319,
          "filename": "code/es-modules/Extensions/Boost/Boost.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "usePreallocated": {
        "doclet": {
          "description": "Enable or disable pre-allocation of vertex buffers.\n\nEnabling this will make it so that the binary data arrays required for\nstoring the series data will be allocated prior to transforming the data\nto a WebGL-compatible format.\n\nThis saves a copy operation on the order of O(n) and so is significantly more\nperformant. However, this is currently an experimental option, and may cause\nvisual artifacts with some datasets.\n\nAs such, care should be taken when using this setting to make sure that\nit doesn't cause any rendering glitches with the given use-case.",
          "type": { "names": ["boolean"] },
          "defaultvalue": "false"
        },
        "meta": {
          "fullname": "boost.usePreallocated",
          "name": "usePreallocated",
          "line": 320,
          "lineEnd": 337,
          "filename": "code/es-modules/Extensions/Boost/Boost.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsBoostOptions",
    "extended": 1
  },
  "caption": {
    "doclet": {
      "description": "The chart's caption, which will render below the chart and will be part\nof exported charts. The caption can be updated after chart initialization\nthrough the `Chart.update` or `Chart.caption.update` methods.",
      "samples": [
        {
          "name": "A chart with a caption",
          "value": "highcharts/caption/text/"
        }
      ],
      "since": "7.2.0",
      "type": { "names": ["*"] }
    },
    "meta": {
      "fullname": "caption",
      "name": "caption",
      "line": 794,
      "lineEnd": 802,
      "column": 4,
      "filename": "code/es-modules/Core/Defaults.js"
    },
    "children": {
      "align": {
        "doclet": {
          "description": "The horizontal alignment of the caption. Can be one of \"left\",\n \"center\" and \"right\".",
          "type": { "names": ["Highcharts.AlignValue"] },
          "since": "7.2.0",
          "defaultvalue": "left"
        },
        "meta": {
          "fullname": "caption.align",
          "name": "align",
          "line": 866,
          "lineEnd": 871,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "left"
        },
        "children": {},
        "extended": 1
      },
      "floating": {
        "doclet": {
          "description": "When the caption is floating, the plot area will not move to make\nspace for it.",
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "7.2.0"
        },
        "meta": {
          "fullname": "caption.floating",
          "name": "floating",
          "line": 804,
          "lineEnd": 811,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "margin": {
        "doclet": {
          "description": "The margin between the caption and the plot area.",
          "since": "7.2.0",
          "type": { "names": ["number"] },
          "defaultvalue": 15
        },
        "meta": {
          "fullname": "caption.margin",
          "name": "margin",
          "line": 804,
          "lineEnd": 811,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": 15
        },
        "children": {},
        "extended": 1
      },
      "style": {
        "doclet": {
          "description": "CSS styles for the caption.\n\nIn styled mode, the caption style is given in the\n`.highcharts-caption` class.",
          "samples": [
            {
              "name": "Styled mode",
              "value": "highcharts/css/titles/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Highcharts.CSSObject"] },
          "defaultvalue": "{\"color\": \"#666666\"}",
          "since": "7.2.0"
        },
        "meta": {
          "fullname": "caption.style",
          "name": "style",
          "line": 816,
          "lineEnd": 824,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {
          "color": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "#666666"
            },
            "meta": {
              "fullname": "caption.style.color",
              "name": "color",
              "line": 853,
              "lineEnd": 853,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "#666666"
            },
            "children": {},
            "extended": 1
          },
          "fontSize": {
            "doclet": {
              "type": { "names": ["number", "string"] },
              "defaultvalue": "0.8em"
            },
            "meta": {
              "fullname": "caption.style.fontSize",
              "name": "fontSize",
              "line": 854,
              "lineEnd": 856,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "0.8em"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsCaptionStyleOptions",
        "extended": 1
      },
      "text": {
        "doclet": {
          "description": "The caption text of the chart.",
          "samples": [
            {
              "name": "Custom caption",
              "value": "highcharts/caption/text/",
              "products": ["highcharts"]
            }
          ],
          "since": "7.2.0",
          "type": { "names": ["string"] },
          "defaultvalue": ""
        },
        "meta": {
          "fullname": "caption.text",
          "name": "text",
          "line": 859,
          "lineEnd": 864,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": ""
        },
        "children": {},
        "extended": 1
      },
      "useHTML": {
        "doclet": {
          "description": "Whether to\n[use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\nto render the text.",
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "7.2.0"
        },
        "meta": {
          "fullname": "caption.useHTML",
          "name": "useHTML",
          "line": 816,
          "lineEnd": 824,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "verticalAlign": {
        "doclet": {
          "description": "The vertical alignment of the caption. Can be one of `\"top\"`,\n`\"middle\"` and `\"bottom\"`. When middle, the caption behaves as\nfloating.",
          "type": { "names": ["Highcharts.VerticalAlignValue"] },
          "since": "7.2.0",
          "defaultvalue": "bottom"
        },
        "meta": {
          "fullname": "caption.verticalAlign",
          "name": "verticalAlign",
          "line": 873,
          "lineEnd": 879,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "bottom"
        },
        "children": {},
        "extended": 1
      },
      "x": {
        "doclet": {
          "description": "The x position of the caption relative to the alignment within\n`chart.spacingLeft` and `chart.spacingRight`.",
          "type": { "names": ["number"] },
          "defaultvalue": "0",
          "since": "7.2.0"
        },
        "meta": {
          "fullname": "caption.x",
          "name": "x",
          "line": 825,
          "lineEnd": 832,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "y": {
        "doclet": {
          "description": "The y position of the caption relative to the alignment within\n`chart.spacingTop` and `chart.spacingBottom`.",
          "type": { "names": ["number"] },
          "since": "7.2.0"
        },
        "meta": {
          "fullname": "caption.y",
          "name": "y",
          "line": 833,
          "lineEnd": 839,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsCaptionOptions",
    "extended": 1
  },
  "chart": {
    "doclet": {
      "description": "General options for the chart.",
      "type": { "names": ["*"] }
    },
    "meta": {
      "filename": "code/es-modules/Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js",
      "name": "chart",
      "fullname": "chart",
      "line": 13,
      "lineEnd": 17,
      "column": 0
    },
    "children": {
      "alignThresholds": {
        "doclet": {
          "description": "When using multiple axes, align the thresholds. When this is true, other\nticks will also be aligned.\n\nNote that for line series and some other series types, the `threshold`\noption is set to `null` by default. This will in turn cause their y-axis\nto not have a threshold. In order to avoid that, set the series\n`threshold` to 0 or another number.\n\nIf `startOnTick` or `endOnTick` in the axis options are set to false, or\nif the axis is logarithmic, the threshold will not be aligned.",
          "samples": [
            {
              "name": "Set to true",
              "value": "highcharts/chart/alignthresholds/",
              "products": ["highcharts"]
            }
          ],
          "since": "10.0.0",
          "products": ["highcharts", "highstock", "gantt"],
          "type": { "names": ["boolean"] },
          "defaultvalue": false
        },
        "meta": {
          "fullname": "chart.alignThresholds",
          "name": "alignThresholds",
          "line": 22,
          "lineEnd": 39,
          "column": 4,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "default": false
        },
        "children": {},
        "extended": 1
      },
      "alignTicks": {
        "doclet": {
          "description": "When using multiple axes, the ticks of two or more opposite axes\nwill automatically be aligned by adding ticks to the axis or axes\nwith the least ticks, as if `tickAmount` were specified.\n\nThis can be prevented by setting `alignTicks` to false. If the grid\nlines look messy, it's a good idea to hide them for the secondary\naxis by setting `gridLineWidth` to 0.\n\nIf `startOnTick` or `endOnTick` in the axis options are set to false,\nthen the `alignTicks ` will be disabled for the axis.\n\nDisabled for logarithmic axes.",
          "samples": [
            {
              "name": "True by default",
              "value": "highcharts/chart/alignticks-true/",
              "products": ["highcharts"]
            },
            {
              "name": "False",
              "value": "highcharts/chart/alignticks-false/",
              "products": ["highcharts"]
            },
            {
              "name": "True by default",
              "value": "stock/chart/alignticks-true/",
              "products": ["highstock"]
            },
            {
              "name": "False",
              "value": "stock/chart/alignticks-false/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "true",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "chart.alignTicks",
          "name": "alignTicks",
          "line": 49,
          "lineEnd": 76,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "allowMutatingData": {
        "doclet": {
          "description": "By default, (because of memory and performance reasons) the chart does\nnot copy the data but keeps it as a reference. In some cases, this might\nresult in mutating the original data source. In order to prevent that,\nset that property to false. Please note that changing that might decrease\nperformance, especially with bigger sets of data.",
          "type": { "names": ["boolean"] },
          "since": "10.1.0",
          "defaultvalue": true
        },
        "meta": {
          "fullname": "chart.allowMutatingData",
          "name": "allowMutatingData",
          "line": 532,
          "lineEnd": 541,
          "column": 4,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "animation": {
        "doclet": {
          "description": "Set the overall animation for all chart updating. Animation can be\ndisabled throughout the chart by setting it to false here. It can\nbe overridden for each individual API method as a function parameter.\nThe only animation not affected by this option is the initial series\nanimation, see [plotOptions.series.animation](#plotOptions.series.animation).\n\nThe animation can either be set as a boolean or a configuration\nobject. If `true`, it will use the 'swing' jQuery easing and a\nduration of 500 ms. If used as a configuration object, the following\nproperties are supported:\n\n- `defer`: The animation delay time in milliseconds.\n\n- `duration`: The duration of the animation in milliseconds.\n\n- `easing`: A string reference to an easing function set on the\n  `Math` object. See\n  [the easing demo](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-animation-easing/).\n\nWhen zooming on a series with less than 100 points, the chart redraw\nwill be done with animation, but in case of more data points, it is\nnecessary to set this option to ensure animation on zoom.",
          "samples": [
            {
              "name": "Updating with no animation",
              "value": "highcharts/chart/animation-none/",
              "products": ["highcharts"]
            },
            {
              "name": "With a longer duration",
              "value": "highcharts/chart/animation-duration/",
              "products": ["highcharts"]
            },
            {
              "name": "With a jQuery UI easing",
              "value": "highcharts/chart/animation-easing/",
              "products": ["highcharts"]
            },
            {
              "name": "Updating with no animation",
              "value": "maps/chart/animation-none/",
              "products": ["highmaps"]
            },
            {
              "name": "With a longer duration",
              "value": "maps/chart/animation-duration/",
              "products": ["highmaps"]
            }
          ],
          "type": {
            "names": ["boolean", "Partial.<Highcharts.AnimationOptionsObject>"]
          },
          "defaultvalue": "true"
        },
        "meta": {
          "fullname": "chart.animation",
          "name": "animation",
          "line": 96,
          "lineEnd": 135,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "axisLayoutRuns": {
        "doclet": {
          "description": "When a chart with an x and a y-axis is rendered, we first pre-render the\nlabels of both in order to measure them. Then, if either of the axis\nlabels take up so much space that it significantly affects the length of\nthe other axis, we repeat the process.\n\nBy default we stop at two axis layout runs, but it may be that the second\nrun also alter the space required by either axis, for example if it\ncauses the labels to rotate. In this situation, a subsequent redraw of\nthe chart may cause the tick and label placement to change for apparently\nno reason.\n\nUse the `axisLayoutRuns` option to set the maximum allowed number of\nrepetitions. But keep in mind that the default value of 2 is set because\nevery run costs performance time.\n\n**Note:** Changing that option to higher than the default might decrease\nperformance significantly, especially with bigger sets of data.",
          "type": { "names": ["number"] },
          "defaultvalue": "2",
          "since": "11.3.0"
        },
        "meta": {
          "fullname": "chart.axisLayoutRuns",
          "name": "axisLayoutRuns",
          "line": 395,
          "lineEnd": 418,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "backgroundColor": {
        "doclet": {
          "description": "The background color or gradient for the outer chart area.",
          "see": [
            "In styled mode, the background is set with the\n     `.highcharts-background` class."
          ],
          "samples": [
            {
              "name": "Color",
              "value": "highcharts/chart/backgroundcolor-color/",
              "products": ["highcharts"]
            },
            {
              "name": "Gradient",
              "value": "highcharts/chart/backgroundcolor-gradient/",
              "products": ["highcharts"]
            },
            {
              "name": "Color",
              "value": "stock/chart/backgroundcolor-color/",
              "products": ["highstock"]
            },
            {
              "name": "Gradient",
              "value": "stock/chart/backgroundcolor-gradient/",
              "products": ["highstock"]
            },
            {
              "name": "Color",
              "value": "maps/chart/backgroundcolor-color/",
              "products": ["highmaps"]
            },
            {
              "name": "Gradient",
              "value": "maps/chart/backgroundcolor-gradient/",
              "products": ["highmaps"]
            }
          ],
          "type": {
            "names": [
              "Highcharts.ColorString",
              "Highcharts.GradientColorObject",
              "Highcharts.PatternObject"
            ]
          },
          "defaultvalue": "#ffffff"
        },
        "meta": {
          "fullname": "chart.backgroundColor",
          "name": "backgroundColor",
          "line": 1189,
          "lineEnd": 1205,
          "column": 4,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "default": "#ffffff"
        },
        "children": {},
        "extended": 1
      },
      "borderColor": {
        "doclet": {
          "description": "The color of the outer chart border.",
          "see": [
            "In styled mode, the stroke is set with the\n     `.highcharts-background` class."
          ],
          "samples": [
            {
              "name": "Brown border",
              "value": "highcharts/chart/bordercolor/",
              "products": ["highcharts"]
            },
            {
              "name": "Brown border",
              "value": "stock/chart/border/",
              "products": ["highstock"]
            },
            {
              "name": "Border options",
              "value": "maps/chart/border/",
              "products": ["highmaps"]
            }
          ],
          "type": {
            "names": [
              "Highcharts.ColorString",
              "Highcharts.GradientColorObject",
              "Highcharts.PatternObject"
            ]
          },
          "defaultvalue": "#334eff"
        },
        "meta": {
          "fullname": "chart.borderColor",
          "name": "borderColor",
          "line": 1173,
          "lineEnd": 1187,
          "column": 4,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "default": "#334eff"
        },
        "children": {},
        "extended": 1
      },
      "borderRadius": {
        "doclet": {
          "description": "The corner radius of the outer chart border.",
          "samples": [
            {
              "name": "20px radius",
              "value": "highcharts/chart/borderradius/",
              "products": ["highcharts"]
            },
            {
              "name": "10px radius",
              "value": "stock/chart/border/",
              "products": ["highstock"]
            },
            {
              "name": "Border options",
              "value": "maps/chart/border/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": 0
        },
        "meta": {
          "fullname": "chart.borderRadius",
          "name": "borderRadius",
          "line": 510,
          "lineEnd": 520,
          "column": 4,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "default": 0
        },
        "children": {},
        "extended": 1
      },
      "borderWidth": {
        "doclet": {
          "description": "The pixel width of the outer chart border.",
          "see": [
            "In styled mode, the stroke is set with the\n     `.highcharts-background` class."
          ],
          "samples": [
            {
              "name": "5px border",
              "value": "highcharts/chart/borderwidth/",
              "products": ["highcharts"]
            },
            {
              "name": "2px border",
              "value": "stock/chart/border/",
              "products": ["highstock"]
            },
            {
              "name": "Border options",
              "value": "maps/chart/border/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "0"
        },
        "meta": {
          "fullname": "chart.borderWidth",
          "name": "borderWidth",
          "line": 1189,
          "lineEnd": 1205,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "className": {
        "doclet": {
          "description": "A CSS class name to apply to the charts container `div`, allowing\nunique CSS styling for each chart.",
          "type": { "names": ["string"] }
        },
        "meta": {
          "fullname": "chart.className",
          "name": "className",
          "line": 136,
          "lineEnd": 142,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "colorCount": {
        "doclet": {
          "description": "In styled mode, this sets how many colors the class names\nshould rotate between. With ten colors, series (or points) are\ngiven class names like `highcharts-color-0`, `highcharts-color-1`\n[...] `highcharts-color-9`. The equivalent in non-styled mode\nis to set colors using the [colors](#colors) setting.",
          "since": "5.0.0",
          "type": { "names": ["number"] },
          "defaultvalue": 10
        },
        "meta": {
          "fullname": "chart.colorCount",
          "name": "colorCount",
          "line": 522,
          "lineEnd": 530,
          "column": 4,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "default": 10
        },
        "children": {},
        "extended": 1
      },
      "displayErrors": {
        "doclet": {
          "description": "Whether to display errors on the chart. When `false`, the errors will\nbe shown only in the console.",
          "samples": [
            {
              "name": "Show errors on chart",
              "value": "highcharts/chart/display-errors/"
            }
          ],
          "since": "7.0.0",
          "requires": ["module:modules/debugger"],
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "chart.displayErrors",
          "name": "displayErrors",
          "line": 28,
          "lineEnd": 37,
          "column": 8,
          "filename": "code/es-modules/Extensions/Debugger/Debugger.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "events": {
        "doclet": {
          "description": "Event listeners for the chart.",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "chart.events",
          "name": "events",
          "line": 143,
          "lineEnd": 147,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {
          "addSeries": {
            "doclet": {
              "description": "Fires when a series is added to the chart after load time, using the\n`addSeries` method. One parameter, `event`, is passed to the\nfunction, containing common event information. Through\n`event.options` you can access the series options that were passed to\nthe `addSeries` method. Returning false prevents the series from\nbeing added.",
              "samples": [
                {
                  "name": "Alert on add series",
                  "value": "highcharts/chart/events-addseries/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Alert on add series",
                  "value": "stock/chart/events-addseries/",
                  "products": ["highstock"]
                }
              ],
              "type": {
                "names": ["Highcharts.ChartAddSeriesCallbackFunction"]
              },
              "since": "1.2.0",
              "context": "Highcharts.Chart"
            },
            "meta": {
              "fullname": "chart.events.addSeries",
              "name": "addSeries",
              "line": 148,
              "lineEnd": 165,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "afterPrint": {
            "doclet": {
              "description": "Fires after a chart is printed through the context menu item or the\n`Chart.print` method.",
              "samples": [
                {
                  "name": "Rescale the chart to print",
                  "value": "highcharts/chart/events-beforeprint-afterprint/"
                }
              ],
              "type": {
                "names": ["Highcharts.ExportingAfterPrintCallbackFunction"]
              },
              "since": "4.1.0",
              "context": "Highcharts.Chart",
              "requires": ["module:modules/exporting"]
            },
            "meta": {
              "fullname": "chart.events.afterPrint",
              "name": "afterPrint",
              "line": 1267,
              "lineEnd": 1279,
              "filename": "code/es-modules/Extensions/Exporting/Exporting.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "beforePrint": {
            "doclet": {
              "description": "Fires before a chart is printed through the context menu item or\nthe `Chart.print` method.",
              "samples": [
                {
                  "name": "Rescale the chart to print",
                  "value": "highcharts/chart/events-beforeprint-afterprint/"
                }
              ],
              "type": {
                "names": ["Highcharts.ExportingBeforePrintCallbackFunction"]
              },
              "since": "4.1.0",
              "context": "Highcharts.Chart",
              "requires": ["module:modules/exporting"]
            },
            "meta": {
              "fullname": "chart.events.beforePrint",
              "name": "beforePrint",
              "line": 1280,
              "lineEnd": 1292,
              "filename": "code/es-modules/Extensions/Exporting/Exporting.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "click": {
            "doclet": {
              "description": "Fires when clicking on the plot background. One parameter, `event`,\nis passed to the function, containing common event information.\n\nInformation on the clicked spot can be found through `event.xAxis`\nand `event.yAxis`, which are arrays containing the axes of each\ndimension and each axis' value at the clicked spot. The primary axes\nare `event.xAxis[0]` and `event.yAxis[0]`. Remember the unit of a\ndatetime axis is milliseconds since 1970-01-01 00:00:00.\n\n```js\nclick: function(e) {\n    console.log(\n        Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', e.xAxis[0].value),\n        e.yAxis[0].value\n    )\n}\n```",
              "samples": [
                {
                  "name": "Alert coordinates on click",
                  "value": "highcharts/chart/events-click/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Alternatively, attach event to container",
                  "value": "highcharts/chart/events-container/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Alert coordinates on click",
                  "value": "stock/chart/events-click/",
                  "products": ["highstock"]
                },
                {
                  "name": "Alternatively, attach event to container",
                  "value": "highcharts/chart/events-container/",
                  "products": ["highstock"]
                },
                {
                  "name": "Record coordinates on click",
                  "value": "maps/chart/events-click/",
                  "products": ["highmaps"]
                },
                {
                  "name": "Alternatively, attach event to container",
                  "value": "highcharts/chart/events-container/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["Highcharts.ChartClickCallbackFunction"] },
              "since": "1.2.0",
              "context": "Highcharts.Chart"
            },
            "meta": {
              "fullname": "chart.events.click",
              "name": "click",
              "line": 166,
              "lineEnd": 202,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "drilldown": {
            "doclet": {
              "description": "Fires when a drilldown point is clicked, before the new series is added. This\nevent is also utilized for async drilldown, where the seriesOptions are not\nadded by option, but rather loaded async. Note that when clicking a category\nlabel to trigger multiple series drilldown, one `drilldown` event is\ntriggered per point in the category.\n\nEvent arguments:\n\n- `category`: If a category label was clicked, which index.\n\n- `originalEvent`: The original browser event (usually click) that triggered\n  the drilldown.\n\n- `point`: The originating point.\n\n- `points`: If a category label was clicked, this array holds all points\n  corresponding to the category.\n\n- `seriesOptions`: Options for the new series.",
              "samples": [
                {
                  "name": "Async drilldown",
                  "value": "highcharts/drilldown/async/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.DrilldownCallbackFunction"] },
              "since": "3.0.8",
              "products": ["highcharts", "highmaps"],
              "context": "Highcharts.Chart",
              "requires": ["module:modules/drilldown"]
            },
            "meta": {
              "fullname": "chart.events.drilldown",
              "name": "drilldown",
              "line": 242,
              "lineEnd": 272,
              "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "drillup": {
            "doclet": {
              "description": "Fires when drilling up from a drilldown series.",
              "type": { "names": ["Highcharts.DrillupCallbackFunction"] },
              "since": "3.0.8",
              "products": ["highcharts", "highmaps"],
              "context": "Highcharts.Chart",
              "requires": ["module:modules/drilldown"]
            },
            "meta": {
              "fullname": "chart.events.drillup",
              "name": "drillup",
              "line": 273,
              "lineEnd": 282,
              "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "drillupall": {
            "doclet": {
              "description": "In a chart with multiple drilldown series, this event fires after all the\nseries have been drilled up.",
              "type": { "names": ["Highcharts.DrillupAllCallbackFunction"] },
              "since": "4.2.4",
              "products": ["highcharts", "highmaps"],
              "context": "Highcharts.Chart",
              "requires": ["module:modules/drilldown"]
            },
            "meta": {
              "fullname": "chart.events.drillupall",
              "name": "drillupall",
              "line": 283,
              "lineEnd": 293,
              "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "exportData": {
            "doclet": {
              "description": "Callback that fires while exporting data. This allows the modification of\ndata rows before processed into the final format.",
              "type": { "names": ["Highcharts.ExportDataCallbackFunction"] },
              "context": "Highcharts.Chart",
              "requires": ["module:modules/export-data"]
            },
            "meta": {
              "fullname": "chart.events.exportData",
              "name": "exportData",
              "line": 268,
              "lineEnd": 276,
              "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fullscreenClose": {
            "doclet": {
              "description": "Fires when a fullscreen is closed through the context menu item,\nor a fullscreen is closed on the `Escape` button click,\nor the `Chart.fullscreen.close` method.",
              "samples": [
                {
                  "name": "Title size change on fullscreen open",
                  "value": "highcharts/chart/events-fullscreen"
                }
              ],
              "type": {
                "names": [
                  "Highcharts.FullScreenfullscreenCloseCallbackFunction"
                ]
              },
              "since": "10.1.0",
              "context": "Highcharts.Chart",
              "requires": ["module:modules/full-screen"]
            },
            "meta": {
              "fullname": "chart.events.fullscreenClose",
              "name": "fullscreenClose",
              "line": 313,
              "lineEnd": 326,
              "filename": "code/es-modules/Extensions/Exporting/Fullscreen.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fullscreenOpen": {
            "doclet": {
              "description": "Fires when a fullscreen is opened through the context menu item,\nor the `Chart.fullscreen.open` method.",
              "samples": [
                {
                  "name": "Title size change on fullscreen open",
                  "value": "highcharts/chart/events-fullscreen"
                }
              ],
              "type": {
                "names": ["Highcharts.FullScreenfullscreenOpenCallbackFunction"]
              },
              "since": "10.1.0",
              "context": "Highcharts.Chart",
              "requires": ["module:modules/full-screen"]
            },
            "meta": {
              "fullname": "chart.events.fullscreenOpen",
              "name": "fullscreenOpen",
              "line": 327,
              "lineEnd": 339,
              "filename": "code/es-modules/Extensions/Exporting/Fullscreen.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "load": {
            "doclet": {
              "description": "Fires when the chart is finished loading. Since v4.2.2, it also waits\nfor images to be loaded, for example from point markers. One\nparameter, `event`, is passed to the function, containing common\nevent information.\n\nThere is also a second parameter to the chart constructor where a\ncallback function can be passed to be executed on chart.load.",
              "samples": [
                {
                  "name": "Alert on chart load",
                  "value": "highcharts/chart/events-load/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Load vs Redraw vs Render",
                  "value": "highcharts/chart/events-render/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Alert on chart load",
                  "value": "stock/chart/events-load/",
                  "products": ["highstock"]
                },
                {
                  "name": "Add series on chart load",
                  "value": "maps/chart/events-load/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["Highcharts.ChartLoadCallbackFunction"] },
              "context": "Highcharts.Chart"
            },
            "meta": {
              "fullname": "chart.events.load",
              "name": "load",
              "line": 203,
              "lineEnd": 224,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "redraw": {
            "doclet": {
              "description": "Fires when the chart is redrawn, either after a call to\n`chart.redraw()` or after an axis, series or point is modified with\nthe `redraw` option set to `true`. One parameter, `event`, is passed\nto the function, containing common event information.",
              "samples": [
                {
                  "name": "Alert on chart redraw",
                  "value": "highcharts/chart/events-redraw/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Load vs Redraw vs Render",
                  "value": "highcharts/chart/events-render/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Alert on chart redraw when adding a series or moving the zoomed range",
                  "value": "stock/chart/events-redraw/",
                  "products": ["highstock"]
                },
                {
                  "name": "Set subtitle on chart redraw",
                  "value": "maps/chart/events-redraw/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["Highcharts.ChartRedrawCallbackFunction"] },
              "since": "1.2.0",
              "context": "Highcharts.Chart"
            },
            "meta": {
              "fullname": "chart.events.redraw",
              "name": "redraw",
              "line": 225,
              "lineEnd": 245,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "render": {
            "doclet": {
              "description": "Fires after initial load of the chart (directly after the `load`\nevent), and after each redraw (directly after the `redraw` event).",
              "samples": [
                {
                  "name": "Load vs Redraw vs Render",
                  "value": "highcharts/chart/events-render/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.ChartRenderCallbackFunction"] },
              "since": "5.0.7",
              "context": "Highcharts.Chart"
            },
            "meta": {
              "fullname": "chart.events.render",
              "name": "render",
              "line": 246,
              "lineEnd": 257,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "selection": {
            "doclet": {
              "description": "Fires when an area of the chart has been selected. Selection is\nenabled by setting the chart's zoomType. One parameter, `event`, is\npassed to the function, containing common event information. The\ndefault action for the selection event is to zoom the chart to the\nselected area. It can be prevented by calling\n`event.preventDefault()` or return false.\n\nInformation on the selected area can be found through `event.xAxis`\nand `event.yAxis`, which are arrays containing the axes of each\ndimension and each axis' min and max values. The primary axes are\n`event.xAxis[0]` and `event.yAxis[0]`. Remember the unit of a\ndatetime axis is milliseconds since 1970-01-01 00:00:00.\n\n```js\nselection: function(event) {\n    // log the min and max of the primary, datetime x-axis\n    console.log(\n        Highcharts.dateFormat(\n            '%Y-%m-%d %H:%M:%S',\n            event.xAxis[0].min\n        ),\n        Highcharts.dateFormat(\n            '%Y-%m-%d %H:%M:%S',\n            event.xAxis[0].max\n        )\n    );\n    // log the min and max of the y axis\n    console.log(event.yAxis[0].min, event.yAxis[0].max);\n}\n```",
              "samples": [
                {
                  "name": "Report on selection and reset",
                  "value": "highcharts/chart/events-selection/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Select a range of points through a drag selection",
                  "value": "highcharts/chart/events-selection-points/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Report on selection and reset",
                  "value": "stock/chart/events-selection/",
                  "products": ["highstock"]
                },
                {
                  "name": "Select a range of points through a drag selection (Highcharts)",
                  "value": "highcharts/chart/events-selection-points/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["Highcharts.ChartSelectionCallbackFunction"] }
            },
            "meta": {
              "fullname": "chart.events.selection",
              "name": "selection",
              "line": 258,
              "lineEnd": 302,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsChartEventsOptions",
        "extended": 1
      },
      "height": {
        "doclet": {
          "description": "An explicit height for the chart. If a _number_, the height is\ngiven in pixels. If given a _percentage string_ (for example\n`'56%'`), the height is given as the percentage of the actual chart\nwidth. This allows for preserving the aspect ratio across responsive\nsizes.\n\nBy default (when `null`) the height is calculated from the offset\nheight of the containing element, or 400 pixels if the containing\nelement's height is 0.",
          "samples": [
            {
              "name": "Forced 200px height",
              "value": "highcharts/chart/height/",
              "products": ["highcharts"]
            },
            {
              "name": "300px height",
              "value": "stock/chart/height/",
              "products": ["highstock"]
            },
            {
              "name": "Chart with explicit size",
              "value": "maps/chart/size/",
              "products": ["highmaps"]
            },
            {
              "name": "Highcharts with percentage height",
              "value": "highcharts/chart/height-percent/"
            },
            {
              "name": "Chart with inherited height",
              "value": "highcharts/chart/height-inherited/"
            }
          ],
          "type": { "names": ["null", "number", "string"] },
          "defaultvalue": null
        },
        "meta": {
          "fullname": "chart.height",
          "name": "height",
          "line": 1148,
          "lineEnd": 1171,
          "column": 4,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "default": null
        },
        "children": {},
        "extended": 1
      },
      "ignoreHiddenSeries": {
        "doclet": {
          "description": "If true, the axes will scale to the remaining visible series once\none series is hidden. If false, hiding and showing a series will\nnot affect the axes or the other series. For stacks, once one series\nwithin the stack is hidden, the rest of the stack will close in\naround it even if the axis is not affected.",
          "samples": [
            {
              "name": "True by default",
              "value": "highcharts/chart/ignorehiddenseries-true/",
              "products": ["highcharts"]
            },
            {
              "name": "False",
              "value": "highcharts/chart/ignorehiddenseries-false/",
              "products": ["highcharts"]
            },
            {
              "name": "True with stack",
              "value": "highcharts/chart/ignorehiddenseries-true-stacked/",
              "products": ["highcharts"]
            },
            {
              "name": "True by default",
              "value": "stock/chart/ignorehiddenseries-true/",
              "products": ["highstock"]
            },
            {
              "name": "False",
              "value": "stock/chart/ignorehiddenseries-false/",
              "products": ["highstock"]
            }
          ],
          "since": "1.2.0",
          "products": ["highcharts", "highstock", "gantt"],
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "chart.ignoreHiddenSeries",
          "name": "ignoreHiddenSeries",
          "line": 543,
          "lineEnd": 563,
          "column": 4,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "inverted": {
        "doclet": {
          "description": "Whether to invert the axes so that the x axis is vertical and y axis\nis horizontal. When `true`, the x axis is [reversed](#xAxis.reversed)\nby default.",
          "productdesc": [
            {
              "value": "If a bar series is present in the chart, it will be inverted\nautomatically. Inverting the chart doesn't have an effect if there\nare no cartesian series in the chart.",
              "products": ["highcharts"]
            }
          ],
          "samples": [
            {
              "name": "Inverted line",
              "value": "highcharts/chart/inverted/",
              "products": ["highcharts"]
            },
            {
              "name": "Inverted stock chart",
              "value": "stock/navigator/inverted/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "chart.inverted",
          "name": "inverted",
          "line": 565,
          "lineEnd": 584,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "margin": {
        "doclet": {
          "description": "The margin between the outer edge of the chart and the plot area.\nThe numbers in the array designate top, right, bottom and left\nrespectively. Use the options `marginTop`, `marginRight`,\n`marginBottom` and `marginLeft` for shorthand setting of one option.\n\nBy default there is no margin. The actual space is dynamically\ncalculated from the offset of axis labels, axis title, title,\nsubtitle and legend in addition to the `spacingTop`, `spacingRight`,\n`spacingBottom` and `spacingLeft` options.",
          "samples": [
            {
              "name": "Zero margins",
              "value": "highcharts/chart/margins-zero/",
              "products": ["highcharts"]
            },
            {
              "name": "Zero margins",
              "value": "stock/chart/margin-zero/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number", "Array.<number>"] }
        },
        "meta": {
          "fullname": "chart.margin",
          "name": "margin",
          "line": 303,
          "lineEnd": 321,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "marginBottom": {
        "doclet": {
          "description": "The margin between the bottom outer edge of the chart and the plot\narea. Use this to set a fixed pixel value for the margin as opposed\nto the default dynamic margin. See also `spacingBottom`.",
          "samples": [
            {
              "name": "100px bottom margin",
              "value": "highcharts/chart/marginbottom/",
              "products": ["highcharts"]
            },
            {
              "name": "100px bottom margin",
              "value": "stock/chart/marginbottom/",
              "products": ["highstock"]
            },
            {
              "name": "100px margins",
              "value": "maps/chart/margin/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "chart.marginBottom",
          "name": "marginBottom",
          "line": 322,
          "lineEnd": 337,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "marginLeft": {
        "doclet": {
          "description": "The margin between the left outer edge of the chart and the plot\narea. Use this to set a fixed pixel value for the margin as opposed\nto the default dynamic margin. See also `spacingLeft`.",
          "samples": [
            {
              "name": "150px left margin",
              "value": "highcharts/chart/marginleft/",
              "products": ["highcharts"]
            },
            {
              "name": "150px left margin",
              "value": "stock/chart/marginleft/",
              "products": ["highstock"]
            },
            {
              "name": "100px margins",
              "value": "maps/chart/margin/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "chart.marginLeft",
          "name": "marginLeft",
          "line": 338,
          "lineEnd": 353,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "marginRight": {
        "doclet": {
          "description": "The margin between the right outer edge of the chart and the plot\narea. Use this to set a fixed pixel value for the margin as opposed\nto the default dynamic margin. See also `spacingRight`.",
          "samples": [
            {
              "name": "100px right margin",
              "value": "highcharts/chart/marginright/",
              "products": ["highcharts"]
            },
            {
              "name": "100px right margin",
              "value": "stock/chart/marginright/",
              "products": ["highstock"]
            },
            {
              "name": "100px margins",
              "value": "maps/chart/margin/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "chart.marginRight",
          "name": "marginRight",
          "line": 354,
          "lineEnd": 369,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "marginTop": {
        "doclet": {
          "description": "The margin between the top outer edge of the chart and the plot area.\nUse this to set a fixed pixel value for the margin as opposed to\nthe default dynamic margin. See also `spacingTop`.",
          "samples": [
            {
              "name": "100px top margin",
              "value": "highcharts/chart/margintop/",
              "products": ["highcharts"]
            },
            {
              "name": "100px top margin",
              "value": "stock/chart/margintop/",
              "products": ["highstock"]
            },
            {
              "name": "100px margins",
              "value": "maps/chart/margin/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "chart.marginTop",
          "name": "marginTop",
          "line": 370,
          "lineEnd": 384,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "numberFormatter": {
        "doclet": {
          "description": "Callback function to override the default function that formats all\nthe numbers in the chart. Returns a string with the formatted number.",
          "samples": [
            {
              "name": "Arabic digits in Highcharts",
              "value": "highcharts/members/highcharts-numberformat"
            }
          ],
          "type": { "names": ["Highcharts.NumberFormatterCallbackFunction"] },
          "since": "8.0.0"
        },
        "meta": {
          "fullname": "chart.numberFormatter",
          "name": "numberFormatter",
          "line": 385,
          "lineEnd": 394,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "options3d": {
        "doclet": {
          "description": "Options to render charts in 3 dimensions. This feature requires\n`highcharts-3d.js`, found in the download package or online at\n[code.highcharts.com/highcharts-3d.js](https://code.highcharts.com/highcharts-3d.js).",
          "since": "4.0.0",
          "products": ["highcharts"],
          "requires": ["module:highcharts-3d"],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "chart.options3d",
          "name": "options3d",
          "line": 44,
          "lineEnd": 52,
          "column": 12,
          "filename": "code/es-modules/Core/Chart/Chart3D.js"
        },
        "children": {
          "alpha": {
            "doclet": {
              "description": "One of the two rotation angles for the chart.",
              "since": "4.0.0",
              "products": ["highcharts"],
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "chart.options3d.alpha",
              "name": "alpha",
              "line": 61,
              "lineEnd": 66,
              "column": 16,
              "filename": "code/es-modules/Core/Chart/Chart3D.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "axisLabelPosition": {
            "doclet": {
              "description": "Set it to `\"auto\"` to automatically move the labels to the\nbest edge.",
              "type": { "names": ["\"auto\"", "null"] },
              "since": "5.0.12",
              "products": ["highcharts"],
              "defaultvalue": null
            },
            "meta": {
              "fullname": "chart.options3d.axisLabelPosition",
              "name": "axisLabelPosition",
              "line": 100,
              "lineEnd": 107,
              "column": 16,
              "filename": "code/es-modules/Core/Chart/Chart3D.js",
              "default": null
            },
            "children": {},
            "extended": 1
          },
          "beta": {
            "doclet": {
              "description": "One of the two rotation angles for the chart.",
              "since": "4.0.0",
              "products": ["highcharts"],
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "chart.options3d.beta",
              "name": "beta",
              "line": 68,
              "lineEnd": 73,
              "column": 16,
              "filename": "code/es-modules/Core/Chart/Chart3D.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "depth": {
            "doclet": {
              "description": "The total depth of the chart.",
              "since": "4.0.0",
              "products": ["highcharts"],
              "type": { "names": ["number"] },
              "defaultvalue": 100
            },
            "meta": {
              "fullname": "chart.options3d.depth",
              "name": "depth",
              "line": 75,
              "lineEnd": 80,
              "column": 16,
              "filename": "code/es-modules/Core/Chart/Chart3D.js",
              "default": 100
            },
            "children": {},
            "extended": 1
          },
          "enabled": {
            "doclet": {
              "description": "Whether to render the chart using the 3D functionality.",
              "since": "4.0.0",
              "products": ["highcharts"],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "chart.options3d.enabled",
              "name": "enabled",
              "line": 54,
              "lineEnd": 59,
              "column": 16,
              "filename": "code/es-modules/Core/Chart/Chart3D.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "fitToPlot": {
            "doclet": {
              "description": "Whether the 3d box should automatically adjust to the chart\nplot area.",
              "since": "4.2.4",
              "products": ["highcharts"],
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "chart.options3d.fitToPlot",
              "name": "fitToPlot",
              "line": 82,
              "lineEnd": 88,
              "column": 16,
              "filename": "code/es-modules/Core/Chart/Chart3D.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "frame": {
            "doclet": {
              "description": "Provides the option to draw a frame around the charts by\ndefining a bottom, front and back panel.",
              "since": "4.0.0",
              "products": ["highcharts"],
              "requires": ["module:highcharts-3d"],
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "chart.options3d.frame",
              "name": "frame",
              "line": 109,
              "lineEnd": 116,
              "column": 16,
              "filename": "code/es-modules/Core/Chart/Chart3D.js"
            },
            "children": {
              "back": {
                "doclet": {
                  "description": "The back side of the frame around a 3D chart.",
                  "extends": "chart.options3d.frame.bottom",
                  "since": "4.0.0"
                },
                "meta": {
                  "fullname": "chart.options3d.frame.back",
                  "name": "back",
                  "line": 188,
                  "lineEnd": 192,
                  "column": 20,
                  "filename": "code/es-modules/Core/Chart/Chart3D.js"
                },
                "children": { "color": {}, "size": {}, "visible": {} },
                "flutterClassName": "HighchartsChart3DFrameBackOptions",
                "extended": 1
              },
              "bottom": {
                "doclet": {
                  "description": "The bottom of the frame around a 3D chart.",
                  "since": "4.0.0",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "chart.options3d.frame.bottom",
                  "name": "bottom",
                  "line": 126,
                  "lineEnd": 132,
                  "column": 20,
                  "filename": "code/es-modules/Core/Chart/Chart3D.js"
                },
                "children": {
                  "color": {
                    "doclet": {
                      "description": "The color of the panel.",
                      "type": {
                        "names": [
                          "Highcharts.ColorString",
                          "Highcharts.GradientColorObject",
                          "Highcharts.PatternObject"
                        ]
                      },
                      "defaultvalue": "transparent",
                      "since": "4.0.0",
                      "products": ["highcharts"]
                    },
                    "meta": {
                      "fullname": "chart.options3d.frame.bottom.color",
                      "name": "color",
                      "line": 133,
                      "lineEnd": 141,
                      "filename": "code/es-modules/Core/Chart/Chart3D.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "size": {
                    "doclet": {
                      "description": "The thickness of the panel.",
                      "type": { "names": ["number"] },
                      "defaultvalue": "1",
                      "since": "4.0.0",
                      "products": ["highcharts"]
                    },
                    "meta": {
                      "fullname": "chart.options3d.frame.bottom.size",
                      "name": "size",
                      "line": 142,
                      "lineEnd": 150,
                      "filename": "code/es-modules/Core/Chart/Chart3D.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "visible": {
                    "doclet": {
                      "description": "Whether to display the frame. Possible values are `true`,\n`false`, `\"auto\"` to display only the frames behind the\ndata, and `\"default\"` to display faces behind the data\nbased on the axis layout, ignoring the point of view.",
                      "samples": [
                        {
                          "name": "Auto frames",
                          "value": "highcharts/3d/scatter-frame/",
                          "products": ["highcharts"]
                        }
                      ],
                      "type": {
                        "names": ["boolean", "\"default\"", "\"auto\""]
                      },
                      "defaultvalue": "default",
                      "since": "5.0.12",
                      "products": ["highcharts"]
                    },
                    "meta": {
                      "fullname": "chart.options3d.frame.bottom.visible",
                      "name": "visible",
                      "line": 151,
                      "lineEnd": 165,
                      "filename": "code/es-modules/Core/Chart/Chart3D.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsChart3DFrameBottomOptions",
                "extended": 1
              },
              "front": {
                "doclet": {
                  "description": "The front of the frame around a 3D chart.",
                  "extends": "chart.options3d.frame.bottom",
                  "since": "4.0.0"
                },
                "meta": {
                  "fullname": "chart.options3d.frame.front",
                  "name": "front",
                  "line": 194,
                  "lineEnd": 198,
                  "column": 20,
                  "filename": "code/es-modules/Core/Chart/Chart3D.js"
                },
                "children": { "color": {}, "size": {}, "visible": {} },
                "flutterClassName": "HighchartsChart3DFrameFrontOptions",
                "extended": 1
              },
              "left": {
                "doclet": {
                  "description": "The left side of the frame around a 3D chart.",
                  "extends": "chart.options3d.frame.bottom",
                  "since": "4.0.0"
                },
                "meta": {
                  "fullname": "chart.options3d.frame.left",
                  "name": "left",
                  "line": 176,
                  "lineEnd": 180,
                  "column": 20,
                  "filename": "code/es-modules/Core/Chart/Chart3D.js"
                },
                "children": { "color": {}, "size": {}, "visible": {} },
                "flutterClassName": "HighchartsChart3DFrameLeftOptions",
                "extended": 1
              },
              "right": {
                "doclet": {
                  "description": "The right of the frame around a 3D chart.",
                  "extends": "chart.options3d.frame.bottom",
                  "since": "4.0.0"
                },
                "meta": {
                  "fullname": "chart.options3d.frame.right",
                  "name": "right",
                  "line": 182,
                  "lineEnd": 186,
                  "column": 20,
                  "filename": "code/es-modules/Core/Chart/Chart3D.js"
                },
                "children": { "color": {}, "size": {}, "visible": {} },
                "flutterClassName": "HighchartsChart3DFrameRightOptions",
                "extended": 1
              },
              "side": {
                "doclet": {
                  "description": "Note: As of v5.0.12, `frame.left` or `frame.right` should be used instead.\n\nThe side for the frame around a 3D chart.",
                  "deprecated": true,
                  "since": "4.0.0",
                  "products": ["highcharts"],
                  "requires": ["module:highcharts-3d"],
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "chart.options3d.frame.side",
                  "name": "side",
                  "line": 1655,
                  "lineEnd": 1665,
                  "filename": "code/es-modules/Core/Chart/Chart3D.js",
                  "column": 0
                },
                "children": {
                  "color": {
                    "doclet": {
                      "description": "The color of the panel.",
                      "deprecated": true,
                      "type": {
                        "names": [
                          "Highcharts.ColorString",
                          "Highcharts.GradientColorObject",
                          "Highcharts.PatternObject"
                        ]
                      },
                      "defaultvalue": "transparent",
                      "since": "4.0.0",
                      "products": ["highcharts"]
                    },
                    "meta": {
                      "fullname": "chart.options3d.frame.side.color",
                      "name": "color",
                      "line": 1666,
                      "lineEnd": 1675,
                      "filename": "code/es-modules/Core/Chart/Chart3D.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "size": {
                    "doclet": {
                      "description": "The thickness of the panel.",
                      "deprecated": true,
                      "type": { "names": ["number"] },
                      "defaultvalue": "1",
                      "since": "4.0.0",
                      "products": ["highcharts"]
                    },
                    "meta": {
                      "fullname": "chart.options3d.frame.side.size",
                      "name": "size",
                      "line": 1676,
                      "lineEnd": 1685,
                      "filename": "code/es-modules/Core/Chart/Chart3D.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsChart3DFrameSideOptions",
                "extended": 1
              },
              "size": {
                "doclet": {
                  "description": "General pixel thickness for the frame faces.",
                  "since": "4.0.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 1
                },
                "meta": {
                  "fullname": "chart.options3d.frame.size",
                  "name": "size",
                  "line": 122,
                  "lineEnd": 124,
                  "column": 20,
                  "filename": "code/es-modules/Core/Chart/Chart3D.js",
                  "default": 1
                },
                "children": {},
                "extended": 1
              },
              "top": {
                "doclet": {
                  "description": "The top of the frame around a 3D chart.",
                  "extends": "chart.options3d.frame.bottom",
                  "since": "4.0.0"
                },
                "meta": {
                  "fullname": "chart.options3d.frame.top",
                  "name": "top",
                  "line": 170,
                  "lineEnd": 174,
                  "column": 20,
                  "filename": "code/es-modules/Core/Chart/Chart3D.js"
                },
                "children": { "color": {}, "size": {}, "visible": {} },
                "flutterClassName": "HighchartsChart3DFrameTopOptions",
                "extended": 1
              },
              "visible": {
                "doclet": {
                  "description": "Whether the frames are visible.",
                  "since": "4.0.0",
                  "type": { "names": ["string"] },
                  "defaultvalue": "default"
                },
                "meta": {
                  "fullname": "chart.options3d.frame.visible",
                  "name": "visible",
                  "line": 118,
                  "lineEnd": 120,
                  "column": 20,
                  "filename": "code/es-modules/Core/Chart/Chart3D.js",
                  "default": "default"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsChart3DFrameOptions",
            "extended": 1
          },
          "viewDistance": {
            "doclet": {
              "description": "Defines the distance the viewer is standing in front of the\nchart, this setting is important to calculate the perspective\neffect in column and scatter charts. It is not used for 3D\npie charts.",
              "since": "4.0.0",
              "products": ["highcharts"],
              "type": { "names": ["number"] },
              "defaultvalue": 25
            },
            "meta": {
              "fullname": "chart.options3d.viewDistance",
              "name": "viewDistance",
              "line": 90,
              "lineEnd": 98,
              "column": 16,
              "filename": "code/es-modules/Core/Chart/Chart3D.js",
              "default": 25
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsChart3DOptions",
        "extended": 1
      },
      "panKey": {
        "doclet": {
          "description": "Allows setting a key to switch between zooming and panning. Can be\none of `alt`, `ctrl`, `meta` (the command key on Mac and Windows\nkey on Windows) or `shift`. The keys are mapped directly to the key\nproperties of the click event argument (`event.altKey`,\n`event.ctrlKey`, `event.metaKey` and `event.shiftKey`).",
          "type": { "names": ["\"alt\"", "\"ctrl\"", "\"meta\"", "\"shift\""] },
          "since": "4.0.3",
          "products": ["highcharts", "gantt"]
        },
        "meta": {
          "fullname": "chart.panKey",
          "name": "panKey",
          "line": 419,
          "lineEnd": 431,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "panning": {
        "doclet": {
          "description": "Allow panning in a chart. Best used with [panKey](#chart.panKey)\nto combine zooming and panning.\n\nOn touch devices, when the [tooltip.followTouchMove](#tooltip.followTouchMove) option is `true` (default), panning\nrequires two fingers. To allow panning with one finger, set\n`followTouchMove` to `false`.",
          "samples": [
            {
              "name": "Zooming and panning",
              "value": "highcharts/chart/pankey/",
              "products": ["highcharts"]
            },
            {
              "name": "Zooming and xy panning",
              "value": "stock/chart/panning/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "chart.panning",
          "name": "panning",
          "line": 96,
          "lineEnd": 135,
          "column": 4,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js"
        },
        "children": {
          "enabled": {
            "doclet": {
              "description": "Enable or disable chart panning.",
              "type": { "names": ["boolean"] },
              "defaultByProduct": {
                "highcharts": false,
                "highstock": true,
                "highmaps": true
              },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "chart.panning.enabled",
              "name": "enabled",
              "line": 445,
              "lineEnd": 451,
              "column": 8,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "type": {
            "doclet": {
              "description": "Decides in what dimensions the user can pan the chart. Can be\none of `x`, `y`, or `xy`.\n\nDuring panning, all axes will behave as if\n[`startOnTick`](#yAxis.startOnTick) and\n[`endOnTick`](#yAxis.endOnTick) were set to `false`. After the\npanning action is finished, the axes will adjust to their actual\nsettings.",
              "samples": [
                {
                  "name": "Zooming and xy panning",
                  "value": "highcharts/chart/panning-type",
                  "products": ["highcharts"]
                }
              ],
              "declare": "Highcharts.OptionsChartPanningTypeValue",
              "type": { "names": ["\"x\"", "\"y\"", "\"xy\""] },
              "products": ["highcharts", "highstock", "gantt"],
              "defaultvalue": "x"
            },
            "meta": {
              "fullname": "chart.panning.type",
              "name": "type",
              "line": 453,
              "lineEnd": 470,
              "column": 8,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
              "default": "x"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsChartPanningOptions",
        "extended": 1
      },
      "parallelAxes": {
        "doclet": {
          "description": "Common options for all yAxes rendered in a parallel coordinates plot.\nThis feature requires `modules/parallel-coordinates.js`.\n\nThe default options are:\n```js\nparallelAxes: {\n   lineWidth: 1,       // classic mode only\n   gridlinesWidth: 0,  // classic mode only\n   title: {\n       text: '',\n       reserveSpace: false\n   },\n   labels: {\n       x: 0,\n       y: 0,\n       align: 'center',\n       reserveSpace: false\n   },\n   offset: 0\n}\n```",
          "samples": [
            {
              "name": "Set the same tickAmount for all yAxes",
              "value": "highcharts/parallel-coordinates/parallelaxes/",
              "products": ["highcharts"]
            }
          ],
          "extends": "yAxis",
          "since": "6.0.0",
          "products": ["highcharts"],
          "exclude": [
            "alternateGridColor",
            "breaks",
            "id",
            "gridLineColor",
            "gridLineDashStyle",
            "gridLineWidth",
            "minorGridLineColor",
            "minorGridLineDashStyle",
            "minorGridLineWidth",
            "plotBands",
            "plotLines",
            "angle",
            "gridLineInterpolation",
            "maxColor",
            "maxZoom",
            "minColor",
            "scrollbar",
            "stackLabels",
            "stops",
            ""
          ],
          "requires": ["module:modules/parallel-coordinates"]
        },
        "meta": {
          "fullname": "chart.parallelAxes",
          "name": "parallelAxes",
          "line": 38,
          "lineEnd": 73,
          "column": 4,
          "filename": "code/es-modules/Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js"
        },
        "children": {
          "labels": {
            "doclet": { "type": { "names": ["*"] }, "extends": "yAxis.labels" },
            "meta": {
              "fullname": "chart.parallelAxes.labels",
              "name": "labels",
              "line": 89,
              "lineEnd": 89,
              "column": 8,
              "filename": "code/es-modules/Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js"
            },
            "children": {
              "align": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "center"
                },
                "meta": {
                  "fullname": "chart.parallelAxes.labels.align",
                  "name": "align",
                  "line": 92,
                  "lineEnd": 92,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js",
                  "default": "center"
                },
                "children": {},
                "extended": 1
              },
              "reserveSpace": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "chart.parallelAxes.labels.reserveSpace",
                  "name": "reserveSpace",
                  "line": 93,
                  "lineEnd": 93,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "x": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "chart.parallelAxes.labels.x",
                  "name": "x",
                  "line": 90,
                  "lineEnd": 90,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 4
                },
                "meta": {
                  "fullname": "chart.parallelAxes.labels.y",
                  "name": "y",
                  "line": 91,
                  "lineEnd": 91,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js",
                  "default": 4
                },
                "children": {},
                "extended": 1
              },
              "distance": {},
              "allowOverlap": {},
              "autoRotation": {},
              "autoRotationLimit": {},
              "enabled": {},
              "format": {},
              "formatter": {},
              "maxStaggerLines": {},
              "overflow": {},
              "padding": {},
              "position3d": {},
              "rotation": {},
              "skew3d": {},
              "staggerLines": {},
              "step": {},
              "style": {},
              "useHTML": {},
              "zIndex": {}
            },
            "flutterClassName": "HighchartsChartParallelAxesLabelsOptions",
            "extended": 1
          },
          "lineWidth": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 1 },
            "meta": {
              "fullname": "chart.parallelAxes.lineWidth",
              "name": "lineWidth",
              "line": 75,
              "lineEnd": 75,
              "column": 8,
              "filename": "code/es-modules/Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "offset": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0 },
            "meta": {
              "fullname": "chart.parallelAxes.offset",
              "name": "offset",
              "line": 95,
              "lineEnd": 95,
              "column": 8,
              "filename": "code/es-modules/Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "title": {
            "doclet": {
              "description": "Titles for yAxes are taken from\n[xAxis.categories](#xAxis.categories). All options for `xAxis.labels`\napplies to parallel coordinates titles. For example, to style\ncategories, use [xAxis.labels.style](#xAxis.labels.style).",
              "exclude": [
                "align",
                "enabled",
                "margin",
                "offset",
                "position3d",
                "reserveSpace",
                "rotation",
                "skew3d",
                "style",
                "text",
                "useHTML",
                "x",
                "y"
              ],
              "since": "6.0.0",
              "type": { "names": ["*"] },
              "extends": "yAxis.title"
            },
            "meta": {
              "fullname": "chart.parallelAxes.title",
              "name": "title",
              "line": 76,
              "lineEnd": 84,
              "column": 8,
              "filename": "code/es-modules/Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js"
            },
            "children": {
              "reserveSpace": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "chart.parallelAxes.title.reserveSpace",
                  "name": "reserveSpace",
                  "line": 87,
                  "lineEnd": 87,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "text": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": ""
                },
                "meta": {
                  "fullname": "chart.parallelAxes.title.text",
                  "name": "text",
                  "line": 86,
                  "lineEnd": 86,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js",
                  "default": ""
                },
                "children": {},
                "extended": 1
              },
              "textAlign": {}
            },
            "flutterClassName": "HighchartsChartParallelAxesTitleOptions",
            "extended": 1
          },
          "endOnTick": {},
          "height": {},
          "max": {},
          "maxPadding": {},
          "min": {},
          "minPadding": {},
          "opposite": {},
          "reversed": {},
          "reversedStacks": {},
          "showLastLabel": {},
          "softMax": {},
          "softMin": {},
          "stackShadow": {},
          "startOnTick": {},
          "tickPixelInterval": {},
          "tickWidth": {},
          "tooltipValueFormat": {},
          "top": {},
          "type": {},
          "accessibility": {},
          "alignTicks": {},
          "allowDecimals": {},
          "categories": {},
          "ceiling": {},
          "className": {},
          "crosshair": {},
          "crossing": {},
          "dateTimeLabelFormats": {},
          "events": {},
          "floor": {},
          "gridZIndex": {},
          "left": {},
          "lineColor": {},
          "linkedTo": {},
          "margin": {},
          "minRange": {},
          "minTickInterval": {},
          "minorTickColor": {},
          "minorTickInterval": {},
          "minorTickLength": {},
          "minorTickPosition": {},
          "minorTickWidth": {},
          "minorTicks": {},
          "minorTicksPerMajor": {},
          "pane": {},
          "panningEnabled": {},
          "showEmpty": {},
          "showFirstLabel": {},
          "startOfWeek": {},
          "tickAmount": {},
          "tickColor": {},
          "tickInterval": {},
          "tickLength": {},
          "tickPosition": {},
          "tickPositioner": {},
          "tickPositions": {},
          "tickmarkPlacement": {},
          "uniqueNames": {},
          "units": {},
          "visible": {},
          "width": {},
          "zIndex": {},
          "zoomEnabled": {}
        },
        "flutterClassName": "HighchartsChartParallelAxesOptions",
        "extended": 1
      },
      "parallelCoordinates": {
        "doclet": {
          "description": "Flag to render charts as a parallel coordinates plot. In a parallel\ncoordinates plot (||-coords) by default all required yAxes are generated\nand the legend is disabled. This feature requires\n`modules/parallel-coordinates.js`.",
          "samples": [
            {
              "name": "Parallel coordinates demo",
              "value": "/highcharts/demo/parallel-coordinates/",
              "products": ["highcharts"]
            },
            {
              "name": "Star plot, multivariate data in a polar chart",
              "value": "highcharts/parallel-coordinates/polar/",
              "products": ["highcharts"]
            }
          ],
          "since": "6.0.0",
          "products": ["highcharts"],
          "requires": ["module:modules/parallel-coordinates"],
          "type": { "names": ["boolean"] },
          "defaultvalue": false
        },
        "meta": {
          "fullname": "chart.parallelCoordinates",
          "name": "parallelCoordinates",
          "line": 22,
          "lineEnd": 36,
          "column": 4,
          "filename": "code/es-modules/Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js",
          "default": false
        },
        "children": {},
        "extended": 1
      },
      "pinchType": {
        "doclet": {
          "description": "Equivalent to [zoomType](#chart.zoomType), but for multitouch\ngestures only. By default, the `pinchType` is the same as the\n`zoomType` setting. However, pinching can be enabled separately in\nsome cases, for example in stock charts where a mouse drag pans the\nchart, while pinching is enabled. When [tooltip.followTouchMove](#tooltip.followTouchMove) is true, pinchType only applies to\ntwo-finger touches.",
          "type": { "names": ["\"x\"", "\"y\"", "\"xy\""] },
          "defaultByProduct": {
            "highcharts": "undefined",
            "highstock": "undefined"
          },
          "since": "3.0.0",
          "products": ["highcharts", "highstock", "gantt"],
          "deprecated": true
        },
        "meta": {
          "fullname": "chart.pinchType",
          "name": "pinchType",
          "line": 473,
          "lineEnd": 490,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "plotBackgroundColor": {
        "doclet": {
          "description": "The background color or gradient for the plot area.",
          "see": [
            "In styled mode, the plot background is set with the\n     `.highcharts-plot-background` class."
          ],
          "samples": [
            {
              "name": "Color",
              "value": "highcharts/chart/plotbackgroundcolor-color/",
              "products": ["highcharts"]
            },
            {
              "name": "Gradient",
              "value": "highcharts/chart/plotbackgroundcolor-gradient/",
              "products": ["highcharts"]
            },
            {
              "name": "Color",
              "value": "stock/chart/plotbackgroundcolor-color/",
              "products": ["highstock"]
            },
            {
              "name": "Gradient",
              "value": "stock/chart/plotbackgroundcolor-gradient/",
              "products": ["highstock"]
            },
            {
              "name": "Color",
              "value": "maps/chart/plotbackgroundcolor-color/",
              "products": ["highmaps"]
            },
            {
              "name": "Gradient",
              "value": "maps/chart/plotbackgroundcolor-gradient/",
              "products": ["highmaps"]
            }
          ],
          "type": {
            "names": [
              "Highcharts.ColorString",
              "Highcharts.GradientColorObject",
              "Highcharts.PatternObject"
            ]
          }
        },
        "meta": {
          "fullname": "chart.plotBackgroundColor",
          "name": "plotBackgroundColor",
          "line": 1228,
          "lineEnd": 1249,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "plotBackgroundImage": {
        "doclet": {
          "description": "The URL for an image to use as the plot background. To set an image\nas the background for the entire chart, set a CSS background image\nto the container element. Note that for the image to be applied to\nexported charts, its URL needs to be accessible by the export server.",
          "see": [
            "In styled mode, a plot background image can be set with the\n     `.highcharts-plot-background` class and a [custom pattern](\n     https://www.highcharts.com/docs/chart-design-and-style/gradients-shadows-and-patterns)."
          ],
          "samples": [
            {
              "name": "Skies",
              "value": "highcharts/chart/plotbackgroundimage/",
              "products": ["highcharts"]
            },
            {
              "name": "Skies",
              "value": "stock/chart/plotbackgroundimage/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["string"] }
        },
        "meta": {
          "fullname": "chart.plotBackgroundImage",
          "name": "plotBackgroundImage",
          "line": 1250,
          "lineEnd": 1267,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "plotBorderColor": {
        "doclet": {
          "description": "The color of the inner chart or plot area border.",
          "see": [
            "In styled mode, a plot border stroke can be set with the\n     `.highcharts-plot-border` class."
          ],
          "samples": [
            {
              "name": "Blue border",
              "value": "highcharts/chart/plotbordercolor/",
              "products": ["highcharts"]
            },
            {
              "name": "Blue border",
              "value": "stock/chart/plotborder/",
              "products": ["highstock"]
            },
            {
              "name": "Plot border options",
              "value": "maps/chart/plotborder/",
              "products": ["highmaps"]
            }
          ],
          "type": {
            "names": [
              "Highcharts.ColorString",
              "Highcharts.GradientColorObject",
              "Highcharts.PatternObject"
            ]
          },
          "defaultvalue": "#cccccc"
        },
        "meta": {
          "fullname": "chart.plotBorderColor",
          "name": "plotBorderColor",
          "line": 1228,
          "lineEnd": 1249,
          "column": 4,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "default": "#cccccc"
        },
        "children": {},
        "extended": 1
      },
      "plotBorderWidth": {
        "doclet": {
          "description": "The pixel width of the plot area border.",
          "samples": [
            {
              "name": "1px border",
              "value": "highcharts/chart/plotborderwidth/",
              "products": ["highcharts"]
            },
            {
              "name": "2px border",
              "value": "stock/chart/plotborder/",
              "products": ["highstock"]
            },
            {
              "name": "Plot border options",
              "value": "maps/chart/plotborder/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "0"
        },
        "meta": {
          "fullname": "chart.plotBorderWidth",
          "name": "plotBorderWidth",
          "line": 680,
          "lineEnd": 693,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "plotShadow": {
        "doclet": {
          "description": "Whether to apply a drop shadow to the plot area. Requires that\nplotBackgroundColor be set. The shadow can be an object configuration\ncontaining `color`, `offsetX`, `offsetY`, `opacity` and `width`.",
          "samples": [
            {
              "name": "Plot shadow",
              "value": "highcharts/chart/plotshadow/",
              "products": ["highcharts"]
            },
            {
              "name": "Plot shadow",
              "value": "stock/chart/plotshadow/",
              "products": ["highstock"]
            },
            {
              "name": "Plot border options",
              "value": "maps/chart/plotborder/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["boolean", "Highcharts.ShadowOptionsObject"] },
          "defaultvalue": "false"
        },
        "meta": {
          "fullname": "chart.plotShadow",
          "name": "plotShadow",
          "line": 694,
          "lineEnd": 709,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "polar": {
        "doclet": {
          "description": "When true, cartesian charts like line, spline, area and column are\ntransformed into the polar coordinate system. This produces _polar\ncharts_, also known as _radar charts_.",
          "samples": [
            {
              "name": "Polar chart",
              "value": "highcharts/demo/polar/",
              "products": ["highcharts"]
            },
            {
              "name": "Wind rose, stacked polar column chart",
              "value": "highcharts/demo/polar-wind-rose/",
              "products": ["highcharts"]
            },
            {
              "name": "Spider web chart",
              "value": "highcharts/demo/polar-spider/",
              "products": ["highcharts"]
            },
            {
              "name": "Star plot, multivariate data in a polar chart",
              "value": "highcharts/parallel-coordinates/polar/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "2.3.0",
          "products": ["highcharts"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "fullname": "chart.polar",
          "name": "polar",
          "line": 710,
          "lineEnd": 730,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "reflow": {
        "doclet": {
          "description": "Whether to reflow the chart to fit the width of the container div\non resizing the window.",
          "samples": [
            {
              "name": "True by default",
              "value": "highcharts/chart/reflow-true/",
              "products": ["highcharts"]
            },
            {
              "name": "False",
              "value": "highcharts/chart/reflow-false/",
              "products": ["highcharts"]
            },
            {
              "name": "True by default",
              "value": "stock/chart/reflow-true/",
              "products": ["highstock"]
            },
            {
              "name": "False",
              "value": "stock/chart/reflow-false/",
              "products": ["highstock"]
            },
            {
              "name": "True by default",
              "value": "maps/chart/reflow-true/",
              "products": ["highmaps"]
            },
            {
              "name": "False",
              "value": "maps/chart/reflow-false/",
              "products": ["highmaps"]
            }
          ],
          "since": "2.1.0",
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "chart.reflow",
          "name": "reflow",
          "line": 680,
          "lineEnd": 693,
          "column": 4,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "renderTo": {
        "doclet": {
          "description": "The HTML element where the chart will be rendered. If it is a string,\nthe element by that id is used. The HTML element can also be passed\nby direct reference, or as the first argument of the chart\nconstructor, in which case the option is not needed.",
          "samples": [
            {
              "name": "String",
              "value": "highcharts/chart/reflow-true/",
              "products": ["highcharts"]
            },
            {
              "name": "Object reference",
              "value": "highcharts/chart/renderto-object/",
              "products": ["highcharts"]
            },
            {
              "name": "String",
              "value": "stock/chart/renderto-string/",
              "products": ["highstock"]
            },
            {
              "name": "Object reference",
              "value": "stock/chart/renderto-object/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["string", "Highcharts.HTMLDOMElement"] }
        },
        "meta": {
          "fullname": "chart.renderTo",
          "name": "renderTo",
          "line": 751,
          "lineEnd": 768,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "resetZoomButton": {
        "doclet": {
          "description": "The button that appears after a selection zoom, allowing the user\nto reset zoom. This option is deprecated in favor of\n[zooming](#chart.zooming).",
          "since": "2.2.0",
          "deprecated": "10.2.1",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "chart.resetZoomButton",
          "name": "resetZoomButton",
          "line": 598,
          "lineEnd": 605,
          "column": 4,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js"
        },
        "children": {
          "position": {
            "doclet": {
              "description": "The position of the button.",
              "samples": [
                {
                  "name": "Above the plot area",
                  "value": "highcharts/chart/resetzoombutton-position/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Above the plot area",
                  "value": "highcharts/chart/resetzoombutton-position/",
                  "products": ["highstock"]
                },
                {
                  "name": "Above the plot area",
                  "value": "highcharts/chart/resetzoombutton-position/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["Highcharts.AlignObject"] },
              "since": "2.2.0",
              "deprecated": "10.2.1"
            },
            "meta": {
              "fullname": "chart.resetZoomButton.position",
              "name": "position",
              "line": 641,
              "lineEnd": 652,
              "column": 8,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js"
            },
            "children": {
              "align": {
                "doclet": {
                  "description": "The horizontal alignment of the button.",
                  "type": { "names": ["number"] },
                  "since": "2.2.0",
                  "deprecated": "10.2.1"
                },
                "meta": {
                  "fullname": "chart.resetZoomButton.position.align",
                  "name": "align",
                  "line": 654,
                  "lineEnd": 659,
                  "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "description": "The vertical alignment of the button.",
                  "type": { "names": ["Highcharts.VerticalAlignValue"] },
                  "since": "2.2.0",
                  "deprecated": "10.2.1"
                },
                "meta": {
                  "fullname": "chart.resetZoomButton.position.verticalAlign",
                  "name": "verticalAlign",
                  "line": 666,
                  "lineEnd": 671,
                  "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "x": {
                "doclet": {
                  "description": "The horizontal offset of the button.",
                  "type": { "names": ["number"] },
                  "since": "2.2.0",
                  "deprecated": "10.2.1"
                },
                "meta": {
                  "fullname": "chart.resetZoomButton.position.x",
                  "name": "x",
                  "line": 660,
                  "lineEnd": 665,
                  "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "description": "The vertical offset of the button.",
                  "type": { "names": ["number"] },
                  "since": "2.2.0",
                  "deprecated": "10.2.1"
                },
                "meta": {
                  "fullname": "chart.resetZoomButton.position.y",
                  "name": "y",
                  "line": 672,
                  "lineEnd": 677,
                  "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsChartResetZoomButtonPositionOptions",
            "extended": 1
          },
          "relativeTo": {
            "doclet": {
              "description": "What frame the button placement should be related to. Can be\neither `plotBox` or `spacingBox`.",
              "samples": [
                {
                  "name": "Relative to the chart",
                  "value": "highcharts/chart/resetzoombutton-relativeto/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Relative to the chart",
                  "value": "highcharts/chart/resetzoombutton-relativeto/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["Highcharts.ButtonRelativeToValue"] },
              "since": "2.2.0",
              "deprecated": "10.2.1"
            },
            "meta": {
              "fullname": "chart.resetZoomButton.relativeTo",
              "name": "relativeTo",
              "line": 607,
              "lineEnd": 618,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "theme": {
            "doclet": {
              "description": "A collection of attributes for the button. The object takes SVG\nattributes like `fill`, `stroke`, `stroke-width` or `r`, the\nborder radius. The theme also supports `style`, a collection of\nCSS properties for the text. Equivalent attributes for the hover\nstate are given in `theme.states.hover`.",
              "samples": [
                {
                  "name": "Theming the button",
                  "value": "highcharts/chart/resetzoombutton-theme/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Theming the button",
                  "value": "highcharts/chart/resetzoombutton-theme/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["Highcharts.SVGAttributes"] },
              "since": "2.2.0",
              "deprecated": "10.2.1"
            },
            "meta": {
              "fullname": "chart.resetZoomButton.theme",
              "name": "theme",
              "line": 607,
              "lineEnd": 618,
              "column": 8,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js"
            },
            "children": {
              "zIndex": {
                "doclet": {
                  "description": "The z-index of the button.",
                  "type": { "names": ["number"] },
                  "since": "2.2.0",
                  "deprecated": "10.2.1"
                },
                "meta": {
                  "fullname": "chart.resetZoomButton.theme.zIndex",
                  "name": "zIndex",
                  "line": 634,
                  "lineEnd": 639,
                  "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsChartResetZoomButtonThemeOptions",
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsChartResetZoomButtonOptions",
        "extended": 1
      },
      "scrollablePlotArea": {
        "doclet": {
          "description": "Options for a scrollable plot area. This feature provides a minimum size for\nthe plot area of the chart. If the size gets smaller than this, typically\non mobile devices, a native browser scrollbar is presented. This scrollbar\nprovides smooth scrolling for the contents of the plot area, whereas the\ntitle, legend and unaffected axes are fixed.\n\nSince v7.1.2, a scrollable plot area can be defined for either horizontal or\nvertical scrolling, depending on whether the `minWidth` or `minHeight`\noption is set.",
          "samples": [
            {
              "name": "Scrollable plot area",
              "value": "highcharts/chart/scrollable-plotarea"
            },
            {
              "name": "Vertically scrollable plot area",
              "value": "highcharts/chart/scrollable-plotarea-vertical"
            },
            {
              "name": "Gantt chart with vertically scrollable plot area",
              "value": "gantt/chart/scrollable-plotarea-vertical",
              "products": ["gantt"]
            }
          ],
          "since": "6.1.0",
          "products": ["highcharts", "gantt"],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "chart.scrollablePlotArea",
          "name": "scrollablePlotArea",
          "line": 308,
          "lineEnd": 329,
          "filename": "code/es-modules/Extensions/ScrollablePlotArea.js",
          "column": 0
        },
        "children": {
          "minHeight": {
            "doclet": {
              "description": "The minimum height for the plot area. If it gets smaller than this, the plot\narea will become scrollable.",
              "type": { "names": ["number"] },
              "since": "7.1.2"
            },
            "meta": {
              "fullname": "chart.scrollablePlotArea.minHeight",
              "name": "minHeight",
              "line": 330,
              "lineEnd": 337,
              "filename": "code/es-modules/Extensions/ScrollablePlotArea.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "minWidth": {
            "doclet": {
              "description": "The minimum width for the plot area. If it gets smaller than this, the plot\narea will become scrollable.",
              "type": { "names": ["number"] },
              "since": "6.1.0"
            },
            "meta": {
              "fullname": "chart.scrollablePlotArea.minWidth",
              "name": "minWidth",
              "line": 338,
              "lineEnd": 345,
              "filename": "code/es-modules/Extensions/ScrollablePlotArea.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "opacity": {
            "doclet": {
              "description": "The opacity of mask applied on one of the sides of the plot\narea.",
              "samples": [
                {
                  "name": "Disabled opacity for the mask",
                  "value": "highcharts/chart/scrollable-plotarea-opacity",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "0.85",
              "since": "7.1.1"
            },
            "meta": {
              "fullname": "chart.scrollablePlotArea.opacity",
              "name": "opacity",
              "line": 363,
              "lineEnd": 374,
              "filename": "code/es-modules/Extensions/ScrollablePlotArea.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "scrollPositionX": {
            "doclet": {
              "description": "The initial scrolling position of the scrollable plot area. Ranges from 0 to\n1, where 0 aligns the plot area to the left and 1 aligns it to the right.\nTypically we would use 1 if the chart has right aligned Y axes.",
              "type": { "names": ["number"] },
              "since": "6.1.0"
            },
            "meta": {
              "fullname": "chart.scrollablePlotArea.scrollPositionX",
              "name": "scrollPositionX",
              "line": 346,
              "lineEnd": 354,
              "filename": "code/es-modules/Extensions/ScrollablePlotArea.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "scrollPositionY": {
            "doclet": {
              "description": "The initial scrolling position of the scrollable plot area. Ranges from 0 to\n1, where 0 aligns the plot area to the top and 1 aligns it to the bottom.",
              "type": { "names": ["number"] },
              "since": "7.1.2"
            },
            "meta": {
              "fullname": "chart.scrollablePlotArea.scrollPositionY",
              "name": "scrollPositionY",
              "line": 355,
              "lineEnd": 362,
              "filename": "code/es-modules/Extensions/ScrollablePlotArea.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsChartScrollablePlotAreaOptions",
        "extended": 1
      },
      "selectionMarkerFill": {
        "doclet": {
          "description": "The background color of the marker square when selecting (zooming\nin on) an area of the chart.",
          "see": [
            "In styled mode, the selection marker fill is set with the\n     `.highcharts-selection-marker` class."
          ],
          "type": {
            "names": [
              "Highcharts.ColorString",
              "Highcharts.GradientColorObject",
              "Highcharts.PatternObject"
            ]
          },
          "defaultvalue": "rgba(51,92,173,0.25)",
          "since": "2.1.7"
        },
        "meta": {
          "fullname": "chart.selectionMarkerFill",
          "name": "selectionMarkerFill",
          "line": 769,
          "lineEnd": 780,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "shadow": {
        "doclet": {
          "description": "Whether to apply a drop shadow to the outer chart area. Requires\nthat backgroundColor be set. The shadow can be an object\nconfiguration containing `color`, `offsetX`, `offsetY`, `opacity` and\n`width`.",
          "samples": [
            {
              "name": "Shadow",
              "value": "highcharts/chart/shadow/",
              "products": ["highcharts"]
            },
            {
              "name": "Shadow",
              "value": "stock/chart/shadow/",
              "products": ["highstock"]
            },
            {
              "name": "Chart border and shadow",
              "value": "maps/chart/border/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["boolean", "Highcharts.ShadowOptionsObject"] },
          "defaultvalue": "false"
        },
        "meta": {
          "fullname": "chart.shadow",
          "name": "shadow",
          "line": 781,
          "lineEnd": 793,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "showAxes": {
        "doclet": {
          "description": "Whether to show the axes initially. This only applies to empty charts\nwhere series are added dynamically, as axes are automatically added\nto cartesian series.",
          "samples": [
            {
              "name": "False by default",
              "value": "highcharts/chart/showaxes-false/",
              "products": ["highcharts"]
            },
            {
              "name": "True",
              "value": "highcharts/chart/showaxes-true/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["boolean"] },
          "since": "1.2.5",
          "products": ["highcharts", "gantt"]
        },
        "meta": {
          "fullname": "chart.showAxes",
          "name": "showAxes",
          "line": 811,
          "lineEnd": 825,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "spacing": {
        "doclet": {
          "description": "The distance between the outer edge of the chart and the content,\nlike title or legend, or axis title and labels if present. The\nnumbers in the array designate top, right, bottom and left\nrespectively. Use the options spacingTop, spacingRight, spacingBottom\nand spacingLeft options for shorthand setting of one option.",
          "type": { "names": ["Array.<number>"] },
          "see": ["[chart.margin](#chart.margin)"],
          "defaultvalue": "[10, 10, 15, 10]",
          "since": "3.0.6"
        },
        "meta": {
          "fullname": "chart.spacing",
          "name": "spacing",
          "line": 565,
          "lineEnd": 584,
          "column": 4,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js"
        },
        "children": {},
        "extended": 1
      },
      "spacingBottom": {
        "doclet": {
          "description": "The space between the bottom edge of the chart and the content (plot\narea, axis title and labels, title, subtitle or legend in top\nposition).",
          "samples": [
            {
              "name": "Spacing bottom set to 100",
              "value": "highcharts/chart/spacingbottom/",
              "products": ["highcharts"]
            },
            {
              "name": "Spacing bottom set to 100",
              "value": "stock/chart/spacingbottom/",
              "products": ["highstock"]
            },
            {
              "name": "Spacing 100 all around",
              "value": "maps/chart/spacing/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "15",
          "since": "2.1.0"
        },
        "meta": {
          "fullname": "chart.spacingBottom",
          "name": "spacingBottom",
          "line": 826,
          "lineEnd": 842,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "spacingLeft": {
        "doclet": {
          "description": "The space between the left edge of the chart and the content (plot\narea, axis title and labels, title, subtitle or legend in top\nposition).",
          "samples": [
            {
              "name": "Spacing left set to 100",
              "value": "highcharts/chart/spacingleft/",
              "products": ["highcharts"]
            },
            {
              "name": "Spacing left set to 100",
              "value": "stock/chart/spacingleft/",
              "products": ["highstock"]
            },
            {
              "name": "Spacing 100 all around",
              "value": "maps/chart/spacing/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "10",
          "since": "2.1.0"
        },
        "meta": {
          "fullname": "chart.spacingLeft",
          "name": "spacingLeft",
          "line": 843,
          "lineEnd": 859,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "spacingRight": {
        "doclet": {
          "description": "The space between the right edge of the chart and the content (plot\narea, axis title and labels, title, subtitle or legend in top\nposition).",
          "samples": [
            {
              "name": "Spacing set to 100",
              "value": "highcharts/chart/spacingright-100/",
              "products": ["highcharts"]
            },
            {
              "name": "Legend in right position with default spacing",
              "value": "highcharts/chart/spacingright-legend/",
              "products": ["highcharts"]
            },
            {
              "name": "Spacing set to 100",
              "value": "stock/chart/spacingright/",
              "products": ["highstock"]
            },
            {
              "name": "Spacing 100 all around",
              "value": "maps/chart/spacing/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "10",
          "since": "2.1.0"
        },
        "meta": {
          "fullname": "chart.spacingRight",
          "name": "spacingRight",
          "line": 860,
          "lineEnd": 878,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "spacingTop": {
        "doclet": {
          "description": "The space between the top edge of the chart and the content (plot\narea, axis title and labels, title, subtitle or legend in top\nposition).",
          "samples": [
            {
              "name": "A top spacing of 100",
              "value": "highcharts/chart/spacingtop-100/",
              "products": ["highcharts"]
            },
            {
              "name": "Floating chart title makes the plot area align to the default spacingTop of 10.",
              "value": "highcharts/chart/spacingtop-10/",
              "products": ["highcharts"]
            },
            {
              "name": "A top spacing of 100",
              "value": "stock/chart/spacingtop/",
              "products": ["highstock"]
            },
            {
              "name": "Spacing 100 all around",
              "value": "maps/chart/spacing/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "10",
          "since": "2.1.0"
        },
        "meta": {
          "fullname": "chart.spacingTop",
          "name": "spacingTop",
          "line": 879,
          "lineEnd": 898,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "style": {
        "doclet": {
          "description": "Additional CSS styles to apply inline to the container `div` and the root\nSVG.\n\nAccording to the CSS syntax documentation, it is recommended to quote\nfont family names that contain white space, digits, or punctuation\ncharacters other than hyphens. In such cases, wrap the fontFamily\nname as follows: `fontFamily: '\"Font name\"'`.\n\nSince v11, the root font size is 1rem by default, and all child element\nare given a relative `em` font size by default. This allows implementers\nto control all the chart's font sizes by only setting the root level.",
          "see": [
            "In styled mode, general chart styles can be set with the\n        `.highcharts-root` class."
          ],
          "samples": [
            {
              "name": "Using a serif type font",
              "value": "highcharts/chart/style-serif-font/",
              "products": ["highcharts"]
            },
            {
              "name": "Using a font with special character in name",
              "value": "highcharts/chart/style-special-font/",
              "products": ["highcharts"]
            },
            {
              "name": "Relative font sizes",
              "value": "highcharts/members/relative-font-size/",
              "products": ["highcharts"]
            },
            {
              "name": "Styled mode with relative font sizes",
              "value": "highcharts/css/em/",
              "products": ["highcharts"]
            },
            {
              "name": "Using a serif type font",
              "value": "stock/chart/style/",
              "products": ["highstock"]
            },
            {
              "name": "Using a serif type font",
              "value": "maps/chart/style-serif-font/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["Highcharts.CSSObject"] },
          "defaultvalue": "{\"fontFamily\": \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', sans-serif\", \"fontSize\":\"1rem\"}"
        },
        "meta": {
          "fullname": "chart.style",
          "name": "style",
          "line": 899,
          "lineEnd": 930,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "styledMode": {
        "doclet": {
          "description": "Whether to apply styled mode. When in styled mode, no presentational\nattributes or CSS are applied to the chart SVG. Instead, CSS rules\nare required to style the chart. The default style sheet is\navailable from `https://code.highcharts.com/css/highcharts.css`.\n\n[Read more in the docs](https://www.highcharts.com/docs/chart-design-and-style/style-by-css)\non what classes and variables are available.",
          "samples": [
            {
              "name": "Color theming with CSS",
              "value": "highcharts/css/colors"
            },
            {
              "name": "Dynamic theme based on system settings",
              "value": "highcharts/css/prefers-color-scheme"
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "7.0.0"
        },
        "meta": {
          "fullname": "chart.styledMode",
          "name": "styledMode",
          "line": 491,
          "lineEnd": 508,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "type": {
        "doclet": {
          "description": "The default series type for the chart. Can be any of the chart types\nlisted under [plotOptions](#plotOptions) and [series](#series) or can\nbe a series provided by an additional module.\n\nIn TypeScript this option has no effect in sense of typing and\ninstead the `type` option must always be set in the series.",
          "samples": [
            {
              "name": "Bar",
              "value": "highcharts/chart/type-bar/",
              "products": ["highcharts"]
            },
            {
              "name": "Areaspline",
              "value": "stock/chart/type/",
              "products": ["highstock"]
            },
            {
              "name": "Mapline",
              "value": "maps/chart/type-mapline/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["string"] },
          "defaultByProduct": {
            "highcharts": "line",
            "highstock": "line",
            "highmaps": "map"
          },
          "since": "2.1.0"
        },
        "meta": {
          "fullname": "chart.type",
          "name": "type",
          "line": 931,
          "lineEnd": 952,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "width": {
        "doclet": {
          "description": "An explicit width for the chart. By default (when `null`) the width\nis calculated from the offset width of the containing element.",
          "samples": [
            {
              "name": "800px wide",
              "value": "highcharts/chart/width/",
              "products": ["highcharts"]
            },
            {
              "name": "800px wide",
              "value": "stock/chart/width/",
              "products": ["highstock"]
            },
            {
              "name": "Chart with explicit size",
              "value": "maps/chart/size/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["null", "number", "string"] },
          "defaultvalue": null
        },
        "meta": {
          "fullname": "chart.width",
          "name": "width",
          "line": 1134,
          "lineEnd": 1146,
          "column": 4,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "default": null
        },
        "children": {},
        "extended": 1
      },
      "zoomKey": {
        "doclet": {
          "description": "Set a key to hold when dragging to zoom the chart. This is useful to\navoid zooming while moving points. Should be set different than\n[chart.panKey](#chart.panKey).",
          "type": { "names": ["\"alt\"", "\"ctrl\"", "\"meta\"", "\"shift\""] },
          "since": "6.2.0",
          "deprecated": true,
          "requires": ["module:modules/draggable-points"]
        },
        "meta": {
          "fullname": "chart.zoomKey",
          "name": "zoomKey",
          "line": 161,
          "lineEnd": 172,
          "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "zoomType": {
        "doclet": {
          "description": "Decides in what dimensions the user can zoom by dragging the mouse.\nCan be one of `x`, `y` or `xy`.",
          "see": ["[panKey](#chart.panKey)"],
          "samples": [
            {
              "name": "None by default",
              "value": "highcharts/chart/zoomtype-none/",
              "products": ["highcharts"]
            },
            {
              "name": "X",
              "value": "highcharts/chart/zoomtype-x/",
              "products": ["highcharts"]
            },
            {
              "name": "Y",
              "value": "highcharts/chart/zoomtype-y/",
              "products": ["highcharts"]
            },
            {
              "name": "Xy",
              "value": "highcharts/chart/zoomtype-xy/",
              "products": ["highcharts"]
            },
            {
              "name": "Zoom on polar chart",
              "value": "highcharts/chart/zoomtype-polar/",
              "products": ["highcharts"]
            },
            {
              "name": "None by default",
              "value": "stock/demo/basic-line/",
              "products": ["highstock"]
            },
            {
              "name": "X",
              "value": "stock/chart/zoomtype-x/",
              "products": ["highstock"]
            },
            {
              "name": "Y",
              "value": "stock/chart/zoomtype-y/",
              "products": ["highstock"]
            },
            {
              "name": "Xy",
              "value": "stock/chart/zoomtype-xy/",
              "products": ["highstock"]
            },
            {
              "name": "Map with selection zoom",
              "value": "maps/chart/zoomtype-xy/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["\"x\"", "\"y\"", "\"xy\""] },
          "deprecated": true
        },
        "meta": {
          "fullname": "chart.zoomType",
          "name": "zoomType",
          "line": 954,
          "lineEnd": 985,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "zooming": {
        "doclet": {
          "description": "Chart zooming options.",
          "since": "10.2.1",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "chart.zooming",
          "name": "zooming",
          "line": 954,
          "lineEnd": 985,
          "column": 4,
          "filename": "code/es-modules/Core/Chart/ChartDefaults.js"
        },
        "children": {
          "key": {
            "doclet": {
              "description": "Set a key to hold when dragging to zoom the chart. This is useful to\navoid zooming while moving points. Should be set different than\n[chart.panKey](#chart.panKey).",
              "type": {
                "names": ["\"alt\"", "\"ctrl\"", "\"meta\"", "\"shift\""]
              },
              "defaultByProduct": { "highcharts": "undefined" },
              "requires": ["module:modules/draggable-points"],
              "since": "10.2.1"
            },
            "meta": {
              "fullname": "chart.zooming.key",
              "name": "key",
              "line": 1031,
              "lineEnd": 1041,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "mouseWheel": {
            "doclet": {
              "description": "The mouse wheel zoom is a feature included in Highcharts Stock, but is also\navailable for Highcharts Core as a module. Zooming with the mouse wheel is\nenabled by default in Highcharts Stock. In Highcharts Core it is enabled if\n[chart.zooming.type](chart.zooming.type) is set. It can be disabled by\nsetting this option to `false`.",
              "type": { "names": ["boolean", "object"] },
              "since": "11.1.0",
              "requires": ["module:modules/mouse-wheel-zoom"],
              "samples": [
                {
                  "name": "Enable or disable",
                  "value": "highcharts/mouse-wheel-zoom/enabled",
                  "products": ["highcharts"]
                },
                {
                  "name": "Enable or disable",
                  "value": "stock/mouse-wheel-zoom/enabled",
                  "products": ["highstock"]
                }
              ]
            },
            "meta": {
              "fullname": "chart.zooming.mouseWheel",
              "name": "mouseWheel",
              "line": 133,
              "lineEnd": 148,
              "filename": "code/es-modules/Extensions/MouseWheelZoom/MouseWheelZoom.js",
              "column": 0
            },
            "children": {
              "enabled": {
                "doclet": {
                  "description": "Zooming with the mouse wheel can be disabled by setting this option to\n`false`.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "since": "11.1.0",
                  "requires": ["module:modules/mouse-wheel-zoom"]
                },
                "meta": {
                  "fullname": "chart.zooming.mouseWheel.enabled",
                  "name": "enabled",
                  "line": 149,
                  "lineEnd": 158,
                  "filename": "code/es-modules/Extensions/MouseWheelZoom/MouseWheelZoom.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "sensitivity": {
                "doclet": {
                  "description": "Adjust the sensitivity of the zoom. Sensitivity of mouse wheel or trackpad\nscrolling. `1` is no sensitivity, while with `2`, one mouse wheel delta will\nzoom in `50%`.",
                  "type": { "names": ["number"] },
                  "defaultvalue": "1.1",
                  "since": "11.1.0",
                  "requires": ["module:modules/mouse-wheel-zoom"],
                  "samples": [
                    {
                      "name": "Change mouse wheel zoom sensitivity",
                      "value": "highcharts/mouse-wheel-zoom/sensitivity",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Change mouse wheel zoom sensitivity",
                      "value": "stock/mouse-wheel-zoom/sensitivity",
                      "products": ["highstock"]
                    }
                  ]
                },
                "meta": {
                  "fullname": "chart.zooming.mouseWheel.sensitivity",
                  "name": "sensitivity",
                  "line": 159,
                  "lineEnd": 173,
                  "filename": "code/es-modules/Extensions/MouseWheelZoom/MouseWheelZoom.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "type": {
                "doclet": {
                  "description": "Decides in what dimensions the user can zoom scrolling the wheel. Can be one\nof `x`, `y` or `xy`. In Highcharts Core, if not specified here, it will\ninherit the type from [chart.zooming.type](chart.zooming.type). In Highcharts\nStock, it defaults to `x`.\n\nNote that particularly with mouse wheel in the y direction, the zoom is\naffected by the default [yAxis.startOnTick](#yAxis.startOnTick) and\n[endOnTick]((#yAxis.endOnTick)) settings. In order to respect these settings,\nthe zoom level will adjust after the user has stopped zooming. To prevent\nthis, consider setting `startOnTick` and `endOnTick` to `false`.",
                  "type": { "names": ["\"x\"", "\"y\"", "\"xy\""] },
                  "defaultByProduct": {
                    "highcharts": "undefined",
                    "highstock": "x"
                  },
                  "since": "11.1.0",
                  "requires": ["module:modules/mouse-wheel-zoom"]
                },
                "meta": {
                  "fullname": "chart.zooming.mouseWheel.type",
                  "name": "type",
                  "line": 174,
                  "lineEnd": 193,
                  "filename": "code/es-modules/Extensions/MouseWheelZoom/MouseWheelZoom.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsChartZoomingMouseWheelOptions",
            "extended": 1
          },
          "pinchType": {
            "doclet": {
              "description": "Equivalent to [type](#chart.zooming.type), but for multitouch\ngestures only. By default, the `pinchType` is the same as the\n`type` setting. However, pinching can be enabled separately in\nsome cases, for example in stock charts where a mouse drag pans the\nchart, while pinching is enabled. When [tooltip.followTouchMove](#tooltip.followTouchMove) is true, pinchType only applies to\ntwo-finger touches.",
              "type": { "names": ["\"x\"", "\"y\"", "\"xy\""] },
              "defaultByProduct": {
                "highcharts": "undefined",
                "highstock": "x"
              },
              "products": ["highcharts", "highstock", "gantt"],
              "since": "10.2.1"
            },
            "meta": {
              "fullname": "chart.zooming.pinchType",
              "name": "pinchType",
              "line": 1004,
              "lineEnd": 1019,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "resetButton": {
            "doclet": {
              "description": "The button that appears after a selection zoom, allowing the user\nto reset zoom.",
              "since": "10.2.1",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "chart.zooming.resetButton",
              "name": "resetButton",
              "line": 1057,
              "lineEnd": 1060,
              "column": 8,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js"
            },
            "children": {
              "position": {
                "doclet": {
                  "description": "The position of the button.\n\nNote: Adjusting position values might cause overlap with chart\nelements. Ensure coordinates do not obstruct other components or\ndata visibility.",
                  "samples": [
                    {
                      "name": "Above the plot area",
                      "value": "highcharts/chart/resetzoombutton-position/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Above the plot area",
                      "value": "highcharts/chart/resetzoombutton-position/",
                      "products": ["highstock"]
                    },
                    {
                      "name": "Above the plot area",
                      "value": "highcharts/chart/resetzoombutton-position/",
                      "products": ["highmaps"]
                    }
                  ],
                  "type": { "names": ["Highcharts.AlignObject"] },
                  "since": "10.2.1"
                },
                "meta": {
                  "fullname": "chart.zooming.resetButton.position",
                  "name": "position",
                  "line": 1094,
                  "lineEnd": 1110,
                  "column": 12,
                  "filename": "code/es-modules/Core/Chart/ChartDefaults.js"
                },
                "children": {
                  "align": {
                    "doclet": {
                      "description": "The horizontal alignment of the button.",
                      "since": "10.2.1",
                      "type": { "names": ["string"] },
                      "defaultvalue": "right"
                    },
                    "meta": {
                      "fullname": "chart.zooming.resetButton.position.align",
                      "name": "align",
                      "line": 1112,
                      "lineEnd": 1114,
                      "column": 16,
                      "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
                      "default": "right"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "verticalAlign": {
                    "doclet": {
                      "description": "The vertical alignment of the button.",
                      "type": { "names": ["Highcharts.VerticalAlignValue"] },
                      "defaultvalue": "top",
                      "since": "10.2.1"
                    },
                    "meta": {
                      "fullname": "chart.zooming.resetButton.position.verticalAlign",
                      "name": "verticalAlign",
                      "line": 1120,
                      "lineEnd": 1126,
                      "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "x": {
                    "doclet": {
                      "description": "The horizontal offset of the button.",
                      "since": "10.2.1",
                      "type": { "names": ["number"] },
                      "defaultvalue": -10
                    },
                    "meta": {
                      "fullname": "chart.zooming.resetButton.position.x",
                      "name": "x",
                      "line": 1116,
                      "lineEnd": 1118,
                      "column": 16,
                      "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
                      "default": -10
                    },
                    "children": {},
                    "extended": 1
                  },
                  "y": {
                    "doclet": {
                      "description": "The vertical offset of the button.",
                      "since": "10.2.1",
                      "type": { "names": ["number"] },
                      "defaultvalue": 10
                    },
                    "meta": {
                      "fullname": "chart.zooming.resetButton.position.y",
                      "name": "y",
                      "line": 1120,
                      "lineEnd": 1126,
                      "column": 16,
                      "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
                      "default": 10
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsChartZoomingResetButtonPositionOptions",
                "extended": 1
              },
              "relativeTo": {
                "doclet": {
                  "description": "What frame the button placement should be related to. Can be\neither `plotBox` or `spacingBox`.",
                  "samples": [
                    {
                      "name": "Relative to the chart",
                      "value": "highcharts/chart/resetzoombutton-relativeto/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Relative to the chart",
                      "value": "highcharts/chart/resetzoombutton-relativeto/",
                      "products": ["highstock"]
                    }
                  ],
                  "type": { "names": ["Highcharts.ButtonRelativeToValue"] },
                  "defaultvalue": "plot",
                  "since": "10.2.1"
                },
                "meta": {
                  "fullname": "chart.zooming.resetButton.relativeTo",
                  "name": "relativeTo",
                  "line": 1062,
                  "lineEnd": 1074,
                  "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "theme": {
                "doclet": {
                  "description": "A collection of attributes for the button. The object takes SVG\nattributes like `fill`, `stroke`, `stroke-width` or `r`, the\nborder radius. The theme also supports `style`, a collection of\nCSS properties for the text. Equivalent attributes for the hover\nstate are given in `theme.states.hover`.",
                  "samples": [
                    {
                      "name": "Theming the button",
                      "value": "highcharts/chart/resetzoombutton-theme/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Theming the button",
                      "value": "highcharts/chart/resetzoombutton-theme/",
                      "products": ["highstock"]
                    }
                  ],
                  "type": { "names": ["Highcharts.SVGAttributes"] },
                  "since": "10.2.1"
                },
                "meta": {
                  "fullname": "chart.zooming.resetButton.theme",
                  "name": "theme",
                  "line": 1062,
                  "lineEnd": 1074,
                  "column": 12,
                  "filename": "code/es-modules/Core/Chart/ChartDefaults.js"
                },
                "children": {
                  "zIndex": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["number"] },
                      "defaultvalue": 6
                    },
                    "meta": {
                      "fullname": "chart.zooming.resetButton.theme.zIndex",
                      "name": "zIndex",
                      "line": 1091,
                      "lineEnd": 1091,
                      "column": 16,
                      "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
                      "default": 6
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsChartZoomingResetButtonThemeOptions",
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsChartZoomingResetButtonOptions",
            "extended": 1
          },
          "singleTouch": {
            "doclet": {
              "description": "Enables zooming by a single touch, in combination with\n[chart.zooming.type](#chart.zooming.type). When enabled, two-finger\npinch will still work as set up by [chart.zooming.pinchType]\n(#chart.zooming.pinchType). However, `singleTouch` will interfere\nwith touch-dragging the chart to read the tooltip. And especially\nwhen vertical zooming is enabled, it will make it hard to scroll\nvertically on the page.",
              "samples": [
                {
                  "name": "Zoom by single touch enabled, with buttons to toggle",
                  "value": "highcharts/chart/zoombysingletouch"
                }
              ],
              "products": ["highcharts", "highstock", "gantt"],
              "since": "10.2.1",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "chart.zooming.singleTouch",
              "name": "singleTouch",
              "line": 1004,
              "lineEnd": 1019,
              "column": 8,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "type": {
            "doclet": {
              "description": "Decides in what dimensions the user can zoom by dragging the mouse.\nCan be one of `x`, `y` or `xy`.",
              "declare": "Highcharts.OptionsChartZoomingTypeValue",
              "type": { "names": ["\"x\"", "\"y\"", "\"xy\""] },
              "defaultByProduct": { "highcharts": "undefined" },
              "products": ["highcharts", "highstock", "gantt"],
              "since": "10.2.1"
            },
            "meta": {
              "fullname": "chart.zooming.type",
              "name": "type",
              "line": 1020,
              "lineEnd": 1030,
              "filename": "code/es-modules/Core/Chart/ChartDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsChartZoomingOptions",
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsChartOptions",
    "extended": 1
  },
  "colorAxis": {
    "doclet": {
      "description": "A color axis for series. Visually, the color\naxis will appear as a gradient or as separate items inside the\nlegend, depending on whether the axis is scalar or based on data\nclasses.\n\nFor supported color formats, see the\n[docs article about colors](https://www.highcharts.com/docs/chart-design-and-style/colors).\n\nA scalar color axis is represented by a gradient. The colors either\nrange between the [minColor](#colorAxis.minColor) and the\n[maxColor](#colorAxis.maxColor), or for more fine grained control the\ncolors can be defined in [stops](#colorAxis.stops). Often times, the\ncolor axis needs to be adjusted to get the right color spread for the\ndata. In addition to stops, consider using a logarithmic\n[axis type](#colorAxis.type), or setting [min](#colorAxis.min) and\n[max](#colorAxis.max) to avoid the colors being determined by\noutliers.\n\nWhen [dataClasses](#colorAxis.dataClasses) are used, the ranges are\nsubdivided into separate classes like categories based on their\nvalues. This can be used for ranges between two values, but also for\na true category. However, when your data is categorized, it may be as\nconvenient to add each category to a separate series.\n\nColor axis does not work with: `sankey`, `sunburst`, `dependencywheel`,\n`networkgraph`, `wordcloud`, `venn`, `gauge` and `solidgauge` series\ntypes.\n\nSince v7.2.0 `colorAxis` can also be an array of options objects.\n\nSee [the Axis object](/class-reference/Highcharts.Axis) for\nprogrammatic access to the axis.",
      "samples": [
        {
          "name": "Column chart with color axis",
          "value": "highcharts/coloraxis/custom-color-key",
          "products": ["highcharts"]
        },
        {
          "name": "Horizontal layout",
          "value": "highcharts/coloraxis/horizontal-layout",
          "products": ["highcharts"]
        },
        {
          "name": "With data classes",
          "value": "maps/coloraxis/dataclasscolor",
          "products": ["highmaps"]
        },
        {
          "name": "Min color and max color",
          "value": "maps/coloraxis/mincolor-maxcolor",
          "products": ["highmaps"]
        }
      ],
      "extends": "xAxis",
      "exclude": [
        "alignTicks",
        "allowDecimals",
        "alternateGridColor",
        "breaks",
        "categories",
        "crosshair",
        "dateTimeLabelFormats",
        "left",
        "lineWidth",
        "linkedTo",
        "maxZoom",
        "minRange",
        "minTickInterval",
        "offset",
        "opposite",
        "pane",
        "plotBands",
        "plotLines",
        "reversedStacks",
        "scrollbar",
        "showEmpty",
        "title",
        "top",
        "zoomEnabled"
      ],
      "products": ["highcharts", "highstock", "highmaps"],
      "type": { "names": ["*", "Array.<*>"] }
    },
    "meta": {
      "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
      "name": "colorAxis",
      "fullname": "colorAxis",
      "line": 11,
      "lineEnd": 15,
      "column": 0
    },
    "children": {
      "allowDecimals": {
        "doclet": {
          "description": "Whether to allow decimals on the color axis.",
          "type": { "names": ["boolean"] },
          "defaultvalue": "true",
          "products": ["highcharts", "highstock", "highmaps"]
        },
        "meta": {
          "fullname": "colorAxis.allowDecimals",
          "name": "allowDecimals",
          "line": 71,
          "lineEnd": 77,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "dataClassColor": {
        "doclet": {
          "description": "Determines how to set each data class' color if no individual\ncolor is set. The default value, `tween`, computes intermediate\ncolors between `minColor` and `maxColor`. The other possible\nvalue, `category`, pulls colors from the global or chart specific\n[colors](#colors) array.",
          "samples": [
            {
              "name": "Category colors",
              "value": "maps/coloraxis/dataclasscolor/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["\"tween\"", "\"category\""] },
          "defaultvalue": "tween",
          "products": ["highcharts", "highstock", "highmaps"]
        },
        "meta": {
          "fullname": "colorAxis.dataClassColor",
          "name": "dataClassColor",
          "line": 78,
          "lineEnd": 93,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "dataClasses": {
        "doclet": {
          "description": "An array of data classes or ranges for the choropleth map. If\nnone given, the color axis is scalar and values are distributed\nas a gradient between the minimum and maximum colors.",
          "samples": [
            {
              "name": "Multiple ranges",
              "value": "maps/demo/data-class-ranges/",
              "products": ["highmaps"]
            },
            {
              "name": "Two ranges",
              "value": "maps/demo/data-class-two-ranges/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["Array.<*>"] },
          "products": ["highcharts", "highstock", "highmaps"]
        },
        "meta": {
          "fullname": "colorAxis.dataClasses",
          "name": "dataClasses",
          "line": 94,
          "lineEnd": 108,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "column": 0
        },
        "children": {
          "color": {
            "doclet": {
              "description": "The color of each data class. If not set, the color is pulled\nfrom the global or chart-specific [colors](#colors) array. In\nstyled mode, this option is ignored. Instead, use colors defined\nin CSS.",
              "samples": [
                {
                  "name": "Explicit colors",
                  "value": "maps/demo/data-class-two-ranges/",
                  "products": ["highmaps"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "products": ["highcharts", "highstock", "highmaps"]
            },
            "meta": {
              "fullname": "colorAxis.dataClasses.color",
              "name": "color",
              "line": 121,
              "lineEnd": 133,
              "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "from": {
            "doclet": {
              "description": "The start of the value range that the data class represents,\nrelating to the point value.\n\nThe range of each `dataClass` is closed in both ends, but can be\noverridden by the next `dataClass`.",
              "type": { "names": ["number"] },
              "products": ["highcharts", "highstock", "highmaps"]
            },
            "meta": {
              "fullname": "colorAxis.dataClasses.from",
              "name": "from",
              "line": 134,
              "lineEnd": 144,
              "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "name": {
            "doclet": {
              "description": "The name of the data class as it appears in the legend.\nIf no name is given, it is automatically created based on the\n`from` and `to` values. For full programmatic control,\n[legend.labelFormatter](#legend.labelFormatter) can be used.\nIn the formatter, `this.from` and `this.to` can be accessed.",
              "samples": [
                {
                  "name": "Named data classes",
                  "value": "maps/coloraxis/dataclasses-name/",
                  "products": ["highmaps"]
                },
                {
                  "name": "Formatted data classes",
                  "value": "maps/coloraxis/dataclasses-labelformatter/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["string"] },
              "products": ["highcharts", "highstock", "highmaps"]
            },
            "meta": {
              "fullname": "colorAxis.dataClasses.name",
              "name": "name",
              "line": 145,
              "lineEnd": 161,
              "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "to": {
            "doclet": {
              "description": "The end of the value range that the data class represents,\nrelating to the point value.\n\nThe range of each `dataClass` is closed in both ends, but can be\noverridden by the next `dataClass`.",
              "type": { "names": ["number"] },
              "products": ["highcharts", "highstock", "highmaps"]
            },
            "meta": {
              "fullname": "colorAxis.dataClasses.to",
              "name": "to",
              "line": 162,
              "lineEnd": 172,
              "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsColorAxisDataClassesOptions",
        "extended": 1
      },
      "endOnTick": {
        "doclet": {
          "description": "Whether to force the axis to end on a tick. Use this option with\nthe [maxPadding](#colorAxis.maxPadding) option to control the\naxis end.",
          "products": ["highcharts", "highstock", "highmaps"],
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "colorAxis.endOnTick",
          "name": "endOnTick",
          "line": 258,
          "lineEnd": 264,
          "column": 4,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "events": {
        "doclet": {
          "products": ["highcharts", "highstock", "highmaps"],
          "exclude": ["afterBreaks", "pointBreak", "pointInBreak"],
          "type": { "names": ["*"] },
          "extends": "xAxis.events"
        },
        "meta": {
          "fullname": "colorAxis.events",
          "name": "events",
          "line": 407,
          "lineEnd": 411,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "column": 0
        },
        "children": {
          "legendItemClick": {
            "doclet": {
              "description": "Fires when the legend item belonging to the colorAxis is clicked.\nOne parameter, `event`, is passed to the function.\n\n**Note:** This option is deprecated in favor of\n[legend.events.itemClick](#legend.events.itemClick).",
              "deprecated": "11.4.4",
              "type": { "names": ["function"] },
              "products": ["highcharts", "highstock", "highmaps"]
            },
            "meta": {
              "fullname": "colorAxis.events.legendItemClick",
              "name": "legendItemClick",
              "line": 412,
              "lineEnd": 423,
              "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "afterSetExtremes": {},
          "pointBreakOut": {},
          "setExtremes": {}
        },
        "flutterClassName": "HighchartsColorAxisEventsOptions",
        "extended": 1
      },
      "gridLineColor": {
        "doclet": {
          "description": "Color of the grid lines extending from the axis across the\ngradient.",
          "samples": [
            {
              "name": "Grid lines demonstrated",
              "value": "maps/coloraxis/gridlines/",
              "products": ["highmaps"]
            }
          ],
          "type": {
            "names": [
              "Highcharts.ColorString",
              "Highcharts.GradientColorObject",
              "Highcharts.PatternObject"
            ]
          },
          "products": ["highcharts", "highstock", "highmaps"],
          "defaultvalue": "#ffffff"
        },
        "meta": {
          "fullname": "colorAxis.gridLineColor",
          "name": "gridLineColor",
          "line": 214,
          "lineEnd": 223,
          "column": 4,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "default": "#ffffff"
        },
        "children": {},
        "extended": 1
      },
      "gridLineWidth": {
        "doclet": {
          "description": "The width of the grid lines extending from the axis across the\ngradient of a scalar color axis.",
          "samples": [
            {
              "name": "Grid lines demonstrated",
              "value": "maps/coloraxis/gridlines/",
              "products": ["highmaps"]
            }
          ],
          "products": ["highcharts", "highstock", "highmaps"],
          "type": { "names": ["number"] },
          "defaultvalue": 1
        },
        "meta": {
          "fullname": "colorAxis.gridLineWidth",
          "name": "gridLineWidth",
          "line": 225,
          "lineEnd": 233,
          "column": 4,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "default": 1
        },
        "children": {},
        "extended": 1
      },
      "height": {
        "doclet": {
          "description": "The height of the color axis. If it's a number, it is interpreted as\npixels.\n\nIf it's a percentage string, it is interpreted as percentages of the\ntotal plot height.",
          "samples": [
            {
              "name": "Percentage width and pixel height for color axis",
              "value": "highcharts/coloraxis/width-and-height"
            }
          ],
          "type": { "names": ["number", "string"] },
          "since": "11.3.0",
          "products": ["highcharts", "highstock", "highmaps"]
        },
        "meta": {
          "fullname": "colorAxis.height",
          "name": "height",
          "line": 439,
          "lineEnd": 453,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "labels": {
        "doclet": {
          "description": "The axis labels show the number for each tick.\n\nFor more live examples on label options, see [xAxis.labels in the\nHighcharts API.](/highcharts#xAxis.labels)",
          "extends": "xAxis.labels",
          "products": ["highcharts", "highstock", "highmaps"]
        },
        "meta": {
          "fullname": "colorAxis.labels",
          "name": "labels",
          "line": 301,
          "lineEnd": 309,
          "column": 4,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js"
        },
        "children": {
          "distance": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 8 },
            "meta": {
              "fullname": "colorAxis.labels.distance",
              "name": "distance",
              "line": 311,
              "lineEnd": 311,
              "column": 8,
              "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
              "default": 8
            },
            "children": {},
            "extended": 1
          },
          "overflow": {
            "doclet": {
              "description": "How to handle overflowing labels on horizontal color axis. If set\nto `\"allow\"`, it will not be aligned at all. By default it\n`\"justify\"` labels inside the chart area. If there is room to\nmove it, it will be aligned to the edge, else it will be removed.",
              "values": "[\"allow\", \"justify\"]",
              "products": ["highcharts", "highstock", "highmaps"],
              "type": { "names": ["string"] },
              "defaultvalue": "justify"
            },
            "meta": {
              "fullname": "colorAxis.labels.overflow",
              "name": "overflow",
              "line": 312,
              "lineEnd": 320,
              "column": 8,
              "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
              "default": "justify"
            },
            "children": {},
            "extended": 1
          },
          "rotation": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0 },
            "meta": {
              "fullname": "colorAxis.labels.rotation",
              "name": "rotation",
              "line": 322,
              "lineEnd": 322,
              "column": 8,
              "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "align": {},
          "allowOverlap": {},
          "autoRotation": {},
          "autoRotationLimit": {},
          "enabled": {},
          "format": {},
          "formatter": {},
          "maxStaggerLines": {},
          "padding": {},
          "position3d": {},
          "reserveSpace": {},
          "skew3d": {},
          "staggerLines": {},
          "step": {},
          "style": {},
          "useHTML": {},
          "x": {},
          "y": {},
          "zIndex": {}
        },
        "flutterClassName": "HighchartsColorAxisLabelsOptions",
        "extended": 1
      },
      "layout": {
        "doclet": {
          "description": "The layout of the color axis. Can be `'horizontal'` or `'vertical'`.\nIf none given, the color axis has the same layout as the legend.",
          "samples": [
            {
              "name": "Horizontal color axis layout with vertical legend",
              "value": "highcharts/coloraxis/horizontal-layout/"
            }
          ],
          "type": { "names": ["string", "undefined"] },
          "since": "7.2.0",
          "products": ["highcharts", "highstock", "highmaps"]
        },
        "meta": {
          "fullname": "colorAxis.layout",
          "name": "layout",
          "line": 109,
          "lineEnd": 120,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "marker": {
        "doclet": {
          "description": "The triangular marker on a scalar color axis that points to the\nvalue of the hovered area. To disable the marker, set\n`marker: null`.",
          "samples": [
            {
              "name": "Black marker",
              "value": "maps/coloraxis/marker/",
              "products": ["highmaps"]
            }
          ],
          "declare": "Highcharts.PointMarkerOptionsObject",
          "products": ["highcharts", "highstock", "highmaps"],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "colorAxis.marker",
          "name": "marker",
          "line": 268,
          "lineEnd": 278,
          "column": 4,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js"
        },
        "children": {
          "animation": {
            "doclet": {
              "description": "Animation for the marker as it moves between values. Set to\n`false` to disable animation. Defaults to `{ duration: 50 }`.",
              "type": {
                "names": [
                  "boolean",
                  "Partial.<Highcharts.AnimationOptionsObject>"
                ]
              },
              "products": ["highcharts", "highstock", "highmaps"]
            },
            "meta": {
              "fullname": "colorAxis.marker.animation",
              "name": "animation",
              "line": 280,
              "lineEnd": 286,
              "column": 8,
              "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js"
            },
            "children": {
              "duration": {
                "doclet": {
                  "internal": true,
                  "type": { "names": ["number"] },
                  "defaultvalue": 50
                },
                "meta": {
                  "fullname": "colorAxis.marker.animation.duration",
                  "name": "duration",
                  "line": 288,
                  "lineEnd": 288,
                  "column": 12,
                  "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
                  "default": 50
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsColorAxisMarkerAnimationOptions",
            "extended": 1
          },
          "color": {
            "doclet": {
              "description": "The color of the marker.",
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "products": ["highcharts", "highstock", "highmaps"],
              "defaultvalue": "#999999"
            },
            "meta": {
              "fullname": "colorAxis.marker.color",
              "name": "color",
              "line": 293,
              "lineEnd": 298,
              "column": 8,
              "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
              "default": "#999999"
            },
            "children": {},
            "extended": 1
          },
          "width": {
            "doclet": {
              "internal": true,
              "type": { "names": ["number"] },
              "defaultvalue": 0.01
            },
            "meta": {
              "fullname": "colorAxis.marker.width",
              "name": "width",
              "line": 291,
              "lineEnd": 291,
              "column": 8,
              "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
              "default": 0.01
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsColorAxisMarkerOptions",
        "extended": 1
      },
      "max": {
        "doclet": {
          "description": "The maximum value of the axis in terms of map point values. If\n`null`, the max value is automatically calculated. If the\n`endOnTick` option is true, the max value might be rounded up.",
          "samples": [
            {
              "name": "Explicit min and max to reduce the effect of outliers",
              "value": "maps/coloraxis/gridlines/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "products": ["highcharts", "highstock", "highmaps"]
        },
        "meta": {
          "fullname": "colorAxis.max",
          "name": "max",
          "line": 182,
          "lineEnd": 193,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "maxColor": {
        "doclet": {
          "description": "The color to represent the maximum of the color axis. Unless\n[dataClasses](#colorAxis.dataClasses) or\n[stops](#colorAxis.stops) are set, the gradient ends at this\nvalue.\n\nIf dataClasses are set, the color is based on minColor and\nmaxColor unless a color is set for each data class, or the\n[dataClassColor](#colorAxis.dataClassColor) is set.",
          "samples": [
            {
              "name": "Min and max colors on scalar (gradient) axis",
              "value": "maps/coloraxis/mincolor-maxcolor/",
              "products": ["highmaps"]
            },
            {
              "name": "On data classes",
              "value": "maps/coloraxis/mincolor-maxcolor-dataclasses/",
              "products": ["highmaps"]
            }
          ],
          "type": {
            "names": [
              "Highcharts.ColorString",
              "Highcharts.GradientColorObject",
              "Highcharts.PatternObject"
            ]
          },
          "products": ["highcharts", "highstock", "highmaps"],
          "defaultvalue": "#0022ff"
        },
        "meta": {
          "fullname": "colorAxis.maxColor",
          "name": "maxColor",
          "line": 343,
          "lineEnd": 360,
          "column": 4,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "default": "#0022ff"
        },
        "children": {},
        "extended": 1
      },
      "maxPadding": {
        "doclet": {
          "description": "Padding of the max value relative to the length of the axis. A\npadding of 0.05 will make a 100px axis 5px longer.",
          "products": ["highcharts", "highstock", "highmaps"],
          "type": { "names": ["number"] },
          "defaultvalue": 0
        },
        "meta": {
          "fullname": "colorAxis.maxPadding",
          "name": "maxPadding",
          "line": 182,
          "lineEnd": 193,
          "column": 4,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "default": 0
        },
        "children": {},
        "extended": 1
      },
      "min": {
        "doclet": {
          "description": "The minimum value of the axis in terms of map point values. If\n`null`, the min value is automatically calculated. If the\n`startOnTick` option is true, the min value might be rounded\ndown.",
          "samples": [
            {
              "name": "Explicit min and max to reduce the effect of outliers",
              "value": "maps/coloraxis/gridlines/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "products": ["highcharts", "highstock", "highmaps"]
        },
        "meta": {
          "fullname": "colorAxis.min",
          "name": "min",
          "line": 194,
          "lineEnd": 206,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "minColor": {
        "doclet": {
          "description": "The color to represent the minimum of the color axis. Unless\n[dataClasses](#colorAxis.dataClasses) or\n[stops](#colorAxis.stops) are set, the gradient starts at this\nvalue.\n\nIf dataClasses are set, the color is based on minColor and\nmaxColor unless a color is set for each data class, or the\n[dataClassColor](#colorAxis.dataClassColor) is set.",
          "samples": [
            {
              "name": "Min and max colors on scalar (gradient) axis",
              "value": "maps/coloraxis/mincolor-maxcolor/",
              "products": ["highmaps"]
            },
            {
              "name": "On data classes",
              "value": "maps/coloraxis/mincolor-maxcolor-dataclasses/",
              "products": ["highmaps"]
            }
          ],
          "type": {
            "names": [
              "Highcharts.ColorString",
              "Highcharts.GradientColorObject",
              "Highcharts.PatternObject"
            ]
          },
          "products": ["highcharts", "highstock", "highmaps"],
          "defaultvalue": "#e6e9ff"
        },
        "meta": {
          "fullname": "colorAxis.minColor",
          "name": "minColor",
          "line": 324,
          "lineEnd": 341,
          "column": 4,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "default": "#e6e9ff"
        },
        "children": {},
        "extended": 1
      },
      "minPadding": {
        "doclet": {
          "description": "Padding of the min value relative to the length of the axis. A\npadding of 0.05 will make a 100px axis 5px longer.",
          "products": ["highcharts", "highstock", "highmaps"],
          "type": { "names": ["number"] },
          "defaultvalue": 0
        },
        "meta": {
          "fullname": "colorAxis.minPadding",
          "name": "minPadding",
          "line": 175,
          "lineEnd": 180,
          "column": 4,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "default": 0
        },
        "children": {},
        "extended": 1
      },
      "reversed": {
        "doclet": {
          "description": "Whether to reverse the axis so that the highest number is closest\nto the origin. Defaults to `false` in a horizontal legend and\n`true` in a vertical legend, where the smallest value starts on\ntop.",
          "type": { "names": ["boolean"] },
          "products": ["highcharts", "highstock", "highmaps"]
        },
        "meta": {
          "fullname": "colorAxis.reversed",
          "name": "reversed",
          "line": 397,
          "lineEnd": 406,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "showInLegend": {
        "doclet": {
          "description": "Whether to display the colorAxis in the legend.",
          "samples": [
            {
              "name": "Hidden color axis with 3d chart",
              "value": "highcharts/coloraxis/hidden-coloraxis-with-3d-chart/"
            }
          ],
          "see": ["[heatmap.showInLegend](#series.heatmap.showInLegend)"],
          "since": "4.2.7",
          "products": ["highcharts", "highstock", "highmaps"],
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "colorAxis.showInLegend",
          "name": "showInLegend",
          "line": 384,
          "lineEnd": 396,
          "column": 4,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "startOnTick": {
        "doclet": {
          "description": "Whether to force the axis to start on a tick. Use this option\nwith the `maxPadding` option to control the axis start.",
          "products": ["highcharts", "highstock", "highmaps"],
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "colorAxis.startOnTick",
          "name": "startOnTick",
          "line": 251,
          "lineEnd": 256,
          "column": 4,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "stops": {
        "doclet": {
          "description": "Color stops for the gradient of a scalar color axis. Use this in\ncases where a linear gradient between a `minColor` and `maxColor`\nis not sufficient. The stops is an array of tuples, where the\nfirst item is a float between 0 and 1 assigning the relative\nposition in the gradient, and the second item is the color.",
          "samples": [
            {
              "name": "Color axis stops",
              "value": "highcharts/coloraxis/coloraxis-stops/"
            },
            {
              "name": "Color axis stops with custom colorKey",
              "value": "highcharts/coloraxis/color-key-with-stops/"
            },
            {
              "name": "Heatmap with three color stops",
              "value": "maps/demo/heatmap/",
              "products": ["highmaps"]
            }
          ],
          "type": {
            "names": ["Array.<Array.<number, Highcharts.ColorString>>"]
          },
          "products": ["highcharts", "highstock", "highmaps"]
        },
        "meta": {
          "fullname": "colorAxis.stops",
          "name": "stops",
          "line": 362,
          "lineEnd": 379,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "tickInterval": {
        "doclet": {
          "description": "The interval of the tick marks in axis units. When `null`, the\ntick interval is computed to approximately follow the\n`tickPixelInterval`.",
          "type": { "names": ["number"] },
          "products": ["highcharts", "highstock", "highmaps"]
        },
        "meta": {
          "fullname": "colorAxis.tickInterval",
          "name": "tickInterval",
          "line": 235,
          "lineEnd": 243,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "tickLength": {
        "doclet": {
          "description": "The pixel length of the main tick marks on the color axis.",
          "type": { "names": ["number"] },
          "defaultvalue": 5
        },
        "meta": {
          "fullname": "colorAxis.tickLength",
          "name": "tickLength",
          "line": 362,
          "lineEnd": 379,
          "column": 4,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "default": 5
        },
        "children": {},
        "extended": 1
      },
      "tickPixelInterval": {
        "doclet": {
          "description": "If [tickInterval](#colorAxis.tickInterval) is `null` this option\nsets the approximate pixel interval of the tick marks.",
          "products": ["highcharts", "highstock", "highmaps"],
          "type": { "names": ["number"] },
          "defaultvalue": 72
        },
        "meta": {
          "fullname": "colorAxis.tickPixelInterval",
          "name": "tickPixelInterval",
          "line": 235,
          "lineEnd": 243,
          "column": 4,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "default": 72
        },
        "children": {},
        "extended": 1
      },
      "type": {
        "doclet": {
          "description": "The type of interpolation to use for the color axis. Can be\n`linear` or `logarithmic`.",
          "samples": [
            {
              "name": "Logarithmic color axis with extension to emulate negative values",
              "value": "highcharts/coloraxis/logarithmic-with-emulate-negative-values/"
            }
          ],
          "type": { "names": ["Highcharts.ColorAxisTypeValue"] },
          "defaultvalue": "linear",
          "products": ["highcharts", "highstock", "highmaps"]
        },
        "meta": {
          "fullname": "colorAxis.type",
          "name": "type",
          "line": 384,
          "lineEnd": 396,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "width": {
        "doclet": {
          "description": "The width of the color axis. If it's a number, it is interpreted as\npixels.\n\nIf it's a percentage string, it is interpreted as percentages of the\ntotal plot width.",
          "samples": [
            {
              "name": "Percentage width and pixel height for color axis",
              "value": "highcharts/coloraxis/width-and-height"
            }
          ],
          "type": { "names": ["number", "string"] },
          "since": "11.3.0",
          "products": ["highcharts", "highstock", "highmaps"]
        },
        "meta": {
          "fullname": "colorAxis.width",
          "name": "width",
          "line": 424,
          "lineEnd": 438,
          "filename": "code/es-modules/Core/Axis/Color/ColorAxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "accessibility": {},
      "angle": {},
      "ceiling": {},
      "className": {},
      "crossing": {},
      "floor": {},
      "gridLineDashStyle": {},
      "gridLineInterpolation": {},
      "gridZIndex": {},
      "id": {},
      "lineColor": {},
      "margin": {},
      "minorGridLineColor": {},
      "minorGridLineDashStyle": {},
      "minorGridLineWidth": {},
      "minorTickColor": {},
      "minorTickInterval": {},
      "minorTickLength": {},
      "minorTickPosition": {},
      "minorTickWidth": {},
      "minorTicks": {},
      "minorTicksPerMajor": {},
      "panningEnabled": {},
      "showFirstLabel": {},
      "showLastLabel": {},
      "softMax": {},
      "softMin": {},
      "startOfWeek": {},
      "tickAmount": {},
      "tickColor": {},
      "tickPosition": {},
      "tickPositioner": {},
      "tickPositions": {},
      "tickWidth": {},
      "tickmarkPlacement": {},
      "uniqueNames": {},
      "units": {},
      "visible": {},
      "zIndex": {}
    },
    "flutterClassName": "HighchartsColorAxisOptions",
    "extended": 1
  },
  "colors": {
    "doclet": {
      "description": "An array containing the default colors for the chart's series. When\nall colors are used, new colors are pulled from the start again.\n\nDefault colors can also be set on a series or series.type basis,\nsee [column.colors](#plotOptions.column.colors),\n[pie.colors](#plotOptions.pie.colors).\n\nIn styled mode, the colors option doesn't exist. Instead, colors\nare defined in CSS and applied either through series or point class\nnames, or through the [chart.colorCount](#chart.colorCount) option.",
      "samples": [
        {
          "name": "Assign a global color theme",
          "value": "highcharts/chart/colors/",
          "products": ["highcharts"]
        },
        {
          "name": "Latest release styled like version 10",
          "value": "highcharts/members/theme-v10/"
        }
      ],
      "type": {
        "names": [
          "Array.<(Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject)>"
        ]
      },
      "defaultvalue": "[\n    \"#2caffe\",\n    \"#544fc5\",\n    \"#00e272\",\n    \"#fe6a35\",\n    \"#6b8abc\",\n    \"#d568fb\",\n    \"#2ee0ca\",\n    \"#fa4b42\",\n    \"#feb56a\",\n    \"#91e8e1\"\n]"
    },
    "meta": {
      "fullname": "colors",
      "name": "colors",
      "line": 33,
      "lineEnd": 63,
      "column": 4,
      "filename": "code/es-modules/Core/Defaults.js"
    },
    "children": {},
    "extended": 1
  },
  "credits": {
    "doclet": {
      "description": "Highchart by default puts a credits label in the lower right corner\nof the chart. This can be changed using these options.",
      "type": { "names": ["*"] }
    },
    "meta": {
      "fullname": "credits",
      "name": "credits",
      "line": 2512,
      "lineEnd": 2515,
      "column": 4,
      "filename": "code/es-modules/Core/Defaults.js"
    },
    "children": {
      "enabled": {
        "doclet": {
          "description": "Whether to show the credits text.",
          "samples": [
            {
              "name": "Credits disabled",
              "value": "highcharts/credits/enabled-false/",
              "products": ["highcharts"]
            },
            {
              "name": "Credits disabled",
              "value": "stock/credits/enabled/",
              "products": ["highstock"]
            },
            {
              "name": "Credits disabled",
              "value": "maps/credits/enabled-false/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "credits.enabled",
          "name": "enabled",
          "line": 2517,
          "lineEnd": 2530,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "href": {
        "doclet": {
          "description": "The URL for the credits label.",
          "samples": [
            {
              "name": "Custom URL and text",
              "value": "highcharts/credits/href/",
              "products": ["highcharts"]
            },
            {
              "name": "Custom URL and text",
              "value": "maps/credits/customized/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["string"] },
          "defaultvalue": "https://www.highcharts.com?credits"
        },
        "meta": {
          "fullname": "credits.href",
          "name": "href",
          "line": 2556,
          "lineEnd": 2563,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "https://www.highcharts.com?credits"
        },
        "children": {},
        "extended": 1
      },
      "position": {
        "doclet": {
          "description": "Position configuration for the credits label.",
          "samples": [
            {
              "name": "Left aligned",
              "value": "highcharts/credits/position-left/",
              "products": ["highcharts"]
            },
            {
              "name": "Left aligned",
              "value": "highcharts/credits/position-left/",
              "products": ["highcharts"]
            },
            {
              "name": "Left aligned",
              "value": "maps/credits/customized/",
              "products": ["highmaps"]
            },
            {
              "name": "Left aligned",
              "value": "maps/credits/customized/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["Highcharts.AlignObject"] },
          "since": "2.1.0"
        },
        "meta": {
          "fullname": "credits.position",
          "name": "position",
          "line": 2565,
          "lineEnd": 2579,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {
          "align": {
            "doclet": {
              "internal": true,
              "type": { "names": ["string"] },
              "defaultvalue": "right"
            },
            "meta": {
              "fullname": "credits.position.align",
              "name": "align",
              "line": 2581,
              "lineEnd": 2581,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "right"
            },
            "children": {},
            "extended": 1
          },
          "verticalAlign": {
            "doclet": {
              "internal": true,
              "type": { "names": ["string"] },
              "defaultvalue": "bottom"
            },
            "meta": {
              "fullname": "credits.position.verticalAlign",
              "name": "verticalAlign",
              "line": 2585,
              "lineEnd": 2585,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "bottom"
            },
            "children": {},
            "extended": 1
          },
          "x": {
            "doclet": {
              "internal": true,
              "type": { "names": ["number"] },
              "defaultvalue": -10
            },
            "meta": {
              "fullname": "credits.position.x",
              "name": "x",
              "line": 2583,
              "lineEnd": 2583,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": -10
            },
            "children": {},
            "extended": 1
          },
          "y": {
            "doclet": {
              "internal": true,
              "type": { "names": ["number"] },
              "defaultvalue": -5
            },
            "meta": {
              "fullname": "credits.position.y",
              "name": "y",
              "line": 2587,
              "lineEnd": 2587,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": -5
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsCreditsPositionOptions",
        "extended": 1
      },
      "style": {
        "doclet": {
          "description": "CSS styles for the credits label.",
          "see": [
            "In styled mode, credits styles can be set with the\n     `.highcharts-credits` class."
          ],
          "type": { "names": ["Highcharts.CSSObject"] }
        },
        "meta": {
          "fullname": "credits.style",
          "name": "style",
          "line": 2590,
          "lineEnd": 2597,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {
          "color": {
            "doclet": {
              "internal": true,
              "type": { "names": ["string"] },
              "defaultvalue": "#999999"
            },
            "meta": {
              "fullname": "credits.style.color",
              "name": "color",
              "line": 2601,
              "lineEnd": 2601,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "#999999"
            },
            "children": {},
            "extended": 1
          },
          "cursor": {
            "doclet": {
              "internal": true,
              "type": { "names": ["string"] },
              "defaultvalue": "pointer"
            },
            "meta": {
              "fullname": "credits.style.cursor",
              "name": "cursor",
              "line": 2599,
              "lineEnd": 2599,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "pointer"
            },
            "children": {},
            "extended": 1
          },
          "fontSize": {
            "doclet": {
              "type": { "names": ["number", "string"] },
              "defaultvalue": "0.6em"
            },
            "meta": {
              "fullname": "credits.style.fontSize",
              "name": "fontSize",
              "line": 2603,
              "lineEnd": 2605,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "0.6em"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsCreditsStyleOptions",
        "extended": 1
      },
      "text": {
        "doclet": {
          "description": "The text for the credits label.",
          "productdesc": [
            {
              "value": "If a map is loaded as GeoJSON, the text defaults to\n`Highcharts @ {map-credits}`. Otherwise, it defaults to\n`Highcharts.com`.",
              "products": ["highmaps"]
            }
          ],
          "samples": [
            {
              "name": "Custom URL and text",
              "value": "highcharts/credits/href/",
              "products": ["highcharts"]
            },
            {
              "name": "Custom URL and text",
              "value": "maps/credits/customized/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["string"] },
          "defaultvalue": "Highcharts.com"
        },
        "meta": {
          "fullname": "credits.text",
          "name": "text",
          "line": 2608,
          "lineEnd": 2620,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "Highcharts.com"
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsCreditsOptions",
    "extended": 1
  },
  "data": {
    "doclet": {
      "description": "The Data module provides a simplified interface for adding data to\na chart from sources like CVS, HTML tables or grid views. See also\nthe [tutorial article on the Data module](https://www.highcharts.com/docs/working-with-data/data-module).\n\nIt requires the `modules/data.js` file to be loaded.\n\nPlease note that the default way of adding data in Highcharts, without\nthe need of a module, is through the [series._type_.data](#series.line.data)\noption.",
      "samples": [
        {
          "name": "HTML table",
          "value": "highcharts/demo/column-parsed/",
          "products": ["highcharts"]
        },
        {
          "name": "CSV",
          "value": "highcharts/data/csv/",
          "products": ["highcharts"]
        }
      ],
      "since": "4.0.0",
      "requires": ["module:modules/data"],
      "type": { "names": ["*"] }
    },
    "meta": {
      "fullname": "data",
      "name": "data",
      "line": 1718,
      "lineEnd": 1738,
      "filename": "code/es-modules/Extensions/Data.js",
      "column": 0
    },
    "children": {
      "beforeParse": {
        "doclet": {
          "description": "A callback function to modify the CSV before parsing it. Return the modified\nstring.",
          "samples": [
            {
              "name": "Modify CSV before parse",
              "value": "highcharts/demo/line-csv/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Highcharts.DataBeforeParseCallbackFunction"] },
          "since": "6.1.0"
        },
        "meta": {
          "fullname": "data.beforeParse",
          "name": "beforeParse",
          "line": 1739,
          "lineEnd": 1749,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "columnTypes": {
        "doclet": {
          "description": "An array option that specifies the data type for each column in the series\nloaded within the data module.\n\nPossible values: `\"string\"`, `\"number\"`, `\"float\"`, `\"date\"`.",
          "samples": [
            {
              "name": "X-axis categories based on CSV data",
              "value": "highcharts/data/column-types/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Map chart created with fips from CSV",
              "value": "highcharts/data/column-types-map/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["Array.<('string'|'number'|'float'|'date')>"] },
          "since": "11.3.0",
          "values": "[\"string\", \"number\", \"float\", \"date\"]"
        },
        "meta": {
          "fullname": "data.columnTypes",
          "name": "columnTypes",
          "line": 1766,
          "lineEnd": 1781,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "columns": {
        "doclet": {
          "description": "A two-dimensional array representing the input data on tabular form.\nThis input can be used when the data is already parsed, for example\nfrom a grid view component. Each cell can be a string or number.\nIf not switchRowsAndColumns is set, the columns are interpreted as\nseries.",
          "see": ["[data.rows](#data.rows)"],
          "samples": [
            {
              "name": "Columns",
              "value": "highcharts/data/columns/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Array.<Array.<Highcharts.DataValueType>>"] },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.columns",
          "name": "columns",
          "line": 1750,
          "lineEnd": 1765,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "columnsURL": {
        "doclet": {
          "description": "A URL to a remote JSON dataset, structured as a column array.\nWill be fetched when the chart is created using Ajax.",
          "samples": [
            {
              "name": "Columns with live polling",
              "value": "highcharts/data/livedata-columns"
            }
          ],
          "type": { "names": ["string"] },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.columnsURL",
          "name": "columnsURL",
          "line": 2088,
          "lineEnd": 2097,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "complete": {
        "doclet": {
          "description": "The callback that is evaluated when the data is finished loading,\noptionally from an external source, and parsed. The first argument\npassed is a finished chart options object, containing the series.\nThese options can be extended with additional options and passed\ndirectly to the chart constructor.",
          "see": ["[data.parsed](#data.parsed)"],
          "samples": [
            {
              "name": "Modify data on complete",
              "value": "highcharts/data/complete/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Highcharts.DataCompleteCallbackFunction"] },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.complete",
          "name": "complete",
          "line": 1782,
          "lineEnd": 1797,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "csv": {
        "doclet": {
          "description": "A comma delimited string to be parsed. Related options are [startRow](#data.startRow), [endRow](#data.endRow), [startColumn](#data.startColumn)\nand [endColumn](#data.endColumn) to delimit what part of the table\nis used. The [lineDelimiter](#data.lineDelimiter) and [itemDelimiter](#data.itemDelimiter) options define the CSV delimiter formats.\n\nThe built-in CSV parser doesn't support all flavours of CSV, so in\nsome cases it may be necessary to use an external CSV parser. See\n[this example](https://jsfiddle.net/highcharts/u59176h4/) of parsing\nCSV through the MIT licensed [Papa Parse](http://papaparse.com/)\nlibrary.",
          "samples": [
            {
              "name": "Data from CSV",
              "value": "highcharts/data/csv/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["string"] },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.csv",
          "name": "csv",
          "line": 1798,
          "lineEnd": 1817,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "csvURL": {
        "doclet": {
          "description": "An URL to a remote CSV dataset. Will be fetched when the chart is created\nusing Ajax.",
          "samples": [
            {
              "name": "Categorized bar chart with CSV and live polling",
              "value": "highcharts/data/livedata-columns"
            },
            {
              "name": "Time based line chart with CSV and live polling",
              "value": "highcharts/data/livedata-csv"
            }
          ],
          "type": { "names": ["string"] },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.csvURL",
          "name": "csvURL",
          "line": 2066,
          "lineEnd": 2077,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "dataRefreshRate": {
        "doclet": {
          "description": "Sets the refresh rate for data polling when importing remote dataset by\nsetting [data.csvURL](data.csvURL), [data.rowsURL](data.rowsURL),\n[data.columnsURL](data.columnsURL), or\n[data.googleSpreadsheetKey](data.googleSpreadsheetKey).\n\nNote that polling must be enabled by setting\n[data.enablePolling](data.enablePolling) to true.\n\nThe value is the number of seconds between pollings.\nIt cannot be set to less than 1 second.",
          "samples": [
            {
              "name": "Live data with user set refresh rate",
              "value": "highcharts/demo/live-data"
            }
          ],
          "defaultvalue": "1",
          "type": { "names": ["number"] },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.dataRefreshRate",
          "name": "dataRefreshRate",
          "line": 2098,
          "lineEnd": 2116,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "dateFormat": {
        "doclet": {
          "description": "Which of the predefined date formats in Date.prototype.dateFormats\nto use to parse date values. Defaults to a best guess based on what\nformat gives valid and ordered dates. Valid options include: `YYYY/mm/dd`,\n`dd/mm/YYYY`, `mm/dd/YYYY`, `dd/mm/YY`, `mm/dd/YY`.",
          "see": ["[data.parseDate](#data.parseDate)"],
          "samples": [
            {
              "name": "Best guess date format",
              "value": "highcharts/data/dateformat-auto/",
              "products": ["highcharts"]
            }
          ],
          "type": {
            "names": [
              "\"YYYY/mm/dd\"",
              "\"dd/mm/YYYY\"",
              "\"mm/dd/YYYY\"",
              "\"dd/mm/YYYY\"",
              "\"dd/mm/YY\"",
              "\"mm/dd/YY\""
            ]
          },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.dateFormat",
          "name": "dateFormat",
          "line": 1818,
          "lineEnd": 1834,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "decimalPoint": {
        "doclet": {
          "description": "The decimal point used for parsing numbers in the CSV.\n\nIf both this and data.delimiter is set to `undefined`, the parser will\nattempt to deduce the decimal point automatically.",
          "samples": [
            {
              "name": "Comma as decimal point",
              "value": "highcharts/data/delimiters/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["string"] },
          "defaultvalue": ".",
          "since": "4.1.0"
        },
        "meta": {
          "fullname": "data.decimalPoint",
          "name": "decimalPoint",
          "line": 1835,
          "lineEnd": 1848,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "enablePolling": {
        "doclet": {
          "description": "Enables automatic refetching of remote datasets every _n_ seconds (defined by\nsetting [data.dataRefreshRate](data.dataRefreshRate)).\n\nOnly works when either [data.csvURL](data.csvURL),\n[data.rowsURL](data.rowsURL), [data.columnsURL](data.columnsURL), or\n[data.googleSpreadsheetKey](data.googleSpreadsheetKey).",
          "samples": [
            { "name": "Live data", "value": "highcharts/demo/live-data" },
            {
              "name": "Categorized bar chart with CSV and live polling",
              "value": "highcharts/data/livedata-columns"
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.enablePolling",
          "name": "enablePolling",
          "line": 2117,
          "lineEnd": 2133,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "endColumn": {
        "doclet": {
          "description": "In tabular input data, the last column (indexed by 0) to use. Defaults\nto the last column containing data.",
          "samples": [
            {
              "name": "Limited data",
              "value": "highcharts/data/start-end/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.endColumn",
          "name": "endColumn",
          "line": 1849,
          "lineEnd": 1859,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "endRow": {
        "doclet": {
          "description": "In tabular input data, the last row (indexed by 0) to use. Defaults\nto the last row containing data.",
          "samples": [
            {
              "name": "Limited data",
              "value": "highcharts/data/start-end/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "4.0.4"
        },
        "meta": {
          "fullname": "data.endRow",
          "name": "endRow",
          "line": 1860,
          "lineEnd": 1870,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "firstRowAsNames": {
        "doclet": {
          "description": "Whether to use the first row in the data set as series names.",
          "samples": [
            {
              "name": "Don't get series names from the CSV",
              "value": "highcharts/data/start-end/",
              "products": ["highcharts"]
            },
            {
              "name": "Don't get series names from the CSV",
              "value": "highcharts/data/start-end/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "true",
          "since": "4.1.0",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "data.firstRowAsNames",
          "name": "firstRowAsNames",
          "line": 1871,
          "lineEnd": 1884,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "googleAPIKey": {
        "doclet": {
          "description": "The Google Spreadsheet API key required for access generated at [API Services\n/ Credentials](https://console.cloud.google.com/apis/credentials). See a\ncomprehensive tutorial for setting up the key at the\n[Hands-On Data Visualization](https://handsondataviz.org/google-sheets-api-key.html)\nbook website.",
          "samples": [
            {
              "name": "Load a Google Spreadsheet",
              "value": "highcharts/data/google-spreadsheet/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["string"] },
          "since": "9.2.2"
        },
        "meta": {
          "fullname": "data.googleAPIKey",
          "name": "googleAPIKey",
          "line": 1885,
          "lineEnd": 1898,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "googleSpreadsheetKey": {
        "doclet": {
          "description": "The key or `spreadsheetId` value for a Google Spreadsheet to load. See\n[developers.google.com](https://developers.google.com/sheets/api/guides/concepts)\nfor how to find the `spreadsheetId`.\n\nIn order for Google Sheets to load, a valid [googleAPIKey](#data.googleAPIKey)\nmust also be given.",
          "samples": [
            {
              "name": "Load a Google Spreadsheet",
              "value": "highcharts/data/google-spreadsheet/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["string"] },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.googleSpreadsheetKey",
          "name": "googleSpreadsheetKey",
          "line": 1899,
          "lineEnd": 1913,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "googleSpreadsheetRange": {
        "doclet": {
          "description": "The Google Spreadsheet `range` to use in combination with\n[googleSpreadsheetKey](#data.googleSpreadsheetKey). See\n[developers.google.com](https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/get)\nfor details.\n\nIf given, it takes precedence over `startColumn`, `endColumn`, `startRow` and\n`endRow`.",
          "examples": [
            "googleSpreadsheetRange: 'Fruit Consumption' // Load a named worksheet\ngoogleSpreadsheetRange: 'A:Z' // Load columns A to Z"
          ],
          "samples": [
            {
              "name": "Load a Google Spreadsheet",
              "value": "highcharts/data/google-spreadsheet/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["string", "undefined"] },
          "since": "9.2.2"
        },
        "meta": {
          "fullname": "data.googleSpreadsheetRange",
          "name": "googleSpreadsheetRange",
          "line": 1914,
          "lineEnd": 1933,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "googleSpreadsheetWorksheet": {
        "doclet": {
          "description": "No longer works since v9.2.2, that uses Google Sheets API v4. Instead, use\nthe [googleSpreadsheetRange](#data.googleSpreadsheetRange) option to load a\nspecific sheet.",
          "deprecated": true,
          "type": { "names": ["string"] },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.googleSpreadsheetWorksheet",
          "name": "googleSpreadsheetWorksheet",
          "line": 1934,
          "lineEnd": 1943,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "itemDelimiter": {
        "doclet": {
          "description": "Item or cell delimiter for parsing CSV. Defaults to the tab character\n`\\t` if a tab character is found in the CSV string, if not it defaults\nto `,`.\n\nIf this is set to false or undefined, the parser will attempt to deduce\nthe delimiter automatically.",
          "samples": [
            {
              "name": "Delimiters",
              "value": "highcharts/data/delimiters/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["string"] },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.itemDelimiter",
          "name": "itemDelimiter",
          "line": 1944,
          "lineEnd": 1958,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "lineDelimiter": {
        "doclet": {
          "description": "Line delimiter for parsing CSV.",
          "samples": [
            {
              "name": "Delimiters",
              "value": "highcharts/data/delimiters/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["string"] },
          "defaultvalue": "\\n",
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.lineDelimiter",
          "name": "lineDelimiter",
          "line": 1959,
          "lineEnd": 1969,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "parseDate": {
        "doclet": {
          "description": "A callback function to parse string representations of dates into\nJavaScript timestamps. Should return an integer timestamp on success.",
          "see": ["[dateFormat](#data.dateFormat)"],
          "type": { "names": ["Highcharts.DataParseDateCallbackFunction"] },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.parseDate",
          "name": "parseDate",
          "line": 1985,
          "lineEnd": 1994,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "parsed": {
        "doclet": {
          "description": "A callback function to access the parsed columns, the two-dimensional\ninput data array directly, before they are interpreted into series\ndata and categories. Return `false` to stop completion, or call\n`this.complete()` to continue async.",
          "see": ["[data.complete](#data.complete)"],
          "samples": [
            {
              "name": "Modify data after parse",
              "value": "highcharts/data/parsed/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Highcharts.DataParsedCallbackFunction"] },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.parsed",
          "name": "parsed",
          "line": 1970,
          "lineEnd": 1984,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "rows": {
        "doclet": {
          "description": "The same as the columns input option, but defining rows instead of\ncolumns.",
          "see": ["[data.columns](#data.columns)"],
          "samples": [
            {
              "name": "Data in rows",
              "value": "highcharts/data/rows/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Array.<Array.<Highcharts.DataValueType>>"] },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.rows",
          "name": "rows",
          "line": 1995,
          "lineEnd": 2007,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "rowsURL": {
        "doclet": {
          "description": "A URL to a remote JSON dataset, structured as a row array.\nWill be fetched when the chart is created using Ajax.",
          "samples": [
            {
              "name": "Rows with live polling",
              "value": "highcharts/data/livedata-rows"
            }
          ],
          "type": { "names": ["string"] },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.rowsURL",
          "name": "rowsURL",
          "line": 2078,
          "lineEnd": 2087,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "seriesMapping": {
        "doclet": {
          "description": "An array containing dictionaries for each series. A dictionary exists of\nPoint property names as the key and the CSV column index as the value.",
          "samples": [
            {
              "name": "Label from data set",
              "value": "highcharts/data/seriesmapping-label/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Array.<Highcharts.Dictionary.<number>>"] },
          "since": "4.0.4"
        },
        "meta": {
          "fullname": "data.seriesMapping",
          "name": "seriesMapping",
          "line": 2008,
          "lineEnd": 2018,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "startColumn": {
        "doclet": {
          "description": "In tabular input data, the first column (indexed by 0) to use.",
          "samples": [
            {
              "name": "Limited data",
              "value": "highcharts/data/start-end/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "0",
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.startColumn",
          "name": "startColumn",
          "line": 2019,
          "lineEnd": 2029,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "startRow": {
        "doclet": {
          "description": "In tabular input data, the first row (indexed by 0) to use.",
          "samples": [
            {
              "name": "Limited data",
              "value": "highcharts/data/start-end/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "0",
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.startRow",
          "name": "startRow",
          "line": 2030,
          "lineEnd": 2040,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "switchRowsAndColumns": {
        "doclet": {
          "description": "Switch rows and columns of the input data, so that `this.columns`\neffectively becomes the rows of the data set, and the rows are interpreted\nas series.",
          "samples": [
            {
              "name": "Switch rows and columns",
              "value": "highcharts/data/switchrowsandcolumns/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.switchRowsAndColumns",
          "name": "switchRowsAndColumns",
          "line": 2041,
          "lineEnd": 2053,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "table": {
        "doclet": {
          "description": "An HTML table or the id of such to be parsed as input data. Related\noptions are `startRow`, `endRow`, `startColumn` and `endColumn` to\ndelimit what part of the table is used.",
          "samples": [
            {
              "name": "Parsed table",
              "value": "highcharts/demo/column-parsed/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["string", "global.HTMLElement"] },
          "since": "4.0.0"
        },
        "meta": {
          "fullname": "data.table",
          "name": "table",
          "line": 2054,
          "lineEnd": 2065,
          "filename": "code/es-modules/Extensions/Data.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsDataOptions",
    "extended": 1
  },
  "defs": {
    "doclet": {
      "description": "Options for configuring markers for annotations.\n\nAn example of the arrow marker:\n<pre>\n{\n  arrow: {\n    id: 'arrow',\n    tagName: 'marker',\n    refY: 5,\n    refX: 5,\n    markerWidth: 10,\n    markerHeight: 10,\n    children: [{\n      tagName: 'path',\n      attrs: {\n        d: 'M 0 0 L 10 5 L 0 10 Z',\n        'stroke-width': 0\n      }\n    }]\n  }\n}\n</pre>",
      "type": { "names": ["Highcharts.Dictionary.<Highcharts.ASTNode>"] },
      "since": "6.0.0",
      "samples": [
        {
          "name": "Define a custom marker for annotations",
          "value": "highcharts/annotations/custom-markers/"
        },
        {
          "name": "Define markers in a styled mode",
          "value": "highcharts/css/annotations-markers/"
        }
      ]
    },
    "meta": {
      "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js",
      "name": "defs",
      "fullname": "defs",
      "line": 7,
      "lineEnd": 40,
      "column": 0
    },
    "children": {
      "arrow": {
        "doclet": { "type": { "names": ["Highcharts.ASTNode"] } },
        "meta": {
          "fullname": "defs.arrow",
          "name": "arrow",
          "line": 42,
          "lineEnd": 44,
          "column": 4,
          "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js"
        },
        "children": {
          "attributes": {
            "doclet": { "type": { "names": ["*"] } },
            "meta": {
              "fullname": "defs.arrow.attributes",
              "name": "attributes",
              "line": 47,
              "lineEnd": 47,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js"
            },
            "children": {
              "id": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "arrow"
                },
                "meta": {
                  "fullname": "defs.arrow.attributes.id",
                  "name": "id",
                  "line": 48,
                  "lineEnd": 48,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js",
                  "default": "arrow"
                },
                "children": {},
                "extended": 1
              },
              "markerHeight": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 10
                },
                "meta": {
                  "fullname": "defs.arrow.attributes.markerHeight",
                  "name": "markerHeight",
                  "line": 52,
                  "lineEnd": 52,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js",
                  "default": 10
                },
                "children": {},
                "extended": 1
              },
              "markerWidth": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 10
                },
                "meta": {
                  "fullname": "defs.arrow.attributes.markerWidth",
                  "name": "markerWidth",
                  "line": 51,
                  "lineEnd": 51,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js",
                  "default": 10
                },
                "children": {},
                "extended": 1
              },
              "refX": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 9
                },
                "meta": {
                  "fullname": "defs.arrow.attributes.refX",
                  "name": "refX",
                  "line": 50,
                  "lineEnd": 50,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js",
                  "default": 9
                },
                "children": {},
                "extended": 1
              },
              "refY": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 5
                },
                "meta": {
                  "fullname": "defs.arrow.attributes.refY",
                  "name": "refY",
                  "line": 49,
                  "lineEnd": 49,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js",
                  "default": 5
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsDefsArrowAttributesOptions",
            "extended": 1
          },
          "children": {
            "doclet": {
              "type": { "names": ["Array.<Highcharts.DefsOptions>"] }
            },
            "meta": {
              "fullname": "defs.arrow.children",
              "name": "children",
              "line": 54,
              "lineEnd": 56,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "tagName": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "marker"
            },
            "meta": {
              "fullname": "defs.arrow.tagName",
              "name": "tagName",
              "line": 46,
              "lineEnd": 46,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js",
              "default": "marker"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsDefsArrowOptions",
        "extended": 1
      },
      "reverse-arrow": {
        "doclet": { "type": { "names": ["Highcharts.ASTNode"] } },
        "meta": {
          "fullname": "defs.reverse-arrow",
          "name": "reverse-arrow",
          "line": 65,
          "lineEnd": 67,
          "column": 4,
          "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js"
        },
        "children": {
          "attributes": {
            "doclet": { "type": { "names": ["*"] } },
            "meta": {
              "fullname": "defs.reverse-arrow.attributes",
              "name": "attributes",
              "line": 70,
              "lineEnd": 70,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js"
            },
            "children": {
              "id": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "reverse-arrow"
                },
                "meta": {
                  "fullname": "defs.reverse-arrow.attributes.id",
                  "name": "id",
                  "line": 71,
                  "lineEnd": 71,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js",
                  "default": "reverse-arrow"
                },
                "children": {},
                "extended": 1
              },
              "markerHeight": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 10
                },
                "meta": {
                  "fullname": "defs.reverse-arrow.attributes.markerHeight",
                  "name": "markerHeight",
                  "line": 75,
                  "lineEnd": 75,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js",
                  "default": 10
                },
                "children": {},
                "extended": 1
              },
              "markerWidth": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 10
                },
                "meta": {
                  "fullname": "defs.reverse-arrow.attributes.markerWidth",
                  "name": "markerWidth",
                  "line": 74,
                  "lineEnd": 74,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js",
                  "default": 10
                },
                "children": {},
                "extended": 1
              },
              "refX": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 1
                },
                "meta": {
                  "fullname": "defs.reverse-arrow.attributes.refX",
                  "name": "refX",
                  "line": 73,
                  "lineEnd": 73,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js",
                  "default": 1
                },
                "children": {},
                "extended": 1
              },
              "refY": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 5
                },
                "meta": {
                  "fullname": "defs.reverse-arrow.attributes.refY",
                  "name": "refY",
                  "line": 72,
                  "lineEnd": 72,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js",
                  "default": 5
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsDefsReverseArrowAttributesOptions",
            "extended": 1
          },
          "tagName": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "marker"
            },
            "meta": {
              "fullname": "defs.reverse-arrow.tagName",
              "name": "tagName",
              "line": 69,
              "lineEnd": 69,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js",
              "default": "marker"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsDefsReverseArrowOptions",
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsDefsOptions",
    "extended": 1
  },
  "drilldown": {
    "doclet": {
      "description": "Options for drill down, the concept of inspecting increasingly high\nresolution data through clicking on chart items like columns or pie slices.\n\nThe drilldown feature requires the drilldown.js file to be loaded,\nfound in the modules directory of the download package, or online at\n[code.highcharts.com/modules/drilldown.js](https://code.highcharts.com/modules/drilldown.js).",
      "samples": [
        {
          "name": "Organization chart drilldown",
          "value": "highcharts/series-organization/drilldown",
          "products": ["highcharts"]
        }
      ],
      "products": ["highcharts", "highmaps"],
      "requires": ["module:modules/drilldown"],
      "type": { "names": ["*"] }
    },
    "meta": {
      "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
      "name": "drilldown",
      "fullname": "drilldown",
      "line": 13,
      "lineEnd": 17,
      "column": 0
    },
    "children": {
      "activeAxisLabelStyle": {
        "doclet": {
          "description": "Additional styles to apply to the X axis label for a point that\nhas drilldown data. By default it is underlined and blue to invite\nto interaction.\n\nIn styled mode, active label styles can be set with the\n`.highcharts-drilldown-axis-label` class.",
          "samples": [
            {
              "name": "Label styles",
              "value": "highcharts/drilldown/labels/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Highcharts.CSSObject"] },
          "defaultvalue": "{ \"cursor\": \"pointer\", \"color\": \"#003399\", \"fontWeight\": \"bold\", \"textDecoration\": \"underline\" }",
          "since": "3.0.8",
          "products": ["highcharts", "highmaps"]
        },
        "meta": {
          "fullname": "drilldown.activeAxisLabelStyle",
          "name": "activeAxisLabelStyle",
          "line": 35,
          "lineEnd": 48,
          "column": 4,
          "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js"
        },
        "children": {},
        "extended": 1
      },
      "activeDataLabelStyle": {
        "doclet": {
          "description": "Additional styles to apply to the data label of a point that has\ndrilldown data. By default it is underlined and blue to invite to\ninteraction.\n\nIn styled mode, active data label styles can be applied with the\n`.highcharts-drilldown-data-label` class.",
          "samples": [
            {
              "name": "Label styles",
              "value": "highcharts/drilldown/labels/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Highcharts.CSSObject"] },
          "defaultvalue": "{ \"cursor\": \"pointer\", \"color\": \"#003399\", \"fontWeight\": \"bold\", \"textDecoration\": \"underline\" }",
          "since": "3.0.8",
          "products": ["highcharts", "highmaps"]
        },
        "meta": {
          "fullname": "drilldown.activeDataLabelStyle",
          "name": "activeDataLabelStyle",
          "line": 95,
          "lineEnd": 110,
          "column": 4,
          "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js"
        },
        "children": {
          "color": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "#0022ff"
            },
            "meta": {
              "fullname": "drilldown.activeDataLabelStyle.color",
              "name": "color",
              "line": 113,
              "lineEnd": 113,
              "column": 8,
              "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
              "default": "#0022ff"
            },
            "children": {},
            "extended": 1
          },
          "cursor": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "pointer"
            },
            "meta": {
              "fullname": "drilldown.activeDataLabelStyle.cursor",
              "name": "cursor",
              "line": 112,
              "lineEnd": 112,
              "column": 8,
              "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
              "default": "pointer"
            },
            "children": {},
            "extended": 1
          },
          "fontWeight": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "bold"
            },
            "meta": {
              "fullname": "drilldown.activeDataLabelStyle.fontWeight",
              "name": "fontWeight",
              "line": 114,
              "lineEnd": 114,
              "column": 8,
              "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
              "default": "bold"
            },
            "children": {},
            "extended": 1
          },
          "textDecoration": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "underline"
            },
            "meta": {
              "fullname": "drilldown.activeDataLabelStyle.textDecoration",
              "name": "textDecoration",
              "line": 115,
              "lineEnd": 115,
              "column": 8,
              "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
              "default": "underline"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsDrilldownActiveDataLabelStyleOptions",
        "extended": 1
      },
      "allowPointDrilldown": {
        "doclet": {
          "description": "When this option is false, clicking a single point will drill down\nall points in the same category, equivalent to clicking the X axis\nlabel.",
          "samples": [
            {
              "name": "Don't allow point drilldown",
              "value": "highcharts/drilldown/allowpointdrilldown-false/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "true",
          "since": "4.1.7",
          "products": ["highcharts"]
        },
        "meta": {
          "fullname": "drilldown.allowPointDrilldown",
          "name": "allowPointDrilldown",
          "line": 35,
          "lineEnd": 48,
          "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "animation": {
        "doclet": {
          "description": "Set the animation for all drilldown animations. Animation of a drilldown\noccurs when drilling between a column point and a column series,\nor a pie slice and a full pie series. Drilldown can still be used\nbetween series and points of different types, but animation will\nnot occur.\n\nThe animation can either be set as a boolean or a configuration\nobject. If `true`, it will use the 'swing' jQuery easing and a duration\nof 500 ms. If used as a configuration object, the following properties\nare supported:\n\n- `duration`: The duration of the animation in milliseconds.\n\n- `easing`: A string reference to an easing function set on the `Math`\n  object. See\n  [the easing demo](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-animation-easing/).",
          "type": { "names": ["boolean", "Highcharts.AnimationOptionsObject"] },
          "since": "3.0.8",
          "products": ["highcharts", "highmaps"]
        },
        "meta": {
          "fullname": "drilldown.animation",
          "name": "animation",
          "line": 117,
          "lineEnd": 138,
          "column": 4,
          "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js"
        },
        "children": {},
        "extended": 1
      },
      "breadcrumbs": {
        "doclet": {
          "description": "Options for the breadcrumbs, the navigation at the top leading the way\nup through the drilldown levels.",
          "since": "10.0.0",
          "products": ["highcharts", "highmaps"],
          "extends": "navigation.breadcrumbs"
        },
        "meta": {
          "fullname": "drilldown.breadcrumbs",
          "name": "breadcrumbs",
          "line": 49,
          "lineEnd": 57,
          "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
          "column": 0
        },
        "children": {
          "buttonSpacing": {},
          "buttonTheme": {},
          "events": {},
          "floating": {},
          "format": {},
          "formatter": {},
          "position": {},
          "relativeTo": {},
          "rtl": {},
          "separator": {},
          "showFullPath": {},
          "style": {},
          "useHTML": {},
          "zIndex": {}
        },
        "flutterClassName": "HighchartsDrilldownBreadcrumbsOptions",
        "extended": 1
      },
      "drillUpButton": {
        "doclet": {
          "description": "Options for the drill up button that appears when drilling down on a\nseries. The text for the button is defined in\n[lang.drillUpText](#lang.drillUpText).\n\nThis option is deprecated since 9.3.2, use `drilldown.breadcrumbs`\ninstead.",
          "samples": [
            {
              "name": "Breadcrumbs set up like a legacy button",
              "value": "highcharts/breadcrumbs/single-button"
            },
            {
              "name": "Drill up button",
              "value": "highcharts/drilldown/drillupbutton/",
              "products": ["highcharts"]
            },
            {
              "name": "Drill up button",
              "value": "highcharts/drilldown/drillupbutton/",
              "products": ["highmaps"]
            }
          ],
          "since": "3.0.8",
          "products": ["highcharts", "highmaps"],
          "deprecated": true,
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "drilldown.drillUpButton",
          "name": "drillUpButton",
          "line": 143,
          "lineEnd": 161,
          "column": 4,
          "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js"
        },
        "children": {
          "position": {
            "doclet": {
              "description": "Positioning options for the button within the `relativeTo` box.\nAvailable properties are `x`, `y`, `align` and `verticalAlign`.",
              "type": { "names": ["Highcharts.AlignObject"] },
              "since": "3.0.8",
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "drilldown.drillUpButton.position",
              "name": "position",
              "line": 163,
              "lineEnd": 172,
              "column": 8,
              "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js"
            },
            "children": {
              "align": {
                "doclet": {
                  "description": "Horizontal alignment.",
                  "type": { "names": ["Highcharts.AlignValue"] },
                  "since": "3.0.8",
                  "defaultvalue": "right"
                },
                "meta": {
                  "fullname": "drilldown.drillUpButton.position.align",
                  "name": "align",
                  "line": 202,
                  "lineEnd": 209,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
                  "default": "right"
                },
                "children": {},
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "description": "Vertical alignment of the button.",
                  "type": { "names": ["Highcharts.VerticalAlignValue"] },
                  "defaultvalue": "top",
                  "products": ["highcharts", "highmaps"],
                  "since": "3.0.8"
                },
                "meta": {
                  "fullname": "drilldown.drillUpButton.position.verticalAlign",
                  "name": "verticalAlign",
                  "line": 202,
                  "lineEnd": 209,
                  "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "x": {
                "doclet": {
                  "description": "The X offset of the button.",
                  "since": "3.0.8",
                  "type": { "names": ["number"] },
                  "defaultvalue": -10
                },
                "meta": {
                  "fullname": "drilldown.drillUpButton.position.x",
                  "name": "x",
                  "line": 216,
                  "lineEnd": 218,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
                  "default": -10
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "description": "The Y offset of the button.",
                  "since": "3.0.8",
                  "type": { "names": ["number"] },
                  "defaultvalue": 10
                },
                "meta": {
                  "fullname": "drilldown.drillUpButton.position.y",
                  "name": "y",
                  "line": 220,
                  "lineEnd": 222,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
                  "default": 10
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsDrilldownDrillUpButtonPositionOptions",
            "extended": 1
          },
          "relativeTo": {
            "doclet": {
              "description": "What box to align the button to. Can be either `plotBox` or\n`spacingBox`.",
              "type": { "names": ["Highcharts.ButtonRelativeToValue"] },
              "defaultvalue": "plotBox",
              "since": "3.0.8",
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "drilldown.drillUpButton.relativeTo",
              "name": "relativeTo",
              "line": 163,
              "lineEnd": 172,
              "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "theme": {
            "doclet": {
              "description": "A collection of attributes for the button. The object takes SVG\nattributes like `fill`, `stroke`, `stroke-width` or `r`, the border\nradius. The theme also supports `style`, a collection of CSS\nproperties for the text. Equivalent attributes for the hover state\nare given in `theme.states.hover`.\n\nIn styled mode, drill-up button styles can be applied with the\n`.highcharts-drillup-button` class.",
              "samples": [
                {
                  "name": "Button theming",
                  "value": "highcharts/drilldown/drillupbutton/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Button theming",
                  "value": "highcharts/drilldown/drillupbutton/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["Object"] },
              "since": "3.0.8",
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "drilldown.drillUpButton.theme",
              "name": "theme",
              "line": 173,
              "lineEnd": 192,
              "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsDrilldownDrillUpButtonOptions",
        "extended": 1
      },
      "series": {
        "doclet": {
          "description": "An array of series configurations for the drill down. Each series\nconfiguration uses the same syntax as the [series](#series) option set.\nThese drilldown series are hidden by default. The drilldown series is\nlinked to the parent series' point by its `id`.",
          "type": { "names": ["Array.<Highcharts.SeriesOptionsType>"] },
          "since": "3.0.8",
          "products": ["highcharts", "highmaps"]
        },
        "meta": {
          "fullname": "drilldown.series",
          "name": "series",
          "line": 58,
          "lineEnd": 68,
          "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsDrilldownOptions",
    "extended": 1
  },
  "exporting": {
    "doclet": {
      "description": "Options for the exporting module. For an overview on the matter, see\n[the docs](https://www.highcharts.com/docs/export-module/export-module-overview) and\nread our [Fair Usage Policy](https://www.highcharts.com/docs/export-module/privacy-disclaimer-export).",
      "requires": ["module:modules/exporting"],
      "type": { "names": ["*"] }
    },
    "meta": {
      "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
      "name": "exporting",
      "fullname": "exporting",
      "line": 13,
      "lineEnd": 17,
      "column": 0
    },
    "children": {
      "accessibility": {
        "doclet": {
          "description": "Accessibility options for the exporting menu. Requires the\nAccessibility module.",
          "since": "7.1.0",
          "requires": ["module:modules/accessibility"],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "exporting.accessibility",
          "name": "accessibility",
          "line": 921,
          "lineEnd": 927,
          "column": 8,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js"
        },
        "children": {
          "enabled": {
            "doclet": {
              "description": "Enable accessibility support for the export menu.",
              "since": "7.1.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "exporting.accessibility.enabled",
              "name": "enabled",
              "line": 929,
              "lineEnd": 933,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsExportingAccessibilityOptions",
        "extended": 1
      },
      "allowHTML": {
        "doclet": {
          "description": "Experimental setting to allow HTML inside the chart (added through\nthe `useHTML` options), directly in the exported image. This allows\nyou to preserve complicated HTML structures like tables or bi-directional\ntext in exported charts.\n\nDisclaimer: The HTML is rendered in a `foreignObject` tag in the\ngenerated SVG. The official export server is based on PhantomJS,\nwhich supports this, but other SVG clients, like Batik, does not\nsupport it. This also applies to downloaded SVG that you want to\nopen in a desktop client.",
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "4.1.8"
        },
        "meta": {
          "fullname": "exporting.allowHTML",
          "name": "allowHTML",
          "line": 28,
          "lineEnd": 44,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "allowTableSorting": {
        "doclet": {
          "description": "Allows the end user to sort the data table by clicking on column headers.",
          "since": "10.3.3",
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "exporting.allowTableSorting",
          "name": "allowTableSorting",
          "line": 28,
          "lineEnd": 44,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "applyStyleSheets": {
        "doclet": {
          "description": "Allow exporting a chart retaining any user-applied CSS.\n\nNote that this is is default behavior in [styledMode](#chart.styledMode).",
          "see": ["[styledMode](#chart.styledMode)"],
          "samples": [{ "name": "/", "value": "", "products": ["highcharts"] }],
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "12.0.0"
        },
        "meta": {
          "fullname": "exporting.applyStyleSheets",
          "name": "applyStyleSheets",
          "line": 52,
          "lineEnd": 65,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "buttons": {
        "doclet": {
          "description": "Options for the export related buttons, print and export. In addition\nto the default buttons listed here, custom buttons can be added.\nSee [navigation.buttonOptions](#navigation.buttonOptions) for general\noptions.",
          "type": { "names": ["Highcharts.Dictionary.<*>"] },
          "requires": ["module:modules/exporting"]
        },
        "meta": {
          "fullname": "exporting.buttons",
          "name": "buttons",
          "line": 315,
          "lineEnd": 323,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js"
        },
        "children": {
          "contextButton": {
            "doclet": {
              "description": "Options for the export button.\n\nIn styled mode, export button styles can be applied with the\n`.highcharts-contextbutton` class.",
              "declare": "Highcharts.ExportingButtonsOptionsObject",
              "extends": "navigation.buttonOptions",
              "requires": ["module:modules/exporting"]
            },
            "meta": {
              "fullname": "exporting.buttons.contextButton",
              "name": "contextButton",
              "line": 325,
              "lineEnd": 334,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js"
            },
            "children": {
              "className": {
                "doclet": {
                  "description": "The class name of the context button.",
                  "type": { "names": ["string"] },
                  "defaultvalue": "highcharts-contextbutton"
                },
                "meta": {
                  "fullname": "exporting.buttons.contextButton.className",
                  "name": "className",
                  "line": 336,
                  "lineEnd": 346,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
                  "default": "highcharts-contextbutton"
                },
                "children": {},
                "extended": 1
              },
              "menuClassName": {
                "doclet": {
                  "description": "The class name of the menu appearing from the button.",
                  "type": { "names": ["string"] },
                  "defaultvalue": "highcharts-contextmenu"
                },
                "meta": {
                  "fullname": "exporting.buttons.contextButton.menuClassName",
                  "name": "menuClassName",
                  "line": 369,
                  "lineEnd": 371,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
                  "default": "highcharts-contextmenu"
                },
                "children": {},
                "extended": 1
              },
              "menuItems": {
                "doclet": {
                  "description": "A collection of strings pointing to config options for the menu\nitems. The config options are defined in the\n`menuItemDefinitions` option.\n\nBy default, there is the \"View in full screen\" and \"Print\" menu\nitems, plus one menu item for each of the available export types.",
                  "samples": [
                    {
                      "name": "Menu item definitions",
                      "value": "highcharts/exporting/menuitemdefinitions/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Menu item definitions",
                      "value": "highcharts/exporting/menuitemdefinitions/",
                      "products": ["highstock"]
                    },
                    {
                      "name": "Menu item definitions",
                      "value": "highcharts/exporting/menuitemdefinitions/",
                      "products": ["highmaps"]
                    }
                  ],
                  "type": { "names": ["Array.<string>"] },
                  "defaultvalue": "[\"viewFullscreen\", \"printChart\", \"separator\", \"downloadPNG\", \"downloadJPEG\", \"downloadSVG\"]",
                  "since": "2.0.0"
                },
                "meta": {
                  "fullname": "exporting.buttons.contextButton.menuItems",
                  "name": "menuItems",
                  "line": 398,
                  "lineEnd": 416,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js"
                },
                "children": {},
                "extended": 1
              },
              "onclick": {
                "doclet": {
                  "description": "A click handler callback to use on the button directly instead of\nthe popup menu.",
                  "samples": [
                    {
                      "name": "Skip the menu and export the chart directly",
                      "value": "highcharts/exporting/buttons-contextbutton-onclick/"
                    }
                  ],
                  "type": { "names": ["function"] },
                  "since": "2.0.0"
                },
                "meta": {
                  "fullname": "exporting.buttons.contextButton.onclick",
                  "name": "onclick",
                  "line": 336,
                  "lineEnd": 346,
                  "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "symbol": {
                "doclet": {
                  "description": "The symbol for the button. Points to a definition function in\nthe `Highcharts.Renderer.symbols` collection. The default\n`menu` function is part of the exporting module. Possible\nvalues are \"circle\", \"square\", \"diamond\", \"triangle\",\n\"triangle-down\", \"menu\", \"menuball\" or custom shape.",
                  "samples": [
                    {
                      "name": "Use a circle for symbol",
                      "value": "highcharts/exporting/buttons-contextbutton-symbol/"
                    },
                    {
                      "name": "Custom shape as symbol",
                      "value": "highcharts/exporting/buttons-contextbutton-symbol-custom/"
                    }
                  ],
                  "type": {
                    "names": [
                      "Highcharts.SymbolKeyValue",
                      "\"menu\"",
                      "\"menuball\"",
                      "string"
                    ]
                  },
                  "since": "2.0.0",
                  "defaultvalue": "menu"
                },
                "meta": {
                  "fullname": "exporting.buttons.contextButton.symbol",
                  "name": "symbol",
                  "line": 373,
                  "lineEnd": 387,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
                  "default": "menu"
                },
                "children": {},
                "extended": 1
              },
              "symbolFill": {
                "doclet": {
                  "description": "See [navigation.buttonOptions.symbolFill](#navigation.buttonOptions.symbolFill).",
                  "type": { "names": ["Highcharts.ColorString"] },
                  "defaultvalue": "#666666",
                  "since": "2.0.0"
                },
                "meta": {
                  "fullname": "exporting.buttons.contextButton.symbolFill",
                  "name": "symbolFill",
                  "line": 347,
                  "lineEnd": 355,
                  "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "titleKey": {
                "doclet": {
                  "description": "The key to a [lang](#lang) option setting that is used for the\nbutton's title tooltip. When the key is `contextButtonTitle`, it\nrefers to [lang.contextButtonTitle](#lang.contextButtonTitle)\nthat defaults to \"Chart context menu\".",
                  "since": "6.1.4",
                  "type": { "names": ["string"] },
                  "defaultvalue": "contextButtonTitle"
                },
                "meta": {
                  "fullname": "exporting.buttons.contextButton.titleKey",
                  "name": "titleKey",
                  "line": 389,
                  "lineEnd": 396,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
                  "default": "contextButtonTitle"
                },
                "children": {},
                "extended": 1
              },
              "x": {
                "doclet": {
                  "description": "The horizontal position of the button relative to the `align`\noption.",
                  "type": { "names": ["number"] },
                  "defaultvalue": "-10",
                  "since": "2.0.0"
                },
                "meta": {
                  "fullname": "exporting.buttons.contextButton.x",
                  "name": "x",
                  "line": 356,
                  "lineEnd": 364,
                  "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": -5
                },
                "meta": {
                  "fullname": "exporting.buttons.contextButton.y",
                  "name": "y",
                  "line": 425,
                  "lineEnd": 425,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
                  "default": -5
                },
                "children": {},
                "extended": 1
              },
              "align": {},
              "buttonSpacing": {},
              "enabled": {},
              "height": {},
              "symbolSize": {},
              "symbolStroke": {},
              "symbolStrokeWidth": {},
              "symbolX": {},
              "symbolY": {},
              "text": {},
              "theme": {},
              "useHTML": {},
              "verticalAlign": {},
              "width": {}
            },
            "flutterClassName": "HighchartsExportingButtonsContextButtonOptions",
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsExportingButtonsOptions",
        "extended": 1
      },
      "chartOptions": {
        "doclet": {
          "description": "Additional chart options to be merged into the chart before exporting to\nan image format. This does not apply to printing the chart via the export\nmenu.\n\nFor example, a common use case is to add data labels to improve\nreadability of the exported chart, or to add a printer-friendly color\nscheme to exported PDFs.",
          "samples": [
            {
              "name": "Added data labels",
              "value": "highcharts/exporting/chartoptions-data-labels/",
              "products": ["highcharts"]
            },
            {
              "name": "Added data labels",
              "value": "highcharts/exporting/chartoptions-data-labels/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.Options"] }
        },
        "meta": {
          "fullname": "exporting.chartOptions",
          "name": "chartOptions",
          "line": 66,
          "lineEnd": 82,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "csv": {
        "doclet": {
          "description": "Options for exporting data to CSV or ExCel, or displaying the data\nin a HTML table or a JavaScript structure.\n\nThis module adds data export options to the export menu and provides\nfunctions like `Chart.getCSV`, `Chart.getTable`, `Chart.getDataRows`\nand `Chart.viewData`.\n\nThe XLS converter is limited and only creates a HTML string that is\npassed for download, which works but creates a warning before\nopening. The workaround for this is to use a third party XLSX\nconverter, as demonstrated in the sample below.",
          "samples": [
            {
              "name": "Categorized data",
              "value": "highcharts/export-data/categorized/"
            },
            {
              "name": "Highcharts Stock time axis",
              "value": "highcharts/export-data/stock-timeaxis/"
            },
            {
              "name": "Using a third party XLSX converter",
              "value": "highcharts/export-data/xlsx/"
            }
          ],
          "since": "6.0.0",
          "requires": ["module:modules/export-data"],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "exporting.csv",
          "name": "csv",
          "line": 23,
          "lineEnd": 34,
          "column": 4,
          "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js"
        },
        "children": {
          "annotations": {
            "doclet": {
              "description": "Options for annotations in the export-data table.",
              "since": "8.2.0",
              "requires": [
                "module:modules/export-data",
                "module:modules/annotations"
              ],
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "exporting.csv.annotations",
              "name": "annotations",
              "line": 57,
              "lineEnd": 66,
              "column": 8,
              "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js"
            },
            "children": {
              "itemDelimiter": {
                "doclet": {
                  "description": "The way to mark the separator for annotations\ncombined in one export-data table cell.",
                  "since": "8.2.0",
                  "requires": ["module:modules/annotations"],
                  "type": { "names": ["string"] },
                  "defaultvalue": "; "
                },
                "meta": {
                  "fullname": "exporting.csv.annotations.itemDelimiter",
                  "name": "itemDelimiter",
                  "line": 68,
                  "lineEnd": 74,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
                  "default": "; "
                },
                "children": {},
                "extended": 1
              },
              "join": {
                "doclet": {
                  "description": "When several labels are assigned to a specific point,\nthey will be displayed in one field in the table.",
                  "samples": [
                    {
                      "name": "Concatenate point annotations with itemDelimiter set.",
                      "value": "highcharts/export-data/join-annotations/"
                    }
                  ],
                  "since": "8.2.0",
                  "requires": ["module:modules/annotations"],
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "exporting.csv.annotations.join",
                  "name": "join",
                  "line": 76,
                  "lineEnd": 85,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsExportingCsvAnnotationsOptions",
            "extended": 1
          },
          "columnHeaderFormatter": {
            "doclet": {
              "description": "Formatter callback for the column headers. Parameters are:\n- `item` - The series or axis object)\n- `key` -  The point key, for example y or z\n- `keyLength` - The amount of value keys for this item, for\n  example a range series has the keys `low` and `high` so the\n  key length is 2.\n\nIf [useMultiLevelHeaders](#exporting.useMultiLevelHeaders) is\ntrue, columnHeaderFormatter by default returns an object with\ncolumnTitle and topLevelColumnTitle for each key. Columns with\nthe same topLevelColumnTitle have their titles merged into a\nsingle cell with colspan for table/Excel export.\n\nIf `useMultiLevelHeaders` is false, or for CSV export, it returns\nthe series name, followed by the key if there is more than one\nkey.\n\nFor the axis it returns the axis title or \"Category\" or\n\"DateTime\" by default.\n\nReturn `false` to use Highcharts' proposed header.",
              "samples": [
                {
                  "name": "Multiple table headers",
                  "value": "highcharts/export-data/multilevel-table"
                }
              ],
              "type": { "names": ["function", "null"] },
              "since": "6.0.0",
              "defaultvalue": null
            },
            "meta": {
              "fullname": "exporting.csv.columnHeaderFormatter",
              "name": "columnHeaderFormatter",
              "line": 88,
              "lineEnd": 115,
              "column": 8,
              "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
              "default": null
            },
            "children": {},
            "extended": 1
          },
          "dateFormat": {
            "doclet": {
              "description": "Which date format to use for exported dates on a datetime X axis.\nSee `Highcharts.dateFormat`.",
              "since": "6.0.0",
              "type": { "names": ["string"] },
              "defaultvalue": "%Y-%m-%d %H:%M:%S"
            },
            "meta": {
              "fullname": "exporting.csv.dateFormat",
              "name": "dateFormat",
              "line": 117,
              "lineEnd": 120,
              "column": 8,
              "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
              "default": "%Y-%m-%d %H:%M:%S"
            },
            "children": {},
            "extended": 1
          },
          "decimalPoint": {
            "doclet": {
              "description": "Which decimal point to use for exported CSV. Defaults to the same\nas the browser locale, typically `.` (English) or `,` (German,\nFrench etc).",
              "type": { "names": ["string", "null"] },
              "since": "6.0.4",
              "defaultvalue": null
            },
            "meta": {
              "fullname": "exporting.csv.decimalPoint",
              "name": "decimalPoint",
              "line": 122,
              "lineEnd": 129,
              "column": 8,
              "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
              "default": null
            },
            "children": {},
            "extended": 1
          },
          "itemDelimiter": {
            "doclet": {
              "description": "The item delimiter in the exported data. Use `;` for direct\nexporting to Excel. Defaults to a best guess based on the browser\nlocale. If the locale _decimal point_ is `,`, the `itemDelimiter`\ndefaults to `;`, otherwise the `itemDelimiter` defaults to `,`.",
              "type": { "names": ["string", "null"] },
              "since": "6.0.0",
              "defaultvalue": null
            },
            "meta": {
              "fullname": "exporting.csv.itemDelimiter",
              "name": "itemDelimiter",
              "line": 131,
              "lineEnd": 138,
              "column": 8,
              "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
              "default": null
            },
            "children": {},
            "extended": 1
          },
          "lineDelimiter": {
            "doclet": {
              "description": "The line delimiter in the exported data, defaults to a newline.",
              "since": "6.0.0",
              "type": { "names": ["string"] },
              "defaultvalue": "\n"
            },
            "meta": {
              "fullname": "exporting.csv.lineDelimiter",
              "name": "lineDelimiter",
              "line": 140,
              "lineEnd": 142,
              "column": 8,
              "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
              "default": "\n"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsExportingCsvOptions",
        "extended": 1
      },
      "enabled": {
        "doclet": {
          "description": "Whether to enable the exporting module. Disabling the module will\nhide the context button, but API methods will still be available.",
          "samples": [
            {
              "name": "Exporting module is loaded but disabled",
              "value": "highcharts/exporting/enabled-false/",
              "products": ["highcharts"]
            },
            {
              "name": "Exporting module is loaded but disabled",
              "value": "highcharts/exporting/enabled-false/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "true",
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "exporting.enabled",
          "name": "enabled",
          "line": 83,
          "lineEnd": 96,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "error": {
        "doclet": {
          "description": "Function to call if the offline-exporting module fails to export\na chart on the client side, and [fallbackToExportServer](#exporting.fallbackToExportServer) is disabled. If left undefined, an\nexception is thrown instead. Receives two parameters, the exporting\noptions, and the error from the module.",
          "see": [
            "[fallbackToExportServer](#exporting.fallbackToExportServer)"
          ],
          "type": { "names": ["Highcharts.ExportingErrorCallbackFunction"] },
          "since": "5.0.0",
          "requires": [
            "module:modules/exporting",
            "module:modules/offline-exporting"
          ]
        },
        "meta": {
          "fullname": "exporting.error",
          "name": "error",
          "line": 97,
          "lineEnd": 111,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "fallbackToExportServer": {
        "doclet": {
          "description": "Whether or not to fall back to the export server if the offline-exporting\nmodule is unable to export the chart on the client side. This happens for\ncertain browsers, and certain features (e.g.\n[allowHTML](#exporting.allowHTML)), depending on the image type exporting\nto. For very complex charts, it is possible that export can fail in\nbrowsers that don't support Blob objects, due to data URL length limits.\nIt is recommended to define the [exporting.error](#exporting.error)\nhandler if disabling fallback, in order to notify users in case export\nfails.",
          "type": { "names": ["boolean"] },
          "defaultvalue": "true",
          "since": "4.1.8",
          "requires": [
            "module:modules/exporting",
            "module:modules/offline-exporting"
          ]
        },
        "meta": {
          "fullname": "exporting.fallbackToExportServer",
          "name": "fallbackToExportServer",
          "line": 112,
          "lineEnd": 129,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "fetchOptions": {
        "doclet": {
          "description": "Options for the fetch request used when sending the SVG to the export\nserver.\n\nSee [MDN](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\nfor more information",
          "type": { "names": ["Object"] },
          "since": "11.3.0"
        },
        "meta": {
          "fullname": "exporting.fetchOptions",
          "name": "fetchOptions",
          "line": 159,
          "lineEnd": 169,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "filename": {
        "doclet": {
          "description": "The filename, without extension, to use for the exported chart.",
          "samples": [
            {
              "name": "Custom file name",
              "value": "highcharts/exporting/filename/",
              "products": ["highcharts"]
            },
            {
              "name": "Custom file name",
              "value": "highcharts/exporting/filename/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["string"] },
          "defaultvalue": "chart",
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "exporting.filename",
          "name": "filename",
          "line": 130,
          "lineEnd": 142,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "formAttributes": {
        "doclet": {
          "description": "Highcharts v11.2.0 and older. An object containing additional key value\ndata for the POST form that sends the SVG to the export server. For\nexample, a `target` can be set to make sure the generated image is\nreceived in another frame, or a custom `enctype` or `encoding` can be\nset.\n\nWith Highcharts v11.3.0, the `fetch` API replaced the old HTML form. To\nmodify the request, now use [fetchOptions](#exporting.fetchOptions)\ninstead.",
          "deprecated": true,
          "type": { "names": ["Highcharts.HTMLAttributes"] },
          "since": "3.0.8"
        },
        "meta": {
          "fullname": "exporting.formAttributes",
          "name": "formAttributes",
          "line": 143,
          "lineEnd": 158,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "libURL": {
        "doclet": {
          "description": "Path where Highcharts will look for export module dependencies to\nload on demand if they don't already exist on `window`. Should currently\npoint to location of [CanVG](https://github.com/canvg/canvg) library,\n[jsPDF](https://github.com/parallax/jsPDF) and\n[svg2pdf.js](https://github.com/yWorks/svg2pdf.js), required for client\nside export in certain browsers.",
          "type": { "names": ["string"] },
          "defaultByProduct": {},
          "since": "5.0.0"
        },
        "meta": {
          "fullname": "exporting.libURL",
          "name": "libURL",
          "line": 170,
          "lineEnd": 182,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "menuItemDefinitions": {
        "doclet": {
          "description": "An object consisting of definitions for the menu items in the context\nmenu. Each key value pair has a `key` that is referenced in the\n[menuItems](#exporting.buttons.contextButton.menuItems) setting,\nand a `value`, which is an object with the following properties:\n\n- **onclick:** The click handler for the menu item\n\n- **text:** The text for the menu item\n\n- **textKey:** If internationalization is required, the key to a language\n  string\n\nCustom text for the \"exitFullScreen\" can be set only in lang options\n(it is not a separate button).",
          "samples": [
            {
              "name": "Menu item definitions",
              "value": "highcharts/exporting/menuitemdefinitions/",
              "products": ["highcharts"]
            },
            {
              "name": "Menu item definitions",
              "value": "highcharts/exporting/menuitemdefinitions/",
              "products": ["highstock"]
            },
            {
              "name": "Menu item definitions",
              "value": "highcharts/exporting/menuitemdefinitions/",
              "products": ["highmaps"]
            }
          ],
          "type": {
            "names": ["Highcharts.Dictionary.<Highcharts.ExportingMenuObject>"]
          },
          "defaultvalue": "{\"viewFullscreen\": {}, \"printChart\": {}, \"separator\": {}, \"downloadPNG\": {}, \"downloadJPEG\": {}, \"downloadPDF\": {}, \"downloadSVG\": {}}",
          "since": "5.0.13"
        },
        "meta": {
          "fullname": "exporting.menuItemDefinitions",
          "name": "menuItemDefinitions",
          "line": 428,
          "lineEnd": 455,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js"
        },
        "children": {},
        "extended": 1
      },
      "pdfFont": {
        "doclet": {
          "description": "Settings for a custom font for the exported PDF, when using the\n`offline-exporting` module. This is used for languages containing\nnon-ASCII characters, like Chinese, Russian, Japanese etc.\n\nAs described in the [jsPDF\ndocs](https://github.com/parallax/jsPDF#use-of-unicode-characters--utf-8),\nthe 14 standard fonts in PDF are limited to the ASCII-codepage.\nTherefore, in order to support other text in the exported PDF, one or\nmore TTF font files have to be passed on to the exporting module.\n\nSee more in [the\ndocs](https://www.highcharts.com/docs/export-module/client-side-export).",
          "samples": [
            {
              "name": "Download PDF in a language containing non-Latin characters.",
              "value": "highcharts/exporting/offline-download-pdffont/",
              "products": ["highcharts"]
            }
          ],
          "since": "10.0.0",
          "requires": ["module:modules/offline-exporting"],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "exporting.pdfFont",
          "name": "pdfFont",
          "line": 238,
          "lineEnd": 257,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js"
        },
        "children": {
          "bold": {
            "doclet": {
              "description": "The TTF font file for bold text.",
              "type": { "names": ["string", "undefined"] },
              "since": "10.0.0",
              "defaultvalue": "undefined"
            },
            "meta": {
              "fullname": "exporting.pdfFont.bold",
              "name": "bold",
              "line": 267,
              "lineEnd": 271,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "bolditalic": {
            "doclet": {
              "description": "The TTF font file for bold and italic text.",
              "type": { "names": ["string", "undefined"] },
              "since": "10.0.0",
              "defaultvalue": "undefined"
            },
            "meta": {
              "fullname": "exporting.pdfFont.bolditalic",
              "name": "bolditalic",
              "line": 273,
              "lineEnd": 277,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "italic": {
            "doclet": {
              "description": "The TTF font file for italic text.",
              "type": { "names": ["string", "undefined"] },
              "since": "10.0.0",
              "defaultvalue": "undefined"
            },
            "meta": {
              "fullname": "exporting.pdfFont.italic",
              "name": "italic",
              "line": 279,
              "lineEnd": 283,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "normal": {
            "doclet": {
              "description": "The TTF font file for normal `font-style`. If font variations like\n`bold` or `italic` are not defined, the `normal` font will be used\nfor those too.",
              "type": { "names": ["string", "undefined"] },
              "since": "10.0.0",
              "defaultvalue": "undefined"
            },
            "meta": {
              "fullname": "exporting.pdfFont.normal",
              "name": "normal",
              "line": 259,
              "lineEnd": 265,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsExportingPdfFontOptions",
        "extended": 1
      },
      "printMaxWidth": {
        "doclet": {
          "description": "When printing the chart from the menu item in the burger menu, if\nthe on-screen chart exceeds this width, it is resized. After printing\nor cancelled, it is restored. The default width makes the chart\nfit into typical paper format. Note that this does not affect the\nchart when printing the web page as a whole.",
          "since": "4.2.5",
          "type": { "names": ["number"] },
          "defaultvalue": 780
        },
        "meta": {
          "fullname": "exporting.printMaxWidth",
          "name": "printMaxWidth",
          "line": 286,
          "lineEnd": 294,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "default": 780
        },
        "children": {},
        "extended": 1
      },
      "scale": {
        "doclet": {
          "description": "Defines the scale or zoom factor for the exported image compared\nto the on-screen display. While for instance a 600px wide chart\nmay look good on a website, it will look bad in print. The default\nscale of 2 makes this chart export to a 1200px PNG or JPG.",
          "see": [
            "[chart.width](#chart.width)",
            "[exporting.sourceWidth](#exporting.sourceWidth)"
          ],
          "samples": [
            {
              "name": "Scale demonstrated",
              "value": "highcharts/exporting/scale/",
              "products": ["highcharts"]
            },
            {
              "name": "Scale demonstrated",
              "value": "highcharts/exporting/scale/",
              "products": ["highstock"]
            },
            {
              "name": "Scale demonstrated",
              "value": "maps/exporting/scale/",
              "products": ["highmaps"]
            }
          ],
          "since": "3.0.0",
          "type": { "names": ["number"] },
          "defaultvalue": 2
        },
        "meta": {
          "fullname": "exporting.scale",
          "name": "scale",
          "line": 296,
          "lineEnd": 313,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "default": 2
        },
        "children": {},
        "extended": 1
      },
      "showExportInProgress": {
        "doclet": {
          "description": "Display a message when export is in progress.\nUses [Chart.setLoading()](/class-reference/Highcharts.Chart#setLoading)\n\nThe message can be altered by changing [](#lang.exporting.exportInProgress)",
          "since": "11.3.0",
          "requires": ["module:modules/export-data"],
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "exporting.showExportInProgress",
          "name": "showExportInProgress",
          "line": 181,
          "lineEnd": 189,
          "column": 4,
          "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "showTable": {
        "doclet": {
          "description": "Show a HTML table below the chart with the chart's current data.",
          "samples": [
            {
              "name": "Show the table",
              "value": "highcharts/export-data/showtable/"
            },
            {
              "name": "Experiment with putting the table inside the subtitle to allow exporting it.",
              "value": "highcharts/studies/exporting-table-html"
            }
          ],
          "since": "6.0.0",
          "requires": ["module:modules/export-data"],
          "type": { "names": ["boolean"] },
          "defaultvalue": false
        },
        "meta": {
          "fullname": "exporting.showTable",
          "name": "showTable",
          "line": 145,
          "lineEnd": 156,
          "column": 4,
          "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
          "default": false
        },
        "children": {},
        "extended": 1
      },
      "sourceHeight": {
        "doclet": {
          "description": "Analogous to [sourceWidth](#exporting.sourceWidth).",
          "type": { "names": ["number"] },
          "since": "3.0.0"
        },
        "meta": {
          "fullname": "exporting.sourceHeight",
          "name": "sourceHeight",
          "line": 183,
          "lineEnd": 189,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "sourceWidth": {
        "doclet": {
          "description": "The width of the original chart when exported, unless an explicit\n[chart.width](#chart.width) is set, or a pixel width is set on the\ncontainer. The width exported raster image is then multiplied by\n[scale](#exporting.scale).",
          "samples": [
            {
              "name": "Source size demo",
              "value": "highcharts/exporting/sourcewidth/",
              "products": ["highcharts"]
            },
            {
              "name": "Source size demo",
              "value": "highcharts/exporting/sourcewidth/",
              "products": ["highstock"]
            },
            {
              "name": "Source size demo",
              "value": "maps/exporting/sourcewidth/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "3.0.0"
        },
        "meta": {
          "fullname": "exporting.sourceWidth",
          "name": "sourceWidth",
          "line": 190,
          "lineEnd": 206,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "tableCaption": {
        "doclet": {
          "description": "Caption for the data table. Same as chart title by default. Set to\n`false` to disable.",
          "samples": [
            {
              "name": "Multiple table headers",
              "value": "highcharts/export-data/multilevel-table"
            }
          ],
          "type": { "names": ["boolean", "string"] },
          "since": "6.0.4",
          "requires": ["module:modules/export-data"]
        },
        "meta": {
          "fullname": "exporting.tableCaption",
          "name": "tableCaption",
          "line": 23,
          "lineEnd": 34,
          "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "type": {
        "doclet": {
          "description": "Default MIME type for exporting if `chart.exportChart()` is called\nwithout specifying a `type` option. Possible values are `image/png`,\n `image/jpeg`, `application/pdf` and `image/svg+xml`.",
          "type": { "names": ["Highcharts.ExportingMimeTypeValue"] },
          "since": "2.0.0",
          "defaultvalue": "image/png"
        },
        "meta": {
          "fullname": "exporting.type",
          "name": "type",
          "line": 52,
          "lineEnd": 65,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "default": "image/png"
        },
        "children": {},
        "extended": 1
      },
      "url": {
        "doclet": {
          "description": "The URL for the server module converting the SVG string to an image\nformat. By default this points to Highchart's free web service.",
          "since": "2.0.0",
          "type": { "names": ["string"] },
          "defaultvalue": "https://export-svg.highcharts.com/"
        },
        "meta": {
          "fullname": "exporting.url",
          "name": "url",
          "line": 231,
          "lineEnd": 236,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "default": "https://export-svg.highcharts.com/"
        },
        "children": {},
        "extended": 1
      },
      "useMultiLevelHeaders": {
        "doclet": {
          "description": "Use multi level headers in data table. If [csv.columnHeaderFormatter](#exporting.csv.columnHeaderFormatter) is defined, it has to return\nobjects in order for multi level headers to work.",
          "samples": [
            {
              "name": "Multiple table headers",
              "value": "highcharts/export-data/multilevel-table"
            }
          ],
          "since": "6.0.4",
          "requires": ["module:modules/export-data"],
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "exporting.useMultiLevelHeaders",
          "name": "useMultiLevelHeaders",
          "line": 158,
          "lineEnd": 168,
          "column": 4,
          "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "useRowspanHeaders": {
        "doclet": {
          "description": "If using multi level table headers, use rowspans for headers that\nhave only one level.",
          "samples": [
            {
              "name": "Multiple table headers",
              "value": "highcharts/export-data/multilevel-table"
            }
          ],
          "since": "6.0.4",
          "requires": ["module:modules/export-data"],
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "exporting.useRowspanHeaders",
          "name": "useRowspanHeaders",
          "line": 170,
          "lineEnd": 179,
          "column": 4,
          "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "width": {
        "doclet": {
          "description": "The pixel width of charts exported to PNG or JPG. As of Highcharts\n3.0, the default pixel width is a function of the [chart.width](#chart.width) or [exporting.sourceWidth](#exporting.sourceWidth) and the\n[exporting.scale](#exporting.scale).",
          "samples": [
            {
              "name": "Export to 200px wide images",
              "value": "highcharts/exporting/width/",
              "products": ["highcharts"]
            },
            {
              "name": "Export to 200px wide images",
              "value": "highcharts/exporting/width/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "exporting.width",
          "name": "width",
          "line": 207,
          "lineEnd": 221,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsExportingOptions",
    "extended": 1
  },
  "global": {
    "doclet": {
      "description": "Global options that don't apply to each chart. These options, like\nthe `lang` options, must be set using the `Highcharts.setOptions`\nmethod.\n\n```js\nHighcharts.setOptions({\n    global: {\n        buttonTheme: {\n            fill: '#d0d0d0'\n        }\n    }\n});\n```",
      "type": { "names": ["*"] }
    },
    "meta": {
      "fullname": "global",
      "name": "global",
      "line": 247,
      "lineEnd": 261,
      "column": 4,
      "filename": "code/es-modules/Core/Defaults.js"
    },
    "children": {
      "buttonTheme": {
        "doclet": {
          "description": "General theme for buttons. This applies to the zoom button, exporting\ncontext menu, map navigation, range selector buttons and custom\nbuttons generated using the `SVGRenderer.button` function. However,\neach of these may be overridden with more specific options.",
          "samples": [
            {
              "name": "General button theme",
              "value": "highcharts/global/buttontheme"
            }
          ],
          "since": "11.4.2",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "global.buttonTheme",
          "name": "buttonTheme",
          "line": 263,
          "lineEnd": 272,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {
          "fill": {
            "doclet": {
              "description": "The fill color for buttons",
              "since": "11.4.2",
              "type": { "names": ["string"] },
              "defaultvalue": "#f7f7f7"
            },
            "meta": {
              "fullname": "global.buttonTheme.fill",
              "name": "fill",
              "line": 274,
              "lineEnd": 276,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "#f7f7f7"
            },
            "children": {},
            "extended": 1
          },
          "padding": {
            "doclet": {
              "description": "The padding of buttons",
              "since": "11.4.2",
              "type": { "names": ["number"] },
              "defaultvalue": 8
            },
            "meta": {
              "fullname": "global.buttonTheme.padding",
              "name": "padding",
              "line": 278,
              "lineEnd": 280,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": 8
            },
            "children": {},
            "extended": 1
          },
          "r": {
            "doclet": {
              "description": "The border radius for buttons",
              "since": "11.4.2",
              "type": { "names": ["number"] },
              "defaultvalue": 2
            },
            "meta": {
              "fullname": "global.buttonTheme.r",
              "name": "r",
              "line": 282,
              "lineEnd": 284,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": 2
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "description": "State overrides for the buttons",
              "since": "11.4.2",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "global.buttonTheme.states",
              "name": "states",
              "line": 303,
              "lineEnd": 305,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js"
            },
            "children": {
              "disabled": {
                "doclet": {
                  "description": "Disabled state overrides for the buttons are applied in\naddition to the normal state options",
                  "since": "11.4.2",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "global.buttonTheme.states.disabled",
                  "name": "disabled",
                  "line": 325,
                  "lineEnd": 328,
                  "column": 16,
                  "filename": "code/es-modules/Core/Defaults.js"
                },
                "children": {
                  "style": {
                    "doclet": {
                      "description": "Disabled state CSS style overrides for the buttons' text",
                      "since": "11.4.2",
                      "type": { "names": ["*"] }
                    },
                    "meta": {
                      "fullname": "global.buttonTheme.states.disabled.style",
                      "name": "style",
                      "line": 330,
                      "lineEnd": 332,
                      "column": 20,
                      "filename": "code/es-modules/Core/Defaults.js"
                    },
                    "children": {
                      "color": {
                        "doclet": {
                          "type": { "names": ["string"] },
                          "defaultvalue": "#cccccc"
                        },
                        "meta": {
                          "fullname": "global.buttonTheme.states.disabled.style.color",
                          "name": "color",
                          "line": 334,
                          "lineEnd": 334,
                          "column": 24,
                          "filename": "code/es-modules/Core/Defaults.js",
                          "default": "#cccccc"
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "flutterClassName": "HighchartsGlobalButtonThemeStatesDisabledStyleOptions",
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsGlobalButtonThemeStatesDisabledOptions",
                "extended": 1
              },
              "hover": {
                "doclet": {
                  "description": "Hover state overrides for the buttons are applied in addition\nto the normal state options",
                  "since": "11.4.2",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "global.buttonTheme.states.hover",
                  "name": "hover",
                  "line": 307,
                  "lineEnd": 310,
                  "column": 16,
                  "filename": "code/es-modules/Core/Defaults.js"
                },
                "children": {
                  "fill": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "#e6e6e6"
                    },
                    "meta": {
                      "fullname": "global.buttonTheme.states.hover.fill",
                      "name": "fill",
                      "line": 312,
                      "lineEnd": 312,
                      "column": 20,
                      "filename": "code/es-modules/Core/Defaults.js",
                      "default": "#e6e6e6"
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsGlobalButtonThemeStatesHoverOptions",
                "extended": 1
              },
              "select": {
                "doclet": {
                  "description": "Select state overrides for the buttons are applied in\naddition to the normal state options",
                  "since": "11.4.2",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "global.buttonTheme.states.select",
                  "name": "select",
                  "line": 314,
                  "lineEnd": 317,
                  "column": 16,
                  "filename": "code/es-modules/Core/Defaults.js"
                },
                "children": {
                  "fill": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "#e6e9ff"
                    },
                    "meta": {
                      "fullname": "global.buttonTheme.states.select.fill",
                      "name": "fill",
                      "line": 319,
                      "lineEnd": 319,
                      "column": 20,
                      "filename": "code/es-modules/Core/Defaults.js",
                      "default": "#e6e9ff"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "style": {
                    "doclet": { "type": { "names": ["*"] } },
                    "meta": {
                      "fullname": "global.buttonTheme.states.select.style",
                      "name": "style",
                      "line": 320,
                      "lineEnd": 320,
                      "column": 20,
                      "filename": "code/es-modules/Core/Defaults.js"
                    },
                    "children": {
                      "color": {
                        "doclet": {
                          "type": { "names": ["string"] },
                          "defaultvalue": "#000000"
                        },
                        "meta": {
                          "fullname": "global.buttonTheme.states.select.style.color",
                          "name": "color",
                          "line": 321,
                          "lineEnd": 321,
                          "column": 24,
                          "filename": "code/es-modules/Core/Defaults.js",
                          "default": "#000000"
                        },
                        "children": {},
                        "extended": 1
                      },
                      "fontWeight": {
                        "doclet": {
                          "type": { "names": ["string"] },
                          "defaultvalue": "bold"
                        },
                        "meta": {
                          "fullname": "global.buttonTheme.states.select.style.fontWeight",
                          "name": "fontWeight",
                          "line": 322,
                          "lineEnd": 322,
                          "column": 24,
                          "filename": "code/es-modules/Core/Defaults.js",
                          "default": "bold"
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "flutterClassName": "HighchartsGlobalButtonThemeStatesSelectStyleOptions",
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsGlobalButtonThemeStatesSelectOptions",
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsGlobalButtonThemeStatesOptions",
            "extended": 1
          },
          "stroke": {
            "doclet": {
              "description": "The stroke color for buttons",
              "since": "11.4.2",
              "type": { "names": ["string"] },
              "defaultvalue": "#cccccc"
            },
            "meta": {
              "fullname": "global.buttonTheme.stroke",
              "name": "stroke",
              "line": 286,
              "lineEnd": 288,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "#cccccc"
            },
            "children": {},
            "extended": 1
          },
          "stroke-width": {
            "doclet": {
              "description": "The stroke width for buttons",
              "since": "11.4.2",
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "global.buttonTheme.stroke-width",
              "name": "stroke-width",
              "line": 290,
              "lineEnd": 292,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "style": {
            "doclet": {
              "description": "CSS styling for the buttons' text",
              "since": "11.4.2",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "global.buttonTheme.style",
              "name": "style",
              "line": 294,
              "lineEnd": 296,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js"
            },
            "children": {
              "color": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "#333333"
                },
                "meta": {
                  "fullname": "global.buttonTheme.style.color",
                  "name": "color",
                  "line": 298,
                  "lineEnd": 298,
                  "column": 16,
                  "filename": "code/es-modules/Core/Defaults.js",
                  "default": "#333333"
                },
                "children": {},
                "extended": 1
              },
              "cursor": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "pointer"
                },
                "meta": {
                  "fullname": "global.buttonTheme.style.cursor",
                  "name": "cursor",
                  "line": 299,
                  "lineEnd": 299,
                  "column": 16,
                  "filename": "code/es-modules/Core/Defaults.js",
                  "default": "pointer"
                },
                "children": {},
                "extended": 1
              },
              "fontSize": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": null
                },
                "meta": {
                  "fullname": "global.buttonTheme.style.fontSize",
                  "name": "fontSize",
                  "line": 300,
                  "lineEnd": 300,
                  "column": 16,
                  "filename": "code/es-modules/Core/Defaults.js",
                  "default": "0.8em"
                },
                "children": {},
                "extended": 1
              },
              "fontWeight": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "normal"
                },
                "meta": {
                  "fullname": "global.buttonTheme.style.fontWeight",
                  "name": "fontWeight",
                  "line": 301,
                  "lineEnd": 301,
                  "column": 16,
                  "filename": "code/es-modules/Core/Defaults.js",
                  "default": "normal"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsGlobalButtonThemeStyleOptions",
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsGlobalButtonThemeOptions",
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsGlobalOptions",
    "extended": 1
  },
  "lang": {
    "doclet": {
      "description": "An object containing language-related strings and settings. A typical setup\nuses `Highcharts.setOptions` to make the options apply to all charts in the\nsame page.\n\n```js\nHighcharts.setOptions({\n    lang: {\n        locale: 'fr'\n    }\n});\n```",
      "type": { "names": ["*"] }
    },
    "meta": {
      "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
      "name": "lang",
      "fullname": "lang",
      "line": 13,
      "lineEnd": 17,
      "column": 0
    },
    "children": {
      "accessibility": {
        "doclet": {
          "description": "Configure the accessibility strings in the chart. Requires the\n[accessibility module](https://code.highcharts.com/modules/accessibility.js)\nto be loaded. For a description of the module and information on its\nfeatures, see\n[Highcharts Accessibility](https://www.highcharts.com/docs/chart-concepts/accessibility).\n\nThe lang options use [Format Strings](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#format-strings)\nwith variables that are replaced at run time. These variables should be\nused when available, to avoid duplicating text that is defined elsewhere.\n\nFor more dynamic control over the accessibility functionality, see\n[accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter),\n[accessibility.series.descriptionFormatter](#accessibility.series.descriptionFormatter),\nand\n[accessibility.screenReaderSection.beforeChartFormatter](#accessibility.screenReaderSection.beforeChartFormatter).",
          "since": "6.0.6",
          "type": { "names": ["*"] }
        },
        "meta": {
          "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
          "name": "accessibility",
          "fullname": "lang.accessibility",
          "line": 19,
          "lineEnd": 38,
          "column": 4
        },
        "children": {
          "announceNewData": {
            "doclet": {
              "description": "Default announcement for new data in charts. If addPoint or\naddSeries is used, and only one series/point is added, the\n`newPointAnnounce` and `newSeriesAnnounce` strings are used.\nThe `...Single` versions will be used if there is only one chart\non the page, and the `...Multiple` versions will be used if there\nare multiple charts on the page. For all other new data events,\nthe `newDataAnnounce` string will be used.",
              "since": "7.1.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "lang.accessibility.announceNewData",
              "name": "announceNewData",
              "line": 219,
              "lineEnd": 229,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js"
            },
            "children": {
              "newDataAnnounce": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Updated data for chart {chartTitle}"
                },
                "meta": {
                  "fullname": "lang.accessibility.announceNewData.newDataAnnounce",
                  "name": "newDataAnnounce",
                  "line": 231,
                  "lineEnd": 231,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Updated data for chart {chartTitle}"
                },
                "children": {},
                "extended": 1
              },
              "newPointAnnounceMultiple": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "New data point in chart {chartTitle}: {pointDesc}"
                },
                "meta": {
                  "fullname": "lang.accessibility.announceNewData.newPointAnnounceMultiple",
                  "name": "newPointAnnounceMultiple",
                  "line": 235,
                  "lineEnd": 235,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "New data point in chart {chartTitle}: {pointDesc}"
                },
                "children": {},
                "extended": 1
              },
              "newPointAnnounceSingle": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "New data point: {pointDesc}"
                },
                "meta": {
                  "fullname": "lang.accessibility.announceNewData.newPointAnnounceSingle",
                  "name": "newPointAnnounceSingle",
                  "line": 233,
                  "lineEnd": 233,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "New data point: {pointDesc}"
                },
                "children": {},
                "extended": 1
              },
              "newSeriesAnnounceMultiple": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "New data series in chart {chartTitle}: {seriesDesc}"
                },
                "meta": {
                  "fullname": "lang.accessibility.announceNewData.newSeriesAnnounceMultiple",
                  "name": "newSeriesAnnounceMultiple",
                  "line": 234,
                  "lineEnd": 234,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "New data series in chart {chartTitle}: {seriesDesc}"
                },
                "children": {},
                "extended": 1
              },
              "newSeriesAnnounceSingle": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "New data series: {seriesDesc}"
                },
                "meta": {
                  "fullname": "lang.accessibility.announceNewData.newSeriesAnnounceSingle",
                  "name": "newSeriesAnnounceSingle",
                  "line": 232,
                  "lineEnd": 232,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "New data series: {seriesDesc}"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLangAccessibilityAnnounceNewDataOptions",
            "extended": 1
          },
          "axis": {
            "doclet": {
              "description": "Axis description format strings.",
              "since": "6.0.6",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "lang.accessibility.axis",
              "name": "axis",
              "line": 312,
              "lineEnd": 312,
              "column": 11,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js"
            },
            "children": {
              "rangeCategories": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Data range: {numCategories} categories."
                },
                "meta": {
                  "fullname": "lang.accessibility.axis.rangeCategories",
                  "name": "rangeCategories",
                  "line": 329,
                  "lineEnd": 329,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Data range: {numCategories} categories."
                },
                "children": {},
                "extended": 1
              },
              "rangeFromTo": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Data ranges from {rangeFrom} to {rangeTo}."
                },
                "meta": {
                  "fullname": "lang.accessibility.axis.rangeFromTo",
                  "name": "rangeFromTo",
                  "line": 328,
                  "lineEnd": 328,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Data ranges from {rangeFrom} to {rangeTo}."
                },
                "children": {},
                "extended": 1
              },
              "timeRangeDays": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Data range: {range} days."
                },
                "meta": {
                  "fullname": "lang.accessibility.axis.timeRangeDays",
                  "name": "timeRangeDays",
                  "line": 324,
                  "lineEnd": 324,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Data range: {range} days."
                },
                "children": {},
                "extended": 1
              },
              "timeRangeHours": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Data range: {range} hours."
                },
                "meta": {
                  "fullname": "lang.accessibility.axis.timeRangeHours",
                  "name": "timeRangeHours",
                  "line": 325,
                  "lineEnd": 325,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Data range: {range} hours."
                },
                "children": {},
                "extended": 1
              },
              "timeRangeMinutes": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Data range: {range} minutes."
                },
                "meta": {
                  "fullname": "lang.accessibility.axis.timeRangeMinutes",
                  "name": "timeRangeMinutes",
                  "line": 326,
                  "lineEnd": 326,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Data range: {range} minutes."
                },
                "children": {},
                "extended": 1
              },
              "timeRangeSeconds": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Data range: {range} seconds."
                },
                "meta": {
                  "fullname": "lang.accessibility.axis.timeRangeSeconds",
                  "name": "timeRangeSeconds",
                  "line": 327,
                  "lineEnd": 327,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Data range: {range} seconds."
                },
                "children": {},
                "extended": 1
              },
              "xAxisDescriptionPlural": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "The chart has {numAxes} X axes displaying {#each names}{#unless @first},{/unless}{#if @last} and{/if} {this}{/each}."
                },
                "meta": {
                  "fullname": "lang.accessibility.axis.xAxisDescriptionPlural",
                  "name": "xAxisDescriptionPlural",
                  "line": 321,
                  "lineEnd": 321,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "The chart has {numAxes} X axes displaying {#each names}{#unless @first},{/unless}{#if @last} and{/if} {this}{/each}."
                },
                "children": {},
                "extended": 1
              },
              "xAxisDescriptionSingular": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "The chart has 1 X axis displaying {names[0]}. {ranges[0]}"
                },
                "meta": {
                  "fullname": "lang.accessibility.axis.xAxisDescriptionSingular",
                  "name": "xAxisDescriptionSingular",
                  "line": 319,
                  "lineEnd": 319,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "The chart has 1 X axis displaying {names[0]}. {ranges[0]}"
                },
                "children": {},
                "extended": 1
              },
              "yAxisDescriptionPlural": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "The chart has {numAxes} Y axes displaying {#each names}{#unless @first},{/unless}{#if @last} and{/if} {this}{/each}."
                },
                "meta": {
                  "fullname": "lang.accessibility.axis.yAxisDescriptionPlural",
                  "name": "yAxisDescriptionPlural",
                  "line": 323,
                  "lineEnd": 323,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "The chart has {numAxes} Y axes displaying {#each names}{#unless @first},{/unless}{#if @last} and{/if} {this}{/each}."
                },
                "children": {},
                "extended": 1
              },
              "yAxisDescriptionSingular": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "The chart has 1 Y axis displaying {names[0]}. {ranges[0]}"
                },
                "meta": {
                  "fullname": "lang.accessibility.axis.yAxisDescriptionSingular",
                  "name": "yAxisDescriptionSingular",
                  "line": 322,
                  "lineEnd": 322,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "The chart has 1 Y axis displaying {names[0]}. {ranges[0]}"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLangAccessibilityAxisOptions",
            "extended": 1
          },
          "chartContainerLabel": {
            "doclet": {
              "description": "Accessible label for the chart container HTML element.\n`{title}` refers to the chart title.",
              "since": "6.0.6",
              "type": { "names": ["string"] },
              "defaultvalue": "{title}. Highcharts interactive chart."
            },
            "meta": {
              "fullname": "lang.accessibility.chartContainerLabel",
              "name": "chartContainerLabel",
              "line": 50,
              "lineEnd": 53,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
              "default": "{title}. Highcharts interactive chart."
            },
            "children": {},
            "extended": 1
          },
          "chartTypes": {
            "doclet": {
              "description": "Chart type description strings. This is added to the chart\ninformation region.\n\nIf there is only a single series type used in the chart, we use\nthe format string for the series type, or default if missing.\nThere is one format string for cases where there is only a single\nseries in the chart, and one for multiple series of the same\ntype.",
              "since": "6.0.6",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "lang.accessibility.chartTypes",
              "name": "chartTypes",
              "line": 267,
              "lineEnd": 278,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js"
            },
            "children": {
              "barMultiple": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Bar chart with {numSeries} data series."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.barMultiple",
                  "name": "barMultiple",
                  "line": 299,
                  "lineEnd": 299,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Bar chart with {numSeries} data series."
                },
                "children": {},
                "extended": 1
              },
              "barSingle": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Bar chart with {numPoints} {#eq numPoints 1}bar{else}bars{/eq}."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.barSingle",
                  "name": "barSingle",
                  "line": 297,
                  "lineEnd": 297,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Bar chart with {numPoints} {#eq numPoints 1}bar{else}bars{/eq}."
                },
                "children": {},
                "extended": 1
              },
              "boxplotMultiple": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Boxplot with {numSeries} data series."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.boxplotMultiple",
                  "name": "boxplotMultiple",
                  "line": 308,
                  "lineEnd": 308,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Boxplot with {numSeries} data series."
                },
                "children": {},
                "extended": 1
              },
              "boxplotSingle": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Boxplot with {numPoints} {#eq numPoints 1}box{else}boxes{/eq}."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.boxplotSingle",
                  "name": "boxplotSingle",
                  "line": 306,
                  "lineEnd": 306,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Boxplot with {numPoints} {#eq numPoints 1}box{else}boxes{/eq}."
                },
                "children": {},
                "extended": 1
              },
              "bubbleMultiple": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Bubble chart with {numSeries} data series."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.bubbleMultiple",
                  "name": "bubbleMultiple",
                  "line": 311,
                  "lineEnd": 311,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Bubble chart with {numSeries} data series."
                },
                "children": {},
                "extended": 1
              },
              "bubbleSingle": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Bubble chart with {numPoints} {#eq numPoints 1}bubbles{else}bubble{/eq}."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.bubbleSingle",
                  "name": "bubbleSingle",
                  "line": 309,
                  "lineEnd": 309,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Bubble chart with {numPoints} {#eq numPoints 1}bubbles{else}bubble{/eq}."
                },
                "children": {},
                "extended": 1
              },
              "columnMultiple": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Bar chart with {numSeries} data series."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.columnMultiple",
                  "name": "columnMultiple",
                  "line": 296,
                  "lineEnd": 296,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Bar chart with {numSeries} data series."
                },
                "children": {},
                "extended": 1
              },
              "columnSingle": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Bar chart with {numPoints} {#eq numPoints 1}bar{else}bars{/eq}."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.columnSingle",
                  "name": "columnSingle",
                  "line": 294,
                  "lineEnd": 294,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Bar chart with {numPoints} {#eq numPoints 1}bar{else}bars{/eq}."
                },
                "children": {},
                "extended": 1
              },
              "combinationChart": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Combination chart with {numSeries} data series."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.combinationChart",
                  "name": "combinationChart",
                  "line": 284,
                  "lineEnd": 284,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Combination chart with {numSeries} data series."
                },
                "children": {},
                "extended": 1
              },
              "defaultMultiple": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Chart with {numSeries} data series."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.defaultMultiple",
                  "name": "defaultMultiple",
                  "line": 287,
                  "lineEnd": 287,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Chart with {numSeries} data series."
                },
                "children": {},
                "extended": 1
              },
              "defaultSingle": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Chart with {numPoints} data {#eq numPoints 1}point{else}points{/eq}."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.defaultSingle",
                  "name": "defaultSingle",
                  "line": 285,
                  "lineEnd": 285,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Chart with {numPoints} data {#eq numPoints 1}point{else}points{/eq}."
                },
                "children": {},
                "extended": 1
              },
              "emptyChart": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Empty chart"
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.emptyChart",
                  "name": "emptyChart",
                  "line": 280,
                  "lineEnd": 280,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Empty chart"
                },
                "children": {},
                "extended": 1
              },
              "lineMultiple": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Line chart with {numSeries} lines."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.lineMultiple",
                  "name": "lineMultiple",
                  "line": 293,
                  "lineEnd": 293,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Line chart with {numSeries} lines."
                },
                "children": {},
                "extended": 1
              },
              "lineSingle": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Line chart with {numPoints} data {#eq numPoints 1}point{else}points{/eq}."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.lineSingle",
                  "name": "lineSingle",
                  "line": 291,
                  "lineEnd": 291,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Line chart with {numPoints} data {#eq numPoints 1}point{else}points{/eq}."
                },
                "children": {},
                "extended": 1
              },
              "mapTypeDescription": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Map of {mapTitle} with {numSeries} data series."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.mapTypeDescription",
                  "name": "mapTypeDescription",
                  "line": 282,
                  "lineEnd": 282,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Map of {mapTitle} with {numSeries} data series."
                },
                "children": {},
                "extended": 1
              },
              "pieMultiple": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Pie chart with {numSeries} pies."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.pieMultiple",
                  "name": "pieMultiple",
                  "line": 302,
                  "lineEnd": 302,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Pie chart with {numSeries} pies."
                },
                "children": {},
                "extended": 1
              },
              "pieSingle": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Pie chart with {numPoints} {#eq numPoints 1}slice{else}slices{/eq}."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.pieSingle",
                  "name": "pieSingle",
                  "line": 300,
                  "lineEnd": 300,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Pie chart with {numPoints} {#eq numPoints 1}slice{else}slices{/eq}."
                },
                "children": {},
                "extended": 1
              },
              "scatterMultiple": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Scatter chart with {numSeries} data series."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.scatterMultiple",
                  "name": "scatterMultiple",
                  "line": 305,
                  "lineEnd": 305,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Scatter chart with {numSeries} data series."
                },
                "children": {},
                "extended": 1
              },
              "scatterSingle": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Scatter chart with {numPoints} {#eq numPoints 1}point{else}points{/eq}."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.scatterSingle",
                  "name": "scatterSingle",
                  "line": 303,
                  "lineEnd": 303,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Scatter chart with {numPoints} {#eq numPoints 1}point{else}points{/eq}."
                },
                "children": {},
                "extended": 1
              },
              "splineMultiple": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Line chart with {numSeries} lines."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.splineMultiple",
                  "name": "splineMultiple",
                  "line": 290,
                  "lineEnd": 290,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Line chart with {numSeries} lines."
                },
                "children": {},
                "extended": 1
              },
              "splineSingle": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Line chart with {numPoints} data {#eq numPoints 1}point{else}points{/eq}."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.splineSingle",
                  "name": "splineSingle",
                  "line": 288,
                  "lineEnd": 288,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Line chart with {numPoints} data {#eq numPoints 1}point{else}points{/eq}."
                },
                "children": {},
                "extended": 1
              },
              "unknownMap": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Map of unspecified region with {numSeries} data series."
                },
                "meta": {
                  "fullname": "lang.accessibility.chartTypes.unknownMap",
                  "name": "unknownMap",
                  "line": 283,
                  "lineEnd": 283,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Map of unspecified region with {numSeries} data series."
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLangAccessibilityChartTypesOptions",
            "extended": 1
          },
          "credits": {
            "doclet": {
              "description": "Accessible label for the chart credits.\n`{creditsStr}` refers to the visual text in the credits.",
              "since": "6.0.6",
              "type": { "names": ["string"] },
              "defaultvalue": "Chart credits: {creditsStr}"
            },
            "meta": {
              "fullname": "lang.accessibility.credits",
              "name": "credits",
              "line": 65,
              "lineEnd": 68,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
              "default": "Chart credits: {creditsStr}"
            },
            "children": {},
            "extended": 1
          },
          "defaultChartTitle": {
            "doclet": {
              "description": "Default title of the chart for assistive technology, for charts\nwithout a chart title.",
              "since": "6.0.6",
              "type": { "names": ["string"] },
              "defaultvalue": "Chart"
            },
            "meta": {
              "fullname": "lang.accessibility.defaultChartTitle",
              "name": "defaultChartTitle",
              "line": 40,
              "lineEnd": 44,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
              "default": "Chart"
            },
            "children": {},
            "extended": 1
          },
          "drillUpButton": {
            "doclet": {
              "description": "Accessible label for the drill-up button.\n`{buttonText}` refers to the visual text on the button.",
              "since": "6.0.6",
              "type": { "names": ["string"] },
              "defaultvalue": "{buttonText}"
            },
            "meta": {
              "fullname": "lang.accessibility.drillUpButton",
              "name": "drillUpButton",
              "line": 60,
              "lineEnd": 63,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
              "default": "{buttonText}"
            },
            "children": {},
            "extended": 1
          },
          "exporting": {
            "doclet": {
              "description": "Exporting menu format strings for accessibility module.",
              "since": "6.0.6",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "lang.accessibility.exporting",
              "name": "exporting",
              "line": 330,
              "lineEnd": 330,
              "column": 11,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js"
            },
            "children": {
              "chartMenuLabel": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Chart menu"
                },
                "meta": {
                  "fullname": "lang.accessibility.exporting.chartMenuLabel",
                  "name": "chartMenuLabel",
                  "line": 337,
                  "lineEnd": 337,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Chart menu"
                },
                "children": {},
                "extended": 1
              },
              "menuButtonLabel": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "View chart menu, {chartTitle}"
                },
                "meta": {
                  "fullname": "lang.accessibility.exporting.menuButtonLabel",
                  "name": "menuButtonLabel",
                  "line": 338,
                  "lineEnd": 338,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "View chart menu, {chartTitle}"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLangAccessibilityExportingOptions",
            "extended": 1
          },
          "graphicContainerLabel": {
            "doclet": {
              "description": "Set a label on the container wrapping the SVG.",
              "see": [
                "[chartContainerLabel](#lang.accessibility.chartContainerLabel)"
              ],
              "since": "8.0.0",
              "type": { "names": ["string"] },
              "defaultvalue": ""
            },
            "meta": {
              "fullname": "lang.accessibility.graphicContainerLabel",
              "name": "graphicContainerLabel",
              "line": 90,
              "lineEnd": 96,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
              "default": ""
            },
            "children": {},
            "extended": 1
          },
          "legend": {
            "doclet": {
              "description": "Language options for accessibility of the legend.",
              "since": "8.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "lang.accessibility.legend",
              "name": "legend",
              "line": 137,
              "lineEnd": 141,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js"
            },
            "children": {
              "legendItem": {
                "doclet": {
                  "description": "Accessible label for individual legend items. `{itemName}` refers\nto the visual text in the legend for that item.",
                  "since": "8.0.0",
                  "type": { "names": ["string"] },
                  "defaultvalue": "Show {itemName}"
                },
                "meta": {
                  "fullname": "lang.accessibility.legend.legendItem",
                  "name": "legendItem",
                  "line": 154,
                  "lineEnd": 157,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Show {itemName}"
                },
                "children": {},
                "extended": 1
              },
              "legendLabel": {
                "doclet": {
                  "description": "Accessible label for the legend, for charts where there is a\nlegend title defined. `{legendTitle}` refers to the visual text\nin the legend title.",
                  "since": "8.0.0",
                  "type": { "names": ["string"] },
                  "defaultvalue": "Chart legend: {legendTitle}"
                },
                "meta": {
                  "fullname": "lang.accessibility.legend.legendLabel",
                  "name": "legendLabel",
                  "line": 148,
                  "lineEnd": 152,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Chart legend: {legendTitle}"
                },
                "children": {},
                "extended": 1
              },
              "legendLabelNoTitle": {
                "doclet": {
                  "description": "Accessible label for the legend, for charts where there is no\nlegend title defined.",
                  "since": "8.0.0",
                  "type": { "names": ["string"] },
                  "defaultvalue": "Toggle series visibility, {chartTitle}"
                },
                "meta": {
                  "fullname": "lang.accessibility.legend.legendLabelNoTitle",
                  "name": "legendLabelNoTitle",
                  "line": 143,
                  "lineEnd": 146,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Toggle series visibility, {chartTitle}"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLangAccessibilityLegendOptions",
            "extended": 1
          },
          "navigator": {
            "doclet": {
              "description": "Navigator language options for accessibility.",
              "since": "11.2.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "lang.accessibility.navigator",
              "name": "navigator",
              "line": 181,
              "lineEnd": 185,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js"
            },
            "children": {
              "changeAnnouncement": {
                "doclet": {
                  "description": "Announcement for assistive technology when navigator values\nare changed.\n\nReceives `axisRangeDescription` and `chart` as context.\n`axisRangeDescription` corresponds to the range description\ndefined in [lang.accessibility.axis](#lang.accessibility.axis)",
                  "since": "11.2.0",
                  "type": { "names": ["string"] },
                  "defaultvalue": "{axisRangeDescription}"
                },
                "meta": {
                  "fullname": "lang.accessibility.navigator.changeAnnouncement",
                  "name": "changeAnnouncement",
                  "line": 200,
                  "lineEnd": 207,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "{axisRangeDescription}"
                },
                "children": {},
                "extended": 1
              },
              "groupLabel": {
                "doclet": {
                  "description": "Label for the navigator region.\n\nReceives `chart` as context.",
                  "since": "11.2.0",
                  "type": { "names": ["string"] },
                  "defaultvalue": "Axis zoom"
                },
                "meta": {
                  "fullname": "lang.accessibility.navigator.groupLabel",
                  "name": "groupLabel",
                  "line": 194,
                  "lineEnd": 198,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Axis zoom"
                },
                "children": {},
                "extended": 1
              },
              "handleLabel": {
                "doclet": {
                  "description": "Label for the navigator handles.\n\nReceives `handleIx` and `chart` as context.\n`handleIx` refers to the index of the navigator handle.",
                  "since": "11.2.0",
                  "type": { "names": ["string"] },
                  "defaultvalue": "{#eq handleIx 0}Start, percent{else}End, percent{/eq}"
                },
                "meta": {
                  "fullname": "lang.accessibility.navigator.handleLabel",
                  "name": "handleLabel",
                  "line": 187,
                  "lineEnd": 192,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "{#eq handleIx 0}Start, percent{else}End, percent{/eq}"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLangAccessibilityNavigatorOptions",
            "extended": 1
          },
          "rangeSelector": {
            "doclet": {
              "description": "Range selector language options for accessibility.",
              "since": "8.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "lang.accessibility.rangeSelector",
              "name": "rangeSelector",
              "line": 170,
              "lineEnd": 174,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js"
            },
            "children": {
              "clickButtonAnnouncement": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Viewing {axisRangeDescription}"
                },
                "meta": {
                  "fullname": "lang.accessibility.rangeSelector.clickButtonAnnouncement",
                  "name": "clickButtonAnnouncement",
                  "line": 179,
                  "lineEnd": 179,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Viewing {axisRangeDescription}"
                },
                "children": {},
                "extended": 1
              },
              "dropdownLabel": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "{rangeTitle}"
                },
                "meta": {
                  "fullname": "lang.accessibility.rangeSelector.dropdownLabel",
                  "name": "dropdownLabel",
                  "line": 176,
                  "lineEnd": 176,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "{rangeTitle}"
                },
                "children": {},
                "extended": 1
              },
              "maxInputLabel": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Select end date."
                },
                "meta": {
                  "fullname": "lang.accessibility.rangeSelector.maxInputLabel",
                  "name": "maxInputLabel",
                  "line": 178,
                  "lineEnd": 178,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Select end date."
                },
                "children": {},
                "extended": 1
              },
              "minInputLabel": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Select start date."
                },
                "meta": {
                  "fullname": "lang.accessibility.rangeSelector.minInputLabel",
                  "name": "minInputLabel",
                  "line": 177,
                  "lineEnd": 177,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Select start date."
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLangAccessibilityRangeSelectorOptions",
            "extended": 1
          },
          "resetZoomButton": {
            "doclet": {
              "deprecated": "10.2.1",
              "type": { "names": ["string"] }
            },
            "meta": {
              "fullname": "lang.accessibility.resetZoomButton",
              "name": "resetZoomButton",
              "line": 40,
              "lineEnd": 44,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "screenReaderSection": {
            "doclet": {
              "description": "Language options for the screen reader information sections added\nbefore and after the charts.",
              "since": "8.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "lang.accessibility.screenReaderSection",
              "name": "screenReaderSection",
              "line": 98,
              "lineEnd": 103,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js"
            },
            "children": {
              "afterRegionLabel": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": ""
                },
                "meta": {
                  "fullname": "lang.accessibility.screenReaderSection.afterRegionLabel",
                  "name": "afterRegionLabel",
                  "line": 106,
                  "lineEnd": 106,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": ""
                },
                "children": {},
                "extended": 1
              },
              "annotations": {
                "doclet": {
                  "description": "Language options for annotation descriptions.",
                  "since": "8.0.1",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "lang.accessibility.screenReaderSection.annotations",
                  "name": "annotations",
                  "line": 107,
                  "lineEnd": 111,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js"
                },
                "children": {
                  "descriptionMultiplePoints": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{annotationText}. Related to {annotationPoint}{#each additionalAnnotationPoints}, also related to {this}{/each}"
                    },
                    "meta": {
                      "fullname": "lang.accessibility.screenReaderSection.annotations.descriptionMultiplePoints",
                      "name": "descriptionMultiplePoints",
                      "line": 115,
                      "lineEnd": 115,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{annotationText}. Related to {annotationPoint}{#each additionalAnnotationPoints}, also related to {this}{/each}"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "descriptionNoPoints": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{annotationText}"
                    },
                    "meta": {
                      "fullname": "lang.accessibility.screenReaderSection.annotations.descriptionNoPoints",
                      "name": "descriptionNoPoints",
                      "line": 119,
                      "lineEnd": 119,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{annotationText}"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "descriptionSinglePoint": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{annotationText}. Related to {annotationPoint}"
                    },
                    "meta": {
                      "fullname": "lang.accessibility.screenReaderSection.annotations.descriptionSinglePoint",
                      "name": "descriptionSinglePoint",
                      "line": 114,
                      "lineEnd": 114,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{annotationText}. Related to {annotationPoint}"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "heading": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "Chart annotations summary"
                    },
                    "meta": {
                      "fullname": "lang.accessibility.screenReaderSection.annotations.heading",
                      "name": "heading",
                      "line": 113,
                      "lineEnd": 113,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "Chart annotations summary"
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsLangAccessibilityScreenReaderSectionAnnotationsOptions",
                "extended": 1
              },
              "beforeRegionLabel": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": ""
                },
                "meta": {
                  "fullname": "lang.accessibility.screenReaderSection.beforeRegionLabel",
                  "name": "beforeRegionLabel",
                  "line": 105,
                  "lineEnd": 105,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": ""
                },
                "children": {},
                "extended": 1
              },
              "endOfChartMarker": {
                "doclet": {
                  "description": "Label for the end of the chart. Announced by screen readers.",
                  "since": "8.0.0",
                  "type": { "names": ["string"] },
                  "defaultvalue": "End of interactive chart."
                },
                "meta": {
                  "fullname": "lang.accessibility.screenReaderSection.endOfChartMarker",
                  "name": "endOfChartMarker",
                  "line": 121,
                  "lineEnd": 125,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "End of interactive chart."
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLangAccessibilityScreenReaderSectionOptions",
            "extended": 1
          },
          "series": {
            "doclet": {
              "description": "Lang configuration for different series types. For more dynamic\ncontrol over the series element descriptions, see\n[accessibility.seriesDescriptionFormatter](#accessibility.seriesDescriptionFormatter).",
              "since": "6.0.6",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "lang.accessibility.series",
              "name": "series",
              "line": 340,
              "lineEnd": 346,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js"
            },
            "children": {
              "description": {
                "doclet": {
                  "description": "User supplied description text. This is added in the point\ncomment description by default if present.\n\n`{description}` refers to the value given in\n[point.accessibility.description](#series.line.data.accessibility.description).",
                  "since": "6.0.6",
                  "type": { "names": ["string"] },
                  "defaultvalue": "{description}"
                },
                "meta": {
                  "fullname": "lang.accessibility.series.description",
                  "name": "description",
                  "line": 393,
                  "lineEnd": 393,
                  "column": 15,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "{description}"
                },
                "children": {},
                "extended": 1
              },
              "nullPointValue": {
                "doclet": {
                  "description": "Description for the value of null points.",
                  "since": "8.0.0",
                  "type": { "names": ["string"] },
                  "defaultvalue": "No value"
                },
                "meta": {
                  "fullname": "lang.accessibility.series.nullPointValue",
                  "name": "nullPointValue",
                  "line": 418,
                  "lineEnd": 422,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "No value"
                },
                "children": {},
                "extended": 1
              },
              "pointAnnotationsDescription": {
                "doclet": {
                  "description": "Description for annotations on a point, as it is made available\nto assistive technology.",
                  "since": "8.0.1",
                  "type": { "names": ["string"] },
                  "defaultvalue": "{#each annotations}Annotation: {this}{/each}"
                },
                "meta": {
                  "fullname": "lang.accessibility.series.pointAnnotationsDescription",
                  "name": "pointAnnotationsDescription",
                  "line": 424,
                  "lineEnd": 429,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "{#each annotations}Annotation: {this}{/each}"
                },
                "children": {},
                "extended": 1
              },
              "summary": {
                "doclet": {
                  "description": "Lang configuration for the series main summary. Each series\ntype has two modes:\n\n1. This series type is the only series type used in the\n   chart\n\n2. This is a combination chart with multiple series types\n\nIf a definition does not exist for the specific series type\nand mode, the 'default' lang definitions are used.\n\nChart and its subproperties can be accessed with the `{chart}` variable.\nThe series and its subproperties can be accessed with the `{series}` variable.\n\nThe series index (starting from 1) can be accessed with the `{seriesNumber}` variable.",
                  "since": "6.0.6",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "lang.accessibility.series.summary",
                  "name": "summary",
                  "line": 348,
                  "lineEnd": 366,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js"
                },
                "children": {
                  "bar": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, bar series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.bar",
                      "name": "bar",
                      "line": 377,
                      "lineEnd": 377,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, bar series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "barCombination": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, series {seriesNumber} of {chart.series.length}. Bar series with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.barCombination",
                      "name": "barCombination",
                      "line": 378,
                      "lineEnd": 378,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, series {seriesNumber} of {chart.series.length}. Bar series with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "boxplot": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, boxplot {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}box{else}boxes{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.boxplot",
                      "name": "boxplot",
                      "line": 383,
                      "lineEnd": 383,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, boxplot {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}box{else}boxes{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "boxplotCombination": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, series {seriesNumber} of {chart.series.length}. Boxplot with {series.points.length} {#eq series.points.length 1}box{else}boxes{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.boxplotCombination",
                      "name": "boxplotCombination",
                      "line": 384,
                      "lineEnd": 384,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, series {seriesNumber} of {chart.series.length}. Boxplot with {series.points.length} {#eq series.points.length 1}box{else}boxes{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "bubble": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, bubble series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.bubble",
                      "name": "bubble",
                      "line": 385,
                      "lineEnd": 385,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, bubble series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "bubbleCombination": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, series {seriesNumber} of {chart.series.length}. Bubble series with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.bubbleCombination",
                      "name": "bubbleCombination",
                      "line": 386,
                      "lineEnd": 386,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, series {seriesNumber} of {chart.series.length}. Bubble series with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "column": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, bar series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.column",
                      "name": "column",
                      "line": 375,
                      "lineEnd": 375,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, bar series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "columnCombination": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, series {seriesNumber} of {chart.series.length}. Bar series with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.columnCombination",
                      "name": "columnCombination",
                      "line": 376,
                      "lineEnd": 376,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, series {seriesNumber} of {chart.series.length}. Bar series with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "default": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, series {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.default",
                      "name": "default",
                      "line": 368,
                      "lineEnd": 368,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, series {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "defaultCombination": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, series {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.defaultCombination",
                      "name": "defaultCombination",
                      "line": 370,
                      "lineEnd": 370,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, series {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "line": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.line",
                      "name": "line",
                      "line": 371,
                      "lineEnd": 371,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "lineCombination": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.lineCombination",
                      "name": "lineCombination",
                      "line": 372,
                      "lineEnd": 372,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "map": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, map {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}area{else}areas{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.map",
                      "name": "map",
                      "line": 387,
                      "lineEnd": 387,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, map {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}area{else}areas{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "mapCombination": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, series {seriesNumber} of {chart.series.length}. Map with {series.points.length} {#eq series.points.length 1}area{else}areas{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.mapCombination",
                      "name": "mapCombination",
                      "line": 388,
                      "lineEnd": 388,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, series {seriesNumber} of {chart.series.length}. Map with {series.points.length} {#eq series.points.length 1}area{else}areas{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "mapbubble": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, bubble series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.mapbubble",
                      "name": "mapbubble",
                      "line": 391,
                      "lineEnd": 391,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, bubble series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "mapbubbleCombination": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, series {seriesNumber} of {chart.series.length}. Bubble series with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.mapbubbleCombination",
                      "name": "mapbubbleCombination",
                      "line": 392,
                      "lineEnd": 392,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, series {seriesNumber} of {chart.series.length}. Bubble series with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "mapline": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.mapline",
                      "name": "mapline",
                      "line": 389,
                      "lineEnd": 389,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "maplineCombination": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.maplineCombination",
                      "name": "maplineCombination",
                      "line": 390,
                      "lineEnd": 390,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "pie": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, pie {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}slice{else}slices{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.pie",
                      "name": "pie",
                      "line": 379,
                      "lineEnd": 379,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, pie {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}slice{else}slices{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "pieCombination": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, series {seriesNumber} of {chart.series.length}. Pie with {series.points.length} {#eq series.points.length 1}slice{else}slices{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.pieCombination",
                      "name": "pieCombination",
                      "line": 380,
                      "lineEnd": 380,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, series {seriesNumber} of {chart.series.length}. Pie with {series.points.length} {#eq series.points.length 1}slice{else}slices{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "scatter": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, scatter plot {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.scatter",
                      "name": "scatter",
                      "line": 381,
                      "lineEnd": 381,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, scatter plot {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "scatterCombination": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, series {seriesNumber} of {chart.series.length}, scatter plot with {series.points.length} {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.scatterCombination",
                      "name": "scatterCombination",
                      "line": 382,
                      "lineEnd": 382,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, series {seriesNumber} of {chart.series.length}, scatter plot with {series.points.length} {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "spline": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.spline",
                      "name": "spline",
                      "line": 373,
                      "lineEnd": 373,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  },
                  "splineCombination": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "meta": {
                      "fullname": "lang.accessibility.series.summary.splineCombination",
                      "name": "splineCombination",
                      "line": 374,
                      "lineEnd": 374,
                      "column": 16,
                      "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                      "default": "{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}."
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsLangAccessibilitySeriesSummaryOptions",
                "extended": 1
              },
              "xAxisDescription": {
                "doclet": {
                  "description": "X-axis description for series if there are multiple xAxes in\nthe chart.",
                  "since": "6.0.6",
                  "type": { "names": ["string"] },
                  "defaultvalue": "X axis, {name}"
                },
                "meta": {
                  "fullname": "lang.accessibility.series.xAxisDescription",
                  "name": "xAxisDescription",
                  "line": 404,
                  "lineEnd": 409,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "X axis, {name}"
                },
                "children": {},
                "extended": 1
              },
              "yAxisDescription": {
                "doclet": {
                  "description": "Y-axis description for series if there are multiple yAxes in\nthe chart.",
                  "since": "6.0.6",
                  "type": { "names": ["string"] },
                  "defaultvalue": "Y axis, {name}"
                },
                "meta": {
                  "fullname": "lang.accessibility.series.yAxisDescription",
                  "name": "yAxisDescription",
                  "line": 411,
                  "lineEnd": 416,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Y axis, {name}"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLangAccessibilitySeriesOptions",
            "extended": 1
          },
          "seriesTypeDescriptions": {
            "doclet": {
              "description": "Descriptions of lesser known series types. The relevant\ndescription is added to the screen reader information region\nwhen these series types are used.",
              "since": "6.0.6",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "lang.accessibility.seriesTypeDescriptions",
              "name": "seriesTypeDescriptions",
              "line": 237,
              "lineEnd": 243,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js"
            },
            "children": {
              "arearange": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Arearange charts are line charts displaying a range between a lower and higher value for each point."
                },
                "meta": {
                  "fullname": "lang.accessibility.seriesTypeDescriptions.arearange",
                  "name": "arearange",
                  "line": 249,
                  "lineEnd": 249,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Arearange charts are line charts displaying a range between a lower and higher value for each point."
                },
                "children": {},
                "extended": 1
              },
              "areasplinerange": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "These charts are line charts displaying a range between a lower and higher value for each point."
                },
                "meta": {
                  "fullname": "lang.accessibility.seriesTypeDescriptions.areasplinerange",
                  "name": "areasplinerange",
                  "line": 251,
                  "lineEnd": 251,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "These charts are line charts displaying a range between a lower and higher value for each point."
                },
                "children": {},
                "extended": 1
              },
              "boxplot": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Box plot charts are typically used to display groups of statistical data. Each data point in the chart can have up to 5 values: minimum, lower quartile, median, upper quartile, and maximum."
                },
                "meta": {
                  "fullname": "lang.accessibility.seriesTypeDescriptions.boxplot",
                  "name": "boxplot",
                  "line": 245,
                  "lineEnd": 245,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Box plot charts are typically used to display groups of statistical data. Each data point in the chart can have up to 5 values: minimum, lower quartile, median, upper quartile, and maximum."
                },
                "children": {},
                "extended": 1
              },
              "bubble": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Bubble charts are scatter charts where each data point also has a size value."
                },
                "meta": {
                  "fullname": "lang.accessibility.seriesTypeDescriptions.bubble",
                  "name": "bubble",
                  "line": 253,
                  "lineEnd": 253,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Bubble charts are scatter charts where each data point also has a size value."
                },
                "children": {},
                "extended": 1
              },
              "columnrange": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Columnrange charts are column charts displaying a range between a lower and higher value for each point."
                },
                "meta": {
                  "fullname": "lang.accessibility.seriesTypeDescriptions.columnrange",
                  "name": "columnrange",
                  "line": 255,
                  "lineEnd": 255,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Columnrange charts are column charts displaying a range between a lower and higher value for each point."
                },
                "children": {},
                "extended": 1
              },
              "errorbar": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Errorbar series are used to display the variability of the data."
                },
                "meta": {
                  "fullname": "lang.accessibility.seriesTypeDescriptions.errorbar",
                  "name": "errorbar",
                  "line": 258,
                  "lineEnd": 258,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Errorbar series are used to display the variability of the data."
                },
                "children": {},
                "extended": 1
              },
              "funnel": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Funnel charts are used to display reduction of data in stages."
                },
                "meta": {
                  "fullname": "lang.accessibility.seriesTypeDescriptions.funnel",
                  "name": "funnel",
                  "line": 260,
                  "lineEnd": 260,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Funnel charts are used to display reduction of data in stages."
                },
                "children": {},
                "extended": 1
              },
              "pyramid": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Pyramid charts consist of a single pyramid with item heights corresponding to each point value."
                },
                "meta": {
                  "fullname": "lang.accessibility.seriesTypeDescriptions.pyramid",
                  "name": "pyramid",
                  "line": 262,
                  "lineEnd": 262,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Pyramid charts consist of a single pyramid with item heights corresponding to each point value."
                },
                "children": {},
                "extended": 1
              },
              "waterfall": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "A waterfall chart is a column chart where each column contributes towards a total end value."
                },
                "meta": {
                  "fullname": "lang.accessibility.seriesTypeDescriptions.waterfall",
                  "name": "waterfall",
                  "line": 264,
                  "lineEnd": 264,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "A waterfall chart is a column chart where each column contributes towards a total end value."
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLangAccessibilitySeriesTypeDescriptionsOptions",
            "extended": 1
          },
          "sonification": {
            "doclet": {
              "description": "Language options for sonification.",
              "since": "8.0.1",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "lang.accessibility.sonification",
              "name": "sonification",
              "line": 128,
              "lineEnd": 132,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js"
            },
            "children": {
              "playAsSoundButtonText": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Play as sound, {chartTitle}"
                },
                "meta": {
                  "fullname": "lang.accessibility.sonification.playAsSoundButtonText",
                  "name": "playAsSoundButtonText",
                  "line": 134,
                  "lineEnd": 134,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Play as sound, {chartTitle}"
                },
                "children": {},
                "extended": 1
              },
              "playAsSoundClickAnnouncement": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Play"
                },
                "meta": {
                  "fullname": "lang.accessibility.sonification.playAsSoundClickAnnouncement",
                  "name": "playAsSoundClickAnnouncement",
                  "line": 135,
                  "lineEnd": 135,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Play"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLangAccessibilitySonificationOptions",
            "extended": 1
          },
          "svgContainerLabel": {
            "doclet": {
              "description": "Accessible label for the chart SVG element.\n`{chartTitle}` refers to the chart title.",
              "since": "6.0.6",
              "type": { "names": ["string"] },
              "defaultvalue": "Interactive chart"
            },
            "meta": {
              "fullname": "lang.accessibility.svgContainerLabel",
              "name": "svgContainerLabel",
              "line": 55,
              "lineEnd": 58,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
              "default": "Interactive chart"
            },
            "children": {},
            "extended": 1
          },
          "svgContainerTitle": {
            "doclet": {
              "description": "Title element text for the chart SVG element. Leave this\nempty to disable adding the title element. Browsers will display\nthis content when hovering over elements in the chart. Assistive\ntechnology may use this element to label the chart.",
              "since": "6.0.8",
              "type": { "names": ["string"] },
              "defaultvalue": ""
            },
            "meta": {
              "fullname": "lang.accessibility.svgContainerTitle",
              "name": "svgContainerTitle",
              "line": 81,
              "lineEnd": 88,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
              "default": ""
            },
            "children": {},
            "extended": 1
          },
          "table": {
            "doclet": {
              "description": "Accessibility language options for the data table.",
              "since": "8.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "lang.accessibility.table",
              "name": "table",
              "line": 210,
              "lineEnd": 214,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js"
            },
            "children": {
              "tableSummary": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Table representation of chart."
                },
                "meta": {
                  "fullname": "lang.accessibility.table.tableSummary",
                  "name": "tableSummary",
                  "line": 217,
                  "lineEnd": 217,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Table representation of chart."
                },
                "children": {},
                "extended": 1
              },
              "viewAsDataTableButtonText": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "View as data table, {chartTitle}"
                },
                "meta": {
                  "fullname": "lang.accessibility.table.viewAsDataTableButtonText",
                  "name": "viewAsDataTableButtonText",
                  "line": 216,
                  "lineEnd": 216,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "View as data table, {chartTitle}"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLangAccessibilityTableOptions",
            "extended": 1
          },
          "thousandsSep": {
            "doclet": {
              "description": "Thousands separator to use when formatting numbers for screen\nreaders. Note that many screen readers will not handle space as a\nthousands separator, and will consider \"11 700\" as two numbers.\n\nSet to `null` to use the separator defined in\n[lang.thousandsSep](lang.thousandsSep).",
              "since": "7.1.0",
              "type": { "names": ["string"] },
              "defaultvalue": ","
            },
            "meta": {
              "fullname": "lang.accessibility.thousandsSep",
              "name": "thousandsSep",
              "line": 70,
              "lineEnd": 79,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
              "default": ","
            },
            "children": {},
            "extended": 1
          },
          "zoom": {
            "doclet": {
              "description": "Chart and map zoom accessibility language options.",
              "since": "8.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "lang.accessibility.zoom",
              "name": "zoom",
              "line": 160,
              "lineEnd": 164,
              "column": 8,
              "filename": "code/es-modules/Accessibility/Options/LangDefaults.js"
            },
            "children": {
              "mapZoomIn": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Zoom chart"
                },
                "meta": {
                  "fullname": "lang.accessibility.zoom.mapZoomIn",
                  "name": "mapZoomIn",
                  "line": 166,
                  "lineEnd": 166,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Zoom chart"
                },
                "children": {},
                "extended": 1
              },
              "mapZoomOut": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Zoom out chart"
                },
                "meta": {
                  "fullname": "lang.accessibility.zoom.mapZoomOut",
                  "name": "mapZoomOut",
                  "line": 167,
                  "lineEnd": 167,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Zoom out chart"
                },
                "children": {},
                "extended": 1
              },
              "resetZoomButton": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Reset zoom"
                },
                "meta": {
                  "fullname": "lang.accessibility.zoom.resetZoomButton",
                  "name": "resetZoomButton",
                  "line": 168,
                  "lineEnd": 168,
                  "column": 12,
                  "filename": "code/es-modules/Accessibility/Options/LangDefaults.js",
                  "default": "Reset zoom"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLangAccessibilityZoomOptions",
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsLangAccessibilityOptions",
        "extended": 1
      },
      "contextButtonTitle": {
        "doclet": {
          "description": "Exporting module menu. The tooltip title for the context menu holding\nprint and export menu items.",
          "since": "3.0.0",
          "requires": ["module:modules/exporting"],
          "type": { "names": ["string"] },
          "defaultvalue": "Chart context menu"
        },
        "meta": {
          "fullname": "lang.contextButtonTitle",
          "name": "contextButtonTitle",
          "line": 581,
          "lineEnd": 587,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "default": "Chart context menu"
        },
        "children": {},
        "extended": 1
      },
      "decimalPoint": {
        "doclet": {
          "description": "The default decimal point used in the `Highcharts.numberFormat`\nmethod unless otherwise specified in the function arguments. Defaults\nto the locale decimal point as determined by `lang.locale`.",
          "type": { "names": ["string"] },
          "defaultvalue": "undefined",
          "since": "1.2.2"
        },
        "meta": {
          "fullname": "lang.decimalPoint",
          "name": "decimalPoint",
          "line": 185,
          "lineEnd": 194,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "downloadCSV": {
        "doclet": {
          "description": "The text for the menu item.",
          "since": "6.0.0",
          "requires": ["module:modules/export-data"],
          "type": { "names": ["string"] },
          "defaultvalue": "Download CSV"
        },
        "meta": {
          "fullname": "lang.downloadCSV",
          "name": "downloadCSV",
          "line": 197,
          "lineEnd": 202,
          "column": 4,
          "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
          "default": "Download CSV"
        },
        "children": {},
        "extended": 1
      },
      "downloadJPEG": {
        "doclet": {
          "description": "Exporting module only. The text for the JPEG download menu item.",
          "since": "2.0.0",
          "requires": ["module:modules/exporting"],
          "type": { "names": ["string"] },
          "defaultvalue": "Download JPEG image"
        },
        "meta": {
          "fullname": "lang.downloadJPEG",
          "name": "downloadJPEG",
          "line": 560,
          "lineEnd": 565,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "default": "Download JPEG image"
        },
        "children": {},
        "extended": 1
      },
      "downloadMIDI": {
        "doclet": {
          "description": "The text for the MIDI download menu item in the export menu.",
          "requires": ["module:modules/sonification"],
          "since": "11.0.0",
          "type": { "names": ["string"] },
          "defaultvalue": "Download MIDI"
        },
        "meta": {
          "fullname": "lang.downloadMIDI",
          "name": "downloadMIDI",
          "line": 929,
          "lineEnd": 933,
          "column": 8,
          "filename": "code/es-modules/Extensions/Sonification/Options.js",
          "default": "Download MIDI"
        },
        "children": {},
        "extended": 1
      },
      "downloadPDF": {
        "doclet": {
          "description": "Exporting module only. The text for the PDF download menu item.",
          "since": "2.0.0",
          "requires": ["module:modules/exporting"],
          "type": { "names": ["string"] },
          "defaultvalue": "Download PDF document"
        },
        "meta": {
          "fullname": "lang.downloadPDF",
          "name": "downloadPDF",
          "line": 567,
          "lineEnd": 572,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "default": "Download PDF document"
        },
        "children": {},
        "extended": 1
      },
      "downloadPNG": {
        "doclet": {
          "description": "Exporting module only. The text for the PNG download menu item.",
          "since": "2.0.0",
          "requires": ["module:modules/exporting"],
          "type": { "names": ["string"] },
          "defaultvalue": "Download PNG image"
        },
        "meta": {
          "fullname": "lang.downloadPNG",
          "name": "downloadPNG",
          "line": 553,
          "lineEnd": 558,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "default": "Download PNG image"
        },
        "children": {},
        "extended": 1
      },
      "downloadSVG": {
        "doclet": {
          "description": "Exporting module only. The text for the SVG download menu item.",
          "since": "2.0.0",
          "requires": ["module:modules/exporting"],
          "type": { "names": ["string"] },
          "defaultvalue": "Download SVG vector image"
        },
        "meta": {
          "fullname": "lang.downloadSVG",
          "name": "downloadSVG",
          "line": 574,
          "lineEnd": 579,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "default": "Download SVG vector image"
        },
        "children": {},
        "extended": 1
      },
      "downloadXLS": {
        "doclet": {
          "description": "The text for the menu item.",
          "since": "6.0.0",
          "requires": ["module:modules/export-data"],
          "type": { "names": ["string"] },
          "defaultvalue": "Download XLS"
        },
        "meta": {
          "fullname": "lang.downloadXLS",
          "name": "downloadXLS",
          "line": 204,
          "lineEnd": 209,
          "column": 4,
          "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
          "default": "Download XLS"
        },
        "children": {},
        "extended": 1
      },
      "drillUpText": {
        "doclet": {
          "description": "The text for the button that appears when drilling down, linking back\nto the parent series. The parent series' name is inserted for\n`{series.name}`.",
          "deprecated": true,
          "since": "3.0.8",
          "products": ["highcharts", "highmaps"],
          "requires": ["module:modules/drilldown"]
        },
        "meta": {
          "fullname": "lang.drillUpText",
          "name": "drillUpText",
          "line": 307,
          "lineEnd": 317,
          "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "exitFullscreen": {
        "doclet": {
          "description": "Exporting module only. The text for the menu item to exit the chart\nfrom full screen.",
          "since": "8.0.1",
          "type": { "names": ["string"] },
          "defaultvalue": "Exit from full screen"
        },
        "meta": {
          "fullname": "lang.exitFullscreen",
          "name": "exitFullscreen",
          "line": 539,
          "lineEnd": 544,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "default": "Exit from full screen"
        },
        "children": {},
        "extended": 1
      },
      "exportData": {
        "doclet": {
          "description": "The text for exported table.",
          "since": "8.1.0",
          "requires": ["module:modules/export-data"],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "lang.exportData",
          "name": "exportData",
          "line": 211,
          "lineEnd": 216,
          "column": 4,
          "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js"
        },
        "children": {
          "annotationHeader": {
            "doclet": {
              "description": "The annotation column title.",
              "since": "8.1.0",
              "type": { "names": ["string"] },
              "defaultvalue": "Annotations"
            },
            "meta": {
              "fullname": "lang.exportData.annotationHeader",
              "name": "annotationHeader",
              "line": 218,
              "lineEnd": 220,
              "column": 8,
              "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
              "default": "Annotations"
            },
            "children": {},
            "extended": 1
          },
          "categoryDatetimeHeader": {
            "doclet": {
              "description": "The category column title when axis type set to \"datetime\".",
              "since": "8.1.0",
              "type": { "names": ["string"] },
              "defaultvalue": "DateTime"
            },
            "meta": {
              "fullname": "lang.exportData.categoryDatetimeHeader",
              "name": "categoryDatetimeHeader",
              "line": 226,
              "lineEnd": 228,
              "column": 8,
              "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
              "default": "DateTime"
            },
            "children": {},
            "extended": 1
          },
          "categoryHeader": {
            "doclet": {
              "description": "The category column title.",
              "since": "8.1.0",
              "type": { "names": ["string"] },
              "defaultvalue": "Category"
            },
            "meta": {
              "fullname": "lang.exportData.categoryHeader",
              "name": "categoryHeader",
              "line": 222,
              "lineEnd": 224,
              "column": 8,
              "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
              "default": "Category"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsLangExportDataOptions",
        "extended": 1
      },
      "exportInProgress": {
        "doclet": {
          "description": "Text to show when export is in progress.",
          "since": "11.3.0",
          "requires": ["module:modules/export-data"],
          "type": { "names": ["string"] },
          "defaultvalue": "Exporting..."
        },
        "meta": {
          "fullname": "lang.exportInProgress",
          "name": "exportInProgress",
          "line": 245,
          "lineEnd": 250,
          "column": 4,
          "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
          "default": "Exporting..."
        },
        "children": {},
        "extended": 1
      },
      "hideData": {
        "doclet": {
          "description": "The text for the menu item.",
          "since": "8.2.0",
          "requires": ["module:modules/export-data"],
          "type": { "names": ["string"] },
          "defaultvalue": "Hide data table"
        },
        "meta": {
          "fullname": "lang.hideData",
          "name": "hideData",
          "line": 238,
          "lineEnd": 243,
          "column": 4,
          "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
          "default": "Hide data table"
        },
        "children": {},
        "extended": 1
      },
      "invalidDate": {
        "doclet": {
          "description": "What to show in a date field for invalid dates. Defaults to an empty\nstring.",
          "type": { "names": ["string"] },
          "since": "4.1.8",
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "lang.invalidDate",
          "name": "invalidDate",
          "line": 158,
          "lineEnd": 166,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "loading": {
        "doclet": {
          "description": "The loading text that appears when the chart is set into the loading\nstate following a call to `chart.showLoading`.",
          "type": { "names": ["string"] },
          "defaultvalue": "Loading..."
        },
        "meta": {
          "fullname": "lang.loading",
          "name": "loading",
          "line": 115,
          "lineEnd": 118,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "Loading..."
        },
        "children": {},
        "extended": 1
      },
      "locale": {
        "doclet": {
          "description": "The browser locale to use for date and number formatting. The actual\nlocale used for each chart is determined in three steps:\n1. If this `lang.locale` option is specified, it is used.\n2. Else, look for the closest ancestor HTML element with a `lang`\n   attribute, typically the `<html>` element.\n3. If no 'lang' attribute is found, use the default browser locale.\n\nUse `en-GB`, British English, for approximate consistency with\nHighcharts v < 12.",
          "samples": [
            {
              "name": "Set the locale using the `lang.locale` option",
              "value": "highcharts/lang/locale/"
            },
            {
              "name": "Pick up the locale from the HTML `lang` attribute",
              "value": "highcharts/lang/locale-attribute/"
            },
            {
              "name": "Arabic locale with digits and dates *",
              "value": "highcharts/members/highcharts-numberformat"
            }
          ],
          "since": "12.0.0",
          "type": { "names": ["string", "Array.<string>"] },
          "defaultvalue": "undefined"
        },
        "meta": {
          "fullname": "lang.locale",
          "name": "locale",
          "line": 93,
          "lineEnd": 113,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "undefined"
        },
        "children": {},
        "extended": 1
      },
      "mainBreadcrumb": {
        "doclet": {
          "since": "10.0.0",
          "products": ["highcharts", "highmaps"],
          "type": { "names": ["string"] },
          "defaultvalue": "Main"
        },
        "meta": {
          "fullname": "lang.mainBreadcrumb",
          "name": "mainBreadcrumb",
          "line": 22,
          "lineEnd": 27,
          "column": 4,
          "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
          "default": "Main"
        },
        "children": {},
        "extended": 1
      },
      "months": {
        "doclet": {
          "description": "An array containing the months names. Corresponds to the `%B` format\nin `Highcharts.dateFormat()`. Defaults to 'undefined',\nmeaning the default month names are used according to the\n`lang.locale` setting.",
          "type": { "names": ["Array.<string>"] },
          "defaultvalue": "undefined"
        },
        "meta": {
          "fullname": "lang.months",
          "name": "months",
          "line": 120,
          "lineEnd": 127,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "undefined"
        },
        "children": {},
        "extended": 1
      },
      "navigation": {
        "doclet": {
          "description": "Configure the Popup strings in the chart. Requires the\n`annotations.js` or `annotations-advanced.src.js` module to be\nloaded.",
          "since": "7.0.0",
          "products": ["highcharts", "highstock"],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "lang.navigation",
          "name": "navigation",
          "line": 97,
          "lineEnd": 97,
          "column": 4,
          "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js"
        },
        "children": {
          "popup": {
            "doclet": {
              "description": "Translations for all field names used in popup.",
              "products": ["highcharts", "highstock"],
              "since": "7.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "lang.navigation.popup",
              "name": "popup",
              "line": 98,
              "lineEnd": 98,
              "column": 8,
              "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js"
            },
            "children": {
              "addButton": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Add"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.addButton",
                  "name": "addButton",
                  "line": 131,
                  "lineEnd": 131,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Add"
                },
                "children": {},
                "extended": 1
              },
              "algorithm": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Algorithm"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.algorithm",
                  "name": "algorithm",
                  "line": 163,
                  "lineEnd": 163,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Algorithm"
                },
                "children": {},
                "extended": 1
              },
              "arrowInfinityLine": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Arrow line"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.arrowInfinityLine",
                  "name": "arrowInfinityLine",
                  "line": 109,
                  "lineEnd": 109,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Arrow line"
                },
                "children": {},
                "extended": 1
              },
              "arrowRay": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Arrow ray"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.arrowRay",
                  "name": "arrowRay",
                  "line": 107,
                  "lineEnd": 107,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Arrow ray"
                },
                "children": {},
                "extended": 1
              },
              "arrowSegment": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Arrow segment"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.arrowSegment",
                  "name": "arrowSegment",
                  "line": 105,
                  "lineEnd": 105,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Arrow segment"
                },
                "children": {},
                "extended": 1
              },
              "average": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Average"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.average",
                  "name": "average",
                  "line": 178,
                  "lineEnd": 178,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Average"
                },
                "children": {},
                "extended": 1
              },
              "background": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Background"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.background",
                  "name": "background",
                  "line": 145,
                  "lineEnd": 145,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Background"
                },
                "children": {},
                "extended": 1
              },
              "backgroundColor": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Background color"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.backgroundColor",
                  "name": "backgroundColor",
                  "line": 54,
                  "lineEnd": 54,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Background color"
                },
                "children": {},
                "extended": 1
              },
              "backgroundColors": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Background colors"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.backgroundColors",
                  "name": "backgroundColors",
                  "line": 55,
                  "lineEnd": 55,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Background colors"
                },
                "children": {},
                "extended": 1
              },
              "borderColor": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Border color"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.borderColor",
                  "name": "borderColor",
                  "line": 56,
                  "lineEnd": 56,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Border color"
                },
                "children": {},
                "extended": 1
              },
              "borderRadius": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Border radius"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.borderRadius",
                  "name": "borderRadius",
                  "line": 57,
                  "lineEnd": 57,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Border radius"
                },
                "children": {},
                "extended": 1
              },
              "borderWidth": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Border width"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.borderWidth",
                  "name": "borderWidth",
                  "line": 58,
                  "lineEnd": 58,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Border width"
                },
                "children": {},
                "extended": 1
              },
              "bottomBand": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Bottom band"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.bottomBand",
                  "name": "bottomBand",
                  "line": 165,
                  "lineEnd": 165,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Bottom band"
                },
                "children": {},
                "extended": 1
              },
              "circle": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Circle"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.circle",
                  "name": "circle",
                  "line": 99,
                  "lineEnd": 99,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Circle"
                },
                "children": {},
                "extended": 1
              },
              "clearFilter": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "✕ clear filter"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.clearFilter",
                  "name": "clearFilter",
                  "line": 150,
                  "lineEnd": 150,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "✕ clear filter"
                },
                "children": {},
                "extended": 1
              },
              "color": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Color"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.color",
                  "name": "color",
                  "line": 62,
                  "lineEnd": 62,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Color"
                },
                "children": {},
                "extended": 1
              },
              "connector": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Connector"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.connector",
                  "name": "connector",
                  "line": 138,
                  "lineEnd": 138,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Connector"
                },
                "children": {},
                "extended": 1
              },
              "crooked3": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Crooked 3 line"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.crooked3",
                  "name": "crooked3",
                  "line": 112,
                  "lineEnd": 112,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Crooked 3 line"
                },
                "children": {},
                "extended": 1
              },
              "crooked5": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Crooked 5 line"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.crooked5",
                  "name": "crooked5",
                  "line": 113,
                  "lineEnd": 113,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Crooked 5 line"
                },
                "children": {},
                "extended": 1
              },
              "crosshairX": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Crosshair X"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.crosshairX",
                  "name": "crosshairX",
                  "line": 142,
                  "lineEnd": 142,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Crosshair X"
                },
                "children": {},
                "extended": 1
              },
              "crosshairY": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Crosshair Y"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.crosshairY",
                  "name": "crosshairY",
                  "line": 143,
                  "lineEnd": 143,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Crosshair Y"
                },
                "children": {},
                "extended": 1
              },
              "decimals": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Decimals"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.decimals",
                  "name": "decimals",
                  "line": 162,
                  "lineEnd": 162,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Decimals"
                },
                "children": {},
                "extended": 1
              },
              "deviation": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Deviation"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.deviation",
                  "name": "deviation",
                  "line": 173,
                  "lineEnd": 173,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Deviation"
                },
                "children": {},
                "extended": 1
              },
              "editButton": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Edit"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.editButton",
                  "name": "editButton",
                  "line": 134,
                  "lineEnd": 134,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Edit"
                },
                "children": {},
                "extended": 1
              },
              "elliott3": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Elliott 3 line"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.elliott3",
                  "name": "elliott3",
                  "line": 114,
                  "lineEnd": 114,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Elliott 3 line"
                },
                "children": {},
                "extended": 1
              },
              "elliott5": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Elliott 5 line"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.elliott5",
                  "name": "elliott5",
                  "line": 115,
                  "lineEnd": 115,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Elliott 5 line"
                },
                "children": {},
                "extended": 1
              },
              "ellipse": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Ellipse"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.ellipse",
                  "name": "ellipse",
                  "line": 101,
                  "lineEnd": 101,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Ellipse"
                },
                "children": {},
                "extended": 1
              },
              "factor": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Factor"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.factor",
                  "name": "factor",
                  "line": 175,
                  "lineEnd": 175,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Factor"
                },
                "children": {},
                "extended": 1
              },
              "fastAvgPeriod": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Fast average period"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.fastAvgPeriod",
                  "name": "fastAvgPeriod",
                  "line": 176,
                  "lineEnd": 176,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Fast average period"
                },
                "children": {},
                "extended": 1
              },
              "fibonacci": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Fibonacci"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.fibonacci",
                  "name": "fibonacci",
                  "line": 119,
                  "lineEnd": 119,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Fibonacci"
                },
                "children": {},
                "extended": 1
              },
              "fibonacciTimeZones": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Fibonacci Time Zones"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.fibonacciTimeZones",
                  "name": "fibonacciTimeZones",
                  "line": 120,
                  "lineEnd": 120,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Fibonacci Time Zones"
                },
                "children": {},
                "extended": 1
              },
              "fill": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Fill"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.fill",
                  "name": "fill",
                  "line": 46,
                  "lineEnd": 46,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Fill"
                },
                "children": {},
                "extended": 1
              },
              "flags": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Flags"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.flags",
                  "name": "flags",
                  "line": 129,
                  "lineEnd": 129,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Flags"
                },
                "children": {},
                "extended": 1
              },
              "fontSize": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Font size"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.fontSize",
                  "name": "fontSize",
                  "line": 61,
                  "lineEnd": 61,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Font size"
                },
                "children": {},
                "extended": 1
              },
              "format": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Text"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.format",
                  "name": "format",
                  "line": 47,
                  "lineEnd": 47,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Text"
                },
                "children": {},
                "extended": 1
              },
              "height": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Height"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.height",
                  "name": "height",
                  "line": 63,
                  "lineEnd": 63,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Height"
                },
                "children": {},
                "extended": 1
              },
              "highIndex": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "High index"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.highIndex",
                  "name": "highIndex",
                  "line": 171,
                  "lineEnd": 171,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "High index"
                },
                "children": {},
                "extended": 1
              },
              "horizontalLine": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Horizontal line"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.horizontalLine",
                  "name": "horizontalLine",
                  "line": 110,
                  "lineEnd": 110,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Horizontal line"
                },
                "children": {},
                "extended": 1
              },
              "increment": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Increment"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.increment",
                  "name": "increment",
                  "line": 168,
                  "lineEnd": 168,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Increment"
                },
                "children": {},
                "extended": 1
              },
              "index": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Index"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.index",
                  "name": "index",
                  "line": 151,
                  "lineEnd": 151,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Index"
                },
                "children": {},
                "extended": 1
              },
              "infinityLine": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Infinity line"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.infinityLine",
                  "name": "infinityLine",
                  "line": 123,
                  "lineEnd": 123,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Infinity line"
                },
                "children": {},
                "extended": 1
              },
              "initialAccelerationFactor": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Initial acceleration factor"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.initialAccelerationFactor",
                  "name": "initialAccelerationFactor",
                  "line": 166,
                  "lineEnd": 166,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Initial acceleration factor"
                },
                "children": {},
                "extended": 1
              },
              "innerBackground": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Inner background"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.innerBackground",
                  "name": "innerBackground",
                  "line": 139,
                  "lineEnd": 139,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Inner background"
                },
                "children": {},
                "extended": 1
              },
              "label": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Label"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.label",
                  "name": "label",
                  "line": 103,
                  "lineEnd": 103,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Label"
                },
                "children": {},
                "extended": 1
              },
              "labelOptions": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Label options"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.labelOptions",
                  "name": "labelOptions",
                  "line": 52,
                  "lineEnd": 52,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Label options"
                },
                "children": {},
                "extended": 1
              },
              "labels": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Labels"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.labels",
                  "name": "labels",
                  "line": 53,
                  "lineEnd": 53,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Labels"
                },
                "children": {},
                "extended": 1
              },
              "line": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Line"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.line",
                  "name": "line",
                  "line": 108,
                  "lineEnd": 108,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Line"
                },
                "children": {},
                "extended": 1
              },
              "lines": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Lines"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.lines",
                  "name": "lines",
                  "line": 39,
                  "lineEnd": 39,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Lines"
                },
                "children": {},
                "extended": 1
              },
              "longPeriod": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Long period"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.longPeriod",
                  "name": "longPeriod",
                  "line": 160,
                  "lineEnd": 160,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Long period"
                },
                "children": {},
                "extended": 1
              },
              "lowIndex": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Low index"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.lowIndex",
                  "name": "lowIndex",
                  "line": 172,
                  "lineEnd": 172,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Low index"
                },
                "children": {},
                "extended": 1
              },
              "maxAccelerationFactor": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Max acceleration factor"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.maxAccelerationFactor",
                  "name": "maxAccelerationFactor",
                  "line": 167,
                  "lineEnd": 167,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Max acceleration factor"
                },
                "children": {},
                "extended": 1
              },
              "measure": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Measure"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.measure",
                  "name": "measure",
                  "line": 124,
                  "lineEnd": 124,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Measure"
                },
                "children": {},
                "extended": 1
              },
              "measureX": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Measure X"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.measureX",
                  "name": "measureX",
                  "line": 126,
                  "lineEnd": 126,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Measure X"
                },
                "children": {},
                "extended": 1
              },
              "measureXY": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Measure XY"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.measureXY",
                  "name": "measureXY",
                  "line": 125,
                  "lineEnd": 125,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Measure XY"
                },
                "children": {},
                "extended": 1
              },
              "measureY": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Measure Y"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.measureY",
                  "name": "measureY",
                  "line": 127,
                  "lineEnd": 127,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Measure Y"
                },
                "children": {},
                "extended": 1
              },
              "multiplier": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Multiplier"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.multiplier",
                  "name": "multiplier",
                  "line": 169,
                  "lineEnd": 169,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Multiplier"
                },
                "children": {},
                "extended": 1
              },
              "multiplierATR": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "ATR multiplier"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.multiplierATR",
                  "name": "multiplierATR",
                  "line": 158,
                  "lineEnd": 158,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "ATR multiplier"
                },
                "children": {},
                "extended": 1
              },
              "name": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Name"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.name",
                  "name": "name",
                  "line": 51,
                  "lineEnd": 51,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Name"
                },
                "children": {},
                "extended": 1
              },
              "noFilterMatch": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "No match"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.noFilterMatch",
                  "name": "noFilterMatch",
                  "line": 146,
                  "lineEnd": 146,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "No match"
                },
                "children": {},
                "extended": 1
              },
              "outerBackground": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Outer background"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.outerBackground",
                  "name": "outerBackground",
                  "line": 141,
                  "lineEnd": 141,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Outer background"
                },
                "children": {},
                "extended": 1
              },
              "padding": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Padding"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.padding",
                  "name": "padding",
                  "line": 60,
                  "lineEnd": 60,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Padding"
                },
                "children": {},
                "extended": 1
              },
              "parallelChannel": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Parallel channel"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.parallelChannel",
                  "name": "parallelChannel",
                  "line": 122,
                  "lineEnd": 122,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Parallel channel"
                },
                "children": {},
                "extended": 1
              },
              "period": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Period"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.period",
                  "name": "period",
                  "line": 152,
                  "lineEnd": 152,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Period"
                },
                "children": {},
                "extended": 1
              },
              "periodATR": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "ATR period"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.periodATR",
                  "name": "periodATR",
                  "line": 157,
                  "lineEnd": 157,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "ATR period"
                },
                "children": {},
                "extended": 1
              },
              "periodSenkouSpanB": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Senkou Span B period"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.periodSenkouSpanB",
                  "name": "periodSenkouSpanB",
                  "line": 156,
                  "lineEnd": 156,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Senkou Span B period"
                },
                "children": {},
                "extended": 1
              },
              "periodTenkan": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Tenkan period"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.periodTenkan",
                  "name": "periodTenkan",
                  "line": 155,
                  "lineEnd": 155,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Tenkan period"
                },
                "children": {},
                "extended": 1
              },
              "periods": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Periods"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.periods",
                  "name": "periods",
                  "line": 153,
                  "lineEnd": 153,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Periods"
                },
                "children": {},
                "extended": 1
              },
              "pitchfork": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Pitchfork"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.pitchfork",
                  "name": "pitchfork",
                  "line": 121,
                  "lineEnd": 121,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Pitchfork"
                },
                "children": {},
                "extended": 1
              },
              "ranges": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Ranges"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.ranges",
                  "name": "ranges",
                  "line": 170,
                  "lineEnd": 170,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Ranges"
                },
                "children": {},
                "extended": 1
              },
              "ray": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Ray"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.ray",
                  "name": "ray",
                  "line": 106,
                  "lineEnd": 106,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Ray"
                },
                "children": {},
                "extended": 1
              },
              "rectangle": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Rectangle"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.rectangle",
                  "name": "rectangle",
                  "line": 102,
                  "lineEnd": 102,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Rectangle"
                },
                "children": {},
                "extended": 1
              },
              "removeButton": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Remove"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.removeButton",
                  "name": "removeButton",
                  "line": 135,
                  "lineEnd": 135,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Remove"
                },
                "children": {},
                "extended": 1
              },
              "saveButton": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Save"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.saveButton",
                  "name": "saveButton",
                  "line": 133,
                  "lineEnd": 133,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Save"
                },
                "children": {},
                "extended": 1
              },
              "searchIndicators": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Search Indicators"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.searchIndicators",
                  "name": "searchIndicators",
                  "line": 148,
                  "lineEnd": 148,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Search Indicators"
                },
                "children": {},
                "extended": 1
              },
              "segment": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Segment"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.segment",
                  "name": "segment",
                  "line": 104,
                  "lineEnd": 104,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Segment"
                },
                "children": {},
                "extended": 1
              },
              "series": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Series"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.series",
                  "name": "series",
                  "line": 136,
                  "lineEnd": 136,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Series"
                },
                "children": {},
                "extended": 1
              },
              "shapeOptions": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Shape options"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.shapeOptions",
                  "name": "shapeOptions",
                  "line": 44,
                  "lineEnd": 44,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Shape options"
                },
                "children": {},
                "extended": 1
              },
              "shapes": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Shape options"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.shapes",
                  "name": "shapes",
                  "line": 64,
                  "lineEnd": 64,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Shape options"
                },
                "children": {},
                "extended": 1
              },
              "shortPeriod": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Short period"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.shortPeriod",
                  "name": "shortPeriod",
                  "line": 159,
                  "lineEnd": 159,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Short period"
                },
                "children": {},
                "extended": 1
              },
              "signalPeriod": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Signal period"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.signalPeriod",
                  "name": "signalPeriod",
                  "line": 161,
                  "lineEnd": 161,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Signal period"
                },
                "children": {},
                "extended": 1
              },
              "simpleShapes": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Simple shapes"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.simpleShapes",
                  "name": "simpleShapes",
                  "line": 38,
                  "lineEnd": 38,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Simple shapes"
                },
                "children": {},
                "extended": 1
              },
              "slowAvgPeriod": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Slow average period"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.slowAvgPeriod",
                  "name": "slowAvgPeriod",
                  "line": 177,
                  "lineEnd": 177,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Slow average period"
                },
                "children": {},
                "extended": 1
              },
              "standardDeviation": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Standard deviation"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.standardDeviation",
                  "name": "standardDeviation",
                  "line": 154,
                  "lineEnd": 154,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Standard deviation"
                },
                "children": {},
                "extended": 1
              },
              "stroke": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Line color"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.stroke",
                  "name": "stroke",
                  "line": 49,
                  "lineEnd": 49,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Line color"
                },
                "children": {},
                "extended": 1
              },
              "strokeWidth": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Line width"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.strokeWidth",
                  "name": "strokeWidth",
                  "line": 48,
                  "lineEnd": 48,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Line width"
                },
                "children": {},
                "extended": 1
              },
              "style": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Style"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.style",
                  "name": "style",
                  "line": 59,
                  "lineEnd": 59,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Style"
                },
                "children": {},
                "extended": 1
              },
              "timeCycles": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Time Cycles"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.timeCycles",
                  "name": "timeCycles",
                  "line": 128,
                  "lineEnd": 128,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Time Cycles"
                },
                "children": {},
                "extended": 1
              },
              "title": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Title"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.title",
                  "name": "title",
                  "line": 50,
                  "lineEnd": 50,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Title"
                },
                "children": {},
                "extended": 1
              },
              "topBand": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Top band"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.topBand",
                  "name": "topBand",
                  "line": 164,
                  "lineEnd": 164,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Top band"
                },
                "children": {},
                "extended": 1
              },
              "tunnel": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Tunnel"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.tunnel",
                  "name": "tunnel",
                  "line": 144,
                  "lineEnd": 144,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Tunnel"
                },
                "children": {},
                "extended": 1
              },
              "typeOptions": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Details"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.typeOptions",
                  "name": "typeOptions",
                  "line": 45,
                  "lineEnd": 45,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "Details"
                },
                "children": {},
                "extended": 1
              },
              "verticalArrow": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Vertical arrow"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.verticalArrow",
                  "name": "verticalArrow",
                  "line": 118,
                  "lineEnd": 118,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Vertical arrow"
                },
                "children": {},
                "extended": 1
              },
              "verticalCounter": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Vertical counter"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.verticalCounter",
                  "name": "verticalCounter",
                  "line": 116,
                  "lineEnd": 116,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Vertical counter"
                },
                "children": {},
                "extended": 1
              },
              "verticalLabel": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Vertical label"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.verticalLabel",
                  "name": "verticalLabel",
                  "line": 117,
                  "lineEnd": 117,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Vertical label"
                },
                "children": {},
                "extended": 1
              },
              "verticalLine": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Vertical line"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.verticalLine",
                  "name": "verticalLine",
                  "line": 111,
                  "lineEnd": 111,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Vertical line"
                },
                "children": {},
                "extended": 1
              },
              "volume": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Volume"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.volume",
                  "name": "volume",
                  "line": 137,
                  "lineEnd": 137,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "Volume"
                },
                "children": {},
                "extended": 1
              },
              "xAxisUnit": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "x-axis unit"
                },
                "meta": {
                  "fullname": "lang.navigation.popup.xAxisUnit",
                  "name": "xAxisUnit",
                  "line": 174,
                  "lineEnd": 174,
                  "column": 12,
                  "filename": "code/es-modules/Stock/StockTools/StockToolsDefaults.js",
                  "default": "x-axis unit"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLangNavigationPopupOptions",
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsLangNavigationOptions",
        "extended": 1
      },
      "noData": {
        "doclet": {
          "description": "The text to display when the chart contains no data.",
          "see": ["[noData](#noData)"],
          "samples": [
            {
              "name": "No-data text",
              "value": "highcharts/no-data-to-display/no-data-line"
            }
          ],
          "since": "3.0.8",
          "products": ["highcharts", "highstock"],
          "requires": ["module:modules/no-data-to-display"],
          "type": { "names": ["string"] },
          "defaultvalue": "No data to display"
        },
        "meta": {
          "fullname": "lang.noData",
          "name": "noData",
          "line": 24,
          "lineEnd": 35,
          "column": 4,
          "filename": "code/es-modules/Extensions/NoDataToDisplay/NoDataDefaults.js",
          "default": "No data to display"
        },
        "children": {},
        "extended": 1
      },
      "numericSymbolMagnitude": {
        "doclet": {
          "description": "The magnitude of [numericSymbols](#lang.numericSymbol) replacements.\nUse 10000 for Japanese, Korean and various Chinese locales, which\nuse symbols for 10^4, 10^8 and 10^12.",
          "samples": [
            {
              "name": "10000 magnitude for Japanese",
              "value": "highcharts/lang/numericsymbolmagnitude/"
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "1000",
          "since": "5.0.3"
        },
        "meta": {
          "fullname": "lang.numericSymbolMagnitude",
          "name": "numericSymbolMagnitude",
          "line": 211,
          "lineEnd": 223,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "numericSymbols": {
        "doclet": {
          "description": "[Metric prefixes](https://en.wikipedia.org/wiki/Metric_prefix) used\nto shorten high numbers in axis labels. Replacing any of the\npositions with `null` causes the full number to be written. Setting\n`numericSymbols` to `undefined` disables shortening altogether.",
          "samples": [
            {
              "name": "Replacing the symbols with text",
              "value": "highcharts/lang/numericsymbols/",
              "products": ["highcharts"]
            },
            {
              "name": "Replacing the symbols with text",
              "value": "highcharts/lang/numericsymbols/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Array.<string>"] },
          "defaultvalue": "[\"k\", \"M\", \"G\", \"T\", \"P\", \"E\"]",
          "since": "2.3.0"
        },
        "meta": {
          "fullname": "lang.numericSymbols",
          "name": "numericSymbols",
          "line": 146,
          "lineEnd": 157,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {},
        "extended": 1
      },
      "playAsSound": {
        "doclet": {
          "description": "The text for the Play as sound menu item in the export menu.",
          "requires": ["module:modules/sonification"],
          "since": "11.0.0",
          "type": { "names": ["string"] },
          "defaultvalue": "Play as sound"
        },
        "meta": {
          "fullname": "lang.playAsSound",
          "name": "playAsSound",
          "line": 935,
          "lineEnd": 939,
          "column": 8,
          "filename": "code/es-modules/Extensions/Sonification/Options.js",
          "default": "Play as sound"
        },
        "children": {},
        "extended": 1
      },
      "printChart": {
        "doclet": {
          "description": "Exporting module only. The text for the menu item to print the chart.",
          "since": "3.0.1",
          "requires": ["module:modules/exporting"],
          "type": { "names": ["string"] },
          "defaultvalue": "Print chart"
        },
        "meta": {
          "fullname": "lang.printChart",
          "name": "printChart",
          "line": 546,
          "lineEnd": 551,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "default": "Print chart"
        },
        "children": {},
        "extended": 1
      },
      "resetZoom": {
        "doclet": {
          "description": "The text for the label appearing when a chart is zoomed.",
          "since": "1.2.4",
          "type": { "names": ["string"] },
          "defaultvalue": "Reset zoom"
        },
        "meta": {
          "fullname": "lang.resetZoom",
          "name": "resetZoom",
          "line": 211,
          "lineEnd": 223,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "Reset zoom"
        },
        "children": {},
        "extended": 1
      },
      "resetZoomTitle": {
        "doclet": {
          "description": "The tooltip title for the label appearing when a chart is zoomed.",
          "since": "1.2.4",
          "type": { "names": ["string"] },
          "defaultvalue": "Reset zoom level 1:1"
        },
        "meta": {
          "fullname": "lang.resetZoomTitle",
          "name": "resetZoomTitle",
          "line": 240,
          "lineEnd": 244,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "Reset zoom level 1:1"
        },
        "children": {},
        "extended": 1
      },
      "shortMonths": {
        "doclet": {
          "description": "An array containing the months names in abbreviated form. Corresponds\nto the `%b` format in `Highcharts.dateFormat()`. Defaults to\n'undefined', meaning the default short month names are used according\nto the `lang.locale` setting.",
          "type": { "names": ["Array.<string>"] },
          "defaultvalue": "undefined"
        },
        "meta": {
          "fullname": "lang.shortMonths",
          "name": "shortMonths",
          "line": 129,
          "lineEnd": 136,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "undefined"
        },
        "children": {},
        "extended": 1
      },
      "shortWeekdays": {
        "doclet": {
          "description": "Short week days, starting Sunday. Defaults to 'undefined', meaning\nthe default short weekday names are used according to the\n`lang.locale` setting.",
          "samples": [
            {
              "name": "Finnish two-letter abbreviations",
              "value": "highcharts/lang/shortweekdays/"
            }
          ],
          "type": { "names": ["Array.<string>"] },
          "since": "4.2.4"
        },
        "meta": {
          "fullname": "lang.shortWeekdays",
          "name": "shortWeekdays",
          "line": 146,
          "lineEnd": 157,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "thousandsSep": {
        "doclet": {
          "description": "The default thousands separator used in the `Highcharts.numberFormat`\nmethod unless otherwise specified in the function arguments. Defaults\nto the locale thousands separator as determined by `lang.locale`.",
          "type": { "names": ["string"] },
          "defaultvalue": "undefined",
          "since": "1.2.2"
        },
        "meta": {
          "fullname": "lang.thousandsSep",
          "name": "thousandsSep",
          "line": 224,
          "lineEnd": 233,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "viewData": {
        "doclet": {
          "description": "The text for the menu item.",
          "since": "6.0.0",
          "requires": ["module:modules/export-data"],
          "type": { "names": ["string"] },
          "defaultvalue": "View data table"
        },
        "meta": {
          "fullname": "lang.viewData",
          "name": "viewData",
          "line": 231,
          "lineEnd": 236,
          "column": 4,
          "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
          "default": "View data table"
        },
        "children": {},
        "extended": 1
      },
      "viewFullscreen": {
        "doclet": {
          "description": "Exporting module only. The text for the menu item to view the chart\nin full screen.",
          "since": "8.0.1",
          "type": { "names": ["string"] },
          "defaultvalue": "View in full screen"
        },
        "meta": {
          "fullname": "lang.viewFullscreen",
          "name": "viewFullscreen",
          "line": 532,
          "lineEnd": 537,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
          "default": "View in full screen"
        },
        "children": {},
        "extended": 1
      },
      "weekdays": {
        "doclet": {
          "description": "An array containing the weekday names. Defaults to 'undefined',\nmeaning the default weekday names are used according to the\n`lang.locale` setting.",
          "type": { "names": ["Array.<string>"] },
          "defaultvalue": "undefined"
        },
        "meta": {
          "fullname": "lang.weekdays",
          "name": "weekdays",
          "line": 138,
          "lineEnd": 144,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "undefined"
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsLangOptions",
    "extended": 1
  },
  "legend": {
    "doclet": {
      "description": "The legend is a box containing a symbol and name for each series\nitem or point item in the chart. Each series (or points in case\nof pie charts) is represented by a symbol and its name in the legend.\n\nIt is possible to override the symbol creator function and create\n[custom legend symbols](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/studies/legend-custom-symbol/).",
      "productdesc": [
        {
          "value": "A Highmaps legend by default contains one legend item per series, but if\na `colorAxis` is defined, the axis will be displayed in the legend.\nEither as a gradient, or as multiple legend items for `dataClasses`.",
          "products": ["highmaps"]
        }
      ],
      "type": { "names": ["*"] }
    },
    "meta": {
      "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
      "name": "legend",
      "fullname": "legend",
      "line": 13,
      "lineEnd": 17,
      "column": 0
    },
    "children": {
      "accessibility": {
        "doclet": {
          "description": "Accessibility options for the legend. Requires the Accessibility\nmodule.",
          "since": "7.1.0",
          "requires": ["module:modules/accessibility"],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "legend.accessibility",
          "name": "accessibility",
          "line": 885,
          "lineEnd": 891,
          "column": 8,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js"
        },
        "children": {
          "enabled": {
            "doclet": {
              "description": "Enable accessibility support for the legend.",
              "since": "7.1.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "legend.accessibility.enabled",
              "name": "enabled",
              "line": 893,
              "lineEnd": 897,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "keyboardNavigation": {
            "doclet": {
              "description": "Options for keyboard navigation for the legend.",
              "since": "7.1.0",
              "requires": ["module:modules/accessibility"],
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "legend.accessibility.keyboardNavigation",
              "name": "keyboardNavigation",
              "line": 899,
              "lineEnd": 904,
              "column": 12,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js"
            },
            "children": {
              "enabled": {
                "doclet": {
                  "description": "Enable keyboard navigation for the legend.",
                  "see": [
                    "[accessibility.keyboardNavigation](#accessibility.keyboardNavigation.enabled)"
                  ],
                  "since": "7.1.0",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "legend.accessibility.keyboardNavigation.enabled",
                  "name": "enabled",
                  "line": 906,
                  "lineEnd": 912,
                  "column": 16,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLegendAccessibilityKeyboardNavigationOptions",
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsLegendAccessibilityOptions",
        "extended": 1
      },
      "align": {
        "doclet": {
          "description": "The horizontal alignment of the legend box within the chart area.\nValid values are `left`, `center` and `right`.\n\nIn the case that the legend is aligned in a corner position, the\n`layout` option will determine whether to place it above/below\nor on the side of the plot area.",
          "samples": [
            {
              "name": "Legend at the right of the chart",
              "value": "highcharts/legend/align/",
              "products": ["highcharts"]
            },
            {
              "name": "Various legend options",
              "value": "stock/legend/align/",
              "products": ["highstock"]
            },
            {
              "name": "Legend alignment",
              "value": "maps/legend/alignment/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["Highcharts.AlignValue"] },
          "since": "2.0.0",
          "defaultvalue": "center"
        },
        "meta": {
          "fullname": "legend.align",
          "name": "align",
          "line": 958,
          "lineEnd": 975,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "center"
        },
        "children": {},
        "extended": 1
      },
      "alignColumns": {
        "doclet": {
          "description": "If the [layout](legend.layout) is `horizontal` and the legend items\nspan over two lines or more, whether to align the items into vertical\ncolumns. Setting this to `false` makes room for more items, but will\nlook more messy.",
          "since": "6.1.0",
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "legend.alignColumns",
          "name": "alignColumns",
          "line": 977,
          "lineEnd": 984,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "backgroundColor": {
        "doclet": {
          "description": "The background color of the legend.",
          "see": [
            "In styled mode, the legend background fill can be applied with\n     the `.highcharts-legend-box` class."
          ],
          "samples": [
            {
              "name": "Yellowish background",
              "value": "highcharts/legend/backgroundcolor/",
              "products": ["highcharts"]
            },
            {
              "name": "Various legend options",
              "value": "stock/legend/align/",
              "products": ["highstock"]
            },
            {
              "name": "Border and background options",
              "value": "maps/legend/border-background/",
              "products": ["highmaps"]
            }
          ],
          "type": {
            "names": [
              "Highcharts.ColorString",
              "Highcharts.GradientColorObject",
              "Highcharts.PatternObject"
            ]
          }
        },
        "meta": {
          "fullname": "legend.backgroundColor",
          "name": "backgroundColor",
          "line": 909,
          "lineEnd": 924,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "borderColor": {
        "doclet": {
          "description": "The color of the drawn border around the legend.",
          "see": [
            "In styled mode, the legend border stroke can be applied with the\n     `.highcharts-legend-box` class."
          ],
          "samples": [
            {
              "name": "Brown border",
              "value": "highcharts/legend/bordercolor/",
              "products": ["highcharts"]
            },
            {
              "name": "Various legend options",
              "value": "stock/legend/align/",
              "products": ["highstock"]
            },
            {
              "name": "Border and background options",
              "value": "maps/legend/border-background/",
              "products": ["highmaps"]
            }
          ],
          "type": {
            "names": [
              "Highcharts.ColorString",
              "Highcharts.GradientColorObject",
              "Highcharts.PatternObject"
            ]
          },
          "defaultvalue": "#999999"
        },
        "meta": {
          "fullname": "legend.borderColor",
          "name": "borderColor",
          "line": 1139,
          "lineEnd": 1155,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "#999999"
        },
        "children": {},
        "extended": 1
      },
      "borderRadius": {
        "doclet": {
          "description": "The border corner radius of the legend.",
          "samples": [
            {
              "name": "Square by default",
              "value": "highcharts/legend/borderradius-default/",
              "products": ["highcharts"]
            },
            {
              "name": "5px rounded",
              "value": "highcharts/legend/borderradius-round/",
              "products": ["highcharts"]
            },
            {
              "name": "Border and background options",
              "value": "maps/legend/border-background/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": 0
        },
        "meta": {
          "fullname": "legend.borderRadius",
          "name": "borderRadius",
          "line": 1195,
          "lineEnd": 1204,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": 0
        },
        "children": {},
        "extended": 1
      },
      "borderWidth": {
        "doclet": {
          "description": "The width of the drawn border around the legend.",
          "see": [
            "In styled mode, the legend border stroke width can be applied\n     with the `.highcharts-legend-box` class."
          ],
          "samples": [
            {
              "name": "2px border width",
              "value": "highcharts/legend/borderwidth/",
              "products": ["highcharts"]
            },
            {
              "name": "Various legend options",
              "value": "stock/legend/align/",
              "products": ["highstock"]
            },
            {
              "name": "Border and background options",
              "value": "maps/legend/border-background/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "0"
        },
        "meta": {
          "fullname": "legend.borderWidth",
          "name": "borderWidth",
          "line": 925,
          "lineEnd": 941,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "bubbleLegend": {
        "doclet": {
          "description": "The bubble legend is an additional element in legend which\npresents the scale of the bubble series. Individual bubble ranges\ncan be defined by user or calculated from series. In the case of\nautomatically calculated ranges, a 1px margin of error is\npermitted.",
          "since": "7.0.0",
          "products": ["highcharts", "highstock", "highmaps"],
          "requires": ["module:highcharts-more"],
          "type": { "names": ["*"] }
        },
        "meta": {
          "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
          "name": "bubbleLegend",
          "fullname": "legend.bubbleLegend",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "borderColor": {
            "doclet": {
              "description": "The color of the ranges borders, can be also defined for an\nindividual range.",
              "samples": [
                {
                  "name": "Similar look to the bubble series",
                  "value": "highcharts/bubble-legend/similartoseries/"
                },
                {
                  "name": "Individual bubble border color",
                  "value": "highcharts/bubble-legend/bordercolor/"
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "7.0.0",
              "defaultvalue": "undefined"
            },
            "meta": {
              "fullname": "legend.bubbleLegend.borderColor",
              "name": "borderColor",
              "line": 31,
              "lineEnd": 41,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "borderWidth": {
            "doclet": {
              "description": "The width of the ranges borders in pixels, can be also\ndefined for an individual range.",
              "since": "7.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 2
            },
            "meta": {
              "fullname": "legend.bubbleLegend.borderWidth",
              "name": "borderWidth",
              "line": 43,
              "lineEnd": 46,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": 2
            },
            "children": {},
            "extended": 1
          },
          "className": {
            "doclet": {
              "description": "An additional class name to apply to the bubble legend'\ncircle graphical elements. This option does not replace\ndefault class names of the graphical element.",
              "samples": [
                {
                  "name": "Styling by CSS",
                  "value": "highcharts/css/bubble-legend/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["string"] },
              "since": "7.0.0",
              "defaultvalue": "undefined"
            },
            "meta": {
              "fullname": "legend.bubbleLegend.className",
              "name": "className",
              "line": 48,
              "lineEnd": 57,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "color": {
            "doclet": {
              "description": "The main color of the bubble legend. Applies to ranges, if\nindividual color is not defined.",
              "samples": [
                {
                  "name": "Similar look to the bubble series",
                  "value": "highcharts/bubble-legend/similartoseries/"
                },
                {
                  "name": "Individual bubble color",
                  "value": "highcharts/bubble-legend/color/"
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "7.0.0",
              "defaultvalue": "undefined"
            },
            "meta": {
              "fullname": "legend.bubbleLegend.color",
              "name": "color",
              "line": 59,
              "lineEnd": 69,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "connectorClassName": {
            "doclet": {
              "description": "An additional class name to apply to the bubble legend's\nconnector graphical elements. This option does not replace\ndefault class names of the graphical element.",
              "samples": [
                {
                  "name": "Styling by CSS",
                  "value": "highcharts/css/bubble-legend/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["string"] },
              "since": "7.0.0",
              "defaultvalue": "undefined"
            },
            "meta": {
              "fullname": "legend.bubbleLegend.connectorClassName",
              "name": "connectorClassName",
              "line": 71,
              "lineEnd": 80,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "connectorColor": {
            "doclet": {
              "description": "The color of the connector, can be also defined\nfor an individual range.",
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "7.0.0",
              "defaultvalue": "undefined"
            },
            "meta": {
              "fullname": "legend.bubbleLegend.connectorColor",
              "name": "connectorColor",
              "line": 82,
              "lineEnd": 87,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "connectorDistance": {
            "doclet": {
              "description": "The length of the connectors in pixels. If labels are\ncentered, the distance is reduced to 0.",
              "samples": [
                {
                  "name": "Increased connector length",
                  "value": "highcharts/bubble-legend/connectorandlabels/"
                }
              ],
              "since": "7.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 60
            },
            "meta": {
              "fullname": "legend.bubbleLegend.connectorDistance",
              "name": "connectorDistance",
              "line": 89,
              "lineEnd": 95,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": 60
            },
            "children": {},
            "extended": 1
          },
          "connectorWidth": {
            "doclet": {
              "description": "The width of the connectors in pixels.",
              "samples": [
                {
                  "name": "Increased connector width",
                  "value": "highcharts/bubble-legend/connectorandlabels/"
                }
              ],
              "since": "7.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "legend.bubbleLegend.connectorWidth",
              "name": "connectorWidth",
              "line": 97,
              "lineEnd": 102,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "enabled": {
            "doclet": {
              "description": "Enable or disable the bubble legend.",
              "since": "7.0.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "legend.bubbleLegend.enabled",
              "name": "enabled",
              "line": 104,
              "lineEnd": 106,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "labels": {
            "doclet": {
              "description": "Options for the bubble legend labels.",
              "since": "7.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "legend.bubbleLegend.labels",
              "name": "labels",
              "line": 108,
              "lineEnd": 110,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js"
            },
            "children": {
              "align": {
                "doclet": {
                  "description": "The alignment of the labels compared to the bubble\nlegend. Can be one of `left`, `center` or `right`.",
                  "samples": [
                    {
                      "name": "Labels on left",
                      "value": "highcharts/bubble-legend/connectorandlabels/"
                    }
                  ],
                  "type": { "names": ["Highcharts.AlignValue"] },
                  "since": "7.0.0",
                  "defaultvalue": "right"
                },
                "meta": {
                  "fullname": "legend.bubbleLegend.labels.align",
                  "name": "align",
                  "line": 149,
                  "lineEnd": 157,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
                  "default": "right"
                },
                "children": {},
                "extended": 1
              },
              "allowOverlap": {
                "doclet": {
                  "description": "Whether to allow data labels to overlap.",
                  "since": "7.0.0",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "legend.bubbleLegend.labels.allowOverlap",
                  "name": "allowOverlap",
                  "line": 123,
                  "lineEnd": 125,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "className": {
                "doclet": {
                  "description": "An additional class name to apply to the bubble legend\nlabel graphical elements. This option does not replace\ndefault class names of the graphical element.",
                  "samples": [
                    {
                      "name": "Styling by CSS",
                      "value": "highcharts/css/bubble-legend/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "7.0.0",
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "legend.bubbleLegend.labels.className",
                  "name": "className",
                  "line": 112,
                  "lineEnd": 121,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "format": {
                "doclet": {
                  "description": "A format string for the bubble legend labels. Available\nvariables are the same as for `formatter`.",
                  "samples": [
                    {
                      "name": "Add a unit",
                      "value": "highcharts/bubble-legend/format/"
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "7.0.0",
                  "defaultvalue": ""
                },
                "meta": {
                  "fullname": "legend.bubbleLegend.labels.format",
                  "name": "format",
                  "line": 127,
                  "lineEnd": 135,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
                  "default": ""
                },
                "children": {},
                "extended": 1
              },
              "formatter": {
                "doclet": {
                  "description": "Available `this` properties are:\n\n- `this.value`: The bubble value.\n\n- `this.radius`: The radius of the bubble range.\n\n- `this.center`: The center y position of the range.",
                  "type": {
                    "names": [
                      "Highcharts.FormatterCallbackFunction.<Highcharts.BubbleLegendFormatterContextObject>"
                    ]
                  },
                  "since": "7.0.0",
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "legend.bubbleLegend.labels.formatter",
                  "name": "formatter",
                  "line": 137,
                  "lineEnd": 147,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "style": {
                "doclet": {
                  "description": "CSS styles for the labels.",
                  "type": { "names": ["Highcharts.CSSObject"] },
                  "since": "7.0.0"
                },
                "meta": {
                  "fullname": "legend.bubbleLegend.labels.style",
                  "name": "style",
                  "line": 159,
                  "lineEnd": 163,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js"
                },
                "children": {},
                "extended": 1
              },
              "x": {
                "doclet": {
                  "description": "The x position offset of the label relative to the\nconnector.",
                  "since": "7.0.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "legend.bubbleLegend.labels.x",
                  "name": "x",
                  "line": 170,
                  "lineEnd": 173,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "description": "The y position offset of the label relative to the\nconnector.",
                  "since": "7.0.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "legend.bubbleLegend.labels.y",
                  "name": "y",
                  "line": 175,
                  "lineEnd": 178,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLegendBubbleLegendLabelsOptions",
            "extended": 1
          },
          "legendIndex": {
            "doclet": {
              "description": "The position of the bubble legend in the legend.",
              "samples": [
                {
                  "name": "Bubble legend as last item in legend",
                  "value": "highcharts/bubble-legend/connectorandlabels/"
                }
              ],
              "since": "7.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "legend.bubbleLegend.legendIndex",
              "name": "legendIndex",
              "line": 192,
              "lineEnd": 192,
              "column": 17,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "maxSize": {
            "doclet": {
              "description": "Maximum bubble legend range size. If values for ranges are\nnot specified, the `minSize` and the `maxSize` are calculated\nfrom bubble series.",
              "since": "7.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 60
            },
            "meta": {
              "fullname": "legend.bubbleLegend.maxSize",
              "name": "maxSize",
              "line": 181,
              "lineEnd": 185,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": 60
            },
            "children": {},
            "extended": 1
          },
          "minSize": {
            "doclet": {
              "description": "Minimum bubble legend range size. If values for ranges are\nnot specified, the `minSize` and the `maxSize` are calculated\nfrom bubble series.",
              "since": "7.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 10
            },
            "meta": {
              "fullname": "legend.bubbleLegend.minSize",
              "name": "minSize",
              "line": 186,
              "lineEnd": 186,
              "column": 17,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": 10
            },
            "children": {},
            "extended": 1
          },
          "ranges": {
            "doclet": {
              "description": "Options for specific range. One range consists of bubble,\nlabel and connector.",
              "samples": [
                {
                  "name": "Manually defined ranges",
                  "value": "highcharts/bubble-legend/ranges/"
                },
                {
                  "name": "Auto calculated ranges",
                  "value": "highcharts/bubble-legend/autoranges/"
                }
              ],
              "type": { "names": ["Array.<*>"] },
              "since": "7.0.0"
            },
            "meta": {
              "fullname": "legend.bubbleLegend.ranges",
              "name": "ranges",
              "line": 198,
              "lineEnd": 198,
              "column": 20,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js"
            },
            "children": {
              "borderColor": {
                "doclet": {
                  "description": "The color of the border for individual range.",
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "since": "7.0.0",
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "legend.bubbleLegend.ranges.borderColor",
                  "name": "borderColor",
                  "line": 216,
                  "lineEnd": 219,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "color": {
                "doclet": {
                  "description": "The color of the bubble for individual range.",
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "since": "7.0.0",
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "legend.bubbleLegend.ranges.color",
                  "name": "color",
                  "line": 221,
                  "lineEnd": 224,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "connectorColor": {
                "doclet": {
                  "description": "The color of the connector for individual range.",
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "since": "7.0.0",
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "legend.bubbleLegend.ranges.connectorColor",
                  "name": "connectorColor",
                  "line": 226,
                  "lineEnd": 229,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "value": {
                "doclet": {
                  "description": "Range size value, similar to bubble Z data.",
                  "type": { "names": ["number"] },
                  "since": "7.0.0",
                  "defaultvalue": null
                },
                "meta": {
                  "fullname": "legend.bubbleLegend.ranges.value",
                  "name": "value",
                  "line": 211,
                  "lineEnd": 214,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsLegendBubbleLegendRangesOptions",
            "extended": 1
          },
          "sizeBy": {
            "doclet": {
              "description": "Whether the bubble legend range value should be represented\nby the area or the width of the bubble. The default, area,\ncorresponds best to the human perception of the size of each\nbubble.",
              "samples": [
                {
                  "name": "Size by width",
                  "value": "highcharts/bubble-legend/ranges/"
                }
              ],
              "type": { "names": ["Highcharts.BubbleSizeByValue"] },
              "since": "7.0.0",
              "defaultvalue": "area"
            },
            "meta": {
              "fullname": "legend.bubbleLegend.sizeBy",
              "name": "sizeBy",
              "line": 232,
              "lineEnd": 242,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": "area"
            },
            "children": {},
            "extended": 1
          },
          "sizeByAbsoluteValue": {
            "doclet": {
              "description": "When this is true, the absolute value of z determines the\nsize of the bubble. This means that with the default\nzThreshold of 0, a bubble of value -1 will have the same size\nas a bubble of value 1, while a bubble of value 0 will have a\nsmaller size according to minSize.",
              "since": "7.0.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "legend.bubbleLegend.sizeByAbsoluteValue",
              "name": "sizeByAbsoluteValue",
              "line": 244,
              "lineEnd": 250,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "zIndex": {
            "doclet": {
              "description": "Define the visual z index of the bubble legend.",
              "since": "7.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "legend.bubbleLegend.zIndex",
              "name": "zIndex",
              "line": 252,
              "lineEnd": 254,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "zThreshold": {
            "doclet": {
              "description": "Ranges with lower value than zThreshold are skipped.",
              "since": "7.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "legend.bubbleLegend.zThreshold",
              "name": "zThreshold",
              "line": 256,
              "lineEnd": 258,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleLegendDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsLegendBubbleLegendOptions",
        "extended": 1
      },
      "className": {
        "doclet": {
          "description": "A CSS class name to apply to the legend group.",
          "type": { "names": ["string"] },
          "defaultvalue": "highcharts-no-tooltip"
        },
        "meta": {
          "fullname": "legend.className",
          "name": "className",
          "line": 986,
          "lineEnd": 988,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "highcharts-no-tooltip"
        },
        "children": {},
        "extended": 1
      },
      "enabled": {
        "doclet": {
          "description": "Enable or disable the legend. There is also a series-specific option,\n[showInLegend](#plotOptions.series.showInLegend), that can hide the\nseries from the legend. In some series types this is `false` by\ndefault, so it must set to `true` in order to show the legend for the\nseries.",
          "samples": [
            {
              "name": "Legend disabled",
              "value": "highcharts/legend/enabled-false/",
              "products": ["highcharts"]
            },
            {
              "name": "Various legend options",
              "value": "stock/legend/align/",
              "products": ["highstock"]
            },
            {
              "name": "Legend disabled",
              "value": "maps/legend/enabled-false/",
              "products": ["highmaps"]
            }
          ],
          "defaultByProduct": {
            "highstock": false,
            "highmaps": true,
            "gantt": false
          },
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "legend.enabled",
          "name": "enabled",
          "line": 909,
          "lineEnd": 924,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "events": {
        "doclet": {
          "description": "General event handlers for the legend. These event hooks can\nalso be attached to the legend at run time using the\n`Highcharts.addEvent` function.",
          "declare": "Highcharts.LegendEventsOptionsObject",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "legend.events",
          "name": "events",
          "line": 990,
          "lineEnd": 998,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {
          "itemClick": {
            "doclet": {
              "description": "Fires when the legend item belonging to the series is clicked. One\nparameter, `event`, is passed to the function. The default action\nis to toggle the visibility of the series, point or data class. This\ncan be prevented by returning `false` or calling\n`event.preventDefault()`.",
              "samples": [
                {
                  "name": "Confirm hiding and showing",
                  "value": "highcharts/legend/itemclick/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Confirm toggle visibility of pie slices",
                  "value": "highcharts/legend/pie-legend-itemclick/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": ["Highcharts.LegendItemClickCallbackFunction"]
              },
              "context": "Highcharts.Legend"
            },
            "meta": {
              "fullname": "legend.events.itemClick",
              "name": "itemClick",
              "line": 1000,
              "lineEnd": 1015,
              "filename": "code/es-modules/Core/Defaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsLegendEventsOptions",
        "extended": 1
      },
      "floating": {
        "doclet": {
          "description": "When the legend is floating, the plot area ignores it and is allowed\nto be placed below it.",
          "samples": [
            {
              "name": "False by default",
              "value": "highcharts/legend/floating-false/",
              "products": ["highcharts"]
            },
            {
              "name": "True",
              "value": "highcharts/legend/floating-true/",
              "products": ["highcharts"]
            },
            {
              "name": "Floating legend",
              "value": "maps/legend/alignment/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "2.1.0"
        },
        "meta": {
          "fullname": "legend.floating",
          "name": "floating",
          "line": 1016,
          "lineEnd": 1031,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "itemCheckboxStyle": {
        "doclet": {
          "description": "Default styling for the checkbox next to a legend item when\n`showCheckbox` is true.",
          "type": { "names": ["Highcharts.CSSObject"] },
          "defaultvalue": "{\"width\": \"13px\", \"height\": \"13px\", \"position\":\"absolute\"}"
        },
        "meta": {
          "fullname": "legend.itemCheckboxStyle",
          "name": "itemCheckboxStyle",
          "line": 1473,
          "lineEnd": 1479,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {},
        "extended": 1
      },
      "itemDistance": {
        "doclet": {
          "description": "In a legend with horizontal layout, the itemDistance defines the\npixel distance between each item.",
          "samples": [
            {
              "name": "50px item distance",
              "value": "highcharts/legend/layout-horizontal/",
              "products": ["highcharts"]
            },
            {
              "name": "50px item distance",
              "value": "highcharts/legend/layout-horizontal/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultByProduct": {
            "highcharts": 20,
            "highstock": 20,
            "highmaps": 8
          },
          "since": "3.0.3"
        },
        "meta": {
          "fullname": "legend.itemDistance",
          "name": "itemDistance",
          "line": 1055,
          "lineEnd": 1070,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "itemHiddenStyle": {
        "doclet": {
          "description": "CSS styles for each legend item when the corresponding series or\npoint is hidden. Only a subset of CSS is supported, notably those\noptions related to text. Properties are inherited from `style`\nunless overridden here.",
          "see": [
            "In styled mode, the hidden legend items can be styled with\n     the `.highcharts-legend-item-hidden` class."
          ],
          "samples": [
            {
              "name": "Darker gray color",
              "value": "highcharts/legend/itemhiddenstyle/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Highcharts.CSSObject"] },
          "defaultvalue": "{\"color\": \"#cccccc\"}"
        },
        "meta": {
          "fullname": "legend.itemHiddenStyle",
          "name": "itemHiddenStyle",
          "line": 1432,
          "lineEnd": 1446,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {},
        "extended": 1
      },
      "itemHoverStyle": {
        "doclet": {
          "description": "CSS styles for each legend item in hover mode. Only a subset of\nCSS is supported, notably those options related to text. Properties\nare inherited from `style` unless overridden here.",
          "see": [
            "In styled mode, the hovered legend items can be styled with\n     the `.highcharts-legend-item:hover` pseudo-class."
          ],
          "samples": [
            {
              "name": "Red on hover",
              "value": "highcharts/legend/itemhoverstyle/",
              "products": ["highcharts"]
            },
            {
              "name": "Item text styles",
              "value": "maps/legend/itemstyle/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["Highcharts.CSSObject"] },
          "defaultvalue": "{\"color\": \"#000000\"}"
        },
        "meta": {
          "fullname": "legend.itemHoverStyle",
          "name": "itemHoverStyle",
          "line": 1410,
          "lineEnd": 1425,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {},
        "extended": 1
      },
      "itemMarginBottom": {
        "doclet": {
          "description": "The pixel bottom margin for each legend item.",
          "samples": [
            {
              "name": "Padding and item margins demonstrated",
              "value": "highcharts/legend/padding-itemmargin/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Padding and item margins demonstrated",
              "value": "maps/legend/padding-itemmargin/",
              "products": ["highmaps"]
            }
          ],
          "since": "2.2.0",
          "type": { "names": ["number"] },
          "defaultvalue": 2
        },
        "meta": {
          "fullname": "legend.itemMarginBottom",
          "name": "itemMarginBottom",
          "line": 1055,
          "lineEnd": 1070,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": 2
        },
        "children": {},
        "extended": 1
      },
      "itemMarginTop": {
        "doclet": {
          "description": "The pixel top margin for each legend item.",
          "samples": [
            {
              "name": "Padding and item margins demonstrated",
              "value": "highcharts/legend/padding-itemmargin/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Padding and item margins demonstrated",
              "value": "maps/legend/padding-itemmargin/",
              "products": ["highmaps"]
            }
          ],
          "since": "2.2.0",
          "type": { "names": ["number"] },
          "defaultvalue": 2
        },
        "meta": {
          "fullname": "legend.itemMarginTop",
          "name": "itemMarginTop",
          "line": 1082,
          "lineEnd": 1091,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": 2
        },
        "children": {},
        "extended": 1
      },
      "itemStyle": {
        "doclet": {
          "description": "CSS styles for each legend item. Only a subset of CSS is supported,\nnotably those options related to text. The default `textOverflow`\nproperty makes long texts truncate. Set it to `undefined` to wrap\ntext instead. A `width` property can be added to control the text\nwidth.",
          "see": [
            "In styled mode, the legend items can be styled with the\n     `.highcharts-legend-item` class."
          ],
          "samples": [
            {
              "name": "Bold black text",
              "value": "highcharts/legend/itemstyle/",
              "products": ["highcharts"]
            },
            {
              "name": "Item text styles",
              "value": "maps/legend/itemstyle/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["Highcharts.CSSObject"] },
          "defaultvalue": "{\"color\": \"#333333\", \"cursor\": \"pointer\", \"fontSize\": \"0.8em\", \"fontWeight\": \"bold\", \"textOverflow\": \"ellipsis\"}"
        },
        "meta": {
          "fullname": "legend.itemStyle",
          "name": "itemStyle",
          "line": 1318,
          "lineEnd": 1330,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {},
        "extended": 1
      },
      "itemWidth": {
        "doclet": {
          "description": "The width for each legend item. By default the items are laid out\nsuccessively. In a [horizontal layout](legend.layout), if the items\nare laid out across two rows or more, they will be vertically aligned\ndepending on the [legend.alignColumns](legend.alignColumns) option.",
          "samples": [
            {
              "name": "Undefined by default",
              "value": "highcharts/legend/itemwidth-default/",
              "products": ["highcharts"]
            },
            {
              "name": "80 for aligned legend items",
              "value": "highcharts/legend/itemwidth-80/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "legend.itemWidth",
          "name": "itemWidth",
          "line": 1093,
          "lineEnd": 1107,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "labelFormat": {
        "doclet": {
          "description": "A [format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\nfor each legend label. Available variables relates to properties on\nthe series, or the point in case of pies.",
          "type": { "names": ["string"] },
          "defaultvalue": "{name}",
          "since": "1.3.0"
        },
        "meta": {
          "fullname": "legend.labelFormat",
          "name": "labelFormat",
          "line": 1108,
          "lineEnd": 1117,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "labelFormatter": {
        "doclet": {
          "description": "Callback function to format each of the series' labels. The `this`\nkeyword refers to the series object, or the point object in case of\npie charts. By default the series or point name is printed.",
          "productdesc": [
            {
              "value": "In Highmaps the context can also be a data class in case of a\n`colorAxis`.",
              "products": ["highmaps"]
            }
          ],
          "samples": [
            {
              "name": "Add text",
              "value": "highcharts/legend/labelformatter/",
              "products": ["highcharts"]
            },
            {
              "name": "Data classes with label formatter",
              "value": "maps/legend/labelformatter/",
              "products": ["highmaps"]
            }
          ],
          "type": {
            "names": ["Highcharts.FormatterCallbackFunction.<(Point|Series)>"]
          }
        },
        "meta": {
          "fullname": "legend.labelFormatter",
          "name": "labelFormatter",
          "line": 1093,
          "lineEnd": 1107,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {},
        "extended": 1
      },
      "layout": {
        "doclet": {
          "description": "The layout of the legend items. Can be one of `horizontal` or\n`vertical` or `proximate`. When `proximate`, the legend items will be\nplaced as close as possible to the graphs they're representing,\nexcept in inverted charts or when the legend position doesn't allow\nit.",
          "samples": [
            {
              "name": "Horizontal by default",
              "value": "highcharts/legend/layout-horizontal/",
              "products": ["highcharts"]
            },
            {
              "name": "Vertical",
              "value": "highcharts/legend/layout-vertical/",
              "products": ["highcharts"]
            },
            {
              "name": "Labels proximate to the data",
              "value": "highcharts/legend/layout-proximate"
            },
            {
              "name": "Horizontal by default",
              "value": "stock/legend/layout-horizontal/",
              "products": ["highstock"]
            },
            {
              "name": "Vertical with data classes",
              "value": "maps/legend/padding-itemmargin/",
              "products": ["highmaps"]
            },
            {
              "name": "Vertical with color axis gradient",
              "value": "maps/legend/layout-vertical/",
              "products": ["highmaps"]
            }
          ],
          "values": "[\"horizontal\", \"vertical\", \"proximate\"]",
          "type": { "names": ["string"] },
          "defaultvalue": "horizontal"
        },
        "meta": {
          "fullname": "legend.layout",
          "name": "layout",
          "line": 1000,
          "lineEnd": 1015,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "horizontal"
        },
        "children": {},
        "extended": 1
      },
      "lineHeight": {
        "doclet": {
          "description": "Line height for the legend items. Deprecated as of 2.1\\. Instead,\nthe line height for each item can be set using\n`itemStyle.lineHeight`, and the padding between items using\n`itemMarginTop` and `itemMarginBottom`.",
          "samples": [
            {
              "name": "Setting padding",
              "value": "highcharts/legend/lineheight/",
              "products": ["highcharts"]
            }
          ],
          "deprecated": true,
          "type": { "names": ["number"] },
          "defaultvalue": "16",
          "since": "2.0.0",
          "products": ["highcharts", "gantt"]
        },
        "meta": {
          "fullname": "legend.lineHeight",
          "name": "lineHeight",
          "line": 1139,
          "lineEnd": 1155,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "margin": {
        "doclet": {
          "description": "If the plot area sized is calculated automatically and the legend is\nnot floating, the legend margin is the space between the legend and\nthe axis labels or plot area.",
          "samples": [
            {
              "name": "12 pixels by default",
              "value": "highcharts/legend/margin-default/",
              "products": ["highcharts"]
            },
            {
              "name": "30 pixels",
              "value": "highcharts/legend/margin-30/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "12",
          "since": "2.1.0"
        },
        "meta": {
          "fullname": "legend.margin",
          "name": "margin",
          "line": 1156,
          "lineEnd": 1170,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "maxHeight": {
        "doclet": {
          "description": "Maximum pixel height for the legend. When the maximum height is\nextended, navigation will show.",
          "type": { "names": ["number"] },
          "since": "2.3.0"
        },
        "meta": {
          "fullname": "legend.maxHeight",
          "name": "maxHeight",
          "line": 1171,
          "lineEnd": 1178,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "navigation": {
        "doclet": {
          "description": "Options for the paging or navigation appearing when the legend is\noverflown. Navigation works well on screen, but not in static\nexported images. One way of working around that is to\n[increase the chart height in\nexport](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/legend/navigation-enabled-false/).",
          "samples": [
            {
              "name": "Legend with vertical scrollable extension",
              "value": "highcharts/legend/scrollable-vertical/"
            },
            {
              "name": "Legend with horizontal scrollable extension",
              "value": "highcharts/legend/scrollable-horizontal/"
            }
          ],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "legend.navigation",
          "name": "navigation",
          "line": 1206,
          "lineEnd": 1218,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {
          "activeColor": {
            "doclet": {
              "description": "The color for the active up or down arrow in the legend page\nnavigation.",
              "see": [
                "In styled mode, the active arrow be styled with the\n     `.highcharts-legend-nav-active` class."
              ],
              "samples": [
                {
                  "name": "Legend page navigation demonstrated",
                  "value": "highcharts/legend/navigation/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Legend page navigation demonstrated",
                  "value": "highcharts/legend/navigation/",
                  "products": ["highstock"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "2.2.4",
              "defaultvalue": "#0022ff"
            },
            "meta": {
              "fullname": "legend.navigation.activeColor",
              "name": "activeColor",
              "line": 1285,
              "lineEnd": 1299,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "#0022ff"
            },
            "children": {},
            "extended": 1
          },
          "animation": {
            "doclet": {
              "description": "How to animate the pages when navigating up or down. A value of\n`true` applies the default navigation given in the\n`chart.animation` option. Additional options can be given as an\nobject containing values for easing and duration.",
              "samples": [
                {
                  "name": "Legend page navigation demonstrated",
                  "value": "highcharts/legend/navigation/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Legend page navigation demonstrated",
                  "value": "highcharts/legend/navigation/",
                  "products": ["highstock"]
                }
              ],
              "type": {
                "names": [
                  "boolean",
                  "Partial.<Highcharts.AnimationOptionsObject>"
                ]
              },
              "defaultvalue": "true",
              "since": "2.2.4"
            },
            "meta": {
              "fullname": "legend.navigation.animation",
              "name": "animation",
              "line": 1220,
              "lineEnd": 1235,
              "filename": "code/es-modules/Core/Defaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "arrowSize": {
            "doclet": {
              "description": "The pixel size of the up and down arrows in the legend paging\nnavigation.",
              "samples": [
                {
                  "name": "Legend page navigation demonstrated",
                  "value": "highcharts/legend/navigation/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Legend page navigation demonstrated",
                  "value": "highcharts/legend/navigation/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "12",
              "since": "2.2.4"
            },
            "meta": {
              "fullname": "legend.navigation.arrowSize",
              "name": "arrowSize",
              "line": 1236,
              "lineEnd": 1249,
              "filename": "code/es-modules/Core/Defaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "enabled": {
            "doclet": {
              "description": "Whether to enable the legend navigation. In most cases, disabling\nthe navigation results in an unwanted overflow.\n\nSee also the\n[adapt chart to legend](https://github.com/highcharts/adapt-chart-to-legend)\nplugin for a solution to extend the chart height to make room for\nthe legend, optionally in exported charts only.",
              "type": { "names": ["boolean"] },
              "defaultvalue": "true",
              "since": "4.2.4"
            },
            "meta": {
              "fullname": "legend.navigation.enabled",
              "name": "enabled",
              "line": 1250,
              "lineEnd": 1263,
              "filename": "code/es-modules/Core/Defaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "inactiveColor": {
            "doclet": {
              "description": "The color of the inactive up or down arrow in the legend page\nnavigation. .",
              "see": [
                "In styled mode, the inactive arrow be styled with the\n     `.highcharts-legend-nav-inactive` class."
              ],
              "samples": [
                {
                  "name": "Legend page navigation demonstrated",
                  "value": "highcharts/legend/navigation/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Legend page navigation demonstrated",
                  "value": "highcharts/legend/navigation/",
                  "products": ["highstock"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "2.2.4",
              "defaultvalue": "#cccccc"
            },
            "meta": {
              "fullname": "legend.navigation.inactiveColor",
              "name": "inactiveColor",
              "line": 1301,
              "lineEnd": 1315,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "#cccccc"
            },
            "children": {},
            "extended": 1
          },
          "style": {
            "doclet": {
              "description": "Text styles for the legend page navigation.",
              "see": [
                "In styled mode, the navigation items are styled with the\n     `.highcharts-legend-navigation` class."
              ],
              "samples": [
                {
                  "name": "Legend page navigation demonstrated",
                  "value": "highcharts/legend/navigation/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Legend page navigation demonstrated",
                  "value": "highcharts/legend/navigation/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["Highcharts.CSSObject"] },
              "since": "2.2.4"
            },
            "meta": {
              "fullname": "legend.navigation.style",
              "name": "style",
              "line": 1264,
              "lineEnd": 1278,
              "filename": "code/es-modules/Core/Defaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsLegendNavigationOptions",
        "extended": 1
      },
      "padding": {
        "doclet": {
          "description": "The inner padding of the legend box.",
          "samples": [
            {
              "name": "Padding and item margins demonstrated",
              "value": "highcharts/legend/padding-itemmargin/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Padding and item margins demonstrated",
              "value": "maps/legend/padding-itemmargin/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "8",
          "since": "2.2.0"
        },
        "meta": {
          "fullname": "legend.padding",
          "name": "padding",
          "line": 1318,
          "lineEnd": 1330,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "reversed": {
        "doclet": {
          "description": "Whether to reverse the order of the legend items compared to the\norder of the series or points as defined in the configuration object.",
          "see": [
            "[yAxis.reversedStacks](#yAxis.reversedStacks),\n     [series.legendIndex](#series.legendIndex)"
          ],
          "samples": [
            {
              "name": "Stacked bar with reversed legend",
              "value": "highcharts/legend/reversed/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "1.2.5"
        },
        "meta": {
          "fullname": "legend.reversed",
          "name": "reversed",
          "line": 1331,
          "lineEnd": 1345,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "rtl": {
        "doclet": {
          "description": "Whether to show the symbol on the right side of the text rather than\nthe left side. This is common in Arabic and Hebrew.",
          "samples": [
            {
              "name": "Symbol to the right",
              "value": "highcharts/legend/rtl/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "2.2.0"
        },
        "meta": {
          "fullname": "legend.rtl",
          "name": "rtl",
          "line": 1346,
          "lineEnd": 1357,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "shadow": {
        "doclet": {
          "description": "Whether to apply a drop shadow to the legend. A `backgroundColor`\nalso needs to be applied for this to take effect. The shadow can be\nan object configuration containing `color`, `offsetX`, `offsetY`,\n`opacity` and `width`.",
          "samples": [
            {
              "name": "White background and drop shadow",
              "value": "highcharts/legend/shadow/",
              "products": ["highcharts"]
            },
            {
              "name": "Various legend options",
              "value": "stock/legend/align/",
              "products": ["highstock"]
            },
            {
              "name": "Border and background options",
              "value": "maps/legend/border-background/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["boolean", "Highcharts.CSSObject"] },
          "defaultvalue": false
        },
        "meta": {
          "fullname": "legend.shadow",
          "name": "shadow",
          "line": 1457,
          "lineEnd": 1471,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": false
        },
        "children": {},
        "extended": 1
      },
      "squareSymbol": {
        "doclet": {
          "description": "When this is true, the legend symbol width will be the same as\nthe symbol height, which in turn defaults to the font size of the\nlegend items.",
          "since": "5.0.0",
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "legend.squareSymbol",
          "name": "squareSymbol",
          "line": 1494,
          "lineEnd": 1494,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "style": {
        "doclet": {
          "description": "CSS styles for the legend area. In the 1.x versions the position\nof the legend area was determined by CSS. In 2.x, the position is\ndetermined by properties like `align`, `verticalAlign`, `x` and `y`,\nbut the styles are still parsed for backwards compatibility.",
          "deprecated": true,
          "type": { "names": ["Highcharts.CSSObject"] },
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "legend.style",
          "name": "style",
          "line": 1358,
          "lineEnd": 1369,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "symbolHeight": {
        "doclet": {
          "description": "The pixel height of the symbol for series types that use a rectangle\nin the legend. Defaults to the font size of legend items.\n\nNote: This option is a default source of color axis height, if the\n[colorAxis.height](https://api.highcharts.com/highcharts/colorAxis.height)\noption is not set.",
          "productdesc": [
            {
              "value": "In Highmaps, when the symbol is the gradient of a vertical color\naxis, the height defaults to 200.",
              "products": ["highmaps"]
            }
          ],
          "samples": [
            {
              "name": "Sized vertical gradient",
              "value": "maps/legend/layout-vertical-sized/",
              "products": ["highmaps"]
            },
            {
              "name": "No distance between data classes",
              "value": "maps/legend/padding-itemmargin/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "3.0.8"
        },
        "meta": {
          "fullname": "legend.symbolHeight",
          "name": "symbolHeight",
          "line": 1503,
          "lineEnd": 1523,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "symbolPadding": {
        "doclet": {
          "description": "The pixel padding between the legend item symbol and the legend\nitem text.",
          "samples": [
            {
              "name": "Greater symbol width and padding",
              "value": "highcharts/legend/symbolpadding/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": 5
        },
        "meta": {
          "fullname": "legend.symbolPadding",
          "name": "symbolPadding",
          "line": 1503,
          "lineEnd": 1523,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": 5
        },
        "children": {},
        "extended": 1
      },
      "symbolRadius": {
        "doclet": {
          "description": "The border radius of the symbol for series types that use a rectangle\nin the legend. Defaults to half the `symbolHeight`, effectively\ncreating a circle.\n\nFor color axis scales, it defaults to 3.",
          "samples": [
            {
              "name": "Round symbols",
              "value": "highcharts/legend/symbolradius/",
              "products": ["highcharts"]
            },
            {
              "name": "Round symbols",
              "value": "highcharts/legend/symbolradius/",
              "products": ["highstock"]
            },
            {
              "name": "Round symbols",
              "value": "highcharts/legend/symbolradius/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "3.0.8"
        },
        "meta": {
          "fullname": "legend.symbolRadius",
          "name": "symbolRadius",
          "line": 1524,
          "lineEnd": 1541,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "symbolWidth": {
        "doclet": {
          "description": "The pixel width of the legend item symbol. When the `squareSymbol`\noption is set, this defaults to the `symbolHeight`, otherwise 16.\n\nNote: This option is a default source of color axis width, if the\n[colorAxis.width](https://api.highcharts.com/highcharts/colorAxis.width)\noption is not set.",
          "productdesc": [
            {
              "value": "In Highmaps, when the symbol is the gradient of a horizontal color\naxis, the width defaults to 200.",
              "products": ["highmaps"]
            }
          ],
          "samples": [
            {
              "name": "Greater symbol width and padding",
              "value": "highcharts/legend/symbolwidth/",
              "products": ["highcharts"]
            },
            {
              "name": "Padding and item margins demonstrated",
              "value": "maps/legend/padding-itemmargin/",
              "products": ["highmaps"]
            },
            {
              "name": "Sized vertical gradient",
              "value": "maps/legend/layout-vertical-sized/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] }
        },
        "meta": {
          "fullname": "legend.symbolWidth",
          "name": "symbolWidth",
          "line": 1542,
          "lineEnd": 1563,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "title": {
        "doclet": {
          "description": "A title to be added on top of the legend.",
          "samples": [
            {
              "name": "Legend title",
              "value": "highcharts/legend/title/",
              "products": ["highcharts"]
            },
            {
              "name": "Legend with title",
              "value": "maps/legend/alignment/",
              "products": ["highmaps"]
            }
          ],
          "since": "3.0.0",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "legend.title",
          "name": "title",
          "line": 1673,
          "lineEnd": 1682,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {
          "style": {
            "doclet": {
              "description": "Generic CSS styles for the legend title.",
              "see": [
                "In styled mode, the legend title is styled with the\n     `.highcharts-legend-title` class."
              ],
              "type": { "names": ["Highcharts.CSSObject"] },
              "defaultvalue": "{\"fontSize\": \"0.8em\", \"fontWeight\": \"bold\"}",
              "since": "3.0.0"
            },
            "meta": {
              "fullname": "legend.title.style",
              "name": "style",
              "line": 1684,
              "lineEnd": 1690,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js"
            },
            "children": {},
            "extended": 1
          },
          "text": {
            "doclet": {
              "description": "A text or HTML string for the title.",
              "type": { "names": ["string"] },
              "since": "3.0.0"
            },
            "meta": {
              "fullname": "legend.title.text",
              "name": "text",
              "line": 1684,
              "lineEnd": 1690,
              "filename": "code/es-modules/Core/Defaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsLegendTitleOptions",
        "extended": 1
      },
      "useHTML": {
        "doclet": {
          "description": "Whether to [use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\nto render the legend item texts.\n\nPrior to 4.1.7, when using HTML, [legend.navigation](#legend.navigation) was disabled.",
          "samples": [
            {
              "name": "Legend with vertical scrollable extension",
              "value": "highcharts/legend/scrollable-vertical/"
            },
            {
              "name": "Legend with horizontal scrollable extension",
              "value": "highcharts/legend/scrollable-horizontal/"
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "false"
        },
        "meta": {
          "fullname": "legend.useHTML",
          "name": "useHTML",
          "line": 1564,
          "lineEnd": 1579,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "valueDecimals": {
        "doclet": {
          "description": "For a color axis with data classes, how many decimals to render in\nthe legend. The default preserves the decimals of the range numbers.",
          "type": { "names": ["number"] },
          "defaultvalue": "-1",
          "products": ["highcharts", "highmaps"]
        },
        "meta": {
          "fullname": "legend.valueDecimals",
          "name": "valueDecimals",
          "line": 1580,
          "lineEnd": 1588,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "valueSuffix": {
        "doclet": {
          "description": "For a color axis with data classes, a suffix for the range numbers in\nthe legend.",
          "type": { "names": ["string"] },
          "defaultvalue": "''",
          "products": ["highcharts", "highmaps"]
        },
        "meta": {
          "fullname": "legend.valueSuffix",
          "name": "valueSuffix",
          "line": 1589,
          "lineEnd": 1597,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "verticalAlign": {
        "doclet": {
          "description": "The vertical alignment of the legend box. Can be one of `top`,\n`middle` or `bottom`. Vertical position can be further determined\nby the `y` option.\n\nIn the case that the legend is aligned in a corner position, the\n`layout` option will determine whether to place it above/below\nor on the side of the plot area.\n\nWhen the [layout](#legend.layout) option is `proximate`, the\n`verticalAlign` option doesn't apply.",
          "samples": [
            {
              "name": "Legend 100px from the top of the chart",
              "value": "highcharts/legend/verticalalign/",
              "products": ["highcharts"]
            },
            {
              "name": "Various legend options",
              "value": "stock/legend/align/",
              "products": ["highstock"]
            },
            {
              "name": "Legend alignment",
              "value": "maps/legend/alignment/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["Highcharts.VerticalAlignValue"] },
          "since": "2.0.0",
          "defaultvalue": "bottom"
        },
        "meta": {
          "fullname": "legend.verticalAlign",
          "name": "verticalAlign",
          "line": 1623,
          "lineEnd": 1644,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "bottom"
        },
        "children": {},
        "extended": 1
      },
      "width": {
        "doclet": {
          "description": "The width of the legend box. If a number is set, it translates to\npixels. Since v7.0.2 it allows setting a percent string of the full\nchart width, for example `40%`.\n\nDefaults to the full chart width for legends below or above the\nchart, half the chart width for legends to the left and right.",
          "samples": [
            {
              "name": "Aligned to the plot area",
              "value": "highcharts/legend/width/",
              "products": ["highcharts"]
            },
            {
              "name": "A percent of the chart width",
              "value": "highcharts/legend/width-percent/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number", "string"] },
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "legend.width",
          "name": "width",
          "line": 1598,
          "lineEnd": 1614,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "x": {
        "doclet": {
          "description": "The x offset of the legend relative to its horizontal alignment\n`align` within chart.spacingLeft and chart.spacingRight. Negative\nx moves it to the left, positive x moves it to the right.",
          "samples": [
            {
              "name": "Aligned to the plot area",
              "value": "highcharts/legend/width/",
              "products": ["highcharts"]
            }
          ],
          "since": "2.0.0",
          "type": { "names": ["number"] },
          "defaultvalue": 0
        },
        "meta": {
          "fullname": "legend.x",
          "name": "x",
          "line": 1646,
          "lineEnd": 1646,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": 0
        },
        "children": {},
        "extended": 1
      },
      "y": {
        "doclet": {
          "description": "The vertical offset of the legend relative to it's vertical alignment\n`verticalAlign` within chart.spacingTop and chart.spacingBottom.\n Negative y moves it up, positive y moves it down.",
          "samples": [
            {
              "name": "Legend 100px from the top of the chart",
              "value": "highcharts/legend/verticalalign/",
              "products": ["highcharts"]
            },
            {
              "name": "Various legend options",
              "value": "stock/legend/align/",
              "products": ["highstock"]
            },
            {
              "name": "Legend alignment",
              "value": "maps/legend/alignment/",
              "products": ["highmaps"]
            }
          ],
          "since": "2.0.0",
          "type": { "names": ["number"] },
          "defaultvalue": 0
        },
        "meta": {
          "fullname": "legend.y",
          "name": "y",
          "line": 1658,
          "lineEnd": 1671,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": 0
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsLegendOptions",
    "extended": 1
  },
  "loading": {
    "doclet": {
      "description": "The loading options control the appearance of the loading screen\nthat covers the plot area on chart operations. This screen only\nappears after an explicit call to `chart.showLoading()`. It is a\nutility for developers to communicate to the end user that something\nis going on, for example while retrieving new data via an XHR connection.\nThe \"Loading...\" text itself is not part of this configuration\nobject, but part of the `lang` object.",
      "type": { "names": ["*"] }
    },
    "meta": {
      "fullname": "loading",
      "name": "loading",
      "line": 1713,
      "lineEnd": 1721,
      "column": 4,
      "filename": "code/es-modules/Core/Defaults.js"
    },
    "children": {
      "hideDuration": {
        "doclet": {
          "description": "The duration in milliseconds of the fade out effect.",
          "samples": [
            {
              "name": "Fade in and out over a second",
              "value": "highcharts/loading/hideduration/"
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "100",
          "since": "1.2.0"
        },
        "meta": {
          "fullname": "loading.hideDuration",
          "name": "hideDuration",
          "line": 1723,
          "lineEnd": 1733,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "labelStyle": {
        "doclet": {
          "description": "CSS styles for the loading label `span`.",
          "see": [
            "In styled mode, the loading label is styled with the\n     `.highcharts-loading-inner` class."
          ],
          "samples": [
            {
              "name": "Vertically centered",
              "value": "highcharts/loading/labelstyle/",
              "products": ["highcharts", "highmaps"]
            },
            {
              "name": "Label styles",
              "value": "stock/loading/general/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.CSSObject"] },
          "defaultvalue": "{\"fontWeight\": \"bold\", \"position\": \"relative\", \"top\": \"45%\"}",
          "since": "1.2.0"
        },
        "meta": {
          "fullname": "loading.labelStyle",
          "name": "labelStyle",
          "line": 1723,
          "lineEnd": 1733,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {},
        "extended": 1
      },
      "showDuration": {
        "doclet": {
          "description": "The duration in milliseconds of the fade in effect.",
          "samples": [
            {
              "name": "Fade in and out over a second",
              "value": "highcharts/loading/hideduration/"
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "100",
          "since": "1.2.0"
        },
        "meta": {
          "fullname": "loading.showDuration",
          "name": "showDuration",
          "line": 1734,
          "lineEnd": 1744,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "style": {
        "doclet": {
          "description": "CSS styles for the loading screen that covers the plot area.\n\nIn styled mode, the loading label is styled with the\n`.highcharts-loading` class.",
          "samples": [
            {
              "name": "Gray plot area, white text",
              "value": "highcharts/loading/style/",
              "products": ["highcharts", "highmaps"]
            },
            {
              "name": "Gray plot area, white text",
              "value": "stock/loading/general/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.CSSObject"] },
          "defaultvalue": "{\"position\": \"absolute\", \"backgroundColor\": \"#ffffff\", \"opacity\": 0.5, \"textAlign\": \"center\"}",
          "since": "1.2.0"
        },
        "meta": {
          "fullname": "loading.style",
          "name": "style",
          "line": 1774,
          "lineEnd": 1788,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsLoadingOptions",
    "extended": 1
  },
  "navigation": {
    "doclet": {
      "description": "A collection of options for buttons and menus appearing in the exporting\nmodule or in Stock Tools.",
      "requires": ["module:modules/exporting"],
      "type": { "names": ["*"] }
    },
    "meta": {
      "filename": "code/es-modules/Stock/StockTools/StockToolsBindings.js",
      "name": "navigation",
      "fullname": "navigation",
      "line": 18,
      "lineEnd": 22,
      "column": 0
    },
    "children": {
      "annotationsOptions": {
        "doclet": {
          "description": "Additional options to be merged into all annotations.",
          "samples": [
            {
              "name": "Set red color of all line annotations",
              "value": "stock/stocktools/navigation-annotation-options"
            }
          ],
          "type": { "names": ["Highcharts.AnnotationsOptions"] },
          "extends": "annotations",
          "exclude": [
            "crookedLine",
            "elliottWave",
            "fibonacci",
            "infinityLine",
            "measure",
            "pitchfork",
            "tunnel",
            "verticalLine",
            "basicAnnotation"
          ],
          "requires": ["module:modules/annotations"]
        },
        "meta": {
          "fullname": "navigation.annotationsOptions",
          "name": "annotationsOptions",
          "line": 368,
          "lineEnd": 380,
          "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
          "column": 0
        },
        "children": {
          "animation": {},
          "controlPointOptions": {},
          "crop": {},
          "draggable": {},
          "events": {},
          "id": {},
          "labelOptions": {},
          "labels": {},
          "shapeOptions": {},
          "shapes": {},
          "visible": {},
          "zIndex": {}
        },
        "flutterClassName": "HighchartsNavigationAnnotationsOptions",
        "extended": 1
      },
      "bindings": {
        "doclet": {
          "description": "Bindings definitions for custom HTML buttons. Each binding implements\nsimple event-driven interface:\n\n- `className`: classname used to bind event to\n\n- `init`: initial event, fired on button click\n\n- `start`: fired on first click on a chart\n\n- `steps`: array of sequential events fired one after another on each\n  of users clicks\n\n- `end`: last event to be called after last step event",
          "type": {
            "names": [
              "Highcharts.Dictionary.<Highcharts.NavigationBindingsOptionsObject>"
            ]
          },
          "samples": [
            {
              "name": "Custom stock tools bindings",
              "value": "stock/stocktools/custom-stock-tools-bindings",
              "products": ["highstock"]
            }
          ],
          "since": "7.0.0",
          "requires": ["module:modules/annotations"],
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "filename": "code/es-modules/Stock/StockTools/StockToolsBindings.js",
          "name": "bindings",
          "fullname": "navigation.bindings",
          "line": 18,
          "lineEnd": 22,
          "column": 0
        },
        "children": {
          "circleAnnotation": {
            "doclet": {
              "description": "A circle annotation bindings. Includes `start` and one event in\n`steps` array.",
              "type": {
                "names": ["Highcharts.NavigationBindingsOptionsObject"]
              },
              "defaultByProduct": {},
              "since": "7.0.0"
            },
            "meta": {
              "fullname": "navigation.bindings.circleAnnotation",
              "name": "circleAnnotation",
              "line": 113,
              "lineEnd": 119,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "ellipseAnnotation": {
            "doclet": {
              "description": "A ellipse annotation bindings. Includes `start` and two events in\n`steps` array. First updates the second point, responsible for a\nrx width, and second updates the ry width.",
              "type": {
                "names": ["Highcharts.NavigationBindingsOptionsObject"]
              },
              "defaultByProduct": {},
              "since": "7.0.0"
            },
            "meta": {
              "fullname": "navigation.bindings.ellipseAnnotation",
              "name": "ellipseAnnotation",
              "line": 168,
              "lineEnd": 175,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js"
            },
            "children": {
              "className": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "highcharts-ellipse-annotation"
                },
                "meta": {
                  "fullname": "navigation.bindings.ellipseAnnotation.className",
                  "name": "className",
                  "line": 177,
                  "lineEnd": 177,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
                  "default": "highcharts-ellipse-annotation"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsNavigationBindingsEllipseAnnotationOptions",
            "extended": 1
          },
          "labelAnnotation": {
            "doclet": {
              "description": "A label annotation bindings. Includes `start` event only.",
              "type": {
                "names": ["Highcharts.NavigationBindingsOptionsObject"]
              },
              "defaultByProduct": {},
              "since": "7.0.0"
            },
            "meta": {
              "fullname": "navigation.bindings.labelAnnotation",
              "name": "labelAnnotation",
              "line": 277,
              "lineEnd": 282,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "rectangleAnnotation": {
            "doclet": {
              "description": "A rectangle annotation bindings. Includes `start` and one event\nin `steps` array.",
              "type": {
                "names": ["Highcharts.NavigationBindingsOptionsObject"]
              },
              "defaultByProduct": {},
              "since": "7.0.0"
            },
            "meta": {
              "fullname": "navigation.bindings.rectangleAnnotation",
              "name": "rectangleAnnotation",
              "line": 217,
              "lineEnd": 223,
              "column": 8,
              "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsNavigationBindingsOptions",
        "extended": 1
      },
      "bindingsClassName": {
        "doclet": {
          "description": "A CSS class name where all bindings will be attached to. Multiple\ncharts on the same page should have separate class names to prevent\nduplicating events.\n\nDefault value of versions < 7.0.4 `highcharts-bindings-wrapper`",
          "since": "7.0.0",
          "type": { "names": ["string"] },
          "defaultvalue": "highcharts-bindings-container"
        },
        "meta": {
          "fullname": "navigation.bindingsClassName",
          "name": "bindingsClassName",
          "line": 73,
          "lineEnd": 82,
          "column": 4,
          "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
          "default": "highcharts-bindings-container"
        },
        "children": {},
        "extended": 1
      },
      "breadcrumbs": {
        "doclet": {
          "description": "Options for breadcrumbs. Breadcrumbs general options are defined in\n`navigation.breadcrumbs`. Specific options for drilldown are set in\n`drilldown.breadcrumbs` and for tree-like series traversing, in\n`plotOptions[series].breadcrumbs`.",
          "since": "10.0.0",
          "products": ["highcharts"],
          "type": { "names": ["*"] }
        },
        "meta": {
          "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
          "name": "breadcrumbs",
          "fullname": "navigation.breadcrumbs",
          "line": 30,
          "lineEnd": 39,
          "column": 0
        },
        "children": {
          "buttonSpacing": {
            "doclet": {
              "description": "The default padding for each button and separator in each direction.",
              "type": { "names": ["number"] },
              "since": "10.0.0",
              "defaultvalue": 5
            },
            "meta": {
              "fullname": "navigation.breadcrumbs.buttonSpacing",
              "name": "buttonSpacing",
              "line": 78,
              "lineEnd": 83,
              "column": 4,
              "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
              "default": 5
            },
            "children": {},
            "extended": 1
          },
          "buttonTheme": {
            "doclet": {
              "description": "A collection of attributes for the buttons. The object takes SVG\nattributes like `fill`, `stroke`, `stroke-width`, as well as `style`,\na collection of CSS properties for the text.\n\nThe object can also be extended with states, so you can set\npresentational options for `hover`, `select` or `disabled` button\nstates.",
              "samples": [
                {
                  "name": "Themed, single button",
                  "value": "highcharts/breadcrumbs/single-button",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.SVGAttributes"] },
              "since": "10.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "navigation.breadcrumbs.buttonTheme",
              "name": "buttonTheme",
              "line": 41,
              "lineEnd": 56,
              "column": 4,
              "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js"
            },
            "children": {
              "style": {
                "doclet": { "type": { "names": ["*"] } },
                "meta": {
                  "fullname": "navigation.breadcrumbs.buttonTheme.style",
                  "name": "style",
                  "line": 74,
                  "lineEnd": 74,
                  "column": 8,
                  "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js"
                },
                "children": {
                  "color": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "#334eff"
                    },
                    "meta": {
                      "fullname": "navigation.breadcrumbs.buttonTheme.style.color",
                      "name": "color",
                      "line": 75,
                      "lineEnd": 75,
                      "column": 12,
                      "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
                      "default": "#334eff"
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsNavigationBreadcrumbsButtonThemeStyleOptions",
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsNavigationBreadcrumbsButtonThemeOptions",
            "extended": 1
          },
          "events": {
            "doclet": { "type": { "names": ["*"] } },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "navigation.breadcrumbs.events",
              "line": 0,
              "lineEnd": 0,
              "name": "events"
            },
            "children": {
              "click": {
                "doclet": {
                  "description": "Fires when clicking on the breadcrumbs button. Two arguments are\npassed to the function. First breadcrumb button as an SVG element.\nSecond is the breadcrumbs class, containing reference to the chart,\nseries etc.\n\n```js\nclick: function(button, breadcrumbs) {\n  console.log(button);\n}\n```\n\nReturn false to stop default buttons click action.",
                  "type": {
                    "names": ["Highcharts.BreadcrumbsClickCallbackFunction"]
                  },
                  "since": "10.0.0"
                },
                "meta": {
                  "fullname": "navigation.breadcrumbs.events.click",
                  "name": "click",
                  "line": 85,
                  "lineEnd": 102,
                  "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsNavigationBreadcrumbsEventsOptions",
            "extended": 1
          },
          "floating": {
            "doclet": {
              "description": "When the breadcrumbs are floating, the plot area will not move to\nmake space for it. By default, the chart will not make space for the\nbuttons. This property won't work when positioned in the middle.",
              "samples": [
                {
                  "name": "Floating button",
                  "value": "highcharts/breadcrumbs/single-button"
                }
              ],
              "type": { "names": ["boolean"] },
              "since": "10.0.0",
              "defaultvalue": false
            },
            "meta": {
              "fullname": "navigation.breadcrumbs.floating",
              "name": "floating",
              "line": 85,
              "lineEnd": 102,
              "column": 4,
              "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "format": {
            "doclet": {
              "description": "A format string for the breadcrumbs button. Variables are enclosed by\ncurly brackets. Available values are passed in the declared point\noptions.",
              "type": { "names": ["string", "undefined"] },
              "since": "10.0.0",
              "defaultvalue": "undefined",
              "samples": [
                {
                  "name": "Display custom values in breadcrumb button.",
                  "value": "highcharts/breadcrumbs/format",
                  "products": ["highcharts"]
                }
              ]
            },
            "meta": {
              "fullname": "navigation.breadcrumbs.format",
              "name": "format",
              "line": 115,
              "lineEnd": 125,
              "column": 4,
              "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "formatter": {
            "doclet": {
              "description": "Callback function to format the breadcrumb text from scratch.",
              "type": {
                "names": ["Highcharts.BreadcrumbsFormatterCallbackFunction"]
              },
              "since": "10.0.0",
              "defaultvalue": "undefined"
            },
            "meta": {
              "fullname": "navigation.breadcrumbs.formatter",
              "name": "formatter",
              "line": 127,
              "lineEnd": 134,
              "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "position": {
            "doclet": {
              "description": "Positioning for the button row. The breadcrumbs buttons will be\naligned properly for the default chart layout (title,  subtitle,\nlegend, range selector) for the custom chart layout set the position\nproperties.",
              "samples": [
                {
                  "name": "Single, right aligned button",
                  "value": "highcharts/breadcrumbs/single-button",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.BreadcrumbsAlignOptions"] },
              "since": "10.0.0",
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "navigation.breadcrumbs.position",
              "name": "position",
              "line": 156,
              "lineEnd": 168,
              "column": 4,
              "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js"
            },
            "children": {
              "align": {
                "doclet": {
                  "description": "Horizontal alignment of the breadcrumbs buttons.",
                  "type": { "names": ["Highcharts.AlignValue"] },
                  "since": "10.0.0",
                  "defaultvalue": "left"
                },
                "meta": {
                  "fullname": "navigation.breadcrumbs.position.align",
                  "name": "align",
                  "line": 170,
                  "lineEnd": 174,
                  "column": 8,
                  "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
                  "default": "left"
                },
                "children": {},
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "description": "Vertical alignment of the breadcrumbs buttons.",
                  "type": { "names": ["Highcharts.VerticalAlignValue"] },
                  "since": "10.0.0",
                  "defaultvalue": "top"
                },
                "meta": {
                  "fullname": "navigation.breadcrumbs.position.verticalAlign",
                  "name": "verticalAlign",
                  "line": 176,
                  "lineEnd": 180,
                  "column": 8,
                  "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
                  "default": "top"
                },
                "children": {},
                "extended": 1
              },
              "x": {
                "doclet": {
                  "description": "The X offset of the breadcrumbs button group.",
                  "type": { "names": ["number"] },
                  "since": "10.0.0",
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "navigation.breadcrumbs.position.x",
                  "name": "x",
                  "line": 182,
                  "lineEnd": 186,
                  "column": 8,
                  "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "description": "The Y offset of the breadcrumbs button group. When `undefined`,\nand `floating` is `false`, the `y` position is adapted so that\nthe breadcrumbs are rendered outside the target area.",
                  "type": { "names": ["number", "undefined"] },
                  "since": "10.0.0",
                  "defaultvalue": null
                },
                "meta": {
                  "fullname": "navigation.breadcrumbs.position.y",
                  "name": "y",
                  "line": 188,
                  "lineEnd": 194,
                  "column": 8,
                  "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsNavigationBreadcrumbsPositionOptions",
            "extended": 1
          },
          "relativeTo": {
            "doclet": {
              "description": "What box to align the button to. Can be either `plotBox` or\n`spacingBox`.",
              "type": { "names": ["Highcharts.ButtonRelativeToValue"] },
              "defaultvalue": "plotBox",
              "since": "10.0.0",
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "navigation.breadcrumbs.relativeTo",
              "name": "relativeTo",
              "line": 127,
              "lineEnd": 134,
              "column": 4,
              "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
              "default": "plotBox"
            },
            "children": {},
            "extended": 1
          },
          "rtl": {
            "doclet": {
              "description": "Whether to reverse the order of buttons. This is common in Arabic\nand Hebrew.",
              "samples": [
                {
                  "name": "Breadcrumbs in RTL",
                  "value": "highcharts/breadcrumbs/rtl",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["boolean"] },
              "since": "10.2.0",
              "defaultvalue": false
            },
            "meta": {
              "fullname": "navigation.breadcrumbs.rtl",
              "name": "rtl",
              "line": 145,
              "lineEnd": 154,
              "column": 4,
              "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "separator": {
            "doclet": {
              "description": "Options object for Breadcrumbs separator.",
              "since": "10.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "navigation.breadcrumbs.separator",
              "name": "separator",
              "line": 197,
              "lineEnd": 201,
              "column": 4,
              "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js"
            },
            "children": {
              "style": {
                "doclet": {
                  "description": "CSS styles for the breadcrumbs separator.\n\nIn styled mode, the breadcrumbs separators are styled by the\n`.highcharts-separator` rule with its different states.",
                  "type": { "names": ["Highcharts.CSSObject"] },
                  "since": "10.0.0"
                },
                "meta": {
                  "fullname": "navigation.breadcrumbs.separator.style",
                  "name": "style",
                  "line": 209,
                  "lineEnd": 216,
                  "column": 8,
                  "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js"
                },
                "children": {
                  "color": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "#666666"
                    },
                    "meta": {
                      "fullname": "navigation.breadcrumbs.separator.style.color",
                      "name": "color",
                      "line": 218,
                      "lineEnd": 218,
                      "column": 12,
                      "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
                      "default": "#666666"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "fontSize": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": null
                    },
                    "meta": {
                      "fullname": "navigation.breadcrumbs.separator.style.fontSize",
                      "name": "fontSize",
                      "line": 219,
                      "lineEnd": 219,
                      "column": 12,
                      "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
                      "default": "0.8em"
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsNavigationBreadcrumbsSeparatorStyleOptions",
                "extended": 1
              },
              "text": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "since": "10.0.0",
                  "products": ["highcharts"],
                  "defaultvalue": "/"
                },
                "meta": {
                  "fullname": "navigation.breadcrumbs.separator.text",
                  "name": "text",
                  "line": 203,
                  "lineEnd": 207,
                  "column": 8,
                  "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
                  "default": "/"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsNavigationBreadcrumbsSeparatorOptions",
            "extended": 1
          },
          "showFullPath": {
            "doclet": {
              "description": "Show full path or only a single button.",
              "samples": [
                {
                  "name": "Single, styled button",
                  "value": "highcharts/breadcrumbs/single-button",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["boolean"] },
              "since": "10.0.0",
              "defaultvalue": true
            },
            "meta": {
              "fullname": "navigation.breadcrumbs.showFullPath",
              "name": "showFullPath",
              "line": 222,
              "lineEnd": 230,
              "column": 4,
              "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "style": {
            "doclet": {
              "description": "CSS styles for all breadcrumbs.\n\nIn styled mode, the breadcrumbs buttons are styled by the\n`.highcharts-breadcrumbs-buttons .highcharts-button` rule with its\ndifferent states.",
              "type": { "names": ["Highcharts.SVGAttributes"] },
              "since": "10.0.0"
            },
            "meta": {
              "fullname": "navigation.breadcrumbs.style",
              "name": "style",
              "line": 232,
              "lineEnd": 241,
              "column": 4,
              "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "useHTML": {
            "doclet": {
              "description": "Whether to use HTML to render the breadcrumbs items texts.",
              "type": { "names": ["boolean"] },
              "since": "10.0.0",
              "defaultvalue": false
            },
            "meta": {
              "fullname": "navigation.breadcrumbs.useHTML",
              "name": "useHTML",
              "line": 243,
              "lineEnd": 248,
              "column": 4,
              "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "zIndex": {
            "doclet": {
              "description": "The z index of the breadcrumbs group.",
              "type": { "names": ["number"] },
              "since": "10.0.0",
              "defaultvalue": 7
            },
            "meta": {
              "fullname": "navigation.breadcrumbs.zIndex",
              "name": "zIndex",
              "line": 250,
              "lineEnd": 255,
              "column": 4,
              "filename": "code/es-modules/Extensions/Breadcrumbs/BreadcrumbsDefaults.js",
              "default": 7
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsNavigationBreadcrumbsOptions",
        "extended": 1
      },
      "buttonOptions": {
        "doclet": {
          "description": "A collection of options for buttons appearing in the exporting\nmodule.\n\nIn styled mode, the buttons are styled with the\n`.highcharts-contextbutton` and `.highcharts-button-symbol` classes.",
          "requires": ["module:modules/exporting"],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "navigation.buttonOptions",
          "name": "buttonOptions",
          "line": 598,
          "lineEnd": 606,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js"
        },
        "children": {
          "align": {
            "doclet": {
              "description": "Alignment for the buttons.",
              "samples": [
                {
                  "name": "Center aligned",
                  "value": "highcharts/navigation/buttonoptions-align/"
                }
              ],
              "type": { "names": ["Highcharts.AlignValue"] },
              "since": "2.0.0",
              "defaultvalue": "right"
            },
            "meta": {
              "fullname": "navigation.buttonOptions.align",
              "name": "align",
              "line": 646,
              "lineEnd": 654,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "default": "right"
            },
            "children": {},
            "extended": 1
          },
          "buttonSpacing": {
            "doclet": {
              "description": "The pixel spacing between buttons, and between the context button and\nthe title.",
              "samples": [
                {
                  "name": "Adjust the spacing when using text button",
                  "value": "highcharts/title/widthadjust"
                }
              ],
              "since": "2.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 5
            },
            "meta": {
              "fullname": "navigation.buttonOptions.buttonSpacing",
              "name": "buttonSpacing",
              "line": 656,
              "lineEnd": 663,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "default": 5
            },
            "children": {},
            "extended": 1
          },
          "enabled": {
            "doclet": {
              "description": "Whether to enable buttons.",
              "samples": [
                {
                  "name": "Exporting module loaded but buttons disabled",
                  "value": "highcharts/navigation/buttonoptions-enabled/"
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "true",
              "since": "2.0.0"
            },
            "meta": {
              "fullname": "navigation.buttonOptions.enabled",
              "name": "enabled",
              "line": 608,
              "lineEnd": 618,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "height": {
            "doclet": {
              "description": "Pixel height of the buttons.",
              "samples": [
                {
                  "name": "Bigger buttons",
                  "value": "highcharts/navigation/buttonoptions-height/"
                }
              ],
              "since": "2.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 28
            },
            "meta": {
              "fullname": "navigation.buttonOptions.height",
              "name": "height",
              "line": 665,
              "lineEnd": 672,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "default": 28
            },
            "children": {},
            "extended": 1
          },
          "symbolFill": {
            "doclet": {
              "description": "Fill color for the symbol within the button.",
              "samples": [
                {
                  "name": "Blue symbol stroke for one of the buttons",
                  "value": "highcharts/navigation/buttonoptions-symbolfill/"
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "2.0.0",
              "defaultvalue": "#666666"
            },
            "meta": {
              "fullname": "navigation.buttonOptions.symbolFill",
              "name": "symbolFill",
              "line": 733,
              "lineEnd": 741,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "default": "#666666"
            },
            "children": {},
            "extended": 1
          },
          "symbolSize": {
            "doclet": {
              "description": "The pixel size of the symbol on the button.",
              "samples": [
                {
                  "name": "Bigger buttons",
                  "value": "highcharts/navigation/buttonoptions-height/"
                }
              ],
              "since": "2.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 14
            },
            "meta": {
              "fullname": "navigation.buttonOptions.symbolSize",
              "name": "symbolSize",
              "line": 608,
              "lineEnd": 618,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "default": 14
            },
            "children": {},
            "extended": 1
          },
          "symbolStroke": {
            "doclet": {
              "description": "The color of the symbol's stroke or line.",
              "samples": [
                {
                  "name": "Blue symbol stroke",
                  "value": "highcharts/navigation/buttonoptions-symbolstroke/"
                }
              ],
              "type": { "names": ["Highcharts.ColorString"] },
              "since": "2.0.0",
              "defaultvalue": "#666666"
            },
            "meta": {
              "fullname": "navigation.buttonOptions.symbolStroke",
              "name": "symbolStroke",
              "line": 743,
              "lineEnd": 751,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "default": "#666666"
            },
            "children": {},
            "extended": 1
          },
          "symbolStrokeWidth": {
            "doclet": {
              "description": "The pixel stroke width of the symbol on the button.",
              "samples": [
                {
                  "name": "Bigger buttons",
                  "value": "highcharts/navigation/buttonoptions-height/"
                }
              ],
              "since": "2.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 3
            },
            "meta": {
              "fullname": "navigation.buttonOptions.symbolStrokeWidth",
              "name": "symbolStrokeWidth",
              "line": 753,
              "lineEnd": 760,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "default": 3
            },
            "children": {},
            "extended": 1
          },
          "symbolX": {
            "doclet": {
              "description": "The x position of the center of the symbol inside the button.",
              "samples": [
                {
                  "name": "Bigger buttons",
                  "value": "highcharts/navigation/buttonoptions-height/"
                }
              ],
              "since": "2.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 14.5
            },
            "meta": {
              "fullname": "navigation.buttonOptions.symbolX",
              "name": "symbolX",
              "line": 628,
              "lineEnd": 635,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "default": 14.5
            },
            "children": {},
            "extended": 1
          },
          "symbolY": {
            "doclet": {
              "description": "The y position of the center of the symbol inside the button.",
              "samples": [
                {
                  "name": "Bigger buttons",
                  "value": "highcharts/navigation/buttonoptions-height/"
                }
              ],
              "since": "2.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 13.5
            },
            "meta": {
              "fullname": "navigation.buttonOptions.symbolY",
              "name": "symbolY",
              "line": 637,
              "lineEnd": 644,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "default": 13.5
            },
            "children": {},
            "extended": 1
          },
          "text": {
            "doclet": {
              "description": "A text string to add to the individual button.",
              "samples": [
                {
                  "name": "Full text button",
                  "value": "highcharts/exporting/buttons-text/"
                },
                {
                  "name": "Icon using CSS font in text",
                  "value": "highcharts/exporting/buttons-text-usehtml/"
                },
                {
                  "name": "Combined symbol and text",
                  "value": "highcharts/exporting/buttons-text-symbol/"
                }
              ],
              "type": { "names": ["string"] },
              "defaultvalue": "null",
              "since": "3.0.0"
            },
            "meta": {
              "fullname": "navigation.buttonOptions.text",
              "name": "text",
              "line": 674,
              "lineEnd": 688,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "theme": {
            "doclet": {
              "description": "A configuration object for the button theme. The object accepts\nSVG properties like `stroke-width`, `stroke` and `fill`.\nTri-state button styles are supported by the `states.hover` and\n`states.select` objects.",
              "samples": [
                {
                  "name": "Theming the buttons",
                  "value": "highcharts/navigation/buttonoptions-theme/"
                }
              ],
              "requires": ["module:modules/exporting"],
              "since": "3.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "navigation.buttonOptions.theme",
              "name": "theme",
              "line": 762,
              "lineEnd": 774,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js"
            },
            "children": {
              "fill": {
                "doclet": {
                  "description": "The default fill exists only to capture hover events.",
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "since": "3.0.0",
                  "defaultvalue": "#ffffff"
                },
                "meta": {
                  "fullname": "navigation.buttonOptions.theme.fill",
                  "name": "fill",
                  "line": 776,
                  "lineEnd": 780,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
                  "default": "#ffffff"
                },
                "children": {},
                "extended": 1
              },
              "padding": {
                "doclet": {
                  "description": "Padding for the button.",
                  "since": "3.0.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 5
                },
                "meta": {
                  "fullname": "navigation.buttonOptions.theme.padding",
                  "name": "padding",
                  "line": 782,
                  "lineEnd": 784,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
                  "default": 5
                },
                "children": {},
                "extended": 1
              },
              "stroke": {
                "doclet": {
                  "description": "Default stroke for the buttons.",
                  "type": { "names": ["Highcharts.ColorString"] },
                  "since": "3.0.0",
                  "defaultvalue": "none"
                },
                "meta": {
                  "fullname": "navigation.buttonOptions.theme.stroke",
                  "name": "stroke",
                  "line": 786,
                  "lineEnd": 790,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
                  "default": "none"
                },
                "children": {},
                "extended": 1
              },
              "stroke-linecap": {
                "doclet": {
                  "description": "Default stroke linecap for the buttons.",
                  "since": "3.0.0",
                  "type": { "names": ["string"] },
                  "defaultvalue": "round"
                },
                "meta": {
                  "fullname": "navigation.buttonOptions.theme.stroke-linecap",
                  "name": "stroke-linecap",
                  "line": 792,
                  "lineEnd": 794,
                  "column": 12,
                  "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
                  "default": "round"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsNavigationButtonThemeOptions",
            "extended": 1
          },
          "useHTML": {
            "doclet": {
              "description": "Whether to use HTML for rendering the button. HTML allows for things\nlike inline CSS or image-based icons.",
              "samples": [
                {
                  "name": "Icon using CSS font in text",
                  "value": "highcharts/exporting/buttons-text-usehtml/"
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "false",
              "since": "10.3.0"
            },
            "meta": {
              "fullname": "navigation.buttonOptions.useHTML",
              "name": "useHTML",
              "line": 689,
              "lineEnd": 700,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "verticalAlign": {
            "doclet": {
              "description": "The vertical alignment of the buttons. Can be one of `\"top\"`,\n`\"middle\"` or `\"bottom\"`.",
              "samples": [
                {
                  "name": "Buttons at lower right",
                  "value": "highcharts/navigation/buttonoptions-verticalalign/"
                }
              ],
              "type": { "names": ["Highcharts.VerticalAlignValue"] },
              "since": "2.0.0",
              "defaultvalue": "top"
            },
            "meta": {
              "fullname": "navigation.buttonOptions.verticalAlign",
              "name": "verticalAlign",
              "line": 674,
              "lineEnd": 688,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "default": "top"
            },
            "children": {},
            "extended": 1
          },
          "width": {
            "doclet": {
              "description": "The pixel width of the button.",
              "samples": [
                {
                  "name": "Bigger buttons",
                  "value": "highcharts/navigation/buttonoptions-height/"
                }
              ],
              "since": "2.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 28
            },
            "meta": {
              "fullname": "navigation.buttonOptions.width",
              "name": "width",
              "line": 724,
              "lineEnd": 731,
              "column": 8,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "default": 28
            },
            "children": {},
            "extended": 1
          },
          "y": {
            "doclet": {
              "description": "The vertical offset of the button's position relative to its\n`verticalAlign`.",
              "samples": [
                {
                  "name": "Buttons at lower right",
                  "value": "highcharts/navigation/buttonoptions-verticalalign/"
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "0",
              "since": "2.0.0"
            },
            "meta": {
              "fullname": "navigation.buttonOptions.y",
              "name": "y",
              "line": 701,
              "lineEnd": 712,
              "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsNavigationButtonOptions",
        "extended": 1
      },
      "events": {
        "doclet": {
          "description": "Events to communicate between Stock Tools and custom GUI.",
          "since": "7.0.0",
          "products": ["highcharts", "highstock"],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "navigation.events",
          "name": "events",
          "line": 317,
          "lineEnd": 325,
          "column": 4,
          "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js"
        },
        "children": {
          "closePopup": {
            "doclet": {
              "description": "A `closePopup` event. Fired when Popup should be hidden, for example\nwhen clicking on an annotation again.",
              "type": { "names": ["function"] },
              "since": "7.0.0"
            },
            "meta": {
              "fullname": "navigation.events.closePopup",
              "name": "closePopup",
              "line": 332,
              "lineEnd": 338,
              "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "deselectButton": {
            "doclet": {
              "description": "Event fired when button state should change, for example after\nadding an annotation.",
              "type": { "names": ["function"] },
              "samples": [
                {
                  "name": "Change icon in a dropddown on event",
                  "value": "highcharts/annotations/gui/"
                },
                {
                  "name": "Change button class on event",
                  "value": "highcharts/annotations/gui-buttons/"
                }
              ],
              "since": "7.0.0"
            },
            "meta": {
              "fullname": "navigation.events.deselectButton",
              "name": "deselectButton",
              "line": 349,
              "lineEnd": 359,
              "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "selectButton": {
            "doclet": {
              "description": "Event fired on a button click.",
              "type": { "names": ["function"] },
              "samples": [
                {
                  "name": "Change icon in a dropddown on event",
                  "value": "highcharts/annotations/gui/"
                },
                {
                  "name": "Change button class on event",
                  "value": "highcharts/annotations/gui-buttons/"
                }
              ],
              "since": "7.0.0"
            },
            "meta": {
              "fullname": "navigation.events.selectButton",
              "name": "selectButton",
              "line": 339,
              "lineEnd": 348,
              "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "showPopup": {
            "doclet": {
              "description": "A `showPopup` event. Fired when selecting for example an annotation.",
              "type": { "names": ["function"] },
              "since": "7.0.0"
            },
            "meta": {
              "fullname": "navigation.events.showPopup",
              "name": "showPopup",
              "line": 326,
              "lineEnd": 331,
              "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsNavigationEventsOptions",
        "extended": 1
      },
      "iconsURL": {
        "doclet": {
          "description": "Path where Highcharts will look for icons. Change this to use icons\nfrom a different server.",
          "type": { "names": ["string"] },
          "defaultByProduct": {},
          "since": "7.1.3"
        },
        "meta": {
          "fullname": "navigation.iconsURL",
          "name": "iconsURL",
          "line": 317,
          "lineEnd": 325,
          "filename": "code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "menuItemHoverStyle": {
        "doclet": {
          "description": "CSS styles for the hover state of the individual items within the\npopup menu appearing by default when the export icon is clicked. The\nmenu items are rendered in HTML.",
          "see": [
            "In styled mode, the menu items are styled with the\n     `.highcharts-menu-item` class."
          ],
          "samples": [
            {
              "name": "Bold text on hover",
              "value": "highcharts/navigation/menuitemhoverstyle/"
            }
          ],
          "type": { "names": ["Highcharts.CSSObject"] },
          "defaultvalue": "{\"background\": \"#f2f2f2\" }",
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "navigation.menuItemHoverStyle",
          "name": "menuItemHoverStyle",
          "line": 852,
          "lineEnd": 866,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js"
        },
        "children": {},
        "extended": 1
      },
      "menuItemStyle": {
        "doclet": {
          "description": "CSS styles for the individual items within the popup menu appearing\nby default when the export icon is clicked. The menu items are\nrendered in HTML. Font size defaults to `11px` on desktop and `14px`\non touch devices.",
          "see": [
            "In styled mode, the menu items are styled with the\n     `.highcharts-menu-item` class."
          ],
          "samples": [
            {
              "name": "Add a grey stripe to the left",
              "value": "highcharts/navigation/menuitemstyle/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Highcharts.CSSObject"] },
          "defaultvalue": "{\"padding\": \"0.5em\", \"color\": \"#333333\", \"background\": \"none\", \"borderRadius\": \"3px\", \"fontSize\": \"0.8em\", \"transition\": \"background 250ms, color 250ms\"}",
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "navigation.menuItemStyle",
          "name": "menuItemStyle",
          "line": 822,
          "lineEnd": 837,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js"
        },
        "children": {},
        "extended": 1
      },
      "menuStyle": {
        "doclet": {
          "description": "CSS styles for the popup menu appearing by default when the export\nicon is clicked. This menu is rendered in HTML.",
          "see": [
            "In styled mode, the menu is styled with the `.highcharts-menu`\n     class."
          ],
          "samples": [
            {
              "name": "Light gray menu background",
              "value": "highcharts/navigation/menustyle/"
            }
          ],
          "type": { "names": ["Highcharts.CSSObject"] },
          "defaultvalue": "{\"background\": \"#ffffff\", \"borderRadius\": \"3px\", \"padding\": \"0.5em\"}",
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "navigation.menuStyle",
          "name": "menuStyle",
          "line": 798,
          "lineEnd": 811,
          "column": 4,
          "filename": "code/es-modules/Extensions/Exporting/ExportingDefaults.js"
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsNavigationOptions",
    "extended": 1
  },
  "noData": {
    "doclet": {
      "description": "Options for displaying a message like \"No data to display\".\nThis feature requires the file no-data-to-display.js to be loaded in the\npage. The actual text to display is set in the lang.noData option.",
      "samples": [
        {
          "name": "Line chart with no-data module",
          "value": "highcharts/no-data-to-display/no-data-line"
        },
        {
          "name": "Pie chart with no-data module",
          "value": "highcharts/no-data-to-display/no-data-pie"
        }
      ],
      "products": ["highcharts", "highstock", "gantt"],
      "requires": ["module:modules/no-data-to-display"],
      "type": { "names": ["*"] }
    },
    "meta": {
      "filename": "code/es-modules/Extensions/NoDataToDisplay/NoDataDefaults.js",
      "name": "noData",
      "fullname": "noData",
      "line": 38,
      "lineEnd": 51,
      "column": 0
    },
    "children": {
      "attr": {
        "doclet": {
          "description": "An object of additional SVG attributes for the no-data label.",
          "type": { "names": ["Highcharts.SVGAttributes"] },
          "since": "3.0.8",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "noData.attr",
          "name": "attr",
          "line": 53,
          "lineEnd": 60,
          "filename": "code/es-modules/Extensions/NoDataToDisplay/NoDataDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "position": {
        "doclet": {
          "description": "The position of the no-data label, relative to the plot area.",
          "type": { "names": ["Highcharts.AlignObject"] },
          "since": "3.0.8"
        },
        "meta": {
          "fullname": "noData.position",
          "name": "position",
          "line": 64,
          "lineEnd": 73,
          "column": 4,
          "filename": "code/es-modules/Extensions/NoDataToDisplay/NoDataDefaults.js"
        },
        "children": {
          "align": {
            "doclet": {
              "description": "Horizontal alignment of the label.",
              "type": { "names": ["Highcharts.AlignValue"] },
              "since": "3.0.8",
              "defaultvalue": "center"
            },
            "meta": {
              "fullname": "noData.position.align",
              "name": "align",
              "line": 89,
              "lineEnd": 93,
              "column": 8,
              "filename": "code/es-modules/Extensions/NoDataToDisplay/NoDataDefaults.js",
              "default": "center"
            },
            "children": {},
            "extended": 1
          },
          "verticalAlign": {
            "doclet": {
              "description": "Vertical alignment of the label.",
              "type": { "names": ["Highcharts.VerticalAlignValue"] },
              "since": "3.0.8",
              "defaultvalue": "middle"
            },
            "meta": {
              "fullname": "noData.position.verticalAlign",
              "name": "verticalAlign",
              "line": 95,
              "lineEnd": 99,
              "column": 8,
              "filename": "code/es-modules/Extensions/NoDataToDisplay/NoDataDefaults.js",
              "default": "middle"
            },
            "children": {},
            "extended": 1
          },
          "x": {
            "doclet": {
              "description": "Horizontal offset of the label, in pixels.",
              "since": "3.0.8",
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "noData.position.x",
              "name": "x",
              "line": 81,
              "lineEnd": 83,
              "column": 8,
              "filename": "code/es-modules/Extensions/NoDataToDisplay/NoDataDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "y": {
            "doclet": {
              "description": "Vertical offset of the label, in pixels.",
              "since": "3.0.8",
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "noData.position.y",
              "name": "y",
              "line": 85,
              "lineEnd": 87,
              "column": 8,
              "filename": "code/es-modules/Extensions/NoDataToDisplay/NoDataDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsNoDataPositionOptions",
        "extended": 1
      },
      "style": {
        "doclet": {
          "description": "CSS styles for the no-data label.",
          "samples": [
            {
              "name": "Styled no-data text",
              "value": "highcharts/no-data-to-display/no-data-line"
            }
          ],
          "type": { "names": ["Highcharts.CSSObject"] }
        },
        "meta": {
          "fullname": "noData.style",
          "name": "style",
          "line": 102,
          "lineEnd": 109,
          "column": 4,
          "filename": "code/es-modules/Extensions/NoDataToDisplay/NoDataDefaults.js"
        },
        "children": {},
        "extended": 1
      },
      "useHTML": {
        "doclet": {
          "description": "Whether to insert the label as HTML, or as pseudo-HTML rendered with\nSVG.",
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "4.1.10",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "noData.useHTML",
          "name": "useHTML",
          "line": 64,
          "lineEnd": 73,
          "filename": "code/es-modules/Extensions/NoDataToDisplay/NoDataDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsNoDataOptions",
    "extended": 1
  },
  "pane": {
    "doclet": {
      "description": "The pane serves as a container for axes and backgrounds for circular\ngauges and polar charts.",
      "type": { "names": ["*", "Array.<*>"] },
      "since": "2.3.0",
      "products": ["highcharts"],
      "requires": ["module:highcharts-more"]
    },
    "meta": {
      "filename": "code/es-modules/Extensions/Pane/PaneDefaults.js",
      "name": "pane",
      "fullname": "pane",
      "line": 117,
      "lineEnd": 126,
      "column": 0
    },
    "children": {
      "background": {
        "doclet": {
          "description": "An array of background items for the pane.",
          "samples": [
            {
              "name": "Speedometer gauge with multiple backgrounds",
              "value": "highcharts/demo/gauge-speedometer/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Array.<*>"] },
          "since": "2.3.0"
        },
        "meta": {
          "filename": "code/es-modules/Extensions/Pane/PaneDefaults.js",
          "name": "background",
          "fullname": "pane.background",
          "line": 11,
          "lineEnd": 15,
          "column": 0
        },
        "children": {
          "backgroundColor": {
            "doclet": {
              "description": "The background color or gradient for the pane.",
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "defaultvalue": "{ linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 }, stops: [[0, #ffffff], [1, #e6e6e6]] }",
              "since": "2.3.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "pane.background.backgroundColor",
              "name": "backgroundColor",
              "line": 77,
              "lineEnd": 84,
              "column": 4,
              "filename": "code/es-modules/Extensions/Pane/PaneDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "borderColor": {
            "doclet": {
              "description": "The pane background border color.",
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "2.3.0",
              "products": ["highcharts"],
              "defaultvalue": "#cccccc"
            },
            "meta": {
              "fullname": "pane.background.borderColor",
              "name": "borderColor",
              "line": 69,
              "lineEnd": 75,
              "column": 4,
              "filename": "code/es-modules/Extensions/Pane/PaneDefaults.js",
              "default": "#cccccc"
            },
            "children": {},
            "extended": 1
          },
          "borderRadius": {
            "doclet": {
              "description": "The border radius of the pane background when the shape is `arc`. Can be\na number (pixels) or a percentage string.",
              "since": "11.4.2",
              "samples": [
                {
                  "name": "Circular gauge and pane with equal border radius",
                  "value": "highcharts/series-solidgauge/pane-borderradius"
                }
              ],
              "products": ["highcharts"],
              "type": { "names": ["number", "string"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "pane.background.borderRadius",
              "name": "borderRadius",
              "line": 51,
              "lineEnd": 60,
              "column": 4,
              "filename": "code/es-modules/Extensions/Pane/PaneDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "borderWidth": {
            "doclet": {
              "description": "The pixel border width of the pane background.",
              "since": "2.3.0",
              "products": ["highcharts"],
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "pane.background.borderWidth",
              "name": "borderWidth",
              "line": 62,
              "lineEnd": 67,
              "column": 4,
              "filename": "code/es-modules/Extensions/Pane/PaneDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "className": {
            "doclet": {
              "description": "The class name for this background.",
              "samples": [
                {
                  "name": "Panes styled by CSS",
                  "value": "highcharts/css/pane/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Panes styled by CSS",
                  "value": "highcharts/css/pane/",
                  "products": ["highstock"]
                },
                {
                  "name": "Panes styled by CSS",
                  "value": "highcharts/css/pane/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["string"] },
              "defaultByProduct": {},
              "since": "5.0.0"
            },
            "meta": {
              "fullname": "pane.background.className",
              "name": "className",
              "line": 26,
              "lineEnd": 40,
              "filename": "code/es-modules/Extensions/Pane/PaneDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "innerRadius": {
            "doclet": {
              "description": "The inner radius of the pane background. Can be either numeric\n(pixels) or a percentage string.",
              "type": { "names": ["number", "string"] },
              "since": "2.3.0",
              "products": ["highcharts"],
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "pane.background.innerRadius",
              "name": "innerRadius",
              "line": 95,
              "lineEnd": 95,
              "column": 29,
              "filename": "code/es-modules/Extensions/Pane/PaneDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "outerRadius": {
            "doclet": {
              "description": "The outer radius of the circular pane background. Can be either\nnumeric (pixels) or a percentage string.",
              "type": { "names": ["number", "string"] },
              "since": "2.3.0",
              "products": ["highcharts"],
              "defaultvalue": "105%"
            },
            "meta": {
              "fullname": "pane.background.outerRadius",
              "name": "outerRadius",
              "line": 106,
              "lineEnd": 106,
              "column": 26,
              "filename": "code/es-modules/Extensions/Pane/PaneDefaults.js",
              "default": "105%"
            },
            "children": {},
            "extended": 1
          },
          "shape": {
            "doclet": {
              "description": "The shape of the pane background. When `solid`, the background\nis circular. When `arc`, the background extends only from the min\nto the max of the value axis.",
              "type": { "names": ["Highcharts.PaneBackgroundShapeValue"] },
              "since": "2.3.0",
              "products": ["highcharts"],
              "defaultvalue": "circle"
            },
            "meta": {
              "fullname": "pane.background.shape",
              "name": "shape",
              "line": 26,
              "lineEnd": 40,
              "column": 4,
              "filename": "code/es-modules/Extensions/Pane/PaneDefaults.js",
              "default": "circle"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsPaneBackgroundOptions",
        "extended": 1
      },
      "center": {
        "doclet": {
          "description": "The center of a polar chart or angular gauge, given as an array\nof [x, y] positions. Positions can be given as integers that\ntransform to pixels, or as percentages of the plot area size.",
          "samples": [
            {
              "name": "Two gauges with different center",
              "value": "highcharts/demo/gauge-vu-meter/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Array.<(string|number)>"] },
          "defaultvalue": "[\"50%\", \"50%\"]",
          "since": "2.3.0",
          "products": ["highcharts"]
        },
        "meta": {
          "fullname": "pane.center",
          "name": "center",
          "line": 128,
          "lineEnd": 140,
          "column": 4,
          "filename": "code/es-modules/Extensions/Pane/PaneDefaults.js"
        },
        "children": {},
        "extended": 1
      },
      "endAngle": {
        "doclet": {
          "description": "The end angle of the polar X axis or gauge value axis, given in\ndegrees where 0 is north. Defaults to [startAngle](#pane.startAngle)\n+ 360.",
          "samples": [
            {
              "name": "VU-meter with custom start and end angle",
              "value": "highcharts/demo/gauge-vu-meter/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "2.3.0",
          "products": ["highcharts"]
        },
        "meta": {
          "fullname": "pane.endAngle",
          "name": "endAngle",
          "line": 128,
          "lineEnd": 140,
          "filename": "code/es-modules/Extensions/Pane/PaneDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "innerSize": {
        "doclet": {
          "description": "The inner size of the pane, either as a number defining pixels, or a\npercentage defining a percentage of the pane's size.",
          "samples": [
            {
              "name": "The inner size set to 20%",
              "value": "highcharts/series-polar/column-inverted-inner",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number", "string"] },
          "products": ["highcharts"],
          "since": "2.3.0",
          "defaultvalue": "0%"
        },
        "meta": {
          "fullname": "pane.innerSize",
          "name": "innerSize",
          "line": 167,
          "lineEnd": 176,
          "column": 4,
          "filename": "code/es-modules/Extensions/Pane/PaneDefaults.js",
          "default": "0%"
        },
        "children": {},
        "extended": 1
      },
      "size": {
        "doclet": {
          "description": "The size of the pane, either as a number defining pixels, or a\npercentage defining a percentage of the available plot area (the\nsmallest of the plot height or plot width).",
          "samples": [
            {
              "name": "Smaller size",
              "value": "highcharts/demo/gauge-vu-meter/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number", "string"] },
          "products": ["highcharts"],
          "since": "2.3.0",
          "defaultvalue": "85%"
        },
        "meta": {
          "fullname": "pane.size",
          "name": "size",
          "line": 155,
          "lineEnd": 165,
          "column": 4,
          "filename": "code/es-modules/Extensions/Pane/PaneDefaults.js",
          "default": "85%"
        },
        "children": {},
        "extended": 1
      },
      "startAngle": {
        "doclet": {
          "description": "The start angle of the polar X axis or gauge axis, given in degrees\nwhere 0 is north. Defaults to 0.",
          "samples": [
            {
              "name": "VU-meter with custom start and end angle",
              "value": "highcharts/demo/gauge-vu-meter/",
              "products": ["highcharts"]
            }
          ],
          "since": "2.3.0",
          "products": ["highcharts"],
          "type": { "names": ["number"] },
          "defaultvalue": 0
        },
        "meta": {
          "fullname": "pane.startAngle",
          "name": "startAngle",
          "line": 178,
          "lineEnd": 187,
          "column": 4,
          "filename": "code/es-modules/Extensions/Pane/PaneDefaults.js",
          "default": 0
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsPaneOptions",
    "extended": 1
  },
  "plotOptions": {
    "meta": {
      "filename": "code/es-modules/Stock/Indicators/Zigzag/ZigzagIndicator.js",
      "name": "plotOptions",
      "fullname": "plotOptions",
      "line": 129,
      "lineEnd": 133,
      "column": 0
    },
    "doclet": {
      "description": "The plotOptions is a wrapper object for config objects for each series\ntype. The config objects for each series can also be overridden for\neach series item as given in the series array.\n\nConfiguration options for the series are given in three levels. Options\nfor all series in a chart are given in the [plotOptions.series](#plotOptions.series) object. Then options for all series of a specific\ntype are given in the plotOptions of that type, for example\n`plotOptions.line`. Next, options for one single series are given in\n[the series array](#series).",
      "type": { "names": ["*"] }
    },
    "children": {
      "arcdiagram": {
        "doclet": {
          "description": "Arc diagram series is a chart drawing style in which\n the vertices of the chart are positioned along a line\n on the Euclidean plane and the edges are drawn as a semicircle\n in one of the two half-planes delimited by the line,\n or as smooth curves formed by sequences of semicircles.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `arcdiagram` series are defined in\n   [plotOptions.arcdiagram](plotOptions.arcdiagram).\n3. Options for one single series are given in\n   [the series instance array](series.arcdiagram).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        arcdiagram: {\n            // shared options for all arcdiagram series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'arcdiagram'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.arcdiagram.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === arcdiagram) {\n    // code specific to the arcdiagram series\n}\n```\n            ",
          "samples": [
            { "name": "Arc Diagram", "value": "highcharts/demo/arc-diagram/" }
          ],
          "extends": "plotOptions.sankey",
          "since": "10.0.0",
          "products": ["highcharts"],
          "requires": ["module:modules/arc-diagram"],
          "exclude": [
            "curveFactor",
            "connectEnds",
            "connectNulls",
            "colorAxis",
            "colorKey",
            "dataSorting",
            "dragDrop",
            "getExtremesFromAll",
            "legendSymbolColor",
            "nodeAlignment",
            "nodePadding",
            "centerInCategory",
            "pointInterval",
            "pointIntervalUnit",
            "pointPlacement",
            "pointStart",
            "relativeXValue",
            "softThreshold",
            "stack",
            "stacking",
            "step",
            "xAxis",
            "yAxis"
          ]
        },
        "meta": {
          "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
          "name": "arcdiagram",
          "fullname": "plotOptions.arcdiagram",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "centeredLinks": {
            "doclet": {
              "description": "The option to center links rather than position them one after\nanother",
              "type": { "names": ["boolean"] },
              "since": "10.0.0",
              "defaultvalue": "false",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.arcdiagram.centeredLinks",
              "name": "centeredLinks",
              "line": 40,
              "lineEnd": 48,
              "column": 4,
              "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "description": "Options for the data labels appearing on top of the nodes and links.\nFor arc diagram charts, data labels are visible for the nodes by\ndefault, but hidden for links. This is controlled by modifying the\n`nodeFormat`, and the `format` that applies to links and is an empty\nstring by default.",
              "declare": "Highcharts.SeriesArcDiagramDataLabelsOptionsObject",
              "since": "10.0.0",
              "type": { "names": ["*"] },
              "extends": "plotOptions.sankey.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.arcdiagram.dataLabels",
              "name": "dataLabels",
              "line": 62,
              "lineEnd": 72,
              "column": 4,
              "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js"
            },
            "children": {
              "linkTextPath": {
                "doclet": {
                  "description": "Options for a _link_ label text which should follow link\nconnection. Border and background are disabled for a label that\nfollows a path.\n\n**Note:** Only SVG-based renderer supports this option. Setting\n`useHTML` to true will disable this option.",
                  "extends": "plotOptions.networkgraph.dataLabels.linkTextPath",
                  "since": "10.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.arcdiagram.dataLabels.linkTextPath",
                  "name": "linkTextPath",
                  "line": 74,
                  "lineEnd": 84,
                  "column": 8,
                  "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js"
                },
                "children": {
                  "attributes": {
                    "doclet": {
                      "type": { "names": ["Highcharts.SVGAttributes"] },
                      "defaultvalue": "{\"startOffset\":\"25%\"}"
                    },
                    "meta": {
                      "fullname": "plotOptions.arcdiagram.dataLabels.linkTextPath.attributes",
                      "name": "attributes",
                      "line": 86,
                      "lineEnd": 89,
                      "column": 12,
                      "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "enabled": {}
                },
                "extended": 1
              },
              "backgroundColor": {},
              "crop": {},
              "enabled": {},
              "format": {},
              "formatter": {},
              "inside": {},
              "nodeFormat": {},
              "nodeFormatter": {},
              "align": {},
              "verticalAlign": {},
              "y": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "defer": {},
              "filter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "style": {},
              "textPath": {},
              "useHTML": {},
              "x": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "equalNodes": {
            "doclet": {
              "description": "Whether nodes with different values should have the same size. If set\nto true, all nodes are calculated based on the `nodePadding` and\ncurrent `plotArea`. It is possible to override it using the\n`marker.radius` option.",
              "type": { "names": ["boolean"] },
              "since": "10.0.0",
              "defaultvalue": "false",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.arcdiagram.equalNodes",
              "name": "equalNodes",
              "line": 50,
              "lineEnd": 60,
              "column": 4,
              "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "marker": {
            "doclet": {
              "extends": "plotOptions.series.marker",
              "exclude": ["enabled", "enabledThreshold", "height", "width"]
            },
            "meta": {
              "fullname": "plotOptions.arcdiagram.marker",
              "name": "marker",
              "line": 98,
              "lineEnd": 109,
              "column": 4,
              "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js"
            },
            "children": {
              "fillOpacity": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 1
                },
                "meta": {
                  "fullname": "plotOptions.arcdiagram.marker.fillOpacity",
                  "name": "fillOpacity",
                  "line": 128,
                  "lineEnd": 128,
                  "column": 8,
                  "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
                  "default": 1
                },
                "children": {},
                "extended": 1
              },
              "lineWidth": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.arcdiagram.marker.lineWidth",
                  "name": "lineWidth",
                  "line": 129,
                  "lineEnd": 129,
                  "column": 8,
                  "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "symbol": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "circle"
                },
                "meta": {
                  "fullname": "plotOptions.arcdiagram.marker.symbol",
                  "name": "symbol",
                  "line": 131,
                  "lineEnd": 131,
                  "column": 8,
                  "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
                  "default": "circle"
                },
                "children": {},
                "extended": 1
              },
              "fillColor": {},
              "lineColor": {},
              "radius": {},
              "states": {}
            },
            "extended": 1
          },
          "reversed": {
            "doclet": {
              "description": "Whether the series should be placed on the other side of the\n`plotArea`.",
              "type": { "names": ["boolean"] },
              "since": "10.0.0",
              "defaultvalue": "false",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.arcdiagram.reversed",
              "name": "reversed",
              "line": 146,
              "lineEnd": 154,
              "column": 4,
              "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "borderWidth": {},
          "colorByPoint": {},
          "inactiveOtherPoints": {},
          "levels": {},
          "linkColorMode": {},
          "linkOpacity": {},
          "minLinkWidth": {},
          "nodeDistance": {},
          "nodeWidth": {},
          "opacity": {},
          "showInLegend": {},
          "states": {},
          "tooltip": {},
          "borderColor": {},
          "colors": {},
          "dataGrouping": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "onPoint": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "area": {
        "doclet": {
          "description": "The area series type.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `area` series are defined in\n   [plotOptions.area](plotOptions.area).\n3. Options for one single series are given in\n   [the series instance array](series.area).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        area: {\n            // shared options for all area series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'area'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.area.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === area) {\n    // code specific to the area series\n}\n```\n            ",
          "samples": [
            {
              "name": "Area chart",
              "value": "highcharts/demo/area-chart/",
              "products": ["highcharts"]
            },
            {
              "name": "Area chart",
              "value": "stock/demo/area/",
              "products": ["highstock"]
            }
          ],
          "extends": "plotOptions.line",
          "exclude": ["useOhlcData"],
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Area/AreaSeriesDefaults.js",
          "name": "area",
          "fullname": "plotOptions.area",
          "line": 11,
          "lineEnd": 15,
          "column": 0
        },
        "children": {
          "color": {
            "doclet": {
              "see": [
                "[fillColor](#plotOptions.area.fillColor)",
                "[fillOpacity](#plotOptions.area.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "plotOptions.area.color",
              "name": "color",
              "line": 30,
              "lineEnd": 35,
              "filename": "code/es-modules/Series/Area/AreaSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillColor": {
            "doclet": {
              "description": "Fill color or gradient for the area. When `undefined`, the series'\n`color` is used with the series' `fillOpacity`.\n\nIn styled mode, the fill color can be set with the `.highcharts-area`\nclass name.",
              "see": [
                "[color](#plotOptions.area.color)",
                "[fillOpacity](#plotOptions.area.fillOpacity)"
              ],
              "samples": [
                {
                  "name": "Undefined by default",
                  "value": "highcharts/plotoptions/area-fillcolor-default/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Gradient",
                  "value": "highcharts/plotoptions/area-fillcolor-gradient/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.area.fillColor",
              "name": "fillColor",
              "line": 36,
              "lineEnd": 54,
              "filename": "code/es-modules/Series/Area/AreaSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillOpacity": {
            "doclet": {
              "description": "Fill opacity for the area. When you set an explicit `fillColor`,\nthe `fillOpacity` is not applied. Instead, you should define the\nopacity in the `fillColor` with an rgba color definition. The\n`fillOpacity` setting, also the default setting, overrides the alpha\ncomponent of the `color` setting.\n\nIn styled mode, the fill opacity can be set with the\n`.highcharts-area` class name.",
              "see": [
                "[color](#plotOptions.area.color)",
                "[fillColor](#plotOptions.area.fillColor)"
              ],
              "samples": [
                {
                  "name": "Automatic fill color and fill opacity of 0.1",
                  "value": "highcharts/plotoptions/area-fillopacity/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultByProduct": { "highcharts": 0.75, "highstock": 0.75 },
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.area.fillOpacity",
              "name": "fillOpacity",
              "line": 55,
              "lineEnd": 76,
              "filename": "code/es-modules/Series/Area/AreaSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "legendSymbol": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "areaMarker"
            },
            "meta": {
              "fullname": "plotOptions.area.legendSymbol",
              "name": "legendSymbol",
              "line": 143,
              "lineEnd": 143,
              "column": 4,
              "filename": "code/es-modules/Series/Area/AreaSeriesDefaults.js",
              "default": "areaMarker"
            },
            "children": {},
            "extended": 1
          },
          "lineColor": {
            "doclet": {
              "description": "A separate color for the graph line. By default the line takes the\n`color` of the series, but the lineColor setting allows setting a\nseparate color for the line without altering the `fillColor`.\n\nIn styled mode, the line stroke can be set with the\n`.highcharts-graph` class name.",
              "samples": [
                {
                  "name": "Dark gray line",
                  "value": "highcharts/plotoptions/area-linecolor/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.area.lineColor",
              "name": "lineColor",
              "line": 77,
              "lineEnd": 91,
              "filename": "code/es-modules/Series/Area/AreaSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "negativeFillColor": {
            "doclet": {
              "description": "A separate color for the negative part of the area. Note that `zones`\ntakes precedence over the negative fill color.\n\nIn styled mode, a negative color is set with the\n`.highcharts-negative` class name.",
              "see": ["[negativeColor](#plotOptions.area.negativeColor)"],
              "samples": [
                {
                  "name": "Negative color in styled mode",
                  "value": "highcharts/css/series-negative-color/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "3.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.area.negativeFillColor",
              "name": "negativeFillColor",
              "line": 92,
              "lineEnd": 108,
              "filename": "code/es-modules/Series/Area/AreaSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "threshold": {
            "doclet": {
              "description": "The Y axis value to serve as the base for the area, for\ndistinguishing between values above and below a threshold. The area\nbetween the graph and the threshold is filled.\n\n* If a number is given, the Y axis will scale to the threshold.\n* If `null`, the scaling behaves like a line series with fill between\n  the graph and the Y axis minimum.\n* If `Infinity` or `-Infinity`, the area between the graph and the\n  corresponding Y axis extreme is filled (since v6.1.0).",
              "samples": [
                {
                  "name": "A threshold of 100",
                  "value": "highcharts/plotoptions/area-threshold/",
                  "products": ["highcharts"]
                },
                {
                  "name": "A threshold of Infinity",
                  "value": "highcharts/plotoptions/area-threshold-infinity/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "null"] },
              "since": "2.0.0",
              "products": ["highcharts", "highstock"],
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "plotOptions.area.threshold",
              "name": "threshold",
              "line": 30,
              "lineEnd": 35,
              "column": 4,
              "filename": "code/es-modules/Series/Area/AreaSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "trackByArea": {
            "doclet": {
              "description": "Whether the whole area or just the line should respond to mouseover\ntooltips and other mouse or touch events.",
              "samples": [
                {
                  "name": "Display the tooltip when the area is hovered",
                  "value": "highcharts/plotoptions/area-trackbyarea/",
                  "products": ["highcharts", "highstock"]
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "false",
              "since": "1.1.6",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.area.trackByArea",
              "name": "trackByArea",
              "line": 109,
              "lineEnd": 121,
              "filename": "code/es-modules/Series/Area/AreaSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "states": {},
          "step": {},
          "stickyTracking": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "arearange": {
        "doclet": {
          "description": "The area range series is a carteseian series with higher and lower values for\neach point along an X axis, where the area between the values is shaded.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `arearange` series are defined in\n   [plotOptions.arearange](plotOptions.arearange).\n3. Options for one single series are given in\n   [the series instance array](series.arearange).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        arearange: {\n            // shared options for all arearange series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'arearange'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.arearange.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === arearange) {\n    // code specific to the arearange series\n}\n```\n            ",
          "samples": [
            {
              "name": "Area range chart",
              "value": "highcharts/demo/arearange/",
              "products": ["highcharts"]
            },
            {
              "name": "Area range chart",
              "value": "stock/demo/arearange/",
              "products": ["highstock"]
            }
          ],
          "extends": "plotOptions.area",
          "products": ["highcharts", "highstock"],
          "exclude": ["stack", "stacking"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
          "name": "arearange",
          "fullname": "plotOptions.arearange",
          "line": 11,
          "lineEnd": 15,
          "column": 0
        },
        "children": {
          "color": {
            "doclet": {
              "see": [
                "[fillColor](#plotOptions.arearange.fillColor)",
                "[fillOpacity](#plotOptions.arearange.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "plotOptions.arearange.color",
              "name": "color",
              "line": 41,
              "lineEnd": 46,
              "filename": "code/es-modules/Series/AreaRange/AreaRangeSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "colorKey": {
            "doclet": {
              "defaultvalue": "low",
              "type": { "names": ["string"] }
            },
            "meta": {
              "fullname": "plotOptions.arearange.colorKey",
              "name": "colorKey",
              "line": 47,
              "lineEnd": 50,
              "filename": "code/es-modules/Series/AreaRange/AreaRangeSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "description": "Extended data labels for range series types. Range series data\nlabels use no `x` and `y` options. Instead, they have `xLow`,\n`xHigh`, `yLow` and `yHigh` options to allow the higher and lower\ndata label sets individually.",
              "declare": "Highcharts.SeriesAreaRangeDataLabelsOptionsObject",
              "exclude": ["x", "y"],
              "since": "2.3.0",
              "products": ["highcharts", "highstock"],
              "type": { "names": ["*"] },
              "extends": "plotOptions.area.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.arearange.dataLabels",
              "name": "dataLabels",
              "line": 92,
              "lineEnd": 104,
              "column": 4,
              "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js"
            },
            "children": {
              "align": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.arearange.dataLabels.align",
                  "name": "align",
                  "line": 106,
                  "lineEnd": 106,
                  "column": 8,
                  "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.arearange.dataLabels.verticalAlign",
                  "name": "verticalAlign",
                  "line": 107,
                  "lineEnd": 107,
                  "column": 8,
                  "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "xHigh": {
                "doclet": {
                  "description": "X offset of the higher data labels relative to the point value.",
                  "samples": [
                    {
                      "name": "Data labels on range series",
                      "value": "highcharts/plotoptions/arearange-datalabels/"
                    }
                  ],
                  "since": "2.3.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.arearange.dataLabels.xHigh",
                  "name": "xHigh",
                  "line": 117,
                  "lineEnd": 122,
                  "column": 8,
                  "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "xLow": {
                "doclet": {
                  "description": "X offset of the lower data labels relative to the point value.",
                  "samples": [
                    {
                      "name": "Data labels on range series",
                      "value": "highcharts/plotoptions/arearange-datalabels/"
                    },
                    {
                      "name": "Data labels on range series",
                      "value": "highcharts/plotoptions/arearange-datalabels/"
                    }
                  ],
                  "since": "2.3.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.arearange.dataLabels.xLow",
                  "name": "xLow",
                  "line": 108,
                  "lineEnd": 115,
                  "column": 8,
                  "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "yHigh": {
                "doclet": {
                  "description": "Y offset of the higher data labels relative to the point value.",
                  "samples": [
                    {
                      "name": "Data labels on range series",
                      "value": "highcharts/plotoptions/arearange-datalabels/"
                    }
                  ],
                  "since": "2.3.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.arearange.dataLabels.yHigh",
                  "name": "yHigh",
                  "line": 131,
                  "lineEnd": 136,
                  "column": 8,
                  "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "yLow": {
                "doclet": {
                  "description": "Y offset of the lower data labels relative to the point value.",
                  "samples": [
                    {
                      "name": "Data labels on range series",
                      "value": "highcharts/plotoptions/arearange-datalabels/"
                    }
                  ],
                  "since": "2.3.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.arearange.dataLabels.yLow",
                  "name": "yLow",
                  "line": 124,
                  "lineEnd": 129,
                  "column": 8,
                  "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "crop": {},
              "defer": {},
              "enabled": {},
              "filter": {},
              "format": {},
              "formatter": {},
              "inside": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "style": {},
              "textPath": {},
              "useHTML": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "dragDrop": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.area.dragDrop"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "plotOptions.arearange.dragDrop",
              "line": 0,
              "lineEnd": 0,
              "name": "dragDrop"
            },
            "children": {
              "draggableHigh": {
                "doclet": {
                  "description": "Allow high value to be dragged individually.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "requires": ["module:modules/draggable-points"]
                },
                "meta": {
                  "fullname": "plotOptions.arearange.dragDrop.draggableHigh",
                  "name": "draggableHigh",
                  "line": 430,
                  "lineEnd": 437,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropProps.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "draggableLow": {
                "doclet": {
                  "description": "Allow low value to be dragged individually.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "requires": ["module:modules/draggable-points"]
                },
                "meta": {
                  "fullname": "plotOptions.arearange.dragDrop.draggableLow",
                  "name": "draggableLow",
                  "line": 404,
                  "lineEnd": 411,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropProps.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dragHandle": {},
              "dragMaxX": {},
              "dragMaxY": {},
              "dragMinX": {},
              "dragMinY": {},
              "dragPrecisionX": {},
              "dragPrecisionY": {},
              "dragSensitivity": {},
              "draggableX": {},
              "draggableY": {},
              "groupBy": {},
              "guideBox": {},
              "liveRedraw": {}
            },
            "extended": 1
          },
          "fillColor": {
            "doclet": {
              "see": [
                "[color](#plotOptions.arearange.color)",
                "[fillOpacity](#plotOptions.arearange.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "plotOptions.arearange.fillColor",
              "name": "fillColor",
              "line": 51,
              "lineEnd": 56,
              "filename": "code/es-modules/Series/AreaRange/AreaRangeSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillOpacity": {
            "doclet": {
              "see": [
                "[color](#plotOptions.arearange.color)",
                "[fillColor](#plotOptions.arearange.fillColor)"
              ],
              "defaultByProduct": { "highcharts": "0.75", "highstock": "0.75" }
            },
            "meta": {
              "fullname": "plotOptions.arearange.fillOpacity",
              "name": "fillOpacity",
              "line": 57,
              "lineEnd": 64,
              "filename": "code/es-modules/Series/AreaRange/AreaRangeSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "lineWidth": {
            "doclet": {
              "description": "Pixel width of the arearange graph line.",
              "since": "2.3.0",
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "plotOptions.arearange.lineWidth",
              "name": "lineWidth",
              "line": 34,
              "lineEnd": 39,
              "column": 4,
              "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "lowMarker": {
            "doclet": {
              "description": "Options for the lower markers of the arearange-like series. When `lowMarker`\nis not defined, options inherit form the marker.",
              "see": ["[marker](#series.arearange.marker)"],
              "declare": "Highcharts.PointMarkerOptionsObject",
              "extends": "plotOptions.series.marker",
              "defaultvalue": "undefined",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.arearange.lowMarker",
              "name": "lowMarker",
              "line": 231,
              "lineEnd": 242,
              "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "symbol": {
                "doclet": {
                  "samples": [
                    {
                      "name": "Area range chart with `lowMarker` option",
                      "value": "highcharts/series-arearange/lowmarker/",
                      "products": ["highcharts"]
                    }
                  ],
                  "declare": "Highcharts.PointMarkerOptionsObject",
                  "extends": "plotOptions.series.marker.symbol",
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "plotOptions.arearange.lowMarker.symbol",
                  "name": "symbol",
                  "line": 243,
                  "lineEnd": 252,
                  "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "enabled": {},
              "enabledThreshold": {},
              "fillColor": {},
              "height": {},
              "lineColor": {},
              "lineWidth": {},
              "radius": {},
              "states": {},
              "width": {}
            },
            "extended": 1
          },
          "shadow": {
            "doclet": {
              "description": "Whether to apply a drop shadow to the graph line. Since 2.3 the\nshadow can be an object configuration containing `color`, `offsetX`,\n`offsetY`, `opacity` and `width`.",
              "type": {
                "names": ["boolean", "Highcharts.ShadowOptionsObject"]
              },
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.arearange.shadow",
              "name": "shadow",
              "line": 65,
              "lineEnd": 73,
              "filename": "code/es-modules/Series/AreaRange/AreaRangeSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "threshold": {
            "doclet": {
              "type": { "names": ["number", "null"] },
              "defaultvalue": null
            },
            "meta": {
              "fullname": "plotOptions.arearange.threshold",
              "name": "threshold",
              "line": 75,
              "lineEnd": 77,
              "column": 4,
              "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
              "default": null
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.area.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.arearange.tooltip",
              "name": "tooltip",
              "line": 79,
              "lineEnd": 79,
              "column": 4,
              "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js"
            },
            "children": {
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "<span style=\"color:{series.color}\">●</span> {series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>"
                },
                "meta": {
                  "fullname": "plotOptions.arearange.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 80,
                  "lineEnd": 80,
                  "column": 8,
                  "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
                  "default": "<span style=\"color:{series.color}\">●</span> {series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>"
                },
                "children": {},
                "extended": 1
              },
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "distance": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "headerFormat": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "trackByArea": {
            "doclet": {
              "description": "Whether the whole area or just the line should respond to mouseover\ntooltips and other mouse or touch events.",
              "since": "2.3.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.arearange.trackByArea",
              "name": "trackByArea",
              "line": 83,
              "lineEnd": 90,
              "column": 4,
              "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "legendSymbol": {},
          "lineColor": {},
          "negativeFillColor": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "states": {},
          "step": {},
          "stickyTracking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "areaspline": {
        "doclet": {
          "description": "The area spline series is an area series where the graph between the\npoints is smoothed into a spline.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `areaspline` series are defined in\n   [plotOptions.areaspline](plotOptions.areaspline).\n3. Options for one single series are given in\n   [the series instance array](series.areaspline).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        areaspline: {\n            // shared options for all areaspline series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'areaspline'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.areaspline.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === areaspline) {\n    // code specific to the areaspline series\n}\n```\n            ",
          "samples": [
            {
              "name": "Area spline chart",
              "value": "highcharts/demo/areaspline/",
              "products": ["highcharts"]
            },
            {
              "name": "Area spline chart",
              "value": "stock/demo/areaspline/",
              "products": ["highstock"]
            }
          ],
          "extends": "plotOptions.area",
          "exclude": ["step", "boostThreshold", "boostBlending"],
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "plotOptions.areaspline",
          "name": "areaspline",
          "line": 55,
          "lineEnd": 68,
          "filename": "code/es-modules/Series/AreaSpline/AreaSplineSeries.js",
          "column": 0
        },
        "children": {
          "color": {
            "doclet": {
              "see": [
                "[fillColor](#plotOptions.areaspline.fillColor)",
                "[fillOpacity](#plotOptions.areaspline.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "plotOptions.areaspline.color",
              "name": "color",
              "line": 69,
              "lineEnd": 74,
              "filename": "code/es-modules/Series/AreaSpline/AreaSplineSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillColor": {
            "doclet": {
              "see": [
                "[color](#plotOptions.areaspline.color)",
                "[fillOpacity](#plotOptions.areaspline.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "plotOptions.areaspline.fillColor",
              "name": "fillColor",
              "line": 75,
              "lineEnd": 80,
              "filename": "code/es-modules/Series/AreaSpline/AreaSplineSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillOpacity": {
            "doclet": {
              "see": [
                "[color](#plotOptions.areaspline.color)",
                "[fillColor](#plotOptions.areaspline.fillColor)"
              ],
              "defaultvalue": "0.75",
              "type": { "names": ["number"] }
            },
            "meta": {
              "fullname": "plotOptions.areaspline.fillOpacity",
              "name": "fillOpacity",
              "line": 81,
              "lineEnd": 87,
              "filename": "code/es-modules/Series/AreaSpline/AreaSplineSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "legendSymbol": {},
          "lineColor": {},
          "negativeFillColor": {},
          "threshold": {},
          "trackByArea": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "states": {},
          "stickyTracking": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "areasplinerange": {
        "doclet": {
          "description": "The area spline range is a cartesian series type with higher and\nlower Y values along an X axis. The area inside the range is colored, and\nthe graph outlining the area is a smoothed spline.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `areasplinerange` series are defined in\n   [plotOptions.areasplinerange](plotOptions.areasplinerange).\n3. Options for one single series are given in\n   [the series instance array](series.areasplinerange).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        areasplinerange: {\n            // shared options for all areasplinerange series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'areasplinerange'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.areasplinerange.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === areasplinerange) {\n    // code specific to the areasplinerange series\n}\n```\n            ",
          "samples": [
            {
              "name": "Area spline range",
              "value": "stock/demo/areasplinerange/",
              "products": ["highstock", "highstock"]
            }
          ],
          "extends": "plotOptions.arearange",
          "since": "2.3.0",
          "exclude": ["step", "boostThreshold", "boostBlending"],
          "products": ["highcharts", "highstock"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "fullname": "plotOptions.areasplinerange",
          "name": "areasplinerange",
          "line": 53,
          "lineEnd": 67,
          "filename": "code/es-modules/Series/AreaSplineRange/AreaSplineRangeSeries.js",
          "column": 0
        },
        "children": {
          "color": {
            "doclet": {
              "see": [
                "[fillColor](#plotOptions.areasplinerange.fillColor)",
                "[fillOpacity](#plotOptions.areasplinerange.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "plotOptions.areasplinerange.color",
              "name": "color",
              "line": 68,
              "lineEnd": 73,
              "filename": "code/es-modules/Series/AreaSplineRange/AreaSplineRangeSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillColor": {
            "doclet": {
              "see": [
                "[color](#plotOptions.areasplinerange.color)",
                "[fillOpacity](#plotOptions.areasplinerange.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "plotOptions.areasplinerange.fillColor",
              "name": "fillColor",
              "line": 74,
              "lineEnd": 79,
              "filename": "code/es-modules/Series/AreaSplineRange/AreaSplineRangeSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillOpacity": {
            "doclet": {
              "see": [
                "[color](#plotOptions.areasplinerange.color)",
                "[fillColor](#plotOptions.areasplinerange.fillColor)"
              ],
              "defaultvalue": "0.75",
              "type": { "names": ["number"] }
            },
            "meta": {
              "fullname": "plotOptions.areasplinerange.fillOpacity",
              "name": "fillOpacity",
              "line": 80,
              "lineEnd": 86,
              "filename": "code/es-modules/Series/AreaSplineRange/AreaSplineRangeSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "colorKey": {},
          "dataLabels": {},
          "dragDrop": {},
          "lineWidth": {},
          "lowMarker": {},
          "shadow": {},
          "threshold": {},
          "tooltip": {},
          "trackByArea": {},
          "legendSymbol": {},
          "lineColor": {},
          "negativeFillColor": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "states": {},
          "stickyTracking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "bar": {
        "doclet": {
          "description": "A bar series is a special type of column series where the columns are\nhorizontal.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `bar` series are defined in\n   [plotOptions.bar](plotOptions.bar).\n3. Options for one single series are given in\n   [the series instance array](series.bar).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        bar: {\n            // shared options for all bar series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'bar'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.bar.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === bar) {\n    // code specific to the bar series\n}\n```\n            ",
          "samples": [
            { "name": "Bar chart", "value": "highcharts/demo/bar-chart/" }
          ],
          "extends": "plotOptions.column",
          "products": ["highcharts"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Bar/BarSeries.js",
          "name": "bar",
          "fullname": "plotOptions.bar",
          "line": 31,
          "lineEnd": 35,
          "column": 0
        },
        "children": {
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "dragDrop": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "bellcurve": {
        "doclet": {
          "description": "A bell curve is an areaspline series which represents the probability\ndensity function of the normal distribution. It calculates mean and\nstandard deviation of the base series data and plots the curve according\nto the calculated parameters.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `bellcurve` series are defined in\n   [plotOptions.bellcurve](plotOptions.bellcurve).\n3. Options for one single series are given in\n   [the series instance array](series.bellcurve).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        bellcurve: {\n            // shared options for all bellcurve series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'bellcurve'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.bellcurve.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === bellcurve) {\n    // code specific to the bellcurve series\n}\n```\n            ",
          "samples": [
            {
              "name": "Bell curve",
              "value": "highcharts/demo/bellcurve/",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.areaspline",
          "since": "6.0.0",
          "products": ["highcharts"],
          "exclude": [
            "boostThreshold",
            "connectNulls",
            "dragDrop",
            "stacking",
            "pointInterval",
            "pointIntervalUnit"
          ],
          "requires": ["module:modules/histogram-bellcurve"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Bellcurve/BellcurveSeriesDefaults.js",
          "name": "bellcurve",
          "fullname": "plotOptions.bellcurve",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "color": {
            "doclet": {
              "see": [
                "[fillColor](#plotOptions.bellcurve.fillColor)",
                "[fillOpacity](#plotOptions.bellcurve.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "plotOptions.bellcurve.color",
              "name": "color",
              "line": 36,
              "lineEnd": 41,
              "filename": "code/es-modules/Series/Bellcurve/BellcurveSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillColor": {
            "doclet": {
              "see": [
                "[color](#plotOptions.bellcurve.color)",
                "[fillOpacity](#plotOptions.bellcurve.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "plotOptions.bellcurve.fillColor",
              "name": "fillColor",
              "line": 42,
              "lineEnd": 47,
              "filename": "code/es-modules/Series/Bellcurve/BellcurveSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillOpacity": {
            "doclet": {
              "see": [
                "[color](#plotOptions.bellcurve.color)",
                "[fillColor](#plotOptions.bellcurve.fillColor)"
              ],
              "defaultByProduct": { "highcharts": "0.75", "highstock": "0.75" }
            },
            "meta": {
              "fullname": "plotOptions.bellcurve.fillOpacity",
              "name": "fillOpacity",
              "line": 48,
              "lineEnd": 55,
              "filename": "code/es-modules/Series/Bellcurve/BellcurveSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "intervals": {
            "doclet": {
              "description": "This option allows to define the length of the bell curve. A unit of\nthe length of the bell curve is standard deviation.",
              "samples": [
                {
                  "name": "Intervals and points in interval",
                  "value": "highcharts/plotoptions/bellcurve-intervals-pointsininterval"
                }
              ],
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 3
            },
            "meta": {
              "fullname": "plotOptions.bellcurve.intervals",
              "name": "intervals",
              "line": 36,
              "lineEnd": 41,
              "column": 4,
              "filename": "code/es-modules/Series/Bellcurve/BellcurveSeriesDefaults.js",
              "default": 3
            },
            "children": {},
            "extended": 1
          },
          "marker": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.areaspline.marker"
            },
            "meta": {
              "fullname": "plotOptions.bellcurve.marker",
              "name": "marker",
              "line": 72,
              "lineEnd": 72,
              "column": 4,
              "filename": "code/es-modules/Series/Bellcurve/BellcurveSeriesDefaults.js"
            },
            "children": {
              "enabled": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.bellcurve.marker.enabled",
                  "name": "enabled",
                  "line": 73,
                  "lineEnd": 73,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bellcurve/BellcurveSeriesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "enabledThreshold": {},
              "fillColor": {},
              "height": {},
              "lineColor": {},
              "lineWidth": {},
              "radius": {},
              "states": {},
              "symbol": {},
              "width": {}
            },
            "extended": 1
          },
          "pointsInInterval": {
            "doclet": {
              "description": "Defines how many points should be plotted within 1 interval. See\n`plotOptions.bellcurve.intervals`.",
              "samples": [
                {
                  "name": "Intervals and points in interval",
                  "value": "highcharts/plotoptions/bellcurve-intervals-pointsininterval"
                }
              ],
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 3
            },
            "meta": {
              "fullname": "plotOptions.bellcurve.pointsInInterval",
              "name": "pointsInInterval",
              "line": 64,
              "lineEnd": 70,
              "column": 4,
              "filename": "code/es-modules/Series/Bellcurve/BellcurveSeriesDefaults.js",
              "default": 3
            },
            "children": {},
            "extended": 1
          },
          "legendSymbol": {},
          "lineColor": {},
          "negativeFillColor": {},
          "threshold": {},
          "trackByArea": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "states": {},
          "stickyTracking": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "boxplot": {
        "doclet": {
          "description": "A box plot is a convenient way of depicting groups of data through their\nfive-number summaries: the smallest observation (sample minimum), lower\nquartile (Q1), median (Q2), upper quartile (Q3), and largest observation\n(sample maximum).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `boxplot` series are defined in\n   [plotOptions.boxplot](plotOptions.boxplot).\n3. Options for one single series are given in\n   [the series instance array](series.boxplot).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        boxplot: {\n            // shared options for all boxplot series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'boxplot'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.boxplot.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === boxplot) {\n    // code specific to the boxplot series\n}\n```\n            ",
          "samples": [
            { "name": "Box plot", "value": "highcharts/demo/box-plot/" },
            {
              "name": "Box plot in styled mode",
              "value": "highcharts/css/boxplot/",
              "products": ["highcharts"]
            },
            {
              "name": "Jittered scatter plot on top of a box plot",
              "value": "highcharts/series-scatter/jitter-boxplot",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.column",
          "exclude": [
            "borderColor",
            "borderRadius",
            "borderWidth",
            "groupZPadding",
            "states",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
          "name": "boxplot",
          "fullname": "plotOptions.boxplot",
          "line": 11,
          "lineEnd": 15,
          "column": 0
        },
        "children": {
          "boxDashStyle": {
            "doclet": {
              "description": "The dash style of the box.",
              "samples": [
                {
                  "name": "Box plot styling",
                  "value": "highcharts/plotoptions/box-plot-styling/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Box plot in styled mode",
                  "value": "highcharts/css/boxplot/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.DashStyleValue"] },
              "defaultvalue": "Solid",
              "since": "8.1.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.boxplot.boxDashStyle",
              "name": "boxDashStyle",
              "line": 158,
              "lineEnd": 171,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "colorKey": {
            "doclet": {
              "defaultvalue": "high",
              "type": { "names": ["string"] }
            },
            "meta": {
              "fullname": "plotOptions.boxplot.colorKey",
              "name": "colorKey",
              "line": 237,
              "lineEnd": 240,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "dragDrop": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.dragDrop"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "plotOptions.boxplot.dragDrop",
              "line": 0,
              "lineEnd": 0,
              "name": "dragDrop"
            },
            "children": {
              "draggableHigh": {
                "doclet": {
                  "description": "Allow high value to be dragged individually.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "requires": ["module:modules/draggable-points"]
                },
                "meta": {
                  "fullname": "plotOptions.boxplot.dragDrop.draggableHigh",
                  "name": "draggableHigh",
                  "line": 183,
                  "lineEnd": 190,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropProps.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "draggableLow": {
                "doclet": {
                  "description": "Allow low value to be dragged individually.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "requires": ["module:modules/draggable-points"]
                },
                "meta": {
                  "fullname": "plotOptions.boxplot.dragDrop.draggableLow",
                  "name": "draggableLow",
                  "line": 114,
                  "lineEnd": 121,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropProps.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "draggableQ1": {
                "doclet": {
                  "description": "Allow Q1 value to be dragged individually.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "requires": ["module:modules/draggable-points"]
                },
                "meta": {
                  "fullname": "plotOptions.boxplot.dragDrop.draggableQ1",
                  "name": "draggableQ1",
                  "line": 135,
                  "lineEnd": 142,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropProps.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "draggableQ3": {
                "doclet": {
                  "description": "Allow Q3 value to be dragged individually.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "requires": ["module:modules/draggable-points"]
                },
                "meta": {
                  "fullname": "plotOptions.boxplot.dragDrop.draggableQ3",
                  "name": "draggableQ3",
                  "line": 162,
                  "lineEnd": 169,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropProps.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dragHandle": {},
              "dragMaxX": {},
              "dragMaxY": {},
              "dragMinX": {},
              "dragMinY": {},
              "dragPrecisionX": {},
              "dragPrecisionY": {},
              "dragSensitivity": {},
              "draggableX": {},
              "draggableY": {},
              "groupBy": {},
              "guideBox": {},
              "liveRedraw": {}
            },
            "extended": 1
          },
          "fillColor": {
            "doclet": {
              "description": "The fill color of the box.\n\nIn styled mode, the fill color can be set with the\n`.highcharts-boxplot-box` class.",
              "samples": [
                {
                  "name": "Box plot styling",
                  "value": "highcharts/plotoptions/box-plot-styling/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "defaultvalue": "#ffffff",
              "since": "3.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.boxplot.fillColor",
              "name": "fillColor",
              "line": 63,
              "lineEnd": 76,
              "column": 4,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "default": "#ffffff"
            },
            "children": {},
            "extended": 1
          },
          "lineWidth": {
            "doclet": {
              "description": "The width of the line surrounding the box. If any of\n[stemWidth](#plotOptions.boxplot.stemWidth),\n[medianWidth](#plotOptions.boxplot.medianWidth)\nor [whiskerWidth](#plotOptions.boxplot.whiskerWidth) are `null`,\nthe lineWidth also applies to these lines.",
              "samples": [
                {
                  "name": "Box plot styling",
                  "value": "highcharts/plotoptions/box-plot-styling/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Error bar styling",
                  "value": "highcharts/plotoptions/error-bar-styling/",
                  "products": ["highcharts"]
                }
              ],
              "since": "3.0.0",
              "products": ["highcharts"],
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "plotOptions.boxplot.lineWidth",
              "name": "lineWidth",
              "line": 78,
              "lineEnd": 92,
              "column": 4,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "medianColor": {
            "doclet": {
              "description": "The color of the median line. If `undefined`, the general series\ncolor applies.\n\nIn styled mode, the median stroke width can be set with the\n`.highcharts-boxplot-median` class.",
              "samples": [
                {
                  "name": "Box plot styling",
                  "value": "highcharts/plotoptions/box-plot-styling/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Box plot in styled mode",
                  "value": "highcharts/css/boxplot/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Error bar styling",
                  "value": "highcharts/plotoptions/error-bar-styling/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject"
                ]
              },
              "since": "3.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.boxplot.medianColor",
              "name": "medianColor",
              "line": 94,
              "lineEnd": 112,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "medianDashStyle": {
            "doclet": {
              "description": "The dash style of the median.",
              "samples": [
                {
                  "name": "Box plot styling",
                  "value": "highcharts/plotoptions/box-plot-styling/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Box plot in styled mode",
                  "value": "highcharts/css/boxplot/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.DashStyleValue"] },
              "defaultvalue": "Solid",
              "since": "8.1.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.boxplot.medianDashStyle",
              "name": "medianDashStyle",
              "line": 172,
              "lineEnd": 185,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "medianWidth": {
            "doclet": {
              "description": "The pixel width of the median line. If `null`, the\n[lineWidth](#plotOptions.boxplot.lineWidth) is used.\n\nIn styled mode, the median stroke width can be set with the\n`.highcharts-boxplot-median` class.",
              "samples": [
                {
                  "name": "Box plot styling",
                  "value": "highcharts/plotoptions/box-plot-styling/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Box plot in styled mode",
                  "value": "highcharts/css/boxplot/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "null"] },
              "since": "3.0.0",
              "products": ["highcharts"],
              "defaultvalue": 2
            },
            "meta": {
              "fullname": "plotOptions.boxplot.medianWidth",
              "name": "medianWidth",
              "line": 94,
              "lineEnd": 112,
              "column": 4,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "default": 2
            },
            "children": {},
            "extended": 1
          },
          "stemColor": {
            "doclet": {
              "description": "The color of the stem, the vertical line extending from the box to\nthe whiskers. If `undefined`, the series color is used.\n\nIn styled mode, the stem stroke can be set with the\n`.highcharts-boxplot-stem` class.",
              "samples": [
                {
                  "name": "Box plot styling",
                  "value": "highcharts/plotoptions/box-plot-styling/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Box plot in styled mode",
                  "value": "highcharts/css/boxplot/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Error bar styling",
                  "value": "highcharts/plotoptions/error-bar-styling/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "3.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.boxplot.stemColor",
              "name": "stemColor",
              "line": 139,
              "lineEnd": 157,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "stemDashStyle": {
            "doclet": {
              "description": "The dash style of the stem, the vertical line extending from the\nbox to the whiskers.",
              "samples": [
                {
                  "name": "Box plot styling",
                  "value": "highcharts/plotoptions/box-plot-styling/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Box plot in styled mode",
                  "value": "highcharts/css/boxplot/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Error bar styling",
                  "value": "highcharts/plotoptions/error-bar-styling/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.DashStyleValue"] },
              "defaultvalue": "Solid",
              "since": "3.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.boxplot.stemDashStyle",
              "name": "stemDashStyle",
              "line": 186,
              "lineEnd": 202,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "stemWidth": {
            "doclet": {
              "description": "The width of the stem, the vertical line extending from the box to\nthe whiskers. If `undefined`, the width is inherited from the\n[lineWidth](#plotOptions.boxplot.lineWidth) option.\n\nIn styled mode, the stem stroke width can be set with the\n`.highcharts-boxplot-stem` class.",
              "samples": [
                {
                  "name": "Box plot styling",
                  "value": "highcharts/plotoptions/box-plot-styling/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Box plot in styled mode",
                  "value": "highcharts/css/boxplot/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Error bar styling",
                  "value": "highcharts/plotoptions/error-bar-styling/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "3.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.boxplot.stemWidth",
              "name": "stemWidth",
              "line": 217,
              "lineEnd": 236,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "threshold": {
            "doclet": {
              "type": { "names": ["number", "null"] },
              "defaultvalue": null
            },
            "meta": {
              "fullname": "plotOptions.boxplot.threshold",
              "name": "threshold",
              "line": 37,
              "lineEnd": 39,
              "column": 4,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "default": null
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.boxplot.tooltip",
              "name": "tooltip",
              "line": 41,
              "lineEnd": 41,
              "column": 4,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js"
            },
            "children": {
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "<span style=\"color:{point.color}\">●</span> <b>{series.name}</b><br/>Maximum: {point.high}<br/>Upper quartile: {point.q3}<br/>Median: {point.median}<br/>Lower quartile: {point.q1}<br/>Minimum: {point.low}<br/>"
                },
                "meta": {
                  "fullname": "plotOptions.boxplot.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 42,
                  "lineEnd": 42,
                  "column": 8,
                  "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
                  "default": "<span style=\"color:{point.color}\">●</span> <b>{series.name}</b><br/>Maximum: {point.high}<br/>Upper quartile: {point.q3}<br/>Median: {point.median}<br/>Lower quartile: {point.q1}<br/>Minimum: {point.low}<br/>"
                },
                "children": {},
                "extended": 1
              },
              "distance": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "headerFormat": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "whiskerColor": {
            "doclet": {
              "description": "The color of the whiskers, the horizontal lines marking low and high\nvalues. When `undefined`, the general series color is used.\n\nIn styled mode, the whisker stroke can be set with the\n`.highcharts-boxplot-whisker` class .",
              "samples": [
                {
                  "name": "Box plot styling",
                  "value": "highcharts/plotoptions/box-plot-styling/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Box plot in styled mode",
                  "value": "highcharts/css/boxplot/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "3.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.boxplot.whiskerColor",
              "name": "whiskerColor",
              "line": 241,
              "lineEnd": 257,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "whiskerDashStyle": {
            "doclet": {
              "description": "The dash style of the whiskers.",
              "samples": [
                {
                  "name": "Box plot styling",
                  "value": "highcharts/plotoptions/box-plot-styling/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Box plot in styled mode",
                  "value": "highcharts/css/boxplot/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.DashStyleValue"] },
              "defaultvalue": "Solid",
              "since": "8.1.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.boxplot.whiskerDashStyle",
              "name": "whiskerDashStyle",
              "line": 203,
              "lineEnd": 216,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "whiskerLength": {
            "doclet": {
              "description": "The length of the whiskers, the horizontal lines marking low and\nhigh values. It can be a numerical pixel value, or a percentage\nvalue of the box width. Set `0` to disable whiskers.",
              "samples": [
                {
                  "name": "Box plot styling",
                  "value": "highcharts/plotoptions/box-plot-styling/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "string"] },
              "since": "3.0.0",
              "products": ["highcharts"],
              "defaultvalue": "50%"
            },
            "meta": {
              "fullname": "plotOptions.boxplot.whiskerLength",
              "name": "whiskerLength",
              "line": 50,
              "lineEnd": 61,
              "column": 4,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "default": "50%"
            },
            "children": {},
            "extended": 1
          },
          "whiskerWidth": {
            "doclet": {
              "description": "The line width of the whiskers, the horizontal lines marking low and\nhigh values. When `undefined`, the general\n[lineWidth](#plotOptions.boxplot.lineWidth) applies.\n\nIn styled mode, the whisker stroke width can be set with the\n`.highcharts-boxplot-whisker` class.",
              "samples": [
                {
                  "name": "Box plot styling",
                  "value": "highcharts/plotoptions/box-plot-styling/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Box plot in styled mode",
                  "value": "highcharts/css/boxplot/",
                  "products": ["highcharts"]
                }
              ],
              "since": "3.0.0",
              "products": ["highcharts"],
              "type": { "names": ["number"] },
              "defaultvalue": 2
            },
            "meta": {
              "fullname": "plotOptions.boxplot.whiskerWidth",
              "name": "whiskerWidth",
              "line": 130,
              "lineEnd": 138,
              "column": 4,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "default": 2
            },
            "children": {},
            "extended": 1
          },
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "bubble": {
        "doclet": {
          "description": "A bubble series is a three dimensional series type where each point\nrenders an X, Y and Z value. Each points is drawn as a bubble where the\nposition along the X and Y axes mark the X and Y values, and the size of\nthe bubble relates to the Z value.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `bubble` series are defined in\n   [plotOptions.bubble](plotOptions.bubble).\n3. Options for one single series are given in\n   [the series instance array](series.bubble).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        bubble: {\n            // shared options for all bubble series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'bubble'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.bubble.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === bubble) {\n    // code specific to the bubble series\n}\n```\n            ",
          "samples": [
            {
              "name": "Bubble chart",
              "value": "highcharts/demo/bubble/",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.scatter",
          "exclude": ["cluster"],
          "products": ["highcharts", "highstock"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
          "name": "bubble",
          "fullname": "plotOptions.bubble",
          "line": 353,
          "lineEnd": 357,
          "column": 0
        },
        "children": {
          "animationLimit": {
            "doclet": {
              "description": "If there are more points in the series than the `animationLimit`, the\nanimation won't run. Animation affects overall performance and\ndoesn't work well with heavy data series.",
              "since": "6.1.0",
              "type": { "names": ["number"] },
              "defaultvalue": 250
            },
            "meta": {
              "fullname": "plotOptions.bubble.animationLimit",
              "name": "animationLimit",
              "line": 383,
              "lineEnd": 389,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "default": 250
            },
            "children": {},
            "extended": 1
          },
          "colorKey": {
            "doclet": { "defaultvalue": "z", "type": { "names": ["string"] } },
            "meta": {
              "fullname": "plotOptions.bubble.colorKey",
              "name": "colorKey",
              "line": 560,
              "lineEnd": 563,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.bubble.dataLabels",
              "name": "dataLabels",
              "line": 374,
              "lineEnd": 374,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js"
            },
            "children": {
              "inside": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.bubble.dataLabels.inside",
                  "name": "inside",
                  "line": 380,
                  "lineEnd": 380,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "middle"
                },
                "meta": {
                  "fullname": "plotOptions.bubble.dataLabels.verticalAlign",
                  "name": "verticalAlign",
                  "line": 381,
                  "lineEnd": 381,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
                  "default": "middle"
                },
                "children": {},
                "extended": 1
              },
              "align": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "crop": {},
              "defer": {},
              "enabled": {},
              "filter": {},
              "format": {},
              "formatter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "style": {},
              "textPath": {},
              "useHTML": {},
              "x": {},
              "y": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "displayNegative": {
            "doclet": {
              "description": "Whether to display negative sized bubbles. The threshold is given\nby the [zThreshold](#plotOptions.bubble.zThreshold) option, and negative\nbubbles can be visualized by setting\n[negativeColor](#plotOptions.bubble.negativeColor).",
              "samples": [
                {
                  "name": "Negative bubbles",
                  "value": "highcharts/plotoptions/bubble-negative/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "true",
              "since": "3.0.0"
            },
            "meta": {
              "fullname": "plotOptions.bubble.displayNegative",
              "name": "displayNegative",
              "line": 391,
              "lineEnd": 404,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "marker": {
            "doclet": {
              "extends": "plotOptions.series.marker",
              "exclude": [
                "enabled",
                "enabledThreshold",
                "height",
                "radius",
                "width"
              ]
            },
            "meta": {
              "fullname": "plotOptions.bubble.marker",
              "name": "marker",
              "line": 391,
              "lineEnd": 404,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js"
            },
            "children": {
              "fillOpacity": {
                "doclet": {
                  "description": "The fill opacity of the bubble markers.",
                  "type": { "names": ["number"] },
                  "defaultvalue": 0.5
                },
                "meta": {
                  "fullname": "plotOptions.bubble.marker.fillOpacity",
                  "name": "fillOpacity",
                  "line": 412,
                  "lineEnd": 414,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
                  "default": 0.5
                },
                "children": {},
                "extended": 1
              },
              "lineColor": {
                "doclet": { "type": { "names": ["*"] }, "defaultvalue": null },
                "meta": {
                  "fullname": "plotOptions.bubble.marker.lineColor",
                  "name": "lineColor",
                  "line": 410,
                  "lineEnd": 410,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
                  "default": null
                },
                "children": {},
                "extended": 1
              },
              "lineWidth": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 1
                },
                "meta": {
                  "fullname": "plotOptions.bubble.marker.lineWidth",
                  "name": "lineWidth",
                  "line": 410,
                  "lineEnd": 410,
                  "column": 25,
                  "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
                  "default": 1
                },
                "children": {},
                "extended": 1
              },
              "states": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.series.marker.states"
                },
                "meta": {
                  "fullname": "plotOptions.bubble.marker.states",
                  "name": "states",
                  "line": 423,
                  "lineEnd": 423,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleSeries.js"
                },
                "children": {
                  "hover": {
                    "doclet": {
                      "type": { "names": ["*"] },
                      "extends": "plotOptions.series.marker.states.hover"
                    },
                    "meta": {
                      "fullname": "plotOptions.bubble.marker.states.hover",
                      "name": "hover",
                      "line": 424,
                      "lineEnd": 424,
                      "column": 12,
                      "filename": "code/es-modules/Series/Bubble/BubbleSeries.js"
                    },
                    "children": {
                      "radiusPlus": {
                        "doclet": {
                          "type": { "names": ["number"] },
                          "defaultvalue": 0
                        },
                        "meta": {
                          "fullname": "plotOptions.bubble.marker.states.hover.radiusPlus",
                          "name": "radiusPlus",
                          "line": 425,
                          "lineEnd": 425,
                          "column": 16,
                          "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
                          "default": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "animation": {},
                      "enabled": {},
                      "fillColor": {},
                      "lineColor": {},
                      "lineWidth": {},
                      "lineWidthPlus": {},
                      "radius": {}
                    },
                    "extended": 1
                  },
                  "normal": {},
                  "select": {}
                },
                "extended": 1
              },
              "symbol": {
                "doclet": {
                  "description": "A predefined shape or symbol for the marker. Possible values are\n\"circle\", \"square\", \"diamond\", \"triangle\" and \"triangle-down\".\n\nAdditionally, the URL to a graphic can be given on the form\n`url(graphic.png)`. Note that for the image to be applied to\nexported charts, its URL needs to be accessible by the export\nserver.\n\nCustom callbacks for symbol path generation can also be added to\n`Highcharts.SVGRenderer.prototype.symbols`. The callback is then\nused by its method name, as shown in the demo.",
                  "samples": [
                    {
                      "name": "Bubble chart with various symbols",
                      "value": "highcharts/plotoptions/bubble-symbol/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "General chart with predefined, graphic and custom markers",
                      "value": "highcharts/plotoptions/series-marker-symbol/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["Highcharts.SymbolKeyValue", "string"] },
                  "since": "5.0.11",
                  "defaultvalue": "circle"
                },
                "meta": {
                  "fullname": "plotOptions.bubble.marker.symbol",
                  "name": "symbol",
                  "line": 428,
                  "lineEnd": 448,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
                  "default": "circle"
                },
                "children": {},
                "extended": 1
              },
              "fillColor": {}
            },
            "extended": 1
          },
          "maxSize": {
            "doclet": {
              "description": "Maximum bubble size. Bubbles will automatically size between the\n`minSize` and `maxSize` to reflect the `z` value of each bubble.\nCan be either pixels (when no unit is given), or a percentage of\nthe smallest one of the plot width and height.",
              "samples": [
                {
                  "name": "Bubble size",
                  "value": "highcharts/plotoptions/bubble-size/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "string"] },
              "since": "3.0.0",
              "products": ["highcharts", "highstock"],
              "defaultvalue": "20%"
            },
            "meta": {
              "fullname": "plotOptions.bubble.maxSize",
              "name": "maxSize",
              "line": 465,
              "lineEnd": 477,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "default": "20%"
            },
            "children": {},
            "extended": 1
          },
          "minSize": {
            "doclet": {
              "description": "Minimum bubble size. Bubbles will automatically size between the\n`minSize` and `maxSize` to reflect the `z` value of each bubble.\nCan be either pixels (when no unit is given), or a percentage of\nthe smallest one of the plot width and height.",
              "samples": [
                {
                  "name": "Bubble size",
                  "value": "highcharts/plotoptions/bubble-size/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "string"] },
              "since": "3.0.0",
              "products": ["highcharts", "highstock"],
              "defaultvalue": 8
            },
            "meta": {
              "fullname": "plotOptions.bubble.minSize",
              "name": "minSize",
              "line": 451,
              "lineEnd": 463,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "default": 8
            },
            "children": {},
            "extended": 1
          },
          "negativeColor": {
            "doclet": {
              "description": "When a point's Z value is below the\n[zThreshold](#plotOptions.bubble.zThreshold)\nsetting, this color is used.",
              "samples": [
                {
                  "name": "Negative bubbles",
                  "value": "highcharts/plotoptions/bubble-negative/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "3.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.bubble.negativeColor",
              "name": "negativeColor",
              "line": 479,
              "lineEnd": 491,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "sizeBy": {
            "doclet": {
              "description": "Whether the bubble's value should be represented by the area or the\nwidth of the bubble. The default, `area`, corresponds best to the\nhuman perception of the size of each bubble.",
              "samples": [
                {
                  "name": "Comparison of area and size",
                  "value": "highcharts/plotoptions/bubble-sizeby/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.BubbleSizeByValue"] },
              "defaultvalue": "area",
              "since": "3.0.7"
            },
            "meta": {
              "fullname": "plotOptions.bubble.sizeBy",
              "name": "sizeBy",
              "line": 492,
              "lineEnd": 504,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "sizeByAbsoluteValue": {
            "doclet": {
              "description": "When this is true, the absolute value of z determines the size of\nthe bubble. This means that with the default `zThreshold` of 0, a\nbubble of value -1 will have the same size as a bubble of value 1,\nwhile a bubble of value 0 will have a smaller size according to\n`minSize`.",
              "samples": [
                {
                  "name": "Size by absolute value, various thresholds",
                  "value": "highcharts/plotoptions/bubble-sizebyabsolutevalue/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "false",
              "since": "4.1.9",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.bubble.sizeByAbsoluteValue",
              "name": "sizeByAbsoluteValue",
              "line": 505,
              "lineEnd": 520,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "softThreshold": {
            "doclet": {
              "description": "When this is true, the series will not cause the Y axis to cross\nthe zero plane (or [threshold](#plotOptions.series.threshold) option)\nunless the data actually crosses the plane.\n\nFor example, if `softThreshold` is `false`, a series of 0, 1, 2,\n3 will make the Y axis show negative values according to the\n`minPadding` option. If `softThreshold` is `true`, the Y axis starts\nat 0.",
              "since": "4.1.9",
              "products": ["highcharts"],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.bubble.softThreshold",
              "name": "softThreshold",
              "line": 479,
              "lineEnd": 491,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.states"
            },
            "meta": {
              "fullname": "plotOptions.bubble.states",
              "name": "states",
              "line": 535,
              "lineEnd": 535,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js"
            },
            "children": {
              "hover": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.series.states.hover"
                },
                "meta": {
                  "fullname": "plotOptions.bubble.states.hover",
                  "name": "hover",
                  "line": 536,
                  "lineEnd": 536,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleSeries.js"
                },
                "children": {
                  "halo": {
                    "doclet": {
                      "type": { "names": ["*"] },
                      "extends": "plotOptions.series.states.hover.halo"
                    },
                    "meta": {
                      "fullname": "plotOptions.bubble.states.hover.halo",
                      "name": "halo",
                      "line": 537,
                      "lineEnd": 537,
                      "column": 12,
                      "filename": "code/es-modules/Series/Bubble/BubbleSeries.js"
                    },
                    "children": {
                      "size": {
                        "doclet": {
                          "type": { "names": ["number"] },
                          "defaultvalue": 5
                        },
                        "meta": {
                          "fullname": "plotOptions.bubble.states.hover.halo.size",
                          "name": "size",
                          "line": 538,
                          "lineEnd": 538,
                          "column": 16,
                          "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
                          "default": 5
                        },
                        "children": {},
                        "extended": 1
                      },
                      "attributes": {},
                      "opacity": {}
                    },
                    "extended": 1
                  },
                  "animation": {},
                  "enabled": {},
                  "lineWidth": {},
                  "lineWidthPlus": {},
                  "marker": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {},
              "select": {}
            },
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.bubble.tooltip",
              "name": "tooltip",
              "line": 542,
              "lineEnd": 542,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js"
            },
            "children": {
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "({point.x}, {point.y}), Size: {point.z}"
                },
                "meta": {
                  "fullname": "plotOptions.bubble.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 543,
                  "lineEnd": 543,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
                  "default": "({point.x}, {point.y}), Size: {point.z}"
                },
                "children": {},
                "extended": 1
              },
              "headerFormat": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "distance": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "turboThreshold": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0 },
            "meta": {
              "fullname": "plotOptions.bubble.turboThreshold",
              "name": "turboThreshold",
              "line": 545,
              "lineEnd": 545,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "zMax": {
            "doclet": {
              "description": "The minimum for the Z value range. Defaults to the highest Z value\nin the data.",
              "see": ["[zMin](#plotOptions.bubble.zMin)"],
              "samples": [
                {
                  "name": "Z has a possible range of 0-100",
                  "value": "highcharts/plotoptions/bubble-zmin-zmax/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "4.0.3",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.bubble.zMax",
              "name": "zMax",
              "line": 546,
              "lineEnd": 559,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "zMin": {
            "doclet": {
              "description": "The minimum for the Z value range. Defaults to the lowest Z value\nin the data.",
              "see": ["[zMax](#plotOptions.bubble.zMax)"],
              "samples": [
                {
                  "name": "Z has a possible range of 0-100",
                  "value": "highcharts/plotoptions/bubble-zmin-zmax/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "4.0.3",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.bubble.zMin",
              "name": "zMin",
              "line": 564,
              "lineEnd": 577,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "zThreshold": {
            "doclet": {
              "description": "When [displayNegative](#plotOptions.bubble.displayNegative) is `false`,\nbubbles with lower Z values are skipped. When `displayNegative`\nis `true` and a [negativeColor](#plotOptions.bubble.negativeColor)\nis given, points with lower Z is colored.",
              "samples": [
                {
                  "name": "Negative bubbles",
                  "value": "highcharts/plotoptions/bubble-negative/",
                  "products": ["highcharts"]
                }
              ],
              "since": "3.0.0",
              "products": ["highcharts"],
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "plotOptions.bubble.zThreshold",
              "name": "zThreshold",
              "line": 546,
              "lineEnd": 559,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "zoneAxis": {
            "doclet": { "type": { "names": ["string"] }, "defaultvalue": "z" },
            "meta": {
              "fullname": "plotOptions.bubble.zoneAxis",
              "name": "zoneAxis",
              "line": 591,
              "lineEnd": 591,
              "column": 4,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "default": "z"
            },
            "children": {},
            "extended": 1
          },
          "findNearestPointBy": {},
          "jitter": {},
          "lineWidth": {},
          "stickyTracking": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "stacking": {},
          "step": {},
          "threshold": {},
          "visible": {},
          "zones": {}
        },
        "extended": 1
      },
      "bullet": {
        "doclet": {
          "description": "A bullet graph is a variation of a bar graph. The bullet graph features\na single measure, compares it to a target, and displays it in the context\nof qualitative ranges of performance that could be set using\n[plotBands](#yAxis.plotBands) on [yAxis](#yAxis).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `bullet` series are defined in\n   [plotOptions.bullet](plotOptions.bullet).\n3. Options for one single series are given in\n   [the series instance array](series.bullet).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        bullet: {\n            // shared options for all bullet series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'bullet'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.bullet.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === bullet) {\n    // code specific to the bullet series\n}\n```\n            ",
          "samples": [
            {
              "name": "Bullet graph",
              "value": "highcharts/demo/bullet-graph/",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.column",
          "since": "6.0.0",
          "products": ["highcharts"],
          "exclude": [
            "allAreas",
            "boostThreshold",
            "colorAxis",
            "compare",
            "compareBase",
            "dataSorting",
            "boostBlending"
          ],
          "requires": ["module:modules/bullet"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js",
          "name": "bullet",
          "fullname": "plotOptions.bullet",
          "line": 11,
          "lineEnd": 27,
          "column": 0
        },
        "children": {
          "dragDrop": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.dragDrop"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "plotOptions.bullet.dragDrop",
              "line": 0,
              "lineEnd": 0,
              "name": "dragDrop"
            },
            "children": {
              "draggableTarget": {
                "doclet": {
                  "description": "Allow target value to be dragged individually.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "requires": ["module:modules/draggable-points"]
                },
                "meta": {
                  "fullname": "plotOptions.bullet.dragDrop.draggableTarget",
                  "name": "draggableTarget",
                  "line": 225,
                  "lineEnd": 232,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropProps.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dragHandle": {},
              "dragMaxX": {},
              "dragMaxY": {},
              "dragMinX": {},
              "dragMinY": {},
              "dragPrecisionX": {},
              "dragPrecisionY": {},
              "dragSensitivity": {},
              "draggableX": {},
              "draggableY": {},
              "groupBy": {},
              "guideBox": {},
              "liveRedraw": {}
            },
            "extended": 1
          },
          "targetOptions": {
            "doclet": {
              "description": "All options related with look and positioning of targets.",
              "since": "6.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.bullet.targetOptions",
              "name": "targetOptions",
              "line": 29,
              "lineEnd": 33,
              "column": 4,
              "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js"
            },
            "children": {
              "borderColor": {
                "doclet": {
                  "description": "The border color of the rectangle representing the target. When\nnot set, the point's border color is used.\n\nIn styled mode, use class `highcharts-bullet-target` instead.",
                  "type": { "names": ["Highcharts.ColorString"] },
                  "since": "6.0.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.bullet.targetOptions.borderColor",
                  "name": "borderColor",
                  "line": 49,
                  "lineEnd": 59,
                  "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "borderRadius": {
                "doclet": {
                  "description": "The border radius of the rectangle representing the target.",
                  "since": "6.0.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.bullet.targetOptions.borderRadius",
                  "name": "borderRadius",
                  "line": 83,
                  "lineEnd": 85,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "borderWidth": {
                "doclet": {
                  "description": "The border width of the rectangle representing the target.\n\nIn styled mode, use class `highcharts-bullet-target` instead.",
                  "since": "6.0.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.bullet.targetOptions.borderWidth",
                  "name": "borderWidth",
                  "line": 49,
                  "lineEnd": 59,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "color": {
                "doclet": {
                  "description": "The color of the rectangle representing the target. When not set,\npoint's color (if set in point's options -\n[`color`](#series.bullet.data.color)) or zone of the target value\n(if [`zones`](#plotOptions.bullet.zones) or\n[`negativeColor`](#plotOptions.bullet.negativeColor) are set)\nor the same color as the point has is used.\n\nIn styled mode, use class `highcharts-bullet-target` instead.",
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "since": "6.0.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.bullet.targetOptions.color",
                  "name": "color",
                  "line": 60,
                  "lineEnd": 74,
                  "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "height": {
                "doclet": {
                  "description": "The height of the rectangle representing the target.",
                  "since": "6.0.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 3
                },
                "meta": {
                  "fullname": "plotOptions.bullet.targetOptions.height",
                  "name": "height",
                  "line": 43,
                  "lineEnd": 47,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js",
                  "default": 3
                },
                "children": {},
                "extended": 1
              },
              "width": {
                "doclet": {
                  "description": "The width of the rectangle representing the target. Could be set\nas a pixel value or as a percentage of a column width.",
                  "type": { "names": ["number", "string"] },
                  "since": "6.0.0",
                  "defaultvalue": "140%"
                },
                "meta": {
                  "fullname": "plotOptions.bullet.targetOptions.width",
                  "name": "width",
                  "line": 35,
                  "lineEnd": 41,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js",
                  "default": "140%"
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.bullet.tooltip",
              "name": "tooltip",
              "line": 88,
              "lineEnd": 88,
              "column": 4,
              "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js"
            },
            "children": {
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "<span style=\"color:{series.color}\">●</span> {series.name}: <b>{point.y}</b>. Target: <b>{point.target}</b><br/>"
                },
                "meta": {
                  "fullname": "plotOptions.bullet.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 89,
                  "lineEnd": 89,
                  "column": 8,
                  "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js",
                  "default": "<span style=\"color:{series.color}\">●</span> {series.name}: <b>{point.y}</b>. Target: <b>{point.target}</b><br/>"
                },
                "children": {},
                "extended": 1
              },
              "distance": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "headerFormat": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "column": {
        "doclet": {
          "description": "Column series display one column per value along an X axis.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `column` series are defined in\n   [plotOptions.column](plotOptions.column).\n3. Options for one single series are given in\n   [the series instance array](series.column).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        column: {\n            // shared options for all column series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'column'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.column.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === column) {\n    // code specific to the column series\n}\n```\n            ",
          "samples": [
            {
              "name": "Column chart",
              "value": "highcharts/demo/column-basic/",
              "products": ["highcharts"]
            },
            {
              "name": "Column chart",
              "value": "stock/demo/column/",
              "products": ["highstock"]
            }
          ],
          "extends": "plotOptions.line",
          "exclude": [
            "connectEnds",
            "connectNulls",
            "gapSize",
            "gapUnit",
            "linecap",
            "lineWidth",
            "marker",
            "step",
            "useOhlcData"
          ],
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
          "name": "column",
          "fullname": "plotOptions.column",
          "line": 11,
          "lineEnd": 15,
          "column": 0
        },
        "children": {
          "borderColor": {
            "doclet": {
              "description": "The color of the border surrounding each column or bar.\n\nIn styled mode, the border stroke can be set with the\n`.highcharts-point` rule.",
              "samples": [
                {
                  "name": "Dark gray border",
                  "value": "highcharts/plotoptions/column-bordercolor/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "defaultvalue": "#ffffff",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "plotOptions.column.borderColor",
              "name": "borderColor",
              "line": 330,
              "lineEnd": 345,
              "column": 4,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "default": "#ffffff"
            },
            "children": {},
            "extended": 1
          },
          "borderRadius": {
            "doclet": {
              "description": "The corner radius of the border surrounding each column or bar. A number\nsignifies pixels. A percentage string, like for example `50%`, signifies\na relative size. For columns this is relative to the column width, for\npies it is relative to the radius and the inner radius.",
              "samples": [
                {
                  "name": "Rounded columns",
                  "value": "highcharts/plotoptions/column-borderradius/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Column and pie with rounded border",
                  "value": "highcharts/plotoptions/series-border-radius"
                }
              ],
              "type": {
                "names": [
                  "number",
                  "string",
                  "Highcharts.BorderRadiusOptionsObject"
                ]
              },
              "products": ["highcharts", "highstock", "gantt"],
              "defaultvalue": 3
            },
            "meta": {
              "fullname": "plotOptions.column.borderRadius",
              "name": "borderRadius",
              "line": 31,
              "lineEnd": 44,
              "column": 4,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "default": 3
            },
            "children": {},
            "extended": 1
          },
          "borderWidth": {
            "doclet": {
              "description": "The width of the border surrounding each column or bar. Defaults to\n`1` when there is room for a border, but to `0` when the columns are\nso dense that a border would cover the next column.\n\nIn styled mode, the stroke width can be set with the\n`.highcharts-point` rule.",
              "samples": [
                {
                  "name": "2px black border",
                  "value": "highcharts/plotoptions/column-borderwidth/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "undefined",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "plotOptions.column.borderWidth",
              "name": "borderWidth",
              "line": 330,
              "lineEnd": 345,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "centerInCategory": {
            "doclet": {
              "description": "When `true`, the columns will center in the category, ignoring null\nor missing points. When `false`, space will be reserved for null or\nmissing points.",
              "samples": [
                {
                  "name": "Center in category",
                  "value": "highcharts/series-column/centerincategory/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Center in category, stacked and grouped",
                  "value": "highcharts/series/stack-centerincategory/",
                  "products": ["highcharts"]
                }
              ],
              "since": "8.0.1",
              "products": ["highcharts", "highstock", "gantt"],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.column.centerInCategory",
              "name": "centerInCategory",
              "line": 46,
              "lineEnd": 69,
              "column": 4,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "colorByPoint": {
            "doclet": {
              "description": "When using automatic point colors pulled from the global\n[colors](colors) or series-specific\n[plotOptions.column.colors](series.colors) collections, this option\ndetermines whether the chart should receive one color per series or\none color per point.\n\nIn styled mode, the `colors` or `series.colors` arrays are not\nsupported, and instead this option gives the points individual color\nclass names on the form `highcharts-color-{n}`.",
              "see": ["[series colors](#plotOptions.column.colors)"],
              "samples": [
                {
                  "name": "False by default",
                  "value": "highcharts/plotoptions/column-colorbypoint-false/",
                  "products": ["highcharts"]
                },
                {
                  "name": "True",
                  "value": "highcharts/plotoptions/column-colorbypoint-true/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "false",
              "since": "2.0.0",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "plotOptions.column.colorByPoint",
              "name": "colorByPoint",
              "line": 46,
              "lineEnd": 69,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "colors": {
            "doclet": {
              "description": "A series specific or series type specific color set to apply instead\nof the global [colors](#colors) when [colorByPoint](#plotOptions.column.colorByPoint) is true.",
              "type": {
                "names": [
                  "Array.<(Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject)>"
                ]
              },
              "since": "3.0.0",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "plotOptions.column.colors",
              "name": "colors",
              "line": 70,
              "lineEnd": 79,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "cropThreshold": {
            "doclet": {
              "description": "When the series contains less points than the crop threshold, all\npoints are drawn, event if the points fall outside the visible plot\narea at the current zoom. The advantage of drawing all points\n(including markers and columns), is that animation is performed on\nupdates. On the other hand, when the series contains more points than\nthe crop threshold, the series data is cropped to only contain points\nthat fall within the plot area. The advantage of cropping away\ninvisible points is to increase performance on large series.",
              "products": ["highcharts", "highstock", "gantt"],
              "type": { "names": ["number"] },
              "defaultvalue": 50
            },
            "meta": {
              "fullname": "plotOptions.column.cropThreshold",
              "name": "cropThreshold",
              "line": 199,
              "lineEnd": 210,
              "column": 4,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "default": 50
            },
            "children": {},
            "extended": 1
          },
          "dataGrouping": {
            "doclet": { "type": { "names": ["*"] } },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "plotOptions.column.dataGrouping",
              "line": 0,
              "lineEnd": 0,
              "name": "dataGrouping"
            },
            "children": {
              "groupPixelWidth": {
                "doclet": {
                  "description": "The approximate pixel width of each group. If for example a series\nwith 30 points is displayed over a 600 pixel wide plot area, no grouping\nis performed. If however the series contains so many points that\nthe spacing is less than the groupPixelWidth, Highcharts will try\nto group it into appropriate groups so that each is more or less\ntwo pixels wide. Defaults to `10`.",
                  "samples": [
                    {
                      "name": "Two series with the same data density but different groupPixelWidth",
                      "value": "stock/plotoptions/series-datagrouping-grouppixelwidth/",
                      "products": ["highstock"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": "10"
                },
                "meta": {
                  "fullname": "plotOptions.column.dataGrouping.groupPixelWidth",
                  "name": "groupPixelWidth",
                  "line": 448,
                  "lineEnd": 462,
                  "filename": "code/es-modules/Extensions/DataGrouping/DataGrouping.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.column.dataLabels",
              "name": "dataLabels",
              "line": 302,
              "lineEnd": 302,
              "column": 4,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js"
            },
            "children": {
              "align": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.column.dataLabels.align",
                  "name": "align",
                  "line": 303,
                  "lineEnd": 303,
                  "column": 8,
                  "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.column.dataLabels.verticalAlign",
                  "name": "verticalAlign",
                  "line": 304,
                  "lineEnd": 304,
                  "column": 8,
                  "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "description": "The y position offset of the label relative to the point in\npixels.",
                  "type": { "names": ["number"] },
                  "defaultvalue": null
                },
                "meta": {
                  "fullname": "plotOptions.column.dataLabels.y",
                  "name": "y",
                  "line": 305,
                  "lineEnd": 310,
                  "column": 8,
                  "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "crop": {},
              "defer": {},
              "enabled": {},
              "filter": {},
              "format": {},
              "formatter": {},
              "inside": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "style": {},
              "textPath": {},
              "useHTML": {},
              "x": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "depth": {
            "doclet": {
              "description": "Depth of the columns in a 3D column chart.",
              "type": { "names": ["number"] },
              "defaultvalue": "25",
              "since": "4.0.0",
              "products": ["highcharts"],
              "requires": ["module:highcharts-3d"]
            },
            "meta": {
              "fullname": "plotOptions.column.depth",
              "name": "depth",
              "line": 444,
              "lineEnd": 453,
              "filename": "code/es-modules/Series/Column3D/Column3DComposition.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "dragDrop": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.dragDrop"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "plotOptions.column.dragDrop",
              "line": 0,
              "lineEnd": 0,
              "name": "dragDrop"
            },
            "children": {
              "dragHandle": {
                "doclet": {
                  "description": "Options for the drag handles available in column series.",
                  "declare": "Highcharts.DragDropHandleOptionsObject",
                  "since": "6.2.0",
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.series.dragDrop.dragHandle"
                },
                "meta": {
                  "fullname": "plotOptions.column.dragDrop.dragHandle",
                  "name": "dragHandle",
                  "line": 242,
                  "lineEnd": 248,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                  "column": 0
                },
                "children": {
                  "cursor": {
                    "doclet": {
                      "description": "The mouse cursor to use for the drag handles. By default this is\nintelligently switching between `ew-resize` and `ns-resize` depending on\nthe direction the point is being dragged.",
                      "type": { "names": ["string"] },
                      "since": "6.2.0"
                    },
                    "meta": {
                      "fullname": "plotOptions.column.dragDrop.dragHandle.cursor",
                      "name": "cursor",
                      "line": 260,
                      "lineEnd": 268,
                      "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "pathFormatter": {
                    "doclet": {
                      "description": "Function to define the SVG path to use for the drag handles. Takes\nthe point as argument. Should return an SVG path in array format. The\nSVG path is automatically positioned on the point.",
                      "type": { "names": ["function"] },
                      "since": "6.2.0"
                    },
                    "meta": {
                      "fullname": "plotOptions.column.dragDrop.dragHandle.pathFormatter",
                      "name": "pathFormatter",
                      "line": 250,
                      "lineEnd": 258,
                      "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "className": {},
                  "color": {},
                  "lineColor": {},
                  "lineWidth": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "dragMaxX": {},
              "dragMaxY": {},
              "dragMinX": {},
              "dragMinY": {},
              "dragPrecisionX": {},
              "dragPrecisionY": {},
              "dragSensitivity": {},
              "draggableX": {},
              "draggableY": {},
              "groupBy": {},
              "guideBox": {},
              "liveRedraw": {}
            },
            "extended": 1
          },
          "edgeColor": {
            "doclet": {
              "description": "3D columns only. The color of the edges. Similar to `borderColor`, except it\ndefaults to the same color as the column.",
              "type": { "names": ["Highcharts.ColorString"] },
              "products": ["highcharts"],
              "requires": ["module:highcharts-3d"]
            },
            "meta": {
              "fullname": "plotOptions.column.edgeColor",
              "name": "edgeColor",
              "line": 454,
              "lineEnd": 462,
              "filename": "code/es-modules/Series/Column3D/Column3DComposition.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "edgeWidth": {
            "doclet": {
              "description": "3D columns only. The width of the colored edges.",
              "type": { "names": ["number"] },
              "defaultvalue": "1",
              "products": ["highcharts"],
              "requires": ["module:highcharts-3d"]
            },
            "meta": {
              "fullname": "plotOptions.column.edgeWidth",
              "name": "edgeWidth",
              "line": 463,
              "lineEnd": 471,
              "filename": "code/es-modules/Series/Column3D/Column3DComposition.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "groupPadding": {
            "doclet": {
              "description": "Padding between each value groups, in x axis units.",
              "samples": [
                {
                  "name": "0.2 by default",
                  "value": "highcharts/plotoptions/column-grouppadding-default/",
                  "products": ["highcharts"]
                },
                {
                  "name": "No group padding - all columns are evenly spaced",
                  "value": "highcharts/plotoptions/column-grouppadding-none/",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts", "highstock", "gantt"],
              "type": { "names": ["number"] },
              "defaultvalue": 0.2
            },
            "meta": {
              "fullname": "plotOptions.column.groupPadding",
              "name": "groupPadding",
              "line": 94,
              "lineEnd": 103,
              "column": 4,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "default": 0.2
            },
            "children": {},
            "extended": 1
          },
          "groupZPadding": {
            "doclet": {
              "description": "The spacing between columns on the Z Axis in a 3D chart.",
              "type": { "names": ["number"] },
              "defaultvalue": "1",
              "since": "4.0.0",
              "products": ["highcharts"],
              "requires": ["module:highcharts-3d"]
            },
            "meta": {
              "fullname": "plotOptions.column.groupZPadding",
              "name": "groupZPadding",
              "line": 472,
              "lineEnd": 481,
              "filename": "code/es-modules/Series/Column3D/Column3DComposition.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "grouping": {
            "doclet": {
              "description": "Whether to group non-stacked columns or to let them render\nindependent of each other. Non-grouped columns will be laid out\nindividually and overlap each other.",
              "samples": [
                {
                  "name": "Grouping disabled",
                  "value": "highcharts/plotoptions/column-grouping-false/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Grouping disabled",
                  "value": "highcharts/plotoptions/column-grouping-false/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "true",
              "since": "2.3.0",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "plotOptions.column.grouping",
              "name": "grouping",
              "line": 105,
              "lineEnd": 120,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "maxPointWidth": {
            "doclet": {
              "description": "The maximum allowed pixel width for a column, translated to the\nheight of a bar in a bar chart. This prevents the columns from\nbecoming too wide when there is a small number of points in the\nchart.",
              "see": ["[pointWidth](#plotOptions.column.pointWidth)"],
              "samples": [
                {
                  "name": "Limited to 50",
                  "value": "highcharts/plotoptions/column-maxpointwidth-20/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Limited to 50",
                  "value": "highcharts/plotoptions/column-maxpointwidth-20/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "4.1.8",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "plotOptions.column.maxPointWidth",
              "name": "maxPointWidth",
              "line": 123,
              "lineEnd": 140,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "minPointLength": {
            "doclet": {
              "description": "The minimal height for a column or width for a bar. By default,\n0 values are not shown. To visualize a 0 (or close to zero) point,\nset the minimal point length to a pixel value like 3\\. In stacked\ncolumn charts, minPointLength might not be respected for tightly\npacked values.",
              "samples": [
                {
                  "name": "Zero base value",
                  "value": "highcharts/plotoptions/column-minpointlength/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Positive and negative close to zero values",
                  "value": "highcharts/plotoptions/column-minpointlength-pos-and-neg/",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts", "highstock", "gantt"],
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "plotOptions.column.minPointLength",
              "name": "minPointLength",
              "line": 154,
              "lineEnd": 171,
              "column": 4,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "pointPadding": {
            "doclet": {
              "description": "Padding between each column or bar, in x axis units.",
              "samples": [
                {
                  "name": "0.1 by default",
                  "value": "highcharts/plotoptions/column-pointpadding-default/",
                  "products": ["highcharts"]
                },
                {
                  "name": "0.25",
                  "value": "highcharts/plotoptions/column-pointpadding-025/",
                  "products": ["highcharts"]
                },
                {
                  "name": "0 for tightly packed columns",
                  "value": "highcharts/plotoptions/column-pointpadding-none/",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts", "highstock", "gantt"],
              "type": { "names": ["number"] },
              "defaultvalue": 0.1
            },
            "meta": {
              "fullname": "plotOptions.column.pointPadding",
              "name": "pointPadding",
              "line": 122,
              "lineEnd": 122,
              "column": 18,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "default": 0.1
            },
            "children": {},
            "extended": 1
          },
          "pointRange": {
            "doclet": {
              "description": "The X axis range that each point is valid for. This determines the\nwidth of the column. On a categorized axis, the range will be 1\nby default (one category unit). On linear and datetime axes, the\nrange will be computed as the distance between the two closest data\npoints.\n\nThe default `null` means it is computed automatically, but this\noption can be used to override the automatic value.\n\nThis option is set by default to 1 if data sorting is enabled.",
              "samples": [
                {
                  "name": "Set the point range to one day on a data set with one week between the points",
                  "value": "highcharts/plotoptions/column-pointrange/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "null"] },
              "since": "2.3.0",
              "products": ["highcharts", "highstock", "gantt"],
              "defaultvalue": null
            },
            "meta": {
              "fullname": "plotOptions.column.pointRange",
              "name": "pointRange",
              "line": 212,
              "lineEnd": 231,
              "column": 4,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "default": null
            },
            "children": {},
            "extended": 1
          },
          "pointWidth": {
            "doclet": {
              "description": "A pixel value specifying a fixed width for each column or bar point.\nWhen set to `undefined`, the width is calculated from the\n`pointPadding` and `groupPadding`. The width effects the dimension\nthat is not based on the point value. For column series it is the\nhorizontal length and for bar series it is the vertical length.",
              "see": ["[maxPointWidth](#plotOptions.column.maxPointWidth)"],
              "samples": [
                {
                  "name": "20px wide columns regardless of chart width or the amount of data points",
                  "value": "highcharts/plotoptions/column-pointwidth-20/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "1.2.5",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "plotOptions.column.pointWidth",
              "name": "pointWidth",
              "line": 154,
              "lineEnd": 171,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.states"
            },
            "meta": {
              "fullname": "plotOptions.column.states",
              "name": "states",
              "line": 233,
              "lineEnd": 233,
              "column": 4,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js"
            },
            "children": {
              "hover": {
                "doclet": {
                  "description": "Options for the hovered point. These settings override the normal\nstate options when a point is moused over or touched.",
                  "extends": "plotOptions.series.states.hover",
                  "exclude": ["halo", "lineWidth", "lineWidthPlus", "marker"],
                  "products": ["highcharts", "highstock", "gantt"]
                },
                "meta": {
                  "fullname": "plotOptions.column.states.hover",
                  "name": "hover",
                  "line": 234,
                  "lineEnd": 241,
                  "column": 8,
                  "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js"
                },
                "children": {
                  "borderColor": {
                    "doclet": {
                      "description": "A specific border color for the hovered point. Defaults to\ninherit the normal state border color.",
                      "type": {
                        "names": [
                          "Highcharts.ColorString",
                          "Highcharts.GradientColorObject",
                          "Highcharts.PatternObject"
                        ]
                      },
                      "products": ["highcharts", "gantt"]
                    },
                    "meta": {
                      "fullname": "plotOptions.column.states.hover.borderColor",
                      "name": "borderColor",
                      "line": 245,
                      "lineEnd": 252,
                      "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "brightness": {
                    "doclet": {
                      "description": "How much to brighten the point on interaction. Requires the\nmain color to be defined in hex or rgb(a) format.\n\nIn styled mode, the hover brightening is by default replaced\nwith a fill-opacity set in the `.highcharts-point:hover`\nrule.",
                      "samples": [
                        {
                          "name": "Brighten by 0.5",
                          "value": "highcharts/plotoptions/column-states-hover-brightness/",
                          "products": ["highcharts"]
                        }
                      ],
                      "products": ["highcharts", "highstock", "gantt"],
                      "type": { "names": ["number"] },
                      "defaultvalue": 0.1
                    },
                    "meta": {
                      "fullname": "plotOptions.column.states.hover.brightness",
                      "name": "brightness",
                      "line": 245,
                      "lineEnd": 252,
                      "column": 12,
                      "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
                      "default": 0.1
                    },
                    "children": {},
                    "extended": 1
                  },
                  "color": {
                    "doclet": {
                      "description": "A specific color for the hovered point.",
                      "type": {
                        "names": [
                          "Highcharts.ColorString",
                          "Highcharts.GradientColorObject",
                          "Highcharts.PatternObject"
                        ]
                      },
                      "products": ["highcharts", "gantt"]
                    },
                    "meta": {
                      "fullname": "plotOptions.column.states.hover.color",
                      "name": "color",
                      "line": 253,
                      "lineEnd": 259,
                      "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "select": {
                "doclet": {
                  "description": "Options for the selected point. These settings override the\nnormal state options when a point is selected.",
                  "extends": "plotOptions.series.states.select",
                  "exclude": ["halo", "lineWidth", "lineWidthPlus", "marker"],
                  "products": ["highcharts", "highstock", "gantt"]
                },
                "meta": {
                  "fullname": "plotOptions.column.states.select",
                  "name": "select",
                  "line": 275,
                  "lineEnd": 282,
                  "column": 8,
                  "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js"
                },
                "children": {
                  "borderColor": {
                    "doclet": {
                      "description": "A specific border color for the selected point.",
                      "type": {
                        "names": [
                          "Highcharts.ColorString",
                          "Highcharts.GradientColorObject",
                          "Highcharts.PatternObject"
                        ]
                      },
                      "defaultvalue": "#000000",
                      "products": ["highcharts", "highstock", "gantt"]
                    },
                    "meta": {
                      "fullname": "plotOptions.column.states.select.borderColor",
                      "name": "borderColor",
                      "line": 292,
                      "lineEnd": 298,
                      "column": 12,
                      "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
                      "default": "#000000"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "color": {
                    "doclet": {
                      "description": "A specific color for the selected point.",
                      "type": {
                        "names": [
                          "Highcharts.ColorString",
                          "Highcharts.GradientColorObject",
                          "Highcharts.PatternObject"
                        ]
                      },
                      "defaultvalue": "#cccccc",
                      "products": ["highcharts", "highstock", "gantt"]
                    },
                    "meta": {
                      "fullname": "plotOptions.column.states.select.color",
                      "name": "color",
                      "line": 284,
                      "lineEnd": 290,
                      "column": 12,
                      "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
                      "default": "#cccccc"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {}
            },
            "extended": 1
          },
          "stickyTracking": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.column.stickyTracking",
              "name": "stickyTracking",
              "line": 316,
              "lineEnd": 316,
              "column": 4,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "threshold": {
            "doclet": {
              "description": "The Y axis value to serve as the base for the columns, for\ndistinguishing between values above and below a threshold. If `null`,\nthe columns extend from the padding Y axis minimum.",
              "type": { "names": ["number", "null"] },
              "since": "2.0.0",
              "products": ["highcharts"],
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "plotOptions.column.threshold",
              "name": "threshold",
              "line": 320,
              "lineEnd": 328,
              "column": 4,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.column.tooltip",
              "name": "tooltip",
              "line": 317,
              "lineEnd": 317,
              "column": 4,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js"
            },
            "children": {
              "distance": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 6
                },
                "meta": {
                  "fullname": "plotOptions.column.tooltip.distance",
                  "name": "distance",
                  "line": 318,
                  "lineEnd": 318,
                  "column": 8,
                  "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
                  "default": 6
                },
                "children": {},
                "extended": 1
              },
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "headerFormat": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormat": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "columnpyramid": {
        "doclet": {
          "description": "Column pyramid series display one pyramid per value along an X axis.\nTo display horizontal pyramids, set [chart.inverted](#chart.inverted) to\n`true`.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `columnpyramid` series are defined in\n   [plotOptions.columnpyramid](plotOptions.columnpyramid).\n3. Options for one single series are given in\n   [the series instance array](series.columnpyramid).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        columnpyramid: {\n            // shared options for all columnpyramid series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'columnpyramid'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.columnpyramid.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === columnpyramid) {\n    // code specific to the columnpyramid series\n}\n```\n            ",
          "samples": [
            {
              "name": "Column pyramid",
              "value": "highcharts/demo/column-pyramid/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Column pyramid stacked",
              "value": "highcharts/plotoptions/columnpyramid-stacked/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Column pyramid inverted",
              "value": "highcharts/plotoptions/columnpyramid-inverted/",
              "products": ["highcharts", "highstock"]
            }
          ],
          "extends": "plotOptions.column",
          "since": "7.0.0",
          "products": ["highcharts", "highstock"],
          "exclude": [
            "boostThreshold",
            "borderRadius",
            "crisp",
            "depth",
            "edgeColor",
            "edgeWidth",
            "groupZPadding",
            "negativeColor",
            "softThreshold",
            "threshold",
            "zoneAxis",
            "zones",
            "boostBlending"
          ],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "filename": "code/es-modules/Series/ColumnPyramid/ColumnPyramidSeriesDefaults.js",
          "name": "columnpyramid",
          "fullname": "plotOptions.columnpyramid",
          "line": 11,
          "lineEnd": 15,
          "column": 0
        },
        "children": {
          "borderColor": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "dragDrop": {},
          "groupPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "columnrange": {
        "doclet": {
          "description": "The column range is a cartesian series type with higher and lower\nY values along an X axis. To display horizontal bars, set\n[chart.inverted](#chart.inverted) to `true`.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `columnrange` series are defined in\n   [plotOptions.columnrange](plotOptions.columnrange).\n3. Options for one single series are given in\n   [the series instance array](series.columnrange).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        columnrange: {\n            // shared options for all columnrange series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'columnrange'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.columnrange.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === columnrange) {\n    // code specific to the columnrange series\n}\n```\n            ",
          "samples": [
            {
              "name": "Inverted column range",
              "value": "highcharts/demo/columnrange/",
              "products": ["highcharts", "highstock"]
            }
          ],
          "extends": "plotOptions.column",
          "since": "2.3.0",
          "exclude": [
            "negativeColor",
            "stacking",
            "softThreshold",
            "threshold"
          ],
          "products": ["highcharts", "highstock"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "filename": "code/es-modules/Series/ColumnRange/ColumnRangeSeries.js",
          "name": "columnrange",
          "fullname": "plotOptions.columnrange",
          "line": 18,
          "lineEnd": 22,
          "column": 0
        },
        "children": {
          "borderRadius": {
            "doclet": { "type": { "names": ["*"] } },
            "meta": {
              "fullname": "plotOptions.columnrange.borderRadius",
              "name": "borderRadius",
              "line": 39,
              "lineEnd": 39,
              "column": 4,
              "filename": "code/es-modules/Series/ColumnRange/ColumnRangeSeries.js"
            },
            "children": {
              "where": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "all"
                },
                "meta": {
                  "fullname": "plotOptions.columnrange.borderRadius.where",
                  "name": "where",
                  "line": 40,
                  "lineEnd": 40,
                  "column": 8,
                  "filename": "code/es-modules/Series/ColumnRange/ColumnRangeSeries.js",
                  "default": "all"
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "description": "Extended data labels for range series types. Range series data labels\nhave no `x` and `y` options. Instead, they have `xLow`, `xHigh`,\n`yLow` and `yHigh` options to allow the higher and lower data label\nsets individually.",
              "declare": "Highcharts.SeriesAreaRangeDataLabelsOptionsObject",
              "extends": "plotOptions.arearange.dataLabels",
              "since": "2.3.0",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.columnrange.dataLabels",
              "name": "dataLabels",
              "line": 42,
              "lineEnd": 53,
              "filename": "code/es-modules/Series/ColumnRange/ColumnRangeSeries.js",
              "column": 0
            },
            "children": {
              "align": {},
              "verticalAlign": {},
              "xHigh": {},
              "xLow": {},
              "yHigh": {},
              "yLow": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "crop": {},
              "defer": {},
              "enabled": {},
              "filter": {},
              "format": {},
              "formatter": {},
              "inside": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "style": {},
              "textPath": {},
              "useHTML": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "dragDrop": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.dragDrop"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "plotOptions.columnrange.dragDrop",
              "line": 0,
              "lineEnd": 0,
              "name": "dragDrop"
            },
            "children": {
              "draggableHigh": {
                "doclet": {
                  "description": "Allow high value to be dragged individually.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "requires": ["module:modules/draggable-points"]
                },
                "meta": {
                  "fullname": "plotOptions.columnrange.dragDrop.draggableHigh",
                  "name": "draggableHigh",
                  "line": 376,
                  "lineEnd": 383,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropProps.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "draggableLow": {
                "doclet": {
                  "description": "Allow low value to be dragged individually.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "requires": ["module:modules/draggable-points"]
                },
                "meta": {
                  "fullname": "plotOptions.columnrange.dragDrop.draggableLow",
                  "name": "draggableLow",
                  "line": 352,
                  "lineEnd": 359,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropProps.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dragHandle": {},
              "dragMaxX": {},
              "dragMaxY": {},
              "dragMinX": {},
              "dragMinY": {},
              "dragPrecisionX": {},
              "dragPrecisionY": {},
              "dragSensitivity": {},
              "draggableX": {},
              "draggableY": {},
              "groupBy": {},
              "guideBox": {},
              "liveRedraw": {}
            },
            "extended": 1
          },
          "legendSymbol": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "rectangle"
            },
            "meta": {
              "fullname": "plotOptions.columnrange.legendSymbol",
              "name": "legendSymbol",
              "line": 55,
              "lineEnd": 55,
              "column": 4,
              "filename": "code/es-modules/Series/ColumnRange/ColumnRangeSeries.js",
              "default": "rectangle"
            },
            "children": {},
            "extended": 1
          },
          "pointRange": {
            "doclet": { "type": { "names": ["*"] }, "defaultvalue": null },
            "meta": {
              "fullname": "plotOptions.columnrange.pointRange",
              "name": "pointRange",
              "line": 42,
              "lineEnd": 53,
              "column": 4,
              "filename": "code/es-modules/Series/ColumnRange/ColumnRangeSeries.js",
              "default": null
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.states"
            },
            "meta": {
              "fullname": "plotOptions.columnrange.states",
              "name": "states",
              "line": 58,
              "lineEnd": 58,
              "column": 4,
              "filename": "code/es-modules/Series/ColumnRange/ColumnRangeSeries.js"
            },
            "children": {
              "hover": {},
              "select": {},
              "inactive": {},
              "normal": {}
            },
            "extended": 1
          },
          "borderColor": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "depth": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointWidth": {},
          "stickyTracking": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "cylinder": {
        "doclet": {
          "description": "A cylinder graph is a variation of a 3d column graph. The cylinder graph\nfeatures cylindrical points.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `cylinder` series are defined in\n   [plotOptions.cylinder](plotOptions.cylinder).\n3. Options for one single series are given in\n   [the series instance array](series.cylinder).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        cylinder: {\n            // shared options for all cylinder series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'cylinder'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.cylinder.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === cylinder) {\n    // code specific to the cylinder series\n}\n```\n            ",
          "samples": [
            {
              "name": "Cylinder graph",
              "value": "highcharts/demo/cylinder/",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.column",
          "since": "7.0.0",
          "products": ["highcharts"],
          "exclude": [
            "allAreas",
            "boostThreshold",
            "colorAxis",
            "compare",
            "compareBase",
            "dragDrop",
            "boostBlending"
          ],
          "requires": ["module:modules/cylinder"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Cylinder/CylinderSeriesDefaults.js",
          "name": "cylinder",
          "fullname": "plotOptions.cylinder",
          "line": 15,
          "lineEnd": 19,
          "column": 0
        },
        "children": {
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "dependencywheel": {
        "doclet": {
          "description": "A dependency wheel chart is a type of flow diagram, where all nodes are laid\nout in a circle, and the flow between the are drawn as link bands.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `dependencywheel` series are defined in\n   [plotOptions.dependencywheel](plotOptions.dependencywheel).\n3. Options for one single series are given in\n   [the series instance array](series.dependencywheel).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        dependencywheel: {\n            // shared options for all dependencywheel series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'dependencywheel'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.dependencywheel.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === dependencywheel) {\n    // code specific to the dependencywheel series\n}\n```\n            ",
          "samples": [
            {
              "name": "Dependency wheel",
              "value": "highcharts/demo/dependency-wheel/"
            }
          ],
          "extends": "plotOptions.sankey",
          "exclude": ["dataSorting", "nodeAlignment", "nodeDistance"],
          "since": "7.1.0",
          "products": ["highcharts"],
          "requires": ["module:modules/dependency-wheel"]
        },
        "meta": {
          "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js",
          "name": "dependencywheel",
          "fullname": "plotOptions.dependencywheel",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "borderRadius": {
            "doclet": {
              "description": "The corner radius of the border surrounding each node. A number\nsignifies pixels. A percentage string, like for example `50%`, signifies\na relative size. For nodes this is relative to the node width.",
              "type": {
                "names": [
                  "number",
                  "string",
                  "Highcharts.BorderRadiusOptionsObject"
                ]
              },
              "defaultvalue": "3",
              "products": ["highcharts"],
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "plotOptions.dependencywheel.borderRadius",
              "name": "borderRadius",
              "line": 33,
              "lineEnd": 43,
              "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "center": {
            "doclet": {
              "description": "The center of the wheel relative to the plot area. Can be\npercentages or pixel values. The default behaviour is to\ncenter the wheel inside the plot area.",
              "type": { "names": ["Array.<(number|string|null)>"] },
              "defaultvalue": "[null, null]",
              "products": ["highcharts"],
              "since": "7.1.0"
            },
            "meta": {
              "fullname": "plotOptions.dependencywheel.center",
              "name": "center",
              "line": 33,
              "lineEnd": 43,
              "column": 4,
              "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "curveFactor": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0.6 },
            "meta": {
              "fullname": "plotOptions.dependencywheel.curveFactor",
              "name": "curveFactor",
              "line": 97,
              "lineEnd": 97,
              "column": 4,
              "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js",
              "default": 0.6
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.sankey.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.dependencywheel.dataLabels",
              "name": "dataLabels",
              "line": 102,
              "lineEnd": 102,
              "column": 4,
              "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js"
            },
            "children": {
              "distance": {
                "doclet": {
                  "description": "Distance between the data label and the center of the node.",
                  "type": { "names": ["number"] },
                  "defaultvalue": "0"
                },
                "meta": {
                  "fullname": "plotOptions.dependencywheel.dataLabels.distance",
                  "name": "distance",
                  "line": 44,
                  "lineEnd": 50,
                  "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "format": {
                "doclet": {
                  "description": "A format string for data labels of the links between nodes. Available\nvariables are the same as for `formatter`.",
                  "see": [
                    "[nodeFormat](#nodeFormat) for formatting node labels"
                  ]
                },
                "meta": {
                  "fullname": "plotOptions.dependencywheel.dataLabels.format",
                  "name": "format",
                  "line": 51,
                  "lineEnd": 58,
                  "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "formatter": {
                "doclet": {
                  "description": "Callback to format data labels of the links between nodes. The `format`\noption takes precedence over the `formatter` option.",
                  "see": [
                    "[nodeFormatter](#nodeFormatter) for formatting node labels"
                  ]
                },
                "meta": {
                  "fullname": "plotOptions.dependencywheel.dataLabels.formatter",
                  "name": "formatter",
                  "line": 59,
                  "lineEnd": 66,
                  "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "nodeFormat": {
                "doclet": {
                  "description": "The format string specifying what to show for nodes in the sankey\ndiagram. By default the nodeFormatter returns `{point.name}`. Available\nvariables are the same as for `nodeFormatter`."
                },
                "meta": {
                  "fullname": "plotOptions.dependencywheel.dataLabels.nodeFormat",
                  "name": "nodeFormat",
                  "line": 67,
                  "lineEnd": 73,
                  "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "nodeFormatter": {
                "doclet": {
                  "description": "Callback to format data labels of nodes in the dependency wheel. The\n`nodeFormat` option takes precedence over the `nodeFormatter` option."
                },
                "meta": {
                  "fullname": "plotOptions.dependencywheel.dataLabels.nodeFormatter",
                  "name": "nodeFormatter",
                  "line": 74,
                  "lineEnd": 79,
                  "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "textPath": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.sankey.dataLabels.textPath"
                },
                "meta": {
                  "fullname": "plotOptions.dependencywheel.dataLabels.textPath",
                  "name": "textPath",
                  "line": 103,
                  "lineEnd": 103,
                  "column": 8,
                  "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js"
                },
                "children": {
                  "attributes": {
                    "doclet": { "type": { "names": ["*"] } },
                    "meta": {
                      "fullname": "plotOptions.dependencywheel.dataLabels.textPath.attributes",
                      "name": "attributes",
                      "line": 114,
                      "lineEnd": 114,
                      "column": 12,
                      "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js"
                    },
                    "children": {
                      "dy": {
                        "doclet": {
                          "description": "Text path shift along its y-axis.",
                          "type": { "names": ["Highcharts.SVGAttributes"] },
                          "defaultvalue": "5",
                          "since": "7.1.0"
                        },
                        "meta": {
                          "fullname": "plotOptions.dependencywheel.dataLabels.textPath.attributes.dy",
                          "name": "dy",
                          "line": 115,
                          "lineEnd": 122,
                          "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "extended": 1
                  },
                  "enabled": {}
                },
                "extended": 1
              },
              "backgroundColor": {},
              "crop": {},
              "enabled": {},
              "inside": {},
              "align": {},
              "verticalAlign": {},
              "y": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "defer": {},
              "filter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "style": {},
              "useHTML": {},
              "x": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "size": {
            "doclet": {
              "description": "Size of the wheel in pixel or percent relative to the canvas space.",
              "type": { "names": ["number", "string"] },
              "defaultvalue": "100%",
              "since": "7.1.0"
            },
            "meta": {
              "fullname": "plotOptions.dependencywheel.size",
              "name": "size",
              "line": 80,
              "lineEnd": 86,
              "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "startAngle": {
            "doclet": {
              "description": "The start angle of the dependency wheel, in degrees where 0 is up.",
              "since": "7.1.0",
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "plotOptions.dependencywheel.startAngle",
              "name": "startAngle",
              "line": 98,
              "lineEnd": 100,
              "column": 4,
              "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "borderWidth": {},
          "colorByPoint": {},
          "inactiveOtherPoints": {},
          "levels": {},
          "linkColorMode": {},
          "linkOpacity": {},
          "minLinkWidth": {},
          "nodePadding": {},
          "nodeWidth": {},
          "opacity": {},
          "showInLegend": {},
          "states": {},
          "tooltip": {},
          "borderColor": {},
          "centerInCategory": {},
          "colors": {},
          "dataGrouping": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "onPoint": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "dumbbell": {
        "doclet": {
          "description": "The dumbbell series is a cartesian series with higher and lower values\nfor each point along an X axis, connected with a line between the\nvalues.\n\nRequires `highcharts-more.js` and `modules/dumbbell.js`.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `dumbbell` series are defined in\n   [plotOptions.dumbbell](plotOptions.dumbbell).\n3. Options for one single series are given in\n   [the series instance array](series.dumbbell).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        dumbbell: {\n            // shared options for all dumbbell series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'dumbbell'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.dumbbell.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === dumbbell) {\n    // code specific to the dumbbell series\n}\n```\n            ",
          "samples": [
            {
              "name": "Dumbbell chart",
              "value": "highcharts/demo/dumbbell/",
              "products": ["highcharts"]
            },
            {
              "name": "Styled mode",
              "value": "highcharts/series-dumbbell/styled-mode-dumbbell/",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.arearange",
          "products": ["highcharts", "highstock"],
          "exclude": [
            "boostThreshold",
            "boostBlendingfillColor",
            "fillOpacity",
            "legendSymbolColor",
            "lineWidth",
            "stack",
            "stacking",
            "stickyTracking",
            "trackByArea"
          ],
          "since": "8.0.0"
        },
        "meta": {
          "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
          "name": "dumbbell",
          "fullname": "plotOptions.dumbbell",
          "line": 11,
          "lineEnd": 15,
          "column": 0
        },
        "children": {
          "connectorColor": {
            "doclet": {
              "description": "Color of the line that connects the dumbbell point's values.\nBy default it is the series' color.",
              "type": { "names": ["string"] },
              "products": ["highcharts", "highstock"],
              "since": "8.0.0"
            },
            "meta": {
              "fullname": "plotOptions.dumbbell.connectorColor",
              "name": "connectorColor",
              "line": 68,
              "lineEnd": 76,
              "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "connectorWidth": {
            "doclet": {
              "description": "Pixel width of the line that connects the dumbbell point's\nvalues.",
              "since": "8.0.0",
              "products": ["highcharts", "highstock"],
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "plotOptions.dumbbell.connectorWidth",
              "name": "connectorWidth",
              "line": 44,
              "lineEnd": 50,
              "column": 4,
              "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "crisp": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.dumbbell.crisp",
              "name": "crisp",
              "line": 55,
              "lineEnd": 55,
              "column": 4,
              "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "groupPadding": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0.2 },
            "meta": {
              "fullname": "plotOptions.dumbbell.groupPadding",
              "name": "groupPadding",
              "line": 54,
              "lineEnd": 54,
              "column": 4,
              "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
              "default": 0.2
            },
            "children": {},
            "extended": 1
          },
          "legendSymbol": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "rectangle"
            },
            "meta": {
              "fullname": "plotOptions.dumbbell.legendSymbol",
              "name": "legendSymbol",
              "line": 57,
              "lineEnd": 57,
              "column": 4,
              "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
              "default": "rectangle"
            },
            "children": {},
            "extended": 1
          },
          "lowColor": {
            "doclet": {
              "description": "Color of the start markers in a dumbbell graph. This option takes\npriority over the series color. To avoid this, set `lowColor` to\n`undefined`.",
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "8.0.0",
              "products": ["highcharts", "highstock"],
              "defaultvalue": "#333333"
            },
            "meta": {
              "fullname": "plotOptions.dumbbell.lowColor",
              "name": "lowColor",
              "line": 58,
              "lineEnd": 66,
              "column": 4,
              "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
              "default": "#333333"
            },
            "children": {},
            "extended": 1
          },
          "lowMarker": {
            "doclet": {
              "description": "Options for the lower markers of the dumbbell-like series. When `lowMarker`\nis not defined, options inherit form the marker.",
              "see": ["[marker](#series.arearange.marker)"],
              "declare": "Highcharts.PointMarkerOptionsObject",
              "extends": "plotOptions.series.marker",
              "defaultvalue": "undefined",
              "products": ["highcharts", "highstock"],
              "since": "8.0.0"
            },
            "meta": {
              "fullname": "plotOptions.dumbbell.lowMarker",
              "name": "lowMarker",
              "line": 175,
              "lineEnd": 186,
              "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "symbol": {
                "doclet": {
                  "samples": [
                    {
                      "name": "Dumbbell chart with lowMarker option",
                      "value": "highcharts/demo/dumbbell-markers",
                      "products": ["highcharts"]
                    }
                  ],
                  "declare": "Highcharts.PointMarkerOptionsObject",
                  "extends": "plotOptions.series.marker.symbol",
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "plotOptions.dumbbell.lowMarker.symbol",
                  "name": "symbol",
                  "line": 187,
                  "lineEnd": 196,
                  "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "enabled": {},
              "enabledThreshold": {},
              "fillColor": {},
              "height": {},
              "lineColor": {},
              "lineWidth": {},
              "radius": {},
              "states": {},
              "width": {}
            },
            "extended": 1
          },
          "pointPadding": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0.1 },
            "meta": {
              "fullname": "plotOptions.dumbbell.pointPadding",
              "name": "pointPadding",
              "line": 56,
              "lineEnd": 56,
              "column": 4,
              "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
              "default": 0.1
            },
            "children": {},
            "extended": 1
          },
          "pointRange": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 1 },
            "meta": {
              "fullname": "plotOptions.dumbbell.pointRange",
              "name": "pointRange",
              "line": 43,
              "lineEnd": 43,
              "column": 4,
              "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.arearange.states"
            },
            "meta": {
              "fullname": "plotOptions.dumbbell.states",
              "name": "states",
              "line": 68,
              "lineEnd": 76,
              "column": 4,
              "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js"
            },
            "children": {
              "hover": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.series.states.hover"
                },
                "meta": {
                  "fullname": "plotOptions.dumbbell.states.hover",
                  "name": "hover",
                  "line": 82,
                  "lineEnd": 82,
                  "column": 8,
                  "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js"
                },
                "children": {
                  "connectorWidthPlus": {
                    "doclet": {
                      "description": "The additional connector line width for a hovered point.",
                      "since": "8.0.0",
                      "products": ["highcharts", "highstock"],
                      "type": { "names": ["number"] },
                      "defaultvalue": 1
                    },
                    "meta": {
                      "fullname": "plotOptions.dumbbell.states.hover.connectorWidthPlus",
                      "name": "connectorWidthPlus",
                      "line": 85,
                      "lineEnd": 90,
                      "column": 12,
                      "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
                      "default": 1
                    },
                    "children": {},
                    "extended": 1
                  },
                  "animation": {},
                  "enabled": {},
                  "halo": {},
                  "lineWidth": {},
                  "lineWidthPlus": {},
                  "marker": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {},
              "select": {}
            },
            "extended": 1
          },
          "color": {},
          "colorKey": {},
          "dataLabels": {},
          "dragDrop": {},
          "fillColor": {},
          "shadow": {},
          "threshold": {},
          "tooltip": {},
          "lineColor": {},
          "negativeFillColor": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "connectEnds": {},
          "connectNulls": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "step": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "errorbar": {
        "doclet": {
          "description": "Error bars are a graphical representation of the variability of data and\nare used on graphs to indicate the error, or uncertainty in a reported\nmeasurement.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `errorbar` series are defined in\n   [plotOptions.errorbar](plotOptions.errorbar).\n3. Options for one single series are given in\n   [the series instance array](series.errorbar).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        errorbar: {\n            // shared options for all errorbar series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'errorbar'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.errorbar.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === errorbar) {\n    // code specific to the errorbar series\n}\n```\n            ",
          "samples": [
            {
              "name": "Error bars on a column series",
              "value": "highcharts/demo/error-bar/"
            },
            {
              "name": "Error bars on a scatter series",
              "value": "highcharts/series-errorbar/on-scatter/"
            },
            {
              "name": "Error bars with data labels",
              "value": "highcharts/series-errorbar/datalabels/"
            }
          ],
          "extends": "plotOptions.boxplot",
          "exclude": ["boostBlending", "boostThreshold"],
          "products": ["highcharts"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "filename": "code/es-modules/Series/ErrorBar/ErrorBarSeriesDefaults.js",
          "name": "errorbar",
          "fullname": "plotOptions.errorbar",
          "line": 11,
          "lineEnd": 15,
          "column": 0
        },
        "children": {
          "color": {
            "doclet": {
              "description": "The main color of the bars. This can be overridden by\n[stemColor](#plotOptions.errorbar.stemColor) and\n[whiskerColor](#plotOptions.errorbar.whiskerColor) individually.",
              "samples": [
                {
                  "name": "Error bar styling",
                  "value": "highcharts/plotoptions/error-bar-styling/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "defaultvalue": "#000000",
              "since": "3.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.errorbar.color",
              "name": "color",
              "line": 35,
              "lineEnd": 47,
              "column": 4,
              "filename": "code/es-modules/Series/ErrorBar/ErrorBarSeriesDefaults.js",
              "default": "#000000"
            },
            "children": {},
            "extended": 1
          },
          "dragDrop": {
            "doclet": {
              "exclude": ["draggableQ1", "draggableQ3"],
              "type": { "names": ["*"] },
              "extends": "plotOptions.boxplot.dragDrop"
            },
            "meta": {
              "filename": "code/es-modules/Extensions/DraggablePoints/DragDropProps.js",
              "name": "dragDrop",
              "fullname": "plotOptions.errorbar.dragDrop",
              "line": 217,
              "lineEnd": 220,
              "column": 0
            },
            "children": {
              "draggableHigh": {},
              "draggableLow": {},
              "dragHandle": {},
              "dragMaxX": {},
              "dragMaxY": {},
              "dragMinX": {},
              "dragMinY": {},
              "dragPrecisionX": {},
              "dragPrecisionY": {},
              "dragSensitivity": {},
              "draggableX": {},
              "draggableY": {},
              "groupBy": {},
              "guideBox": {},
              "liveRedraw": {}
            },
            "extended": 1
          },
          "grouping": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.errorbar.grouping",
              "name": "grouping",
              "line": 49,
              "lineEnd": 49,
              "column": 4,
              "filename": "code/es-modules/Series/ErrorBar/ErrorBarSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "linkedTo": {
            "doclet": {
              "description": "The parent series of the error bar. The default value links it to\nthe previous series. Otherwise, use the id of the parent series.",
              "since": "3.0.0",
              "products": ["highcharts"],
              "type": { "names": ["string"] },
              "defaultvalue": ":previous"
            },
            "meta": {
              "fullname": "plotOptions.errorbar.linkedTo",
              "name": "linkedTo",
              "line": 50,
              "lineEnd": 56,
              "column": 4,
              "filename": "code/es-modules/Series/ErrorBar/ErrorBarSeriesDefaults.js",
              "default": ":previous"
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.boxplot.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.errorbar.tooltip",
              "name": "tooltip",
              "line": 58,
              "lineEnd": 58,
              "column": 4,
              "filename": "code/es-modules/Series/ErrorBar/ErrorBarSeriesDefaults.js"
            },
            "children": {
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "<span style=\"color:{point.color}\">●</span> {series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>"
                },
                "meta": {
                  "fullname": "plotOptions.errorbar.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 59,
                  "lineEnd": 59,
                  "column": 8,
                  "filename": "code/es-modules/Series/ErrorBar/ErrorBarSeriesDefaults.js",
                  "default": "<span style=\"color:{point.color}\">●</span> {series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>"
                },
                "children": {},
                "extended": 1
              },
              "distance": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "headerFormat": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "whiskerWidth": {
            "doclet": {
              "description": "The line width of the whiskers, the horizontal lines marking\nlow and high values. When `null`, the general\n[lineWidth](#plotOptions.errorbar.lineWidth) applies.",
              "samples": [
                {
                  "name": "Error bar styling",
                  "value": "highcharts/plotoptions/error-bar-styling/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "3.0.0",
              "products": ["highcharts"],
              "defaultvalue": null
            },
            "meta": {
              "fullname": "plotOptions.errorbar.whiskerWidth",
              "name": "whiskerWidth",
              "line": 61,
              "lineEnd": 72,
              "column": 4,
              "filename": "code/es-modules/Series/ErrorBar/ErrorBarSeriesDefaults.js",
              "default": null
            },
            "children": {},
            "extended": 1
          },
          "boxDashStyle": {},
          "colorKey": {},
          "fillColor": {},
          "lineWidth": {},
          "medianColor": {},
          "medianDashStyle": {},
          "medianWidth": {},
          "stemColor": {},
          "stemDashStyle": {},
          "stemWidth": {},
          "threshold": {},
          "whiskerColor": {},
          "whiskerDashStyle": {},
          "whiskerLength": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "funnel": {
        "doclet": {
          "description": "Funnel charts are a type of chart often used to visualize stages in a\nsales project, where the top are the initial stages with the most\nclients. It requires that the modules/funnel.js file is loaded.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `funnel` series are defined in\n   [plotOptions.funnel](plotOptions.funnel).\n3. Options for one single series are given in\n   [the series instance array](series.funnel).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        funnel: {\n            // shared options for all funnel series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'funnel'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.funnel.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === funnel) {\n    // code specific to the funnel series\n}\n```\n            ",
          "samples": [
            { "name": "Funnel demo", "value": "highcharts/demo/funnel/" }
          ],
          "extends": "plotOptions.pie",
          "exclude": ["innerSize", "size", "dataSorting"],
          "products": ["highcharts"],
          "requires": ["module:modules/funnel"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js",
          "name": "funnel",
          "fullname": "plotOptions.funnel",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "animation": {
            "doclet": {
              "description": "Initial animation is by default disabled for the funnel chart.",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.funnel.animation",
              "name": "animation",
              "line": 33,
              "lineEnd": 35,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "borderRadius": {
            "doclet": {
              "description": "The corner radius of the border surrounding all points or series. A\nnumber signifies pixels. A percentage string, like for example `50%`,\nsignifies a size relative to the series width.",
              "samples": [
                {
                  "name": "Funnel and pyramid with rounded border",
                  "value": "highcharts/plotoptions/funnel-border-radius"
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "plotOptions.funnel.borderRadius",
              "name": "borderRadius",
              "line": 37,
              "lineEnd": 44,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "center": {
            "doclet": {
              "description": "The center of the series. By default, it is centered in the middle\nof the plot area, so it fills the plot area height.",
              "type": { "names": ["Array.<(number|string)>"] },
              "defaultvalue": "[\"50%\", \"50%\"]",
              "since": "3.0.0"
            },
            "meta": {
              "fullname": "plotOptions.funnel.center",
              "name": "center",
              "line": 46,
              "lineEnd": 53,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.pie.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.funnel.dataLabels",
              "name": "dataLabels",
              "line": 107,
              "lineEnd": 107,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js"
            },
            "children": {
              "connectorWidth": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 1
                },
                "meta": {
                  "fullname": "plotOptions.funnel.dataLabels.connectorWidth",
                  "name": "connectorWidth",
                  "line": 108,
                  "lineEnd": 108,
                  "column": 8,
                  "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js",
                  "default": 1
                },
                "children": {},
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "middle"
                },
                "meta": {
                  "fullname": "plotOptions.funnel.dataLabels.verticalAlign",
                  "name": "verticalAlign",
                  "line": 109,
                  "lineEnd": 109,
                  "column": 8,
                  "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js",
                  "default": "middle"
                },
                "children": {},
                "extended": 1
              },
              "alignTo": {},
              "connectorColor": {},
              "connectorPadding": {},
              "connectorShape": {},
              "crookDistance": {},
              "distance": {},
              "enabled": {},
              "format": {},
              "formatter": {},
              "softConnector": {},
              "style": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "crop": {},
              "defer": {},
              "filter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "textPath": {},
              "useHTML": {},
              "x": {},
              "y": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "height": {
            "doclet": {
              "description": "The height of the funnel or pyramid. If it is a number it defines\nthe pixel height, if it is a percentage string it is the percentage\nof the plot area height.",
              "samples": [
                {
                  "name": "Funnel demo",
                  "value": "highcharts/demo/funnel/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "string"] },
              "since": "3.0.0",
              "defaultvalue": "100%"
            },
            "meta": {
              "fullname": "plotOptions.funnel.height",
              "name": "height",
              "line": 75,
              "lineEnd": 85,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js",
              "default": "100%"
            },
            "children": {},
            "extended": 1
          },
          "neckHeight": {
            "doclet": {
              "description": "The height of the neck, the lower part of the funnel. A number\ndefines pixel width, a percentage string defines a percentage of the\nplot area height.",
              "type": { "names": ["number", "string"] },
              "defaultvalue": "25%"
            },
            "meta": {
              "fullname": "plotOptions.funnel.neckHeight",
              "name": "neckHeight",
              "line": 87,
              "lineEnd": 93,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js",
              "default": "25%"
            },
            "children": {},
            "extended": 1
          },
          "neckWidth": {
            "doclet": {
              "description": "The width of the neck, the lower part of the funnel. A number defines\npixel width, a percentage string defines a percentage of the plot\narea width.",
              "samples": [
                {
                  "name": "Funnel demo",
                  "value": "highcharts/demo/funnel/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "string"] },
              "since": "3.0.0",
              "defaultvalue": "30%"
            },
            "meta": {
              "fullname": "plotOptions.funnel.neckWidth",
              "name": "neckWidth",
              "line": 63,
              "lineEnd": 73,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js",
              "default": "30%"
            },
            "children": {},
            "extended": 1
          },
          "reversed": {
            "doclet": {
              "description": "A reversed funnel has the widest area down. A reversed funnel with\nno neck width and neck height is a pyramid.",
              "since": "3.0.10",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.funnel.reversed",
              "name": "reversed",
              "line": 95,
              "lineEnd": 100,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "description": "Options for the series states.",
              "type": { "names": ["*"] },
              "extends": "plotOptions.pie.states"
            },
            "meta": {
              "fullname": "plotOptions.funnel.states",
              "name": "states",
              "line": 111,
              "lineEnd": 113,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js"
            },
            "children": {
              "hover": {
                "doclet": {
                  "exclude": ["halo", "marker", "lineWidth", "lineWidthPlus"],
                  "extends": "plotOptions.pie.states.hover"
                },
                "meta": {
                  "fullname": "plotOptions.funnel.states.hover",
                  "name": "hover",
                  "line": 115,
                  "lineEnd": 118,
                  "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "brightness": {},
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "select": {
                "doclet": {
                  "description": "Options for a selected funnel item.",
                  "exclude": ["halo", "marker", "lineWidth", "lineWidthPlus"],
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.pie.states.select"
                },
                "meta": {
                  "fullname": "plotOptions.funnel.states.select",
                  "name": "select",
                  "line": 115,
                  "lineEnd": 118,
                  "column": 8,
                  "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js"
                },
                "children": {
                  "borderColor": {
                    "doclet": {
                      "description": "A specific border color for the selected point.",
                      "type": { "names": ["Highcharts.ColorString"] },
                      "defaultvalue": "#000000"
                    },
                    "meta": {
                      "fullname": "plotOptions.funnel.states.select.borderColor",
                      "name": "borderColor",
                      "line": 131,
                      "lineEnd": 135,
                      "column": 12,
                      "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js",
                      "default": "#000000"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "color": {
                    "doclet": {
                      "description": "A specific color for the selected point.",
                      "type": {
                        "names": [
                          "Highcharts.ColorString",
                          "Highcharts.GradientColorObject",
                          "Highcharts.PatternObject"
                        ]
                      },
                      "defaultvalue": "#cccccc"
                    },
                    "meta": {
                      "fullname": "plotOptions.funnel.states.select.color",
                      "name": "color",
                      "line": 125,
                      "lineEnd": 129,
                      "column": 12,
                      "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js",
                      "default": "#cccccc"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {}
            },
            "extended": 1
          },
          "width": {
            "doclet": {
              "description": "The width of the funnel compared to the width of the plot area,\nor the pixel width if it is a number.",
              "type": { "names": ["number", "string"] },
              "since": "3.0.0",
              "defaultvalue": "90%"
            },
            "meta": {
              "fullname": "plotOptions.funnel.width",
              "name": "width",
              "line": 55,
              "lineEnd": 61,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js",
              "default": "90%"
            },
            "children": {},
            "extended": 1
          },
          "borderColor": {},
          "borderWidth": {},
          "clip": {},
          "color": {},
          "colors": {},
          "depth": {},
          "endAngle": {},
          "events": {},
          "fillColor": {},
          "ignoreHiddenPoint": {},
          "inactiveOtherPoints": {},
          "minSize": {},
          "point": {},
          "showInLegend": {},
          "slicedOffset": {},
          "startAngle": {},
          "stickyTracking": {},
          "thickness": {},
          "tooltip": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "className": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "includeInDataExport": {},
          "keys": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "onPoint": {},
          "opacity": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "visible": {}
        },
        "extended": 1
      },
      "funnel3d": {
        "doclet": {
          "description": "A funnel3d is a 3d version of funnel series type. Funnel charts are\na type of chart often used to visualize stages in a sales project,\nwhere the top are the initial stages with the most clients.\n\nIt requires that the `highcharts-3d.js`, `cylinder.js` and\n`funnel3d.js` module are loaded.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `funnel3d` series are defined in\n   [plotOptions.funnel3d](plotOptions.funnel3d).\n3. Options for one single series are given in\n   [the series instance array](series.funnel3d).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        funnel3d: {\n            // shared options for all funnel3d series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'funnel3d'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.funnel3d.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === funnel3d) {\n    // code specific to the funnel3d series\n}\n```\n            ",
          "samples": [
            { "name": "Funnel3d", "value": "highcharts/demo/funnel3d/" }
          ],
          "extends": "plotOptions.column",
          "exclude": [
            "allAreas",
            "boostThreshold",
            "colorAxis",
            "compare",
            "compareBase",
            "dataSorting",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "since": "7.1.0",
          "requires": [
            "module:highcharts-3d",
            "module:modules/cylinder",
            "module:modules/funnel3d"
          ]
        },
        "meta": {
          "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
          "name": "funnel3d",
          "fullname": "plotOptions.funnel3d",
          "line": 11,
          "lineEnd": 31,
          "column": 0
        },
        "children": {
          "animation": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.funnel3d.animation",
              "name": "animation",
              "line": 88,
              "lineEnd": 88,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "colorByPoint": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.funnel3d.colorByPoint",
              "name": "colorByPoint",
              "line": 90,
              "lineEnd": 90,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.funnel3d.dataLabels",
              "name": "dataLabels",
              "line": 92,
              "lineEnd": 92,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js"
            },
            "children": {
              "align": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "right"
                },
                "meta": {
                  "fullname": "plotOptions.funnel3d.dataLabels.align",
                  "name": "align",
                  "line": 93,
                  "lineEnd": 93,
                  "column": 8,
                  "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
                  "default": "right"
                },
                "children": {},
                "extended": 1
              },
              "crop": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.funnel3d.dataLabels.crop",
                  "name": "crop",
                  "line": 94,
                  "lineEnd": 94,
                  "column": 8,
                  "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "inside": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.funnel3d.dataLabels.inside",
                  "name": "inside",
                  "line": 95,
                  "lineEnd": 95,
                  "column": 8,
                  "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "overflow": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "allow"
                },
                "meta": {
                  "fullname": "plotOptions.funnel3d.dataLabels.overflow",
                  "name": "overflow",
                  "line": 96,
                  "lineEnd": 96,
                  "column": 8,
                  "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
                  "default": "allow"
                },
                "children": {},
                "extended": 1
              },
              "verticalAlign": {},
              "y": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "defer": {},
              "enabled": {},
              "filter": {},
              "format": {},
              "formatter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "style": {},
              "textPath": {},
              "useHTML": {},
              "x": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "edgeWidth": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0 },
            "meta": {
              "fullname": "plotOptions.funnel3d.edgeWidth",
              "name": "edgeWidth",
              "line": 89,
              "lineEnd": 89,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "gradientForSides": {
            "doclet": {
              "description": "By default sides fill is set to a gradient through this option being\nset to `true`. Set to `false` to get solid color for the sides.",
              "products": ["highcharts"],
              "since": "7.1.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.funnel3d.gradientForSides",
              "name": "gradientForSides",
              "line": 81,
              "lineEnd": 86,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "height": {
            "doclet": {
              "description": "The height of the series. If it is a number it defines\nthe pixel height, if it is a percentage string it is the percentage\nof the plot area height.",
              "type": { "names": ["number", "string"] },
              "samples": [
                {
                  "name": "Funnel3d demo",
                  "value": "highcharts/demo/funnel3d/",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts"],
              "since": "7.1.0",
              "defaultvalue": "100%"
            },
            "meta": {
              "fullname": "plotOptions.funnel3d.height",
              "name": "height",
              "line": 54,
              "lineEnd": 62,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
              "default": "100%"
            },
            "children": {},
            "extended": 1
          },
          "neckHeight": {
            "doclet": {
              "description": "The height of the neck, the lower part of the funnel. A number\ndefines pixel width, a percentage string defines a percentage\nof the plot area height.",
              "type": { "names": ["number", "string"] },
              "samples": [
                {
                  "name": "Funnel3d demo",
                  "value": "highcharts/demo/funnel3d/",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts"],
              "since": "7.1.0",
              "defaultvalue": "25%"
            },
            "meta": {
              "fullname": "plotOptions.funnel3d.neckHeight",
              "name": "neckHeight",
              "line": 64,
              "lineEnd": 72,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
              "default": "25%"
            },
            "children": {},
            "extended": 1
          },
          "neckWidth": {
            "doclet": {
              "description": "The width of the neck, the lower part of the funnel. A number defines\npixel width, a percentage string defines a percentage of the plot\narea width.",
              "type": { "names": ["number", "string"] },
              "samples": [
                {
                  "name": "Funnel3d demo",
                  "value": "highcharts/demo/funnel3d/",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts"],
              "since": "7.1.0",
              "defaultvalue": "30%"
            },
            "meta": {
              "fullname": "plotOptions.funnel3d.neckWidth",
              "name": "neckWidth",
              "line": 44,
              "lineEnd": 52,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
              "default": "30%"
            },
            "children": {},
            "extended": 1
          },
          "reversed": {
            "doclet": {
              "description": "A reversed funnel has the widest area down. A reversed funnel with\nno neck width and neck height is a pyramid.",
              "products": ["highcharts"],
              "since": "7.1.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.funnel3d.reversed",
              "name": "reversed",
              "line": 74,
              "lineEnd": 79,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "showInLegend": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.funnel3d.showInLegend",
              "name": "showInLegend",
              "line": 91,
              "lineEnd": 91,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "width": {
            "doclet": {
              "description": "The max width of the series compared to the width of the plot area,\nor the pixel width if it is a number.",
              "type": { "names": ["number", "string"] },
              "samples": [
                {
                  "name": "Funnel3d demo",
                  "value": "highcharts/demo/funnel3d/",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts"],
              "since": "7.1.0",
              "defaultvalue": "90%"
            },
            "meta": {
              "fullname": "plotOptions.funnel3d.width",
              "name": "width",
              "line": 35,
              "lineEnd": 42,
              "column": 4,
              "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
              "default": "90%"
            },
            "children": {},
            "extended": 1
          },
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "depth": {},
          "dragDrop": {},
          "edgeColor": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "gauge": {
        "doclet": {
          "description": "Gauges are circular plots displaying one or more values with a dial\npointing to values along the perimeter.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `gauge` series are defined in\n   [plotOptions.gauge](plotOptions.gauge).\n3. Options for one single series are given in\n   [the series instance array](series.gauge).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        gauge: {\n            // shared options for all gauge series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'gauge'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.gauge.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === gauge) {\n    // code specific to the gauge series\n}\n```\n            ",
          "samples": [
            {
              "name": "Gauge chart",
              "value": "highcharts/demo/gauge-speedometer/"
            }
          ],
          "extends": "plotOptions.line",
          "exclude": [
            "animationLimit",
            "boostThreshold",
            "colorAxis",
            "colorKey",
            "connectEnds",
            "connectNulls",
            "cropThreshold",
            "dashStyle",
            "dragDrop",
            "findNearestPointBy",
            "getExtremesFromAll",
            "marker",
            "negativeColor",
            "pointPlacement",
            "shadow",
            "softThreshold",
            "stacking",
            "states",
            "step",
            "threshold",
            "turboThreshold",
            "xAxis",
            "zoneAxis",
            "zones",
            "dataSorting",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
          "name": "gauge",
          "fullname": "plotOptions.gauge",
          "line": 187,
          "lineEnd": 191,
          "column": 0
        },
        "children": {
          "dataLabels": {
            "doclet": {
              "description": "Data labels for the gauge. For gauges, the data labels are\nenabled by default and shown in a bordered box below the point.",
              "since": "2.3.0",
              "products": ["highcharts"],
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.gauge.dataLabels",
              "name": "dataLabels",
              "line": 211,
              "lineEnd": 224,
              "column": 4,
              "filename": "code/es-modules/Series/Gauge/GaugeSeries.js"
            },
            "children": {
              "borderColor": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "#cccccc"
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dataLabels.borderColor",
                  "name": "borderColor",
                  "line": 233,
                  "lineEnd": 233,
                  "column": 8,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "default": "#cccccc"
                },
                "children": {},
                "extended": 1
              },
              "borderRadius": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 3
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dataLabels.borderRadius",
                  "name": "borderRadius",
                  "line": 234,
                  "lineEnd": 234,
                  "column": 8,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "default": 3
                },
                "children": {},
                "extended": 1
              },
              "borderWidth": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 1
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dataLabels.borderWidth",
                  "name": "borderWidth",
                  "line": 235,
                  "lineEnd": 235,
                  "column": 8,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "default": 1
                },
                "children": {},
                "extended": 1
              },
              "crop": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dataLabels.crop",
                  "name": "crop",
                  "line": 236,
                  "lineEnd": 236,
                  "column": 8,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "defer": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dataLabels.defer",
                  "name": "defer",
                  "line": 237,
                  "lineEnd": 237,
                  "column": 8,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "enabled": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dataLabels.enabled",
                  "name": "enabled",
                  "line": 238,
                  "lineEnd": 238,
                  "column": 8,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "top"
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dataLabels.verticalAlign",
                  "name": "verticalAlign",
                  "line": 239,
                  "lineEnd": 239,
                  "column": 8,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "default": "top"
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 15
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dataLabels.y",
                  "name": "y",
                  "line": 240,
                  "lineEnd": 240,
                  "column": 8,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "default": 15
                },
                "children": {},
                "extended": 1
              },
              "zIndex": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 2
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dataLabels.zIndex",
                  "name": "zIndex",
                  "line": 241,
                  "lineEnd": 241,
                  "column": 8,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "default": 2
                },
                "children": {},
                "extended": 1
              },
              "align": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "backgroundColor": {},
              "className": {},
              "color": {},
              "filter": {},
              "format": {},
              "formatter": {},
              "inside": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "style": {},
              "textPath": {},
              "useHTML": {},
              "x": {}
            },
            "extended": 1
          },
          "dial": {
            "doclet": {
              "description": "Options for the dial or arrow pointer of the gauge.\n\nIn styled mode, the dial is styled with the\n`.highcharts-gauge-series .highcharts-dial` rule.",
              "samples": [
                {
                  "name": "Styled mode",
                  "value": "highcharts/css/gauge/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["*"] },
              "since": "2.3.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.gauge.dial",
              "name": "dial",
              "line": 243,
              "lineEnd": 255,
              "column": 4,
              "filename": "code/es-modules/Series/Gauge/GaugeSeries.js"
            },
            "children": {
              "backgroundColor": {
                "doclet": {
                  "description": "The background or fill color of the gauge's dial.",
                  "samples": [
                    {
                      "name": "Dial options demonstrated",
                      "value": "highcharts/plotoptions/gauge-dial/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "defaultvalue": "#000000",
                  "since": "2.3.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dial.backgroundColor",
                  "name": "backgroundColor",
                  "line": 257,
                  "lineEnd": 268,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "baseLength": {
                "doclet": {
                  "description": "The length of the dial's base part, relative to the total\nradius or length of the dial.",
                  "samples": [
                    {
                      "name": "Dial options demonstrated",
                      "value": "highcharts/plotoptions/gauge-dial/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "defaultvalue": "70%",
                  "since": "2.3.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dial.baseLength",
                  "name": "baseLength",
                  "line": 270,
                  "lineEnd": 282,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "baseWidth": {
                "doclet": {
                  "description": "The pixel width of the base of the gauge dial. The base is\nthe part closest to the pivot, defined by baseLength.",
                  "samples": [
                    {
                      "name": "Dial options demonstrated",
                      "value": "highcharts/plotoptions/gauge-dial/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": "3",
                  "since": "2.3.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dial.baseWidth",
                  "name": "baseWidth",
                  "line": 284,
                  "lineEnd": 296,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "borderColor": {
                "doclet": {
                  "description": "The border color or stroke of the gauge's dial. By default,\nthe borderWidth is 0, so this must be set in addition to a\ncustom border color.",
                  "samples": [
                    {
                      "name": "Dial options demonstrated",
                      "value": "highcharts/plotoptions/gauge-dial/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "defaultvalue": "#cccccc",
                  "since": "2.3.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dial.borderColor",
                  "name": "borderColor",
                  "line": 298,
                  "lineEnd": 311,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "borderWidth": {
                "doclet": {
                  "description": "The width of the gauge dial border in pixels.",
                  "samples": [
                    {
                      "name": "Dial options demonstrated",
                      "value": "highcharts/plotoptions/gauge-dial/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": "0",
                  "since": "2.3.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dial.borderWidth",
                  "name": "borderWidth",
                  "line": 313,
                  "lineEnd": 324,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "path": {
                "doclet": {
                  "description": "An array with an SVG path for the custom dial.",
                  "samples": [
                    {
                      "name": "Dial options demonstrated",
                      "value": "highcharts/plotoptions/gauge-path/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["Highcharts.SVGPathArray"] },
                  "since": "10.2.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dial.path",
                  "name": "path",
                  "line": 326,
                  "lineEnd": 336,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "radius": {
                "doclet": {
                  "description": "The radius or length of the dial, in percentages relative to\nthe radius of the gauge itself.",
                  "samples": [
                    {
                      "name": "Dial options demonstrated",
                      "value": "highcharts/plotoptions/gauge-dial/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "defaultvalue": "80%",
                  "since": "2.3.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dial.radius",
                  "name": "radius",
                  "line": 337,
                  "lineEnd": 349,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "rearLength": {
                "doclet": {
                  "description": "The length of the dial's rear end, the part that extends out\non the other side of the pivot. Relative to the dial's\nlength.",
                  "samples": [
                    {
                      "name": "Dial options demonstrated",
                      "value": "highcharts/plotoptions/gauge-dial/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "defaultvalue": "10%",
                  "since": "2.3.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dial.rearLength",
                  "name": "rearLength",
                  "line": 351,
                  "lineEnd": 364,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "topWidth": {
                "doclet": {
                  "description": "The width of the top of the dial, closest to the perimeter.\nThe pivot narrows in from the base to the top.",
                  "samples": [
                    {
                      "name": "Dial options demonstrated",
                      "value": "highcharts/plotoptions/gauge-dial/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": "1",
                  "since": "2.3.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.gauge.dial.topWidth",
                  "name": "topWidth",
                  "line": 366,
                  "lineEnd": 378,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "overshoot": {
            "doclet": {
              "description": "Allow the dial to overshoot the end of the perimeter axis by\nthis many degrees. Say if the gauge axis goes from 0 to 60, a\nvalue of 100, or 1000, will show 5 degrees beyond the end of the\naxis when this option is set to 5.",
              "see": ["[wrap](#plotOptions.gauge.wrap)"],
              "samples": [
                {
                  "name": "Allow 5 degrees overshoot",
                  "value": "highcharts/plotoptions/gauge-overshoot/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "3.0.10",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.gauge.overshoot",
              "name": "overshoot",
              "line": 381,
              "lineEnd": 396,
              "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "pivot": {
            "doclet": {
              "description": "Options for the pivot or the center point of the gauge.\n\nIn styled mode, the pivot is styled with the\n`.highcharts-gauge-series .highcharts-pivot` rule.",
              "samples": [
                {
                  "name": "Styled mode",
                  "value": "highcharts/css/gauge/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["*"] },
              "since": "2.3.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.gauge.pivot",
              "name": "pivot",
              "line": 381,
              "lineEnd": 396,
              "column": 4,
              "filename": "code/es-modules/Series/Gauge/GaugeSeries.js"
            },
            "children": {
              "backgroundColor": {
                "doclet": {
                  "description": "The background color or fill of the pivot.",
                  "samples": [
                    {
                      "name": "Pivot options demonstrated",
                      "value": "highcharts/plotoptions/gauge-pivot/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "defaultvalue": "#000000",
                  "since": "2.3.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.gauge.pivot.backgroundColor",
                  "name": "backgroundColor",
                  "line": 452,
                  "lineEnd": 463,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "borderColor": {
                "doclet": {
                  "description": "The border or stroke color of the pivot. In able to change\nthis, the borderWidth must also be set to something other\nthan the default 0.",
                  "samples": [
                    {
                      "name": "Pivot options demonstrated",
                      "value": "highcharts/plotoptions/gauge-pivot/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "defaultvalue": "#cccccc",
                  "since": "2.3.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.gauge.pivot.borderColor",
                  "name": "borderColor",
                  "line": 437,
                  "lineEnd": 450,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "borderWidth": {
                "doclet": {
                  "description": "The border or stroke width of the pivot.",
                  "samples": [
                    {
                      "name": "Pivot options demonstrated",
                      "value": "highcharts/plotoptions/gauge-pivot/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": "0",
                  "since": "2.3.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.gauge.pivot.borderWidth",
                  "name": "borderWidth",
                  "line": 424,
                  "lineEnd": 435,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "radius": {
                "doclet": {
                  "description": "The pixel radius of the pivot.",
                  "samples": [
                    {
                      "name": "Pivot options demonstrated",
                      "value": "highcharts/plotoptions/gauge-pivot/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": "5",
                  "since": "2.3.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.gauge.pivot.radius",
                  "name": "radius",
                  "line": 411,
                  "lineEnd": 422,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "showInLegend": {
            "doclet": {
              "description": "Whether to display this particular series or series type in the\nlegend. Defaults to false for gauge series.",
              "since": "2.3.0",
              "products": ["highcharts"],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.gauge.showInLegend",
              "name": "showInLegend",
              "line": 469,
              "lineEnd": 475,
              "column": 4,
              "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.gauge.tooltip",
              "name": "tooltip",
              "line": 466,
              "lineEnd": 466,
              "column": 4,
              "filename": "code/es-modules/Series/Gauge/GaugeSeries.js"
            },
            "children": {
              "headerFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": ""
                },
                "meta": {
                  "fullname": "plotOptions.gauge.tooltip.headerFormat",
                  "name": "headerFormat",
                  "line": 467,
                  "lineEnd": 467,
                  "column": 8,
                  "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
                  "default": ""
                },
                "children": {},
                "extended": 1
              },
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "distance": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormat": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "wrap": {
            "doclet": {
              "description": "When this option is `true`, the dial will wrap around the axes.\nFor instance, in a full-range gauge going from 0 to 360, a value\nof 400 will point to 40\\. When `wrap` is `false`, the dial stops\nat 360.",
              "see": ["[overshoot](#plotOptions.gauge.overshoot)"],
              "type": { "names": ["boolean"] },
              "defaultvalue": "true",
              "since": "3.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.gauge.wrap",
              "name": "wrap",
              "line": 211,
              "lineEnd": 224,
              "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "stickyTracking": {},
          "visible": {}
        },
        "extended": 1
      },
      "heatmap": {
        "doclet": {
          "description": "A heatmap is a graphical representation of data where the individual\nvalues contained in a matrix are represented as colors.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `heatmap` series are defined in\n   [plotOptions.heatmap](plotOptions.heatmap).\n3. Options for one single series are given in\n   [the series instance array](series.heatmap).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        heatmap: {\n            // shared options for all heatmap series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'heatmap'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.heatmap.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === heatmap) {\n    // code specific to the heatmap series\n}\n```\n            ",
          "productdesc": [
            {
              "value": "Requires `modules/heatmap`.",
              "products": ["highcharts"]
            }
          ],
          "samples": [
            { "name": "Simple heatmap", "value": "highcharts/demo/heatmap/" },
            {
              "name": "Heavy heatmap",
              "value": "highcharts/demo/heatmap-canvas/"
            }
          ],
          "extends": "plotOptions.scatter",
          "exclude": [
            "animationLimit",
            "cluster",
            "connectEnds",
            "connectNulls",
            "cropThreshold",
            "dashStyle",
            "dragDrop",
            "findNearestPointBy",
            "getExtremesFromAll",
            "jitter",
            "legendSymbolColor",
            "linecap",
            "lineWidth",
            "pointInterval",
            "pointIntervalUnit",
            "pointRange",
            "pointStart",
            "shadow",
            "softThreshold",
            "stacking",
            "step",
            "threshold"
          ],
          "products": ["highcharts", "highmaps"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
          "name": "heatmap",
          "fullname": "plotOptions.heatmap",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "animation": {
            "doclet": {
              "description": "Animation is disabled by default on the heatmap series.",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.heatmap.animation",
              "name": "animation",
              "line": 40,
              "lineEnd": 42,
              "column": 4,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "borderRadius": {
            "doclet": {
              "description": "The border radius for each heatmap item. The border's color and\nwidth can be set in marker options.",
              "see": [
                "[lineColor](#plotOptions.heatmap.marker.lineColor)",
                "[lineWidth](#plotOptions.heatmap.marker.lineWidth)"
              ],
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "plotOptions.heatmap.borderRadius",
              "name": "borderRadius",
              "line": 44,
              "lineEnd": 50,
              "column": 4,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "borderWidth": {
            "doclet": {
              "description": "The border width for each heatmap item.",
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "plotOptions.heatmap.borderWidth",
              "name": "borderWidth",
              "line": 52,
              "lineEnd": 54,
              "column": 4,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "clip": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.heatmap.clip",
              "name": "clip",
              "line": 283,
              "lineEnd": 283,
              "column": 4,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "color": {
            "doclet": {
              "description": "The main color of the series. In heat maps this color is rarely used,\nas we mostly use the color to denote the value of each point. Unless\noptions are set in the [colorAxis](#colorAxis), the default value\nis pulled from the [options.colors](#colors) array.",
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "4.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.heatmap.color",
              "name": "color",
              "line": 68,
              "lineEnd": 78,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "colorKey": {
            "doclet": {
              "defaultvalue": "value",
              "type": { "names": ["string"] }
            },
            "meta": {
              "fullname": "plotOptions.heatmap.colorKey",
              "name": "colorKey",
              "line": 64,
              "lineEnd": 67,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "colsize": {
            "doclet": {
              "description": "The column size - how many X axis units each column in the heatmap\nshould span.",
              "samples": [
                {
                  "name": "One day",
                  "value": "maps/demo/heatmap/",
                  "products": ["highcharts"]
                },
                {
                  "name": "One day",
                  "value": "maps/demo/heatmap/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "1",
              "since": "4.0.0",
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "plotOptions.heatmap.colsize",
              "name": "colsize",
              "line": 79,
              "lineEnd": 93,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.heatmap.dataLabels",
              "name": "dataLabels",
              "line": 125,
              "lineEnd": 125,
              "column": 4,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js"
            },
            "children": {
              "crop": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.heatmap.dataLabels.crop",
                  "name": "crop",
                  "line": 133,
                  "lineEnd": 133,
                  "column": 8,
                  "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "inside": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.heatmap.dataLabels.inside",
                  "name": "inside",
                  "line": 131,
                  "lineEnd": 131,
                  "column": 8,
                  "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "padding": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.heatmap.dataLabels.padding",
                  "name": "padding",
                  "line": 138,
                  "lineEnd": 138,
                  "column": 8,
                  "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "middle"
                },
                "meta": {
                  "fullname": "plotOptions.heatmap.dataLabels.verticalAlign",
                  "name": "verticalAlign",
                  "line": 132,
                  "lineEnd": 132,
                  "column": 8,
                  "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                  "default": "middle"
                },
                "children": {},
                "extended": 1
              },
              "align": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "defer": {},
              "enabled": {},
              "filter": {},
              "format": {},
              "formatter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "style": {},
              "textPath": {},
              "useHTML": {},
              "x": {},
              "y": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "interpolation": {
            "doclet": {
              "description": "Make the heatmap render its data points as an interpolated image.",
              "samples": [
                {
                  "name": "Interpolated heatmap image displaying user activity on a website",
                  "value": "highcharts/demo/heatmap-interpolation"
                },
                {
                  "name": "Interpolated heatmap toggle",
                  "value": "highcharts/series-heatmap/interpolation"
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.heatmap.interpolation",
              "name": "interpolation",
              "line": 56,
              "lineEnd": 63,
              "column": 4,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "legendSymbol": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "rectangle"
            },
            "meta": {
              "fullname": "plotOptions.heatmap.legendSymbol",
              "name": "legendSymbol",
              "line": 304,
              "lineEnd": 304,
              "column": 4,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
              "default": "rectangle"
            },
            "children": {},
            "extended": 1
          },
          "marker": {
            "doclet": {
              "exclude": ["radius", "enabledThreshold"],
              "since": "8.1",
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.marker"
            },
            "meta": {
              "fullname": "plotOptions.heatmap.marker",
              "name": "marker",
              "line": 140,
              "lineEnd": 143,
              "column": 4,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js"
            },
            "children": {
              "lineColor": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.heatmap.marker.lineColor",
                  "name": "lineColor",
                  "line": 168,
                  "lineEnd": 168,
                  "column": 8,
                  "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "states": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.scatter.marker.states"
                },
                "meta": {
                  "fullname": "plotOptions.heatmap.marker.states",
                  "name": "states",
                  "line": 169,
                  "lineEnd": 169,
                  "column": 8,
                  "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js"
                },
                "children": {
                  "hover": {
                    "doclet": {
                      "exclude": ["radius", "radiusPlus"],
                      "type": { "names": ["*"] },
                      "extends": "plotOptions.series.marker.states.hover"
                    },
                    "meta": {
                      "fullname": "plotOptions.heatmap.marker.states.hover",
                      "name": "hover",
                      "line": 170,
                      "lineEnd": 172,
                      "column": 12,
                      "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js"
                    },
                    "children": {
                      "height": {
                        "doclet": {
                          "description": "Set the marker's fixed height on hover state.",
                          "samples": [
                            {
                              "name": "70px fixed marker's width and height on hover",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-width",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number", "undefined"] },
                          "defaultvalue": "undefined",
                          "products": ["highcharts", "highmaps"]
                        },
                        "meta": {
                          "fullname": "plotOptions.heatmap.marker.states.hover.height",
                          "name": "height",
                          "line": 185,
                          "lineEnd": 195,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "heightPlus": {
                        "doclet": {
                          "description": "The number of pixels to increase the height of the\nselected point.",
                          "samples": [
                            {
                              "name": "20px greater width and height on hover",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-widthplus",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number", "undefined"] },
                          "defaultvalue": "undefined",
                          "products": ["highcharts", "highmaps"]
                        },
                        "meta": {
                          "fullname": "plotOptions.heatmap.marker.states.hover.heightPlus",
                          "name": "heightPlus",
                          "line": 208,
                          "lineEnd": 219,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "lineWidthPlus": {
                        "doclet": {
                          "description": "The additional line width for a hovered point.",
                          "samples": [
                            {
                              "name": "5 pixels wider lineWidth on hover",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-linewidthplus",
                              "products": ["highcharts"]
                            },
                            {
                              "name": "5 pixels wider lineWidth on hover",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-linewidthplus",
                              "products": ["highmaps"]
                            }
                          ],
                          "type": { "names": ["number"] },
                          "defaultvalue": 0
                        },
                        "meta": {
                          "fullname": "plotOptions.heatmap.marker.states.hover.lineWidthPlus",
                          "name": "lineWidthPlus",
                          "line": 174,
                          "lineEnd": 184,
                          "column": 16,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "default": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "width": {
                        "doclet": {
                          "description": "Set the marker's fixed width on hover state.",
                          "samples": [
                            {
                              "name": "70px fixed marker's width and height on hover",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-width",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number", "undefined"] },
                          "defaultvalue": "undefined",
                          "products": ["highcharts", "highmaps"]
                        },
                        "meta": {
                          "fullname": "plotOptions.heatmap.marker.states.hover.width",
                          "name": "width",
                          "line": 174,
                          "lineEnd": 184,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "widthPlus": {
                        "doclet": {
                          "description": "The number of pixels to increase the width of the\nselected point.",
                          "samples": [
                            {
                              "name": "20px greater width and height on hover",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-widthplus",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number", "undefined"] },
                          "defaultvalue": "undefined",
                          "products": ["highcharts", "highmaps"]
                        },
                        "meta": {
                          "fullname": "plotOptions.heatmap.marker.states.hover.widthPlus",
                          "name": "widthPlus",
                          "line": 196,
                          "lineEnd": 207,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "animation": {},
                      "enabled": {},
                      "fillColor": {},
                      "lineColor": {},
                      "lineWidth": {}
                    },
                    "extended": 1
                  },
                  "select": {
                    "doclet": {
                      "exclude": ["radius"],
                      "type": { "names": ["*"] },
                      "extends": "plotOptions.series.marker.states.select"
                    },
                    "meta": {
                      "fullname": "plotOptions.heatmap.marker.states.select",
                      "name": "select",
                      "line": 230,
                      "lineEnd": 232,
                      "column": 12,
                      "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js"
                    },
                    "children": {
                      "height": {
                        "doclet": {
                          "description": "Set the marker's fixed height on select state.",
                          "samples": [
                            {
                              "name": "70px fixed marker's width and height on hover",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-width",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number", "undefined"] },
                          "defaultvalue": "undefined",
                          "products": ["highcharts", "highmaps"]
                        },
                        "meta": {
                          "fullname": "plotOptions.heatmap.marker.states.select.height",
                          "name": "height",
                          "line": 245,
                          "lineEnd": 255,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "heightPlus": {
                        "doclet": {
                          "description": "The number of pixels to increase the height of the\nselected point.",
                          "samples": [
                            {
                              "name": "20px greater width and height on hover",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-widthplus",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number", "undefined"] },
                          "defaultvalue": "undefined",
                          "products": ["highcharts", "highmaps"]
                        },
                        "meta": {
                          "fullname": "plotOptions.heatmap.marker.states.select.heightPlus",
                          "name": "heightPlus",
                          "line": 268,
                          "lineEnd": 279,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "width": {
                        "doclet": {
                          "description": "Set the marker's fixed width on select state.",
                          "samples": [
                            {
                              "name": "70px fixed marker's width and height on hover",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-width",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number", "undefined"] },
                          "defaultvalue": "undefined",
                          "products": ["highcharts", "highmaps"]
                        },
                        "meta": {
                          "fullname": "plotOptions.heatmap.marker.states.select.width",
                          "name": "width",
                          "line": 234,
                          "lineEnd": 244,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "widthPlus": {
                        "doclet": {
                          "description": "The number of pixels to increase the width of the\nselected point.",
                          "samples": [
                            {
                              "name": "20px greater width and height on hover",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-widthplus",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number", "undefined"] },
                          "defaultvalue": "undefined",
                          "products": ["highcharts", "highmaps"]
                        },
                        "meta": {
                          "fullname": "plotOptions.heatmap.marker.states.select.widthPlus",
                          "name": "widthPlus",
                          "line": 256,
                          "lineEnd": 267,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "enabled": {},
                      "fillColor": {},
                      "lineColor": {},
                      "lineWidth": {}
                    },
                    "extended": 1
                  },
                  "normal": {}
                },
                "extended": 1
              },
              "symbol": {
                "doclet": {
                  "description": "A predefined shape or symbol for the marker. When undefined, the\nsymbol is pulled from options.symbols. Other possible values are\n`'circle'`, `'square'`,`'diamond'`, `'triangle'`,\n`'triangle-down'`, `'rect'`, and `'ellipse'`.\n\nAdditionally, the URL to a graphic can be given on this form:\n`'url(graphic.png)'`. Note that for the image to be applied to\nexported charts, its URL needs to be accessible by the export\nserver.\n\nCustom callbacks for symbol path generation can also be added to\n`Highcharts.SVGRenderer.prototype.symbols`. The callback is then\nused by its method name, as shown in the demo.",
                  "samples": [
                    {
                      "name": "Predefined, graphic and custom markers",
                      "value": "highcharts/plotoptions/series-marker-symbol/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Predefined, graphic and custom markers",
                      "value": "highcharts/plotoptions/series-marker-symbol/",
                      "products": ["highstock"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "defaultvalue": "rect"
                },
                "meta": {
                  "fullname": "plotOptions.heatmap.marker.symbol",
                  "name": "symbol",
                  "line": 145,
                  "lineEnd": 164,
                  "column": 8,
                  "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                  "default": "rect"
                },
                "children": {},
                "extended": 1
              },
              "enabled": {},
              "fillColor": {},
              "height": {},
              "lineWidth": {},
              "width": {}
            },
            "extended": 1
          },
          "nullColor": {
            "doclet": {
              "description": "The color applied to null points. In styled mode, a general CSS class\nis applied instead.",
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "defaultvalue": "#f7f7f7"
            },
            "meta": {
              "fullname": "plotOptions.heatmap.nullColor",
              "name": "nullColor",
              "line": 118,
              "lineEnd": 123,
              "column": 4,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
              "default": "#f7f7f7"
            },
            "children": {},
            "extended": 1
          },
          "pointPadding": {
            "doclet": {
              "description": "Padding between the points in the heatmap.",
              "type": { "names": ["number"] },
              "defaultvalue": "0",
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "plotOptions.heatmap.pointPadding",
              "name": "pointPadding",
              "line": 56,
              "lineEnd": 63,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "rowsize": {
            "doclet": {
              "description": "The row size - how many Y axis units each heatmap row should span.",
              "samples": [
                {
                  "name": "1 by default",
                  "value": "maps/demo/heatmap/",
                  "products": ["highcharts"]
                },
                {
                  "name": "1 by default",
                  "value": "maps/demo/heatmap/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "1",
              "since": "4.0.0",
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "plotOptions.heatmap.rowsize",
              "name": "rowsize",
              "line": 94,
              "lineEnd": 107,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.states"
            },
            "meta": {
              "fullname": "plotOptions.heatmap.states",
              "name": "states",
              "line": 289,
              "lineEnd": 289,
              "column": 4,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js"
            },
            "children": {
              "hover": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.series.states.hover"
                },
                "meta": {
                  "fullname": "plotOptions.heatmap.states.hover",
                  "name": "hover",
                  "line": 290,
                  "lineEnd": 290,
                  "column": 8,
                  "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js"
                },
                "children": {
                  "brightness": {
                    "doclet": {
                      "description": "How much to brighten the point on interaction. Requires the\nmain color to be defined in hex or rgb(a) format.\n\nIn styled mode, the hover brightening is by default replaced\nwith a fill-opacity set in the `.highcharts-point:hover`\nrule.",
                      "type": { "names": ["number"] },
                      "defaultvalue": 0.2
                    },
                    "meta": {
                      "fullname": "plotOptions.heatmap.states.hover.brightness",
                      "name": "brightness",
                      "line": 292,
                      "lineEnd": 292,
                      "column": 25,
                      "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                      "default": 0.2
                    },
                    "children": {},
                    "extended": 1
                  },
                  "animation": {},
                  "enabled": {},
                  "halo": {},
                  "lineWidth": {},
                  "lineWidthPlus": {},
                  "marker": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {},
              "select": {}
            },
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.heatmap.tooltip",
              "name": "tooltip",
              "line": 285,
              "lineEnd": 285,
              "column": 22,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js"
            },
            "children": {
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "{point.x}, {point.y}: {point.value}<br/>"
                },
                "meta": {
                  "fullname": "plotOptions.heatmap.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 287,
                  "lineEnd": 287,
                  "column": 8,
                  "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                  "default": "{point.x}, {point.y}: {point.value}<br/>"
                },
                "children": {},
                "extended": 1
              },
              "headerFormat": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "distance": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "colorAxis": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "histogram": {
        "doclet": {
          "description": "A histogram is a column series which represents the distribution of the\ndata set in the base series. Histogram splits data into bins and shows\ntheir frequencies.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `histogram` series are defined in\n   [plotOptions.histogram](plotOptions.histogram).\n3. Options for one single series are given in\n   [the series instance array](series.histogram).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        histogram: {\n            // shared options for all histogram series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'histogram'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.histogram.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === histogram) {\n    // code specific to the histogram series\n}\n```\n            ",
          "samples": [
            {
              "name": "Histogram",
              "value": "highcharts/demo/histogram/",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.column",
          "exclude": [
            "boostThreshold",
            "dragDrop",
            "pointInterval",
            "pointIntervalUnit",
            "stacking",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "since": "6.0.0",
          "requires": ["module:modules/histogram-bellcurve"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Histogram/HistogramSeriesDefaults.js",
          "name": "histogram",
          "fullname": "plotOptions.histogram",
          "line": 12,
          "lineEnd": 16,
          "column": 0
        },
        "children": {
          "binWidth": {
            "doclet": {
              "description": "Width of each bin. By default the bin's width is calculated as\n`(max - min) / number of bins`. This option takes precedence over\n[binsNumber](#plotOptions.histogram.binsNumber).",
              "type": { "names": ["number"] },
              "since": "6.0.0",
              "defaultvalue": null
            },
            "meta": {
              "fullname": "plotOptions.histogram.binWidth",
              "name": "binWidth",
              "line": 45,
              "lineEnd": 51,
              "column": 4,
              "filename": "code/es-modules/Series/Histogram/HistogramSeriesDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "binsNumber": {
            "doclet": {
              "description": "A preferable number of bins. It is a suggestion, so a histogram may\nhave a different number of bins. By default it is set to the square\nroot of the base series' data length. Available options are:\n`square-root`, `sturges`, `rice`. You can also define a function\nwhich takes a `baseSeries` as a parameter and should return a\npositive integer.",
              "type": {
                "names": [
                  "\"square-root\"",
                  "\"sturges\"",
                  "\"rice\"",
                  "number",
                  "function"
                ]
              },
              "since": "6.0.0",
              "defaultvalue": null
            },
            "meta": {
              "fullname": "plotOptions.histogram.binsNumber",
              "name": "binsNumber",
              "line": 34,
              "lineEnd": 43,
              "column": 4,
              "filename": "code/es-modules/Series/Histogram/HistogramSeriesDefaults.js",
              "default": "square-root"
            },
            "children": {},
            "extended": 1
          },
          "groupPadding": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0 },
            "meta": {
              "fullname": "plotOptions.histogram.groupPadding",
              "name": "groupPadding",
              "line": 54,
              "lineEnd": 54,
              "column": 4,
              "filename": "code/es-modules/Series/Histogram/HistogramSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "grouping": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.histogram.grouping",
              "name": "grouping",
              "line": 55,
              "lineEnd": 55,
              "column": 4,
              "filename": "code/es-modules/Series/Histogram/HistogramSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "pointPadding": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0 },
            "meta": {
              "fullname": "plotOptions.histogram.pointPadding",
              "name": "pointPadding",
              "line": 53,
              "lineEnd": 53,
              "column": 4,
              "filename": "code/es-modules/Series/Histogram/HistogramSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "pointPlacement": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "between"
            },
            "meta": {
              "fullname": "plotOptions.histogram.pointPlacement",
              "name": "pointPlacement",
              "line": 56,
              "lineEnd": 56,
              "column": 4,
              "filename": "code/es-modules/Series/Histogram/HistogramSeriesDefaults.js",
              "default": "between"
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.histogram.tooltip",
              "name": "tooltip",
              "line": 57,
              "lineEnd": 57,
              "column": 4,
              "filename": "code/es-modules/Series/Histogram/HistogramSeriesDefaults.js"
            },
            "children": {
              "headerFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": ""
                },
                "meta": {
                  "fullname": "plotOptions.histogram.tooltip.headerFormat",
                  "name": "headerFormat",
                  "line": 58,
                  "lineEnd": 58,
                  "column": 8,
                  "filename": "code/es-modules/Series/Histogram/HistogramSeriesDefaults.js",
                  "default": ""
                },
                "children": {},
                "extended": 1
              },
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "<span style=\"font-size: 0.8em\">{point.x} - {point.x2}</span><br/><span style=\"color:{point.color}\">●</span> {series.name} <b>{point.y}</b><br/>"
                },
                "meta": {
                  "fullname": "plotOptions.histogram.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 59,
                  "lineEnd": 59,
                  "column": 8,
                  "filename": "code/es-modules/Series/Histogram/HistogramSeriesDefaults.js",
                  "default": "<span style=\"font-size: 0.8em\">{point.x} - {point.x2}</span><br/><span style=\"color:{point.color}\">●</span> {series.name} <b>{point.y}</b><br/>"
                },
                "children": {},
                "extended": 1
              },
              "distance": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupZPadding": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointRange": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "item": {
        "doclet": {
          "description": "An item chart is an infographic chart where a number of items are laid\nout in either a rectangular or circular pattern. It can be used to\nvisualize counts within a group, or for the circular pattern, typically\na parliament.\n\nThe circular layout has much in common with a pie chart. Many of the item\nseries options, like `center`, `size` and data label positioning, are\ninherited from the pie series and don't apply for rectangular layouts.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `item` series are defined in\n   [plotOptions.item](plotOptions.item).\n3. Options for one single series are given in\n   [the series instance array](series.item).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        item: {\n            // shared options for all item series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'item'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.item.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === item) {\n    // code specific to the item series\n}\n```\n            ",
          "samples": [
            {
              "name": "Parliament chart (circular item chart)",
              "value": "highcharts/demo/parliament-chart"
            },
            {
              "name": "Rectangular item chart",
              "value": "highcharts/series-item/rectangular"
            },
            {
              "name": "Infographic with symbols",
              "value": "highcharts/series-item/symbols"
            }
          ],
          "extends": "plotOptions.pie",
          "since": "7.1.0",
          "products": ["highcharts"],
          "exclude": [
            "borderColor",
            "borderWidth",
            "depth",
            "linecap",
            "shadow",
            "slicedOffset"
          ],
          "requires": ["module:modules/item-series"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Item/ItemSeriesDefaults.js",
          "name": "item",
          "fullname": "plotOptions.item",
          "line": 16,
          "lineEnd": 20,
          "column": 0
        },
        "children": {
          "crisp": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.item.crisp",
              "name": "crisp",
              "line": 97,
              "lineEnd": 97,
              "column": 4,
              "filename": "code/es-modules/Series/Item/ItemSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "endAngle": {
            "doclet": {
              "description": "In circular view, the end angle of the item layout, in degrees where\n0 is up.",
              "samples": [
                {
                  "name": "Parliament chart",
                  "value": "highcharts/demo/parliament-chart"
                }
              ],
              "type": { "names": ["undefined", "number"] },
              "since": "7.1.0",
              "defaultvalue": null
            },
            "meta": {
              "fullname": "plotOptions.item.endAngle",
              "name": "endAngle",
              "line": 47,
              "lineEnd": 54,
              "column": 4,
              "filename": "code/es-modules/Series/Item/ItemSeriesDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "innerSize": {
            "doclet": {
              "description": "In circular view, the size of the inner diameter of the circle. Can\nbe a percentage or pixel value. Percentages are relative to the outer\nperimeter. Pixel values are given as integers.\n\nIf the `rows` option is set, it overrides the `innerSize` setting.",
              "samples": [
                {
                  "name": "Parliament chart",
                  "value": "highcharts/demo/parliament-chart"
                }
              ],
              "type": { "names": ["string", "number"] },
              "since": "7.1.0",
              "defaultvalue": "40%"
            },
            "meta": {
              "fullname": "plotOptions.item.innerSize",
              "name": "innerSize",
              "line": 56,
              "lineEnd": 66,
              "column": 4,
              "filename": "code/es-modules/Series/Item/ItemSeriesDefaults.js",
              "default": "40%"
            },
            "children": {},
            "extended": 1
          },
          "itemPadding": {
            "doclet": {
              "description": "The padding between the items, given in relative size where the size\nof the item is 1.",
              "type": { "names": ["number"] },
              "since": "7.1.0",
              "defaultvalue": 0.1
            },
            "meta": {
              "fullname": "plotOptions.item.itemPadding",
              "name": "itemPadding",
              "line": 68,
              "lineEnd": 72,
              "column": 4,
              "filename": "code/es-modules/Series/Item/ItemSeriesDefaults.js",
              "default": 0.1
            },
            "children": {},
            "extended": 1
          },
          "layout": {
            "doclet": {
              "description": "The layout of the items in rectangular view. Can be either\n`horizontal` or `vertical`.",
              "samples": [
                {
                  "name": "Horizontal layout",
                  "value": "highcharts/series-item/symbols"
                }
              ],
              "type": { "names": ["string"] },
              "since": "7.1.0",
              "defaultvalue": "vertical"
            },
            "meta": {
              "fullname": "plotOptions.item.layout",
              "name": "layout",
              "line": 74,
              "lineEnd": 80,
              "column": 4,
              "filename": "code/es-modules/Series/Item/ItemSeriesDefaults.js",
              "default": "vertical"
            },
            "children": {},
            "extended": 1
          },
          "marker": {
            "doclet": { "extends": "plotOptions.series.marker" },
            "meta": {
              "fullname": "plotOptions.item.marker",
              "name": "marker",
              "line": 82,
              "lineEnd": 84,
              "column": 4,
              "filename": "code/es-modules/Series/Item/ItemSeriesDefaults.js"
            },
            "children": {
              "enabled": {},
              "enabledThreshold": {},
              "fillColor": {},
              "height": {},
              "lineColor": {},
              "lineWidth": {},
              "radius": {},
              "states": {},
              "symbol": {},
              "width": {}
            },
            "extended": 1
          },
          "rows": {
            "doclet": {
              "description": "The number of rows to display in the rectangular or circular view. If\nthe `innerSize` is set, it will be overridden by the `rows` setting.",
              "samples": [
                {
                  "name": "Fixed row count",
                  "value": "highcharts/series-item/rows-columns"
                }
              ],
              "type": { "names": ["number"] },
              "since": "7.1.0",
              "defaultvalue": null
            },
            "meta": {
              "fullname": "plotOptions.item.rows",
              "name": "rows",
              "line": 88,
              "lineEnd": 95,
              "column": 4,
              "filename": "code/es-modules/Series/Item/ItemSeriesDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "showInLegend": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.item.showInLegend",
              "name": "showInLegend",
              "line": 98,
              "lineEnd": 98,
              "column": 4,
              "filename": "code/es-modules/Series/Item/ItemSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "startAngle": {
            "doclet": {
              "description": "In circular view, the start angle of the item layout, in degrees\nwhere 0 is up.",
              "samples": [
                {
                  "name": "Parliament chart",
                  "value": "highcharts/demo/parliament-chart"
                }
              ],
              "type": { "names": ["undefined", "number"] },
              "since": "7.1.0",
              "defaultvalue": null
            },
            "meta": {
              "fullname": "plotOptions.item.startAngle",
              "name": "startAngle",
              "line": 99,
              "lineEnd": 106,
              "column": 4,
              "filename": "code/es-modules/Series/Item/ItemSeriesDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "borderRadius": {},
          "center": {},
          "clip": {},
          "color": {},
          "colors": {},
          "dataLabels": {},
          "events": {},
          "fillColor": {},
          "ignoreHiddenPoint": {},
          "inactiveOtherPoints": {},
          "minSize": {},
          "point": {},
          "size": {},
          "states": {},
          "stickyTracking": {},
          "thickness": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "includeInDataExport": {},
          "keys": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "onPoint": {},
          "opacity": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "visible": {}
        },
        "extended": 1
      },
      "line": {
        "doclet": {
          "description": "A line series displays information as a series of data points connected by\nstraight line segments.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `line` series are defined in\n   [plotOptions.line](plotOptions.line).\n3. Options for one single series are given in\n   [the series instance array](series.line).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        line: {\n            // shared options for all line series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'line'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.line.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === line) {\n    // code specific to the line series\n}\n```\n            ",
          "samples": [
            {
              "name": "Line chart",
              "value": "highcharts/demo/line-chart/",
              "products": ["highcharts"]
            },
            {
              "name": "Line chart",
              "value": "stock/demo/basic-line/",
              "products": ["highstock"]
            }
          ],
          "extends": "plotOptions.series",
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "plotOptions.line",
          "name": "line",
          "line": 245,
          "lineEnd": 257,
          "filename": "code/es-modules/Series/Line/LineSeries.js",
          "column": 0
        },
        "children": {
          "linecap": {
            "doclet": {
              "description": "The SVG value used for the `stroke-linecap` and `stroke-linejoin`\nof a line graph. Round means that lines are rounded in the ends and\nbends.",
              "type": { "names": ["Highcharts.SeriesLinecapValue"] },
              "defaultvalue": "round",
              "since": "3.0.7"
            },
            "meta": {
              "fullname": "plotOptions.line.linecap",
              "name": "linecap",
              "line": 23,
              "lineEnd": 32,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "states": {},
          "step": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "lollipop": {
        "doclet": {
          "description": "The lollipop series is a carteseian series with a line anchored from\nthe x axis and a dot at the end to mark the value.\nRequires `highcharts-more.js`, `modules/dumbbell.js` and\n`modules/lollipop.js`.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `lollipop` series are defined in\n   [plotOptions.lollipop](plotOptions.lollipop).\n3. Options for one single series are given in\n   [the series instance array](series.lollipop).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        lollipop: {\n            // shared options for all lollipop series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'lollipop'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.lollipop.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === lollipop) {\n    // code specific to the lollipop series\n}\n```\n            ",
          "samples": [
            {
              "name": "Lollipop chart",
              "value": "highcharts/demo/lollipop/",
              "products": ["highcharts"]
            },
            {
              "name": "Styled mode",
              "value": "highcharts/series-dumbbell/styled-mode-dumbbell/",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.dumbbell",
          "products": ["highcharts", "highstock"],
          "exclude": [
            "fillColor",
            "fillOpacity",
            "lineWidth",
            "stack",
            "stacking",
            "lowColor",
            "stickyTracking",
            "trackByArea"
          ],
          "since": "8.0.0"
        },
        "meta": {
          "filename": "code/es-modules/Series/Lollipop/LollipopSeries.js",
          "name": "lollipop",
          "fullname": "plotOptions.lollipop",
          "line": 73,
          "lineEnd": 77,
          "column": 0
        },
        "children": {
          "dataLabels": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.dumbbell.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.lollipop.dataLabels",
              "name": "dataLabels",
              "line": 134,
              "lineEnd": 134,
              "column": 4,
              "filename": "code/es-modules/Series/Lollipop/LollipopSeries.js"
            },
            "children": {
              "align": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.lollipop.dataLabels.align",
                  "name": "align",
                  "line": 135,
                  "lineEnd": 135,
                  "column": 8,
                  "filename": "code/es-modules/Series/Lollipop/LollipopSeries.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.lollipop.dataLabels.verticalAlign",
                  "name": "verticalAlign",
                  "line": 136,
                  "lineEnd": 136,
                  "column": 8,
                  "filename": "code/es-modules/Series/Lollipop/LollipopSeries.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "xHigh": {},
              "xLow": {},
              "yHigh": {},
              "yLow": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "crop": {},
              "defer": {},
              "enabled": {},
              "filter": {},
              "format": {},
              "formatter": {},
              "inside": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "style": {},
              "textPath": {},
              "useHTML": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "grouping": {
            "doclet": {
              "description": "Whether to group non-stacked lollipop points or to let them\nrender independent of each other. Non-grouped lollipop points\nwill be laid out individually and overlap each other.",
              "samples": [
                {
                  "name": "Multiple lollipop series with grouping",
                  "value": "highcharts/series-lollipop/enabled-grouping/"
                },
                {
                  "name": "Multiple lollipop series with disabled grouping",
                  "value": "highcharts/series-lollipop/disabled-grouping/"
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "true",
              "since": "8.0.0",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.lollipop.grouping",
              "name": "grouping",
              "line": 103,
              "lineEnd": 118,
              "filename": "code/es-modules/Series/Lollipop/LollipopSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "pointRange": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 1 },
            "meta": {
              "fullname": "plotOptions.lollipop.pointRange",
              "name": "pointRange",
              "line": 138,
              "lineEnd": 138,
              "column": 4,
              "filename": "code/es-modules/Series/Lollipop/LollipopSeries.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "connectorColor": {},
          "connectorWidth": {},
          "crisp": {},
          "groupPadding": {},
          "legendSymbol": {},
          "lowMarker": {},
          "pointPadding": {},
          "states": {},
          "color": {},
          "colorKey": {},
          "dragDrop": {},
          "shadow": {},
          "threshold": {},
          "tooltip": {},
          "lineColor": {},
          "negativeFillColor": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "connectEnds": {},
          "connectNulls": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "step": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "networkgraph": {
        "doclet": {
          "description": "A networkgraph is a type of relationship chart, where connnections\n(links) attracts nodes (points) and other nodes repulse each other.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `networkgraph` series are defined in\n   [plotOptions.networkgraph](plotOptions.networkgraph).\n3. Options for one single series are given in\n   [the series instance array](series.networkgraph).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        networkgraph: {\n            // shared options for all networkgraph series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'networkgraph'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.networkgraph.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === networkgraph) {\n    // code specific to the networkgraph series\n}\n```\n            ",
          "extends": "plotOptions.line",
          "products": ["highcharts"],
          "samples": [
            {
              "name": "Networkgraph",
              "value": "highcharts/demo/network-graph/"
            }
          ],
          "since": "7.0.0",
          "exclude": [
            "boostThreshold",
            "animation",
            "animationLimit",
            "connectEnds",
            "colorAxis",
            "colorKey",
            "connectNulls",
            "cropThreshold",
            "dragDrop",
            "getExtremesFromAll",
            "label",
            "linecap",
            "negativeColor",
            "pointInterval",
            "pointIntervalUnit",
            "pointPlacement",
            "pointStart",
            "softThreshold",
            "stack",
            "stacking",
            "step",
            "threshold",
            "xAxis",
            "yAxis",
            "zoneAxis",
            "dataSorting",
            "boostBlending"
          ],
          "requires": ["module:modules/networkgraph"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
          "name": "networkgraph",
          "fullname": "plotOptions.networkgraph",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "dataLabels": {
            "doclet": {
              "samples": [
                {
                  "name": "Networkgraph with labels on links",
                  "value": "highcharts/series-networkgraph/link-datalabels"
                },
                {
                  "name": "Networkgraph with labels around nodes",
                  "value": "highcharts/series-networkgraph/textpath-datalabels"
                },
                {
                  "name": "Data labels moved into the nodes",
                  "value": "highcharts/series-networkgraph/link-datalabels"
                },
                {
                  "name": "Data labels moved under the links",
                  "value": "highcharts/series-networkgraph/link-datalabels"
                }
              ],
              "declare": "Highcharts.SeriesNetworkgraphDataLabelsOptionsObject",
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.networkgraph.dataLabels",
              "name": "dataLabels",
              "line": 96,
              "lineEnd": 109,
              "column": 4,
              "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
            },
            "children": {
              "animation": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.series.dataLabels.animation"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.dataLabels.animation",
                  "name": "animation",
                  "line": 177,
                  "lineEnd": 177,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
                },
                "children": {
                  "defer": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": 1000
                    },
                    "meta": {
                      "fullname": "plotOptions.networkgraph.dataLabels.animation.defer",
                      "name": "defer",
                      "line": 178,
                      "lineEnd": 178,
                      "column": 12,
                      "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                      "default": 1000
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "defer": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.dataLabels.defer",
                  "name": "defer",
                  "line": 176,
                  "lineEnd": 176,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "format": {
                "doclet": {
                  "description": "The\n[format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\nspecifying what to show for _node_ in the networkgraph. In v7.0\ndefaults to `{key}`, since v7.1 defaults to `undefined` and\n`formatter` is used instead.",
                  "type": { "names": ["string"] },
                  "since": "7.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.dataLabels.format",
                  "name": "format",
                  "line": 111,
                  "lineEnd": 121,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "formatter": {
                "doclet": {
                  "description": "Callback JavaScript function to format the data label for a node.\nNote that if a `format` is defined, the format takes precedence\nand the formatter is ignored.",
                  "since": "7.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.dataLabels.formatter",
                  "name": "formatter",
                  "line": 111,
                  "lineEnd": 121,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
                },
                "children": {},
                "extended": 1
              },
              "linkFormat": {
                "doclet": {
                  "description": "The\n[format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\nspecifying what to show for _links_ in the networkgraph.\n(Default: `undefined`)",
                  "type": { "names": ["string"] },
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.dataLabels.linkFormat",
                  "name": "linkFormat",
                  "line": 133,
                  "lineEnd": 142,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "linkFormatter": {
                "doclet": {
                  "description": "Callback to format data labels for _links_ in the sankey diagram.\nThe `linkFormat` option takes precedence over the\n`linkFormatter`.",
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.dataLabels.linkFormatter",
                  "name": "linkFormatter",
                  "line": 133,
                  "lineEnd": 142,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
                },
                "children": {},
                "extended": 1
              },
              "linkTextPath": {
                "doclet": {
                  "description": "Options for a _link_ label text which should follow link\nconnection. Border and background are disabled for a label that\nfollows a path.\n\n**Note:** Only SVG-based renderer supports this option. Setting\n`useHTML` to true will disable this option.",
                  "extends": "plotOptions.networkgraph.dataLabels.textPath",
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.dataLabels.linkTextPath",
                  "name": "linkTextPath",
                  "line": 156,
                  "lineEnd": 166,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
                },
                "children": {
                  "enabled": {
                    "doclet": {
                      "type": { "names": ["boolean"] },
                      "defaultvalue": true
                    },
                    "meta": {
                      "fullname": "plotOptions.networkgraph.dataLabels.linkTextPath.enabled",
                      "name": "enabled",
                      "line": 168,
                      "lineEnd": 168,
                      "column": 12,
                      "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                      "default": true
                    },
                    "children": {},
                    "extended": 1
                  },
                  "attributes": {}
                },
                "extended": 1
              },
              "style": {
                "doclet": { "type": { "names": ["*"] } },
                "meta": {
                  "fullname": "plotOptions.networkgraph.dataLabels.style",
                  "name": "style",
                  "line": 173,
                  "lineEnd": 173,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
                },
                "children": {
                  "transition": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "opacity 2000ms"
                    },
                    "meta": {
                      "fullname": "plotOptions.networkgraph.dataLabels.style.transition",
                      "name": "transition",
                      "line": 174,
                      "lineEnd": 174,
                      "column": 12,
                      "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                      "default": "opacity 2000ms"
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "textPath": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.series.dataLabels.textPath"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.dataLabels.textPath",
                  "name": "textPath",
                  "line": 170,
                  "lineEnd": 170,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
                },
                "children": {
                  "enabled": {
                    "doclet": {
                      "type": { "names": ["boolean"] },
                      "defaultvalue": false
                    },
                    "meta": {
                      "fullname": "plotOptions.networkgraph.dataLabels.textPath.enabled",
                      "name": "enabled",
                      "line": 171,
                      "lineEnd": 171,
                      "column": 12,
                      "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                      "default": false
                    },
                    "children": {},
                    "extended": 1
                  },
                  "attributes": {}
                },
                "extended": 1
              },
              "align": {},
              "alignTo": {},
              "allowOverlap": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "crop": {},
              "enabled": {},
              "filter": {},
              "inside": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "useHTML": {},
              "verticalAlign": {},
              "x": {},
              "y": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "draggable": {
            "doclet": {
              "description": "Flag to determine if nodes are draggable or not.",
              "since": "7.0.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.networkgraph.draggable",
              "name": "draggable",
              "line": 208,
              "lineEnd": 211,
              "column": 4,
              "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "inactiveOtherPoints": {
            "doclet": {
              "defaultvalue": "true",
              "extends": "plotOptions.series.inactiveOtherPoints"
            },
            "meta": {
              "fullname": "plotOptions.networkgraph.inactiveOtherPoints",
              "name": "inactiveOtherPoints",
              "line": 41,
              "lineEnd": 45,
              "column": 4,
              "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "layoutAlgorithm": {
            "doclet": { "type": { "names": ["*"] } },
            "meta": {
              "fullname": "plotOptions.networkgraph.layoutAlgorithm",
              "name": "layoutAlgorithm",
              "line": 213,
              "lineEnd": 213,
              "column": 4,
              "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
            },
            "children": {
              "approximation": {
                "doclet": {
                  "description": "Approximation used to calculate repulsive forces affecting nodes.\nBy default, when calculating net force, nodes are compared\nagainst each other, which gives O(N^2) complexity. Using\nBarnes-Hut approximation, we decrease this to O(N log N), but the\nresulting graph will have different layout. Barnes-Hut\napproximation divides space into rectangles via quad tree, where\nforces exerted on nodes are calculated directly for nearby cells,\nand for all others, cells are treated as a separate node with\ncenter of mass.",
                  "see": [
                    "[layoutAlgorithm.theta](#series.networkgraph.layoutAlgorithm.theta)"
                  ],
                  "samples": [
                    {
                      "name": "A graph with Barnes-Hut approximation",
                      "value": "highcharts/series-networkgraph/barnes-hut-approximation/"
                    }
                  ],
                  "type": { "names": ["\"barnes-hut\"", "\"none\""] },
                  "since": "7.1.0",
                  "defaultvalue": "none"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.layoutAlgorithm.approximation",
                  "name": "approximation",
                  "line": 325,
                  "lineEnd": 344,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "default": "none"
                },
                "children": {},
                "extended": 1
              },
              "attractiveForce": {
                "doclet": {
                  "description": "Attraction force applied on a node which is conected to another\nnode by a link. Passed are two arguments:\n- `d` - which is current distance between two nodes\n- `k` - which is desired distance between two nodes\n\nIn `verlet` integration, defaults to:\n`function (d, k) { return (k - d) / d; }`",
                  "see": [
                    "[layoutAlgorithm.integration](#series.networkgraph.layoutAlgorithm.integration)"
                  ],
                  "samples": [
                    {
                      "name": "Custom forces with Euler integration",
                      "value": "highcharts/series-networkgraph/forces/"
                    },
                    {
                      "name": "Custom forces with Verlet integration",
                      "value": "highcharts/series-networkgraph/cuboids/"
                    }
                  ],
                  "type": { "names": ["function"] },
                  "defaultvalue": "function (d, k) { return k * k / d; }"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.layoutAlgorithm.attractiveForce",
                  "name": "attractiveForce",
                  "line": 233,
                  "lineEnd": 252,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "enableSimulation": {
                "doclet": {
                  "description": "Experimental. Enables live simulation of the algorithm\nimplementation. All nodes are animated as the forces applies on\nthem.",
                  "samples": [
                    {
                      "name": "Live simulation enabled",
                      "value": "highcharts/demo/network-graph/"
                    }
                  ],
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.layoutAlgorithm.enableSimulation",
                  "name": "enableSimulation",
                  "line": 289,
                  "lineEnd": 296,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "friction": {
                "doclet": {
                  "description": "Friction applied on forces to prevent nodes rushing to fast to\nthe desired positions.",
                  "type": { "names": ["number"] },
                  "defaultvalue": -0.981
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.layoutAlgorithm.friction",
                  "name": "friction",
                  "line": 390,
                  "lineEnd": 393,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "default": -0.981
                },
                "children": {},
                "extended": 1
              },
              "gravitationalConstant": {
                "doclet": {
                  "description": "Gravitational const used in the barycenter force of the\nalgorithm.",
                  "samples": [
                    {
                      "name": "Custom forces with Euler integration",
                      "value": "highcharts/series-networkgraph/forces/"
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": 0.0625
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.layoutAlgorithm.gravitationalConstant",
                  "name": "gravitationalConstant",
                  "line": 382,
                  "lineEnd": 388,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "default": 0.0625
                },
                "children": {},
                "extended": 1
              },
              "initialPositionRadius": {
                "doclet": {
                  "description": "When `initialPositions` are set to 'circle',\n`initialPositionRadius` is a distance from the center of circle,\nin which nodes are created.",
                  "type": { "names": ["number"] },
                  "defaultvalue": "1",
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.layoutAlgorithm.initialPositionRadius",
                  "name": "initialPositionRadius",
                  "line": 279,
                  "lineEnd": 287,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "default": 1
                },
                "children": {},
                "extended": 1
              },
              "initialPositions": {
                "doclet": {
                  "description": "Initial layout algorithm for positioning nodes. Can be one of\nbuilt-in options (\"circle\", \"random\") or a function where\npositions should be set on each node (`this.nodes`) as\n`node.plotX` and `node.plotY`",
                  "samples": [
                    {
                      "name": "Initial positions with callback",
                      "value": "highcharts/series-networkgraph/initial-positions/"
                    }
                  ],
                  "type": { "names": ["\"circle\"", "\"random\"", "function"] },
                  "defaultvalue": "circle"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.layoutAlgorithm.initialPositions",
                  "name": "initialPositions",
                  "line": 214,
                  "lineEnd": 232,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "default": "circle"
                },
                "children": {},
                "extended": 1
              },
              "integration": {
                "doclet": {
                  "description": "Integration type. Available options are `'euler'` and `'verlet'`.\nIntegration determines how forces are applied on particles. In\nEuler integration, force is applied direct as\n`newPosition += velocity;`.\nIn Verlet integration, new position is based on a previous\nposition without velocity:\n`newPosition += previousPosition - newPosition`.\n\nNote that different integrations give different results as forces\nare different.\n\nIn Highcharts v7.0.x only `'euler'` integration was supported.",
                  "samples": [
                    {
                      "name": "Comparison of Verlet and Euler integrations",
                      "value": "highcharts/series-networkgraph/integration-comparison/"
                    }
                  ],
                  "type": { "names": ["\"euler\"", "\"verlet\""] },
                  "since": "7.1.0",
                  "defaultvalue": "euler"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.layoutAlgorithm.integration",
                  "name": "integration",
                  "line": 353,
                  "lineEnd": 373,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "default": "euler"
                },
                "children": {},
                "extended": 1
              },
              "linkLength": {
                "doclet": {
                  "description": "Ideal length (px) of the link between two nodes. When not\ndefined, length is calculated as:\n`Math.pow(availableWidth * availableHeight / nodesLength, 0.4);`\n\nNote: Because of the algorithm specification, length of each link\nmight be not exactly as specified.",
                  "samples": [
                    {
                      "name": "Numerical values",
                      "value": "highcharts/series-networkgraph/styled-links/"
                    }
                  ],
                  "type": { "names": ["number"] }
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.layoutAlgorithm.linkLength",
                  "name": "linkLength",
                  "line": 253,
                  "lineEnd": 266,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "maxIterations": {
                "doclet": {
                  "description": "Max number of iterations before algorithm will stop. In general,\nalgorithm should find positions sooner, but when rendering huge\nnumber of nodes, it is recommended to increase this value as\nfinding perfect graph positions can require more time.",
                  "type": { "names": ["number"] },
                  "defaultvalue": 1000
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.layoutAlgorithm.maxIterations",
                  "name": "maxIterations",
                  "line": 375,
                  "lineEnd": 380,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "default": 1000
                },
                "children": {},
                "extended": 1
              },
              "maxSpeed": {
                "doclet": {
                  "description": "Verlet integration only.\nMax speed that node can get in one iteration. In terms of\nsimulation, it's a maximum translation (in pixels) that node can\nmove (in both, x and y, dimensions). While `friction` is applied\non all nodes, max speed is applied only for nodes that move very\nfast, for example small or disconnected ones.",
                  "see": [
                    "[layoutAlgorithm.integration](#series.networkgraph.layoutAlgorithm.integration)",
                    "[layoutAlgorithm.friction](#series.networkgraph.layoutAlgorithm.friction)"
                  ],
                  "since": "7.1.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 10
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.layoutAlgorithm.maxSpeed",
                  "name": "maxSpeed",
                  "line": 311,
                  "lineEnd": 323,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "default": 10
                },
                "children": {},
                "extended": 1
              },
              "repulsiveForce": {
                "doclet": {
                  "description": "Repulsive force applied on a node. Passed are two arguments:\n- `d` - which is current distance between two nodes\n- `k` - which is desired distance between two nodes\n\nIn `verlet` integration, defaults to:\n`function (d, k) { return (k - d) / d * (k > d ? 1 : 0) }`",
                  "see": [
                    "[layoutAlgorithm.integration](#series.networkgraph.layoutAlgorithm.integration)"
                  ],
                  "samples": [
                    {
                      "name": "Custom forces with Euler integration",
                      "value": "highcharts/series-networkgraph/forces/"
                    },
                    {
                      "name": "Custom forces with Verlet integration",
                      "value": "highcharts/series-networkgraph/cuboids/"
                    }
                  ],
                  "type": { "names": ["function"] },
                  "defaultvalue": "function (d, k) { return k * k / d; }"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.layoutAlgorithm.repulsiveForce",
                  "name": "repulsiveForce",
                  "line": 214,
                  "lineEnd": 232,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "theta": {
                "doclet": {
                  "description": "Barnes-Hut approximation only.\nDeteremines when distance between cell and node is small enough\nto calculate forces. Value of `theta` is compared directly with\nquotient `s / d`, where `s` is the size of the cell, and `d` is\ndistance between center of cell's mass and currently compared\nnode.",
                  "see": [
                    "[layoutAlgorithm.approximation](#series.networkgraph.layoutAlgorithm.approximation)"
                  ],
                  "since": "7.1.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 0.5
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.layoutAlgorithm.theta",
                  "name": "theta",
                  "line": 298,
                  "lineEnd": 309,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "default": 0.5
                },
                "children": {},
                "extended": 1
              },
              "type": {
                "doclet": {
                  "description": "Type of the algorithm used when positioning nodes.",
                  "type": { "names": ["\"reingold-fruchterman\""] },
                  "defaultvalue": "reingold-fruchterman"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.layoutAlgorithm.type",
                  "name": "type",
                  "line": 346,
                  "lineEnd": 351,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "default": "reingold-fruchterman"
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "link": {
            "doclet": {
              "description": "Link style options",
              "since": "7.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.networkgraph.link",
              "name": "link",
              "line": 181,
              "lineEnd": 184,
              "column": 4,
              "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
            },
            "children": {
              "color": {
                "doclet": {
                  "description": "Color of the link between two nodes.",
                  "since": "7.0.0",
                  "type": { "names": ["string"] },
                  "defaultvalue": "rgba(100, 100, 100, 0.5)"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.link.color",
                  "name": "color",
                  "line": 186,
                  "lineEnd": 191,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "default": "rgba(100, 100, 100, 0.5)"
                },
                "children": {},
                "extended": 1
              },
              "dashStyle": {
                "doclet": {
                  "description": "A name for the dash style to use for links.",
                  "type": { "names": ["string"] },
                  "since": "7.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.link.dashStyle",
                  "name": "dashStyle",
                  "line": 186,
                  "lineEnd": 191,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "opacity": {
                "doclet": {
                  "description": "Opacity of the link between two nodes.",
                  "type": { "names": ["number"] },
                  "defaultvalue": "1",
                  "since": "7.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.link.opacity",
                  "name": "opacity",
                  "line": 192,
                  "lineEnd": 198,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "width": {
                "doclet": {
                  "description": "Width (px) of the link between two nodes.",
                  "since": "7.0.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 1
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.link.width",
                  "name": "width",
                  "line": 203,
                  "lineEnd": 205,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "default": 1
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "marker": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.marker"
            },
            "meta": {
              "fullname": "plotOptions.networkgraph.marker",
              "name": "marker",
              "line": 47,
              "lineEnd": 47,
              "column": 4,
              "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
            },
            "children": {
              "enabled": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.marker.enabled",
                  "name": "enabled",
                  "line": 48,
                  "lineEnd": 48,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "states": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.series.marker.states"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.marker.states",
                  "name": "states",
                  "line": 49,
                  "lineEnd": 49,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
                },
                "children": {
                  "inactive": {
                    "doclet": {
                      "description": "The opposite state of a hover for a single point node.\nApplied to all not connected nodes to the hovered one.",
                      "declare": "Highcharts.PointStatesInactiveOptionsObject",
                      "type": { "names": ["*"] }
                    },
                    "meta": {
                      "fullname": "plotOptions.networkgraph.marker.states.inactive",
                      "name": "inactive",
                      "line": 50,
                      "lineEnd": 55,
                      "column": 12,
                      "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
                    },
                    "children": {
                      "animation": {
                        "doclet": {
                          "description": "Animation when not hovering over the node.",
                          "type": {
                            "names": [
                              "boolean",
                              "Partial.<Highcharts.AnimationOptionsObject>"
                            ]
                          }
                        },
                        "meta": {
                          "fullname": "plotOptions.networkgraph.marker.states.inactive.animation",
                          "name": "animation",
                          "line": 61,
                          "lineEnd": 65,
                          "column": 16,
                          "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
                        },
                        "children": {
                          "duration": {
                            "doclet": {
                              "internal": true,
                              "type": { "names": ["number"] },
                              "defaultvalue": 50
                            },
                            "meta": {
                              "fullname": "plotOptions.networkgraph.marker.states.inactive.animation.duration",
                              "name": "duration",
                              "line": 67,
                              "lineEnd": 67,
                              "column": 20,
                              "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                              "default": 50
                            },
                            "children": {},
                            "extended": 1
                          }
                        },
                        "extended": 1
                      },
                      "opacity": {
                        "doclet": {
                          "description": "Opacity of inactive markers.",
                          "type": { "names": ["number"] },
                          "defaultvalue": 0.3
                        },
                        "meta": {
                          "fullname": "plotOptions.networkgraph.marker.states.inactive.opacity",
                          "name": "opacity",
                          "line": 57,
                          "lineEnd": 59,
                          "column": 16,
                          "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                          "default": 0.3
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "extended": 1
                  },
                  "hover": {},
                  "normal": {},
                  "select": {}
                },
                "extended": 1
              },
              "enabledThreshold": {},
              "fillColor": {},
              "height": {},
              "lineColor": {},
              "lineWidth": {},
              "radius": {},
              "symbol": {},
              "width": {}
            },
            "extended": 1
          },
          "showInLegend": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.networkgraph.showInLegend",
              "name": "showInLegend",
              "line": 396,
              "lineEnd": 396,
              "column": 4,
              "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.states"
            },
            "meta": {
              "fullname": "plotOptions.networkgraph.states",
              "name": "states",
              "line": 73,
              "lineEnd": 73,
              "column": 4,
              "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
            },
            "children": {
              "inactive": {
                "doclet": {
                  "description": "The opposite state of a hover for a single point link. Applied\nto all links that are not coming from the hovered node.",
                  "declare": "Highcharts.SeriesStatesInactiveOptionsObject",
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.series.states.inactive"
                },
                "meta": {
                  "fullname": "plotOptions.networkgraph.states.inactive",
                  "name": "inactive",
                  "line": 74,
                  "lineEnd": 79,
                  "column": 8,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
                },
                "children": {
                  "animation": {
                    "doclet": {
                      "description": "Animation when not hovering over the node.",
                      "type": {
                        "names": [
                          "boolean",
                          "Partial.<Highcharts.AnimationOptionsObject>"
                        ]
                      },
                      "extends": "plotOptions.series.states.inactive.animation"
                    },
                    "meta": {
                      "fullname": "plotOptions.networkgraph.states.inactive.animation",
                      "name": "animation",
                      "line": 85,
                      "lineEnd": 89,
                      "column": 12,
                      "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js"
                    },
                    "children": {
                      "duration": {
                        "doclet": {
                          "internal": true,
                          "type": { "names": ["number"] },
                          "defaultvalue": 50
                        },
                        "meta": {
                          "fullname": "plotOptions.networkgraph.states.inactive.animation.duration",
                          "name": "duration",
                          "line": 91,
                          "lineEnd": 91,
                          "column": 16,
                          "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                          "default": 50
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "extended": 1
                  },
                  "linkOpacity": {
                    "doclet": {
                      "description": "Opacity of inactive links.",
                      "type": { "names": ["number"] },
                      "defaultvalue": 0.3
                    },
                    "meta": {
                      "fullname": "plotOptions.networkgraph.states.inactive.linkOpacity",
                      "name": "linkOpacity",
                      "line": 81,
                      "lineEnd": 83,
                      "column": 12,
                      "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                      "default": 0.3
                    },
                    "children": {},
                    "extended": 1
                  },
                  "enabled": {},
                  "opacity": {}
                },
                "extended": 1
              },
              "hover": {},
              "normal": {},
              "select": {}
            },
            "extended": 1
          },
          "stickyTracking": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.networkgraph.stickyTracking",
              "name": "stickyTracking",
              "line": 40,
              "lineEnd": 40,
              "column": 4,
              "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "accessibility": {},
          "allowPointSelect": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "includeInDataExport": {},
          "keys": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {},
          "zones": {}
        },
        "extended": 1
      },
      "organization": {
        "doclet": {
          "description": "An organization chart is a diagram that shows the structure of an\norganization and the relationships and relative ranks of its parts and\npositions.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `organization` series are defined in\n   [plotOptions.organization](plotOptions.organization).\n3. Options for one single series are given in\n   [the series instance array](series.organization).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        organization: {\n            // shared options for all organization series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'organization'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.organization.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === organization) {\n    // code specific to the organization series\n}\n```\n            ",
          "samples": [
            {
              "name": "Organization chart",
              "value": "highcharts/demo/organization-chart/"
            },
            {
              "name": "Horizontal organization chart",
              "value": "highcharts/series-organization/horizontal/"
            },
            {
              "name": "Borderless design",
              "value": "highcharts/series-organization/borderless"
            },
            {
              "name": "Centered layout",
              "value": "highcharts/series-organization/center-layout"
            }
          ],
          "extends": "plotOptions.sankey",
          "exclude": ["allowPointSelect", "curveFactor", "dataSorting"],
          "since": "7.1.0",
          "products": ["highcharts"],
          "requires": ["module:modules/organization"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
          "name": "organization",
          "fullname": "plotOptions.organization",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "borderColor": {
            "doclet": {
              "description": "The border color of the node cards.",
              "type": { "names": ["Highcharts.ColorString"] },
              "since": "7.1.0",
              "defaultvalue": "#666666"
            },
            "meta": {
              "fullname": "plotOptions.organization.borderColor",
              "name": "borderColor",
              "line": 40,
              "lineEnd": 44,
              "column": 4,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
              "default": "#666666"
            },
            "children": {},
            "extended": 1
          },
          "borderRadius": {
            "doclet": {
              "description": "The border radius of the node cards.",
              "since": "7.1.0",
              "type": { "names": ["number"] },
              "defaultvalue": 3
            },
            "meta": {
              "fullname": "plotOptions.organization.borderRadius",
              "name": "borderRadius",
              "line": 46,
              "lineEnd": 50,
              "column": 4,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
              "default": 3
            },
            "children": {},
            "extended": 1
          },
          "borderWidth": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 1 },
            "meta": {
              "fullname": "plotOptions.organization.borderWidth",
              "name": "borderWidth",
              "line": 114,
              "lineEnd": 114,
              "column": 4,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "declare": "Highcharts.SeriesOrganizationDataLabelsOptionsObject",
              "type": { "names": ["*"] },
              "extends": "plotOptions.sankey.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.organization.dataLabels",
              "name": "dataLabels",
              "line": 115,
              "lineEnd": 119,
              "column": 4,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js"
            },
            "children": {
              "linkTextPath": {
                "doclet": { "type": { "names": ["*"] } },
                "meta": {
                  "fullname": "plotOptions.organization.dataLabels.linkTextPath",
                  "name": "linkTextPath",
                  "line": 217,
                  "lineEnd": 217,
                  "column": 8,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js"
                },
                "children": {
                  "attributes": {
                    "doclet": { "type": { "names": ["*"] } },
                    "meta": {
                      "fullname": "plotOptions.organization.dataLabels.linkTextPath.attributes",
                      "name": "attributes",
                      "line": 218,
                      "lineEnd": 218,
                      "column": 12,
                      "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js"
                    },
                    "children": {
                      "startOffset": {
                        "doclet": {
                          "type": { "names": ["number"] },
                          "defaultvalue": null
                        },
                        "meta": {
                          "fullname": "plotOptions.organization.dataLabels.linkTextPath.attributes.startOffset",
                          "name": "startOffset",
                          "line": 219,
                          "lineEnd": 219,
                          "column": 16,
                          "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                          "default": "95%"
                        },
                        "children": {},
                        "extended": 1
                      },
                      "textAnchor": {
                        "doclet": {
                          "type": { "names": ["string"] },
                          "defaultvalue": "end"
                        },
                        "meta": {
                          "fullname": "plotOptions.organization.dataLabels.linkTextPath.attributes.textAnchor",
                          "name": "textAnchor",
                          "line": 220,
                          "lineEnd": 220,
                          "column": 16,
                          "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                          "default": "end"
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "nodeFormatter": {
                "doclet": {
                  "description": "A callback for defining the format for _nodes_ in the\norganization chart. The `nodeFormat` option takes precedence\nover `nodeFormatter`.\n\nIn an organization chart, the `nodeFormatter` is a quite complex\nfunction of the available options, striving for a good default\nlayout of cards with or without images. In organization chart,\nthe data labels come with `useHTML` set to true, meaning they\nwill be rendered as true HTML above the SVG.",
                  "samples": [
                    {
                      "name": "Modify the default label format output",
                      "value": "highcharts/series-organization/datalabels-nodeformatter"
                    }
                  ],
                  "type": {
                    "names": [
                      "Highcharts.SeriesSankeyDataLabelsFormatterCallbackFunction"
                    ]
                  },
                  "since": "6.0.2"
                },
                "meta": {
                  "fullname": "plotOptions.organization.dataLabels.nodeFormatter",
                  "name": "nodeFormatter",
                  "line": 121,
                  "lineEnd": 121,
                  "column": 8,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js"
                },
                "children": {},
                "extended": 1
              },
              "style": {
                "doclet": { "type": { "names": ["*"] } },
                "meta": {
                  "fullname": "plotOptions.organization.dataLabels.style",
                  "name": "style",
                  "line": 207,
                  "lineEnd": 207,
                  "column": 8,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js"
                },
                "children": {
                  "fontSize": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["number"] },
                      "defaultvalue": null
                    },
                    "meta": {
                      "fullname": "plotOptions.organization.dataLabels.style.fontSize",
                      "name": "fontSize",
                      "line": 211,
                      "lineEnd": 211,
                      "column": 12,
                      "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                      "default": "0.9em"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "fontWeight": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["string"] },
                      "defaultvalue": "normal"
                    },
                    "meta": {
                      "fullname": "plotOptions.organization.dataLabels.style.fontWeight",
                      "name": "fontWeight",
                      "line": 209,
                      "lineEnd": 209,
                      "column": 12,
                      "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                      "default": "normal"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "textAlign": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["string"] },
                      "defaultvalue": "left"
                    },
                    "meta": {
                      "fullname": "plotOptions.organization.dataLabels.style.textAlign",
                      "name": "textAlign",
                      "line": 213,
                      "lineEnd": 213,
                      "column": 12,
                      "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                      "default": "left"
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "useHTML": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.organization.dataLabels.useHTML",
                  "name": "useHTML",
                  "line": 216,
                  "lineEnd": 216,
                  "column": 8,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "backgroundColor": {},
              "crop": {},
              "enabled": {},
              "format": {},
              "formatter": {},
              "inside": {},
              "nodeFormat": {},
              "align": {},
              "verticalAlign": {},
              "y": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "defer": {},
              "filter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "textPath": {},
              "x": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "hangingIndent": {
            "doclet": {
              "description": "The indentation in pixels of hanging nodes, nodes which parent has\n[layout](#series.organization.nodes.layout) set to `hanging`.",
              "since": "7.1.0",
              "type": { "names": ["number"] },
              "defaultvalue": 20
            },
            "meta": {
              "fullname": "plotOptions.organization.hangingIndent",
              "name": "hangingIndent",
              "line": 224,
              "lineEnd": 229,
              "column": 4,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
              "default": 20
            },
            "children": {},
            "extended": 1
          },
          "hangingIndentTranslation": {
            "doclet": {
              "description": "Defines the indentation of a `hanging` layout parent's children.\nPossible options:\n\n- `inherit` (default): Only the first child adds the indentation,\nchildren of a child with indentation inherit the indentation.\n- `cumulative`: All children of a child with indentation add its\nown indent. The option may cause overlapping of nodes.\nThen use `shrink` option:\n- `shrink`: Nodes shrink by the\n[hangingIndent](#plotOptions.organization.hangingIndent)\nvalue until they reach the\n[minNodeLength](#plotOptions.organization.minNodeLength).",
              "samples": [
                {
                  "name": "Every indent increases the indentation",
                  "value": "highcharts/series-organization/hanging-cumulative"
                },
                {
                  "name": "Every indent decreases the nodes' width",
                  "value": "highcharts/series-organization/hanging-shrink"
                }
              ],
              "type": {
                "names": [
                  "Highcharts.OrganizationHangingIndentTranslationValue"
                ]
              },
              "since": "10.0.0",
              "defaultvalue": "inherit"
            },
            "meta": {
              "fullname": "plotOptions.organization.hangingIndentTranslation",
              "name": "hangingIndentTranslation",
              "line": 231,
              "lineEnd": 256,
              "column": 4,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
              "default": "inherit"
            },
            "children": {},
            "extended": 1
          },
          "hangingSide": {
            "doclet": {
              "description": "Whether links connecting hanging nodes should be drawn on the left\nor right side. Useful for RTL layouts.\n**Note:** Only effects inverted charts (vertical layout).",
              "samples": [
                {
                  "name": "Nodes hanging from right side.",
                  "value": "highcharts/series-organization/hanging-side"
                }
              ],
              "type": { "names": ["'left'", "'right'"] },
              "since": "11.3.0",
              "defaultvalue": "'left'"
            },
            "meta": {
              "fullname": "plotOptions.organization.hangingSide",
              "name": "hangingSide",
              "line": 258,
              "lineEnd": 269,
              "column": 4,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
              "default": "left"
            },
            "children": {},
            "extended": 1
          },
          "link": {
            "doclet": {
              "description": "Link Styling options",
              "since": "10.3.0",
              "products": ["highcharts"],
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.organization.link",
              "name": "link",
              "line": 52,
              "lineEnd": 62,
              "column": 4,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js"
            },
            "children": {
              "color": {
                "doclet": {
                  "description": "The color of the links between nodes.",
                  "type": { "names": ["Highcharts.ColorString"] },
                  "since": "10.3.0",
                  "defaultvalue": "#666666"
                },
                "meta": {
                  "fullname": "plotOptions.organization.link.color",
                  "name": "color",
                  "line": 69,
                  "lineEnd": 79,
                  "column": 8,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "default": "#666666"
                },
                "children": {},
                "extended": 1
              },
              "lineWidth": {
                "doclet": {
                  "description": "The line width of the links connecting nodes, in pixels.",
                  "samples": [
                    {
                      "name": "Square links",
                      "value": "highcharts/series-organization/link-options"
                    }
                  ],
                  "since": "10.3.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 1
                },
                "meta": {
                  "fullname": "plotOptions.organization.link.lineWidth",
                  "name": "lineWidth",
                  "line": 86,
                  "lineEnd": 91,
                  "column": 8,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "default": 1
                },
                "children": {},
                "extended": 1
              },
              "radius": {
                "doclet": {
                  "description": "Radius for the rounded corners of the links between nodes.\nWorks for `default` link type.",
                  "samples": [
                    {
                      "name": "Square links",
                      "value": "highcharts/series-organization/link-options"
                    }
                  ],
                  "since": "10.3.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 10
                },
                "meta": {
                  "fullname": "plotOptions.organization.link.radius",
                  "name": "radius",
                  "line": 93,
                  "lineEnd": 99,
                  "column": 8,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "default": 10
                },
                "children": {},
                "extended": 1
              },
              "type": {
                "doclet": {
                  "description": "Type of the link shape.",
                  "samples": [
                    {
                      "name": "Different link types",
                      "value": "highcharts/series-organization/different-link-types"
                    }
                  ],
                  "declare": "Highcharts.OrganizationLinkTypeValue",
                  "type": { "names": ["'default'", "'curved'", "'straight'"] },
                  "defaultvalue": "'default'",
                  "products": ["highcharts"],
                  "since": "10.3.0"
                },
                "meta": {
                  "fullname": "plotOptions.organization.link.type",
                  "name": "type",
                  "line": 101,
                  "lineEnd": 111,
                  "column": 8,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "default": "default"
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "minNodeLength": {
            "doclet": {
              "description": "In a horizontal chart, the minimum width of the **hanging** nodes\nonly, in pixels. In a vertical chart, the minimum height of the\n**haning** nodes only, in pixels too.\n\nNote: Used only when\n[hangingIndentTranslation](#plotOptions.organization.hangingIndentTranslation)\nis set to `shrink`.",
              "see": ["[nodeWidth](#plotOptions.organization.nodeWidth)"],
              "since": "7.1.0",
              "type": { "names": ["number"] },
              "defaultvalue": 10
            },
            "meta": {
              "fullname": "plotOptions.organization.minNodeLength",
              "name": "minNodeLength",
              "line": 271,
              "lineEnd": 280,
              "column": 4,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
              "default": 10
            },
            "children": {},
            "extended": 1
          },
          "nodeWidth": {
            "doclet": {
              "description": "In a horizontal chart, the width of the nodes in pixels. Note that\nmost organization charts are inverted (vertical), so the name of this\noption is counterintuitive.",
              "see": [
                "[minNodeLength](#plotOptions.organization.minNodeLength)"
              ],
              "since": "7.1.0",
              "type": { "names": ["number"] },
              "defaultvalue": 50
            },
            "meta": {
              "fullname": "plotOptions.organization.nodeWidth",
              "name": "nodeWidth",
              "line": 307,
              "lineEnd": 315,
              "column": 4,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
              "default": 50
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.sankey.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.organization.tooltip",
              "name": "tooltip",
              "line": 317,
              "lineEnd": 317,
              "column": 4,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js"
            },
            "children": {
              "nodeFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "{point.name}<br>{point.title}<br>{point.description}"
                },
                "meta": {
                  "fullname": "plotOptions.organization.tooltip.nodeFormat",
                  "name": "nodeFormat",
                  "line": 318,
                  "lineEnd": 318,
                  "column": 8,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "default": "{point.name}<br>{point.title}<br>{point.description}"
                },
                "children": {},
                "extended": 1
              },
              "followPointer": {},
              "headerFormat": {},
              "nodeFormatter": {},
              "pointFormat": {},
              "distance": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "colorByPoint": {},
          "inactiveOtherPoints": {},
          "levels": {},
          "linkColorMode": {},
          "linkOpacity": {},
          "minLinkWidth": {},
          "nodeAlignment": {},
          "nodeDistance": {},
          "nodePadding": {},
          "opacity": {},
          "showInLegend": {},
          "states": {},
          "centerInCategory": {},
          "colors": {},
          "dataGrouping": {},
          "stickyTracking": {},
          "accessibility": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "onPoint": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "packedbubble": {
        "doclet": {
          "description": "A packed bubble series is a two dimensional series type, where each point\nrenders a value in X, Y position. Each point is drawn as a bubble\nwhere the bubbles don't overlap with each other and the radius\nof the bubble relates to the value.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `packedbubble` series are defined in\n   [plotOptions.packedbubble](plotOptions.packedbubble).\n3. Options for one single series are given in\n   [the series instance array](series.packedbubble).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        packedbubble: {\n            // shared options for all packedbubble series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'packedbubble'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.packedbubble.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === packedbubble) {\n    // code specific to the packedbubble series\n}\n```\n            ",
          "samples": [
            {
              "name": "Packed bubble chart",
              "value": "highcharts/demo/packed-bubble/"
            },
            {
              "name": "Split packed bubble chart",
              "value": "highcharts/demo/packed-bubble-split/"
            }
          ],
          "extends": "plotOptions.bubble",
          "exclude": [
            "boostThreshold",
            "boostBlending",
            "connectEnds",
            "connectNulls",
            "cropThreshold",
            "dataSorting",
            "dragDrop",
            "jitter",
            "legendSymbolColor",
            "keys",
            "pointPlacement",
            "sizeByAbsoluteValue",
            "step",
            "xAxis",
            "yAxis",
            "zMax",
            "zMin"
          ],
          "products": ["highcharts"],
          "since": "7.0.0",
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
          "name": "packedbubble",
          "fullname": "plotOptions.packedbubble",
          "line": 8,
          "lineEnd": 12,
          "column": 0
        },
        "children": {
          "crisp": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.packedbubble.crisp",
              "name": "crisp",
              "line": 69,
              "lineEnd": 69,
              "column": 4,
              "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "declare": "Highcharts.SeriesPackedBubbleDataLabelsOptionsObject",
              "type": { "names": ["*"] },
              "extends": "plotOptions.bubble.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.packedbubble.dataLabels",
              "name": "dataLabels",
              "line": 114,
              "lineEnd": 119,
              "column": 4,
              "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js"
            },
            "children": {
              "attributes": {
                "doclet": {
                  "description": "Presentation attributes for the text path.",
                  "type": { "names": ["Highcharts.SVGAttributes"] },
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.dataLabels.attributes",
                  "name": "attributes",
                  "line": 165,
                  "lineEnd": 171,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "format": {
                "doclet": {
                  "description": "The\n[format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\nspecifying what to show for _node_ in the networkgraph. In v7.0\ndefaults to `{key}`, since v7.1 defaults to `undefined` and\n`formatter` is used instead.",
                  "type": { "names": ["string"] },
                  "since": "7.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.dataLabels.format",
                  "name": "format",
                  "line": 121,
                  "lineEnd": 131,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "formatter": {
                "doclet": {
                  "description": "Callback JavaScript function to format the data label for a node.\nNote that if a `format` is defined, the format takes precedence\nand the formatter is ignored.",
                  "since": "7.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.dataLabels.formatter",
                  "name": "formatter",
                  "line": 121,
                  "lineEnd": 131,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js"
                },
                "children": {},
                "extended": 1
              },
              "padding": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.dataLabels.padding",
                  "name": "padding",
                  "line": 180,
                  "lineEnd": 188,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "parentNodeFormat": {
                "doclet": { "type": { "names": ["string"] }, "since": "7.1.0" },
                "meta": {
                  "fullname": "plotOptions.packedbubble.dataLabels.parentNodeFormat",
                  "name": "parentNodeFormat",
                  "line": 145,
                  "lineEnd": 149,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "parentNodeFormatter": {
                "doclet": { "since": "7.1.0" },
                "meta": {
                  "fullname": "plotOptions.packedbubble.dataLabels.parentNodeFormatter",
                  "name": "parentNodeFormatter",
                  "line": 145,
                  "lineEnd": 149,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js"
                },
                "children": {},
                "extended": 1
              },
              "parentNodeTextPath": {
                "doclet": {
                  "samples": [
                    {
                      "name": "Dashboard with dataLabels on parentNodes",
                      "value": "highcharts/series-packedbubble/packed-dashboard",
                      "products": ["highcharts"]
                    }
                  ],
                  "declare": "Highcharts.SeriesPackedBubbleDataLabelsTextPathOptionsObject",
                  "since": "7.1.0",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.dataLabels.parentNodeTextPath",
                  "name": "parentNodeTextPath",
                  "line": 157,
                  "lineEnd": 163,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js"
                },
                "children": {
                  "enabled": {
                    "doclet": {
                      "description": "Enable or disable `textPath` option for link's or marker's\ndata labels.",
                      "since": "7.1.0",
                      "type": { "names": ["boolean"] },
                      "defaultvalue": true
                    },
                    "meta": {
                      "fullname": "plotOptions.packedbubble.dataLabels.parentNodeTextPath.enabled",
                      "name": "enabled",
                      "line": 165,
                      "lineEnd": 171,
                      "column": 12,
                      "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                      "default": true
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "style": {
                "doclet": { "type": { "names": ["*"] } },
                "meta": {
                  "fullname": "plotOptions.packedbubble.dataLabels.style",
                  "name": "style",
                  "line": 190,
                  "lineEnd": 190,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js"
                },
                "children": {
                  "transition": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "opacity 2000ms"
                    },
                    "meta": {
                      "fullname": "plotOptions.packedbubble.dataLabels.style.transition",
                      "name": "transition",
                      "line": 191,
                      "lineEnd": 191,
                      "column": 12,
                      "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                      "default": "opacity 2000ms"
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "textPath": {
                "doclet": {
                  "description": "Options for a _node_ label text which should follow marker's\nshape.\n\n**Note:** Only SVG-based renderer supports this option.",
                  "extends": "plotOptions.series.dataLabels.textPath"
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.dataLabels.textPath",
                  "name": "textPath",
                  "line": 180,
                  "lineEnd": 188,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "column": 0
                },
                "children": { "attributes": {}, "enabled": {} },
                "extended": 1
              },
              "inside": {},
              "verticalAlign": {},
              "align": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "crop": {},
              "defer": {},
              "enabled": {},
              "filter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "useHTML": {},
              "x": {},
              "y": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "draggable": {
            "doclet": {
              "description": "Flag to determine if nodes are draggable or not. Available for\ngraph with useSimulation set to true only.",
              "since": "7.1.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.packedbubble.draggable",
              "name": "draggable",
              "line": 73,
              "lineEnd": 80,
              "column": 4,
              "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "layoutAlgorithm": {
            "doclet": {
              "description": "Options for layout algorithm when simulation is enabled. Inside there\nare options to change the speed, padding, initial bubbles positions\nand more.",
              "extends": "plotOptions.networkgraph.layoutAlgorithm",
              "exclude": [
                "approximation",
                "attractiveForce",
                "repulsiveForce",
                "theta"
              ],
              "since": "7.1.0"
            },
            "meta": {
              "fullname": "plotOptions.packedbubble.layoutAlgorithm",
              "name": "layoutAlgorithm",
              "line": 194,
              "lineEnd": 204,
              "column": 4,
              "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js"
            },
            "children": {
              "bubblePadding": {
                "doclet": {
                  "description": "The distance between two bubbles, when the algorithm starts to\ntreat two bubbles as overlapping. The `bubblePadding` is also the\nexpected distance between all the bubbles on simulation end.",
                  "since": "7.1.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 5
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.layoutAlgorithm.bubblePadding",
                  "name": "bubblePadding",
                  "line": 226,
                  "lineEnd": 230,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "default": 5
                },
                "children": {},
                "extended": 1
              },
              "dragBetweenSeries": {
                "doclet": {
                  "description": "In case of split series, this option allows user to drag and\ndrop points between series, for changing point related series.",
                  "samples": [
                    {
                      "name": "Example of drag'n drop bubbles for bubble kanban",
                      "value": "highcharts/series-packedbubble/packed-dashboard/"
                    }
                  ],
                  "since": "7.1.0",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.layoutAlgorithm.dragBetweenSeries",
                  "name": "dragBetweenSeries",
                  "line": 243,
                  "lineEnd": 249,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "enableSimulation": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.layoutAlgorithm.enableSimulation",
                  "name": "enableSimulation",
                  "line": 282,
                  "lineEnd": 282,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "friction": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": -0.981
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.layoutAlgorithm.friction",
                  "name": "friction",
                  "line": 322,
                  "lineEnd": 322,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "default": -0.981
                },
                "children": {},
                "extended": 1
              },
              "gravitationalConstant": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 0.01
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.layoutAlgorithm.gravitationalConstant",
                  "name": "gravitationalConstant",
                  "line": 321,
                  "lineEnd": 321,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "default": 0.01
                },
                "children": {},
                "extended": 1
              },
              "initialPositionRadius": {
                "doclet": {
                  "samples": [
                    {
                      "name": "Initial radius set to 200",
                      "value": "highcharts/series-packedbubble/initial-radius/"
                    }
                  ],
                  "extends": "plotOptions.networkgraph.layoutAlgorithm.initialPositionRadius",
                  "exclude": ["states"]
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.layoutAlgorithm.initialPositionRadius",
                  "name": "initialPositionRadius",
                  "line": 218,
                  "lineEnd": 224,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "default": 20
                },
                "children": {},
                "extended": 1
              },
              "initialPositions": {
                "doclet": {
                  "description": "Initial layout algorithm for positioning nodes. Can be one of\nthe built-in options (\"circle\", \"random\") or a function where\npositions should be set on each node (`this.nodes`) as\n`node.plotX` and `node.plotY`.",
                  "samples": [
                    {
                      "name": "Initial positions with callback",
                      "value": "highcharts/series-networkgraph/initial-positions/"
                    }
                  ],
                  "type": { "names": ["\"circle\"", "\"random\"", "function"] },
                  "since": "7.1.0",
                  "defaultvalue": "circle"
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.layoutAlgorithm.initialPositions",
                  "name": "initialPositions",
                  "line": 206,
                  "lineEnd": 216,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "default": "circle"
                },
                "children": {},
                "extended": 1
              },
              "maxIterations": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 1000
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.layoutAlgorithm.maxIterations",
                  "name": "maxIterations",
                  "line": 300,
                  "lineEnd": 300,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "default": 1000
                },
                "children": {},
                "extended": 1
              },
              "maxSpeed": {
                "doclet": {
                  "description": "Max speed that node can get in one iteration. In terms of\nsimulation, it's a maximum translation (in pixels) that a node\ncan move (in both, x and y, dimensions). While `friction` is\napplied on all nodes, max speed is applied only for nodes that\nmove very fast, for example small or disconnected ones.",
                  "see": [
                    "[layoutAlgorithm.integration](#series.networkgraph.layoutAlgorithm.integration)",
                    "[layoutAlgorithm.friction](#series.networkgraph.layoutAlgorithm.friction)"
                  ],
                  "since": "7.1.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 5
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.layoutAlgorithm.maxSpeed",
                  "name": "maxSpeed",
                  "line": 309,
                  "lineEnd": 319,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "default": 5
                },
                "children": {},
                "extended": 1
              },
              "parentNodeLimit": {
                "doclet": {
                  "description": "Whether bubbles should interact with their parentNode to keep\nthem inside.",
                  "since": "7.1.0",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.layoutAlgorithm.parentNodeLimit",
                  "name": "parentNodeLimit",
                  "line": 232,
                  "lineEnd": 235,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "parentNodeOptions": {
                "doclet": {
                  "description": "Layout algorithm options for parent nodes.",
                  "extends": "plotOptions.networkgraph.layoutAlgorithm",
                  "exclude": [
                    "approximation",
                    "attractiveForce",
                    "enableSimulation",
                    "repulsiveForce",
                    "theta"
                  ],
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.layoutAlgorithm.parentNodeOptions",
                  "name": "parentNodeOptions",
                  "line": 251,
                  "lineEnd": 257,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js"
                },
                "children": {
                  "gravitationalConstant": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": 0.03
                    },
                    "meta": {
                      "fullname": "plotOptions.packedbubble.layoutAlgorithm.parentNodeOptions.gravitationalConstant",
                      "name": "gravitationalConstant",
                      "line": 260,
                      "lineEnd": 260,
                      "column": 12,
                      "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                      "default": 0.03
                    },
                    "children": {},
                    "extended": 1
                  },
                  "initialPositionRadius": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": 100
                    },
                    "meta": {
                      "fullname": "plotOptions.packedbubble.layoutAlgorithm.parentNodeOptions.initialPositionRadius",
                      "name": "initialPositionRadius",
                      "line": 262,
                      "lineEnd": 262,
                      "column": 12,
                      "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                      "default": 100
                    },
                    "children": {},
                    "extended": 1
                  },
                  "marker": {
                    "doclet": {
                      "description": "Styling options for parentNodes markers. Similar to\nline.marker options.",
                      "samples": [
                        {
                          "name": "Bubble size",
                          "value": "highcharts/series-packedbubble/parentnode-style/"
                        }
                      ],
                      "extends": "plotOptions.series.marker",
                      "exclude": ["states"],
                      "since": "7.1.0"
                    },
                    "meta": {
                      "fullname": "plotOptions.packedbubble.layoutAlgorithm.parentNodeOptions.marker",
                      "name": "marker",
                      "line": 264,
                      "lineEnd": 273,
                      "column": 12,
                      "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js"
                    },
                    "children": {
                      "fillColor": {
                        "doclet": {
                          "type": { "names": ["*"] },
                          "defaultvalue": null
                        },
                        "meta": {
                          "fullname": "plotOptions.packedbubble.layoutAlgorithm.parentNodeOptions.marker.fillColor",
                          "name": "fillColor",
                          "line": 275,
                          "lineEnd": 275,
                          "column": 16,
                          "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                          "default": null
                        },
                        "children": {},
                        "extended": 1
                      },
                      "fillOpacity": {
                        "doclet": {
                          "type": { "names": ["number"] },
                          "defaultvalue": 1
                        },
                        "meta": {
                          "fullname": "plotOptions.packedbubble.layoutAlgorithm.parentNodeOptions.marker.fillOpacity",
                          "name": "fillOpacity",
                          "line": 276,
                          "lineEnd": 276,
                          "column": 16,
                          "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                          "default": 1
                        },
                        "children": {},
                        "extended": 1
                      },
                      "lineColor": {
                        "doclet": {
                          "type": { "names": ["*"] },
                          "defaultvalue": null
                        },
                        "meta": {
                          "fullname": "plotOptions.packedbubble.layoutAlgorithm.parentNodeOptions.marker.lineColor",
                          "name": "lineColor",
                          "line": 278,
                          "lineEnd": 278,
                          "column": 16,
                          "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                          "default": null
                        },
                        "children": {},
                        "extended": 1
                      },
                      "lineWidth": {
                        "doclet": {
                          "type": { "names": ["*"] },
                          "defaultvalue": null
                        },
                        "meta": {
                          "fullname": "plotOptions.packedbubble.layoutAlgorithm.parentNodeOptions.marker.lineWidth",
                          "name": "lineWidth",
                          "line": 277,
                          "lineEnd": 277,
                          "column": 16,
                          "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                          "default": null
                        },
                        "children": {},
                        "extended": 1
                      },
                      "symbol": {
                        "doclet": {
                          "type": { "names": ["string"] },
                          "defaultvalue": "circle"
                        },
                        "meta": {
                          "fullname": "plotOptions.packedbubble.layoutAlgorithm.parentNodeOptions.marker.symbol",
                          "name": "symbol",
                          "line": 279,
                          "lineEnd": 279,
                          "column": 16,
                          "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                          "default": "circle"
                        },
                        "children": {},
                        "extended": 1
                      },
                      "enabled": {},
                      "enabledThreshold": {},
                      "height": {},
                      "radius": {},
                      "width": {}
                    },
                    "extended": 1
                  },
                  "maxIterations": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": 400
                    },
                    "meta": {
                      "fullname": "plotOptions.packedbubble.layoutAlgorithm.parentNodeOptions.maxIterations",
                      "name": "maxIterations",
                      "line": 259,
                      "lineEnd": 259,
                      "column": 12,
                      "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                      "default": 400
                    },
                    "children": {},
                    "extended": 1
                  },
                  "maxSpeed": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": 50
                    },
                    "meta": {
                      "fullname": "plotOptions.packedbubble.layoutAlgorithm.parentNodeOptions.maxSpeed",
                      "name": "maxSpeed",
                      "line": 261,
                      "lineEnd": 261,
                      "column": 12,
                      "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                      "default": 50
                    },
                    "children": {},
                    "extended": 1
                  },
                  "seriesInteraction": {
                    "doclet": {
                      "type": { "names": ["boolean"] },
                      "defaultvalue": true
                    },
                    "meta": {
                      "fullname": "plotOptions.packedbubble.layoutAlgorithm.parentNodeOptions.seriesInteraction",
                      "name": "seriesInteraction",
                      "line": 263,
                      "lineEnd": 263,
                      "column": 12,
                      "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                      "default": true
                    },
                    "children": {},
                    "extended": 1
                  },
                  "friction": {},
                  "initialPositions": {},
                  "integration": {},
                  "linkLength": {},
                  "type": {}
                },
                "extended": 1
              },
              "seriesInteraction": {
                "doclet": {
                  "description": "Whether series should interact with each other or not. When\n`parentNodeLimit` is set to true, thi option should be set to\nfalse to avoid sticking points in wrong series parentNode.",
                  "since": "7.1.0",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.layoutAlgorithm.seriesInteraction",
                  "name": "seriesInteraction",
                  "line": 237,
                  "lineEnd": 241,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "splitSeries": {
                "doclet": {
                  "description": "Whether to split series into individual groups or to mix all\nseries together.",
                  "since": "7.1.0",
                  "defaultvalue": "false",
                  "type": { "names": ["boolean"] }
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.layoutAlgorithm.splitSeries",
                  "name": "splitSeries",
                  "line": 301,
                  "lineEnd": 307,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "integration": {},
              "linkLength": {},
              "type": {}
            },
            "extended": 1
          },
          "maxSize": {
            "doclet": {
              "description": "Maximum bubble size. Bubbles will automatically size between the\n`minSize` and `maxSize` to reflect the value of each bubble.\nCan be either pixels (when no unit is given), or a percentage of\nthe smallest one of the plot width and height, divided by the square\nroot of total number of points.",
              "samples": [
                {
                  "name": "Bubble size",
                  "value": "highcharts/plotoptions/bubble-size/"
                }
              ],
              "type": { "names": ["number", "string"] },
              "since": "7.0.0",
              "defaultvalue": "50%"
            },
            "meta": {
              "fullname": "plotOptions.packedbubble.maxSize",
              "name": "maxSize",
              "line": 52,
              "lineEnd": 65,
              "column": 4,
              "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
              "default": "50%"
            },
            "children": {},
            "extended": 1
          },
          "minSize": {
            "doclet": {
              "description": "Minimum bubble size. Bubbles will automatically size between the\n`minSize` and `maxSize` to reflect the value of each bubble.\nCan be either pixels (when no unit is given), or a percentage of\nthe smallest one of the plot width and height, divided by the square\nroot of total number of points.",
              "samples": [
                {
                  "name": "Bubble size",
                  "value": "highcharts/plotoptions/bubble-size/"
                }
              ],
              "type": { "names": ["number", "string"] },
              "since": "7.0.0",
              "defaultvalue": "10%"
            },
            "meta": {
              "fullname": "plotOptions.packedbubble.minSize",
              "name": "minSize",
              "line": 37,
              "lineEnd": 50,
              "column": 4,
              "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
              "default": "10%"
            },
            "children": {},
            "extended": 1
          },
          "parentNode": {
            "doclet": {
              "description": "Series options for parent nodes.",
              "since": "8.1.1",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.packedbubble.parentNode",
              "name": "parentNode",
              "line": 98,
              "lineEnd": 104,
              "column": 4,
              "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js"
            },
            "children": {
              "allowPointSelect": {
                "doclet": {
                  "description": "Allow this series' parent nodes to be selected\nby clicking on the graph.",
                  "since": "8.1.1",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.parentNode.allowPointSelect",
                  "name": "allowPointSelect",
                  "line": 106,
                  "lineEnd": 111,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "sizeBy": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "area"
            },
            "meta": {
              "fullname": "plotOptions.packedbubble.sizeBy",
              "name": "sizeBy",
              "line": 67,
              "lineEnd": 67,
              "column": 4,
              "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
              "default": "area"
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.bubble.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.packedbubble.tooltip",
              "name": "tooltip",
              "line": 70,
              "lineEnd": 70,
              "column": 4,
              "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js"
            },
            "children": {
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "Value: {point.value}"
                },
                "meta": {
                  "fullname": "plotOptions.packedbubble.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 71,
                  "lineEnd": 71,
                  "column": 8,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "default": "Value: {point.value}"
                },
                "children": {},
                "extended": 1
              },
              "headerFormat": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "distance": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "useSimulation": {
            "doclet": {
              "description": "An option is giving a possibility to choose between using simulation\nfor calculating bubble positions. These reflects in both animation\nand final position of bubbles. Simulation is also adding options to\nthe series graph based on used layout. In case of big data sets, with\nany performance issues, it is possible to disable animation and pack\nbubble in a simple circular way.",
              "samples": [
                {
                  "name": "useSimulation set to false",
                  "value": "highcharts/series-packedbubble/spiral/"
                }
              ],
              "since": "7.1.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.packedbubble.useSimulation",
              "name": "useSimulation",
              "line": 82,
              "lineEnd": 96,
              "column": 4,
              "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "zoneAxis": {
            "doclet": { "type": { "names": ["string"] }, "defaultvalue": "y" },
            "meta": {
              "fullname": "plotOptions.packedbubble.zoneAxis",
              "name": "zoneAxis",
              "line": 68,
              "lineEnd": 68,
              "column": 4,
              "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
              "default": "y"
            },
            "children": {},
            "extended": 1
          },
          "animationLimit": {},
          "colorKey": {},
          "displayNegative": {},
          "marker": {},
          "negativeColor": {},
          "softThreshold": {},
          "states": {},
          "turboThreshold": {},
          "zThreshold": {},
          "findNearestPointBy": {},
          "lineWidth": {},
          "stickyTracking": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "stacking": {},
          "threshold": {},
          "visible": {},
          "zones": {}
        },
        "extended": 1
      },
      "pareto": {
        "doclet": {
          "description": "A pareto diagram is a type of chart that contains both bars and a line\ngraph, where individual values are represented in descending order by\nbars, and the cumulative total is represented by the line.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `pareto` series are defined in\n   [plotOptions.pareto](plotOptions.pareto).\n3. Options for one single series are given in\n   [the series instance array](series.pareto).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        pareto: {\n            // shared options for all pareto series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'pareto'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.pareto.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === pareto) {\n    // code specific to the pareto series\n}\n```\n            ",
          "samples": [
            {
              "name": "Pareto diagram",
              "value": "highcharts/demo/pareto/",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.line",
          "since": "6.0.0",
          "products": ["highcharts"],
          "exclude": [
            "allAreas",
            "boostThreshold",
            "borderColor",
            "borderRadius",
            "borderWidth",
            "crisp",
            "colorAxis",
            "depth",
            "data",
            "dragDrop",
            "edgeColor",
            "edgeWidth",
            "findNearestPointBy",
            "gapSize",
            "gapUnit",
            "grouping",
            "groupPadding",
            "groupZPadding",
            "maxPointWidth",
            "keys",
            "negativeColor",
            "pointInterval",
            "pointIntervalUnit",
            "pointPadding",
            "pointPlacement",
            "pointRange",
            "pointStart",
            "pointWidth",
            "shadow",
            "step",
            "softThreshold",
            "stacking",
            "threshold",
            "zoneAxis",
            "zones",
            "boostBlending"
          ],
          "requires": ["module:modules/pareto"]
        },
        "meta": {
          "filename": "code/es-modules/Series/ParetoSeries/ParetoSeriesDefaults.js",
          "name": "pareto",
          "fullname": "plotOptions.pareto",
          "line": 11,
          "lineEnd": 15,
          "column": 0
        },
        "children": {
          "zIndex": {
            "doclet": {
              "description": "Higher zIndex than column series to draw line above shapes.",
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 3
            },
            "meta": {
              "fullname": "plotOptions.pareto.zIndex",
              "name": "zIndex",
              "line": 39,
              "lineEnd": 41,
              "column": 4,
              "filename": "code/es-modules/Series/ParetoSeries/ParetoSeriesDefaults.js",
              "default": 3
            },
            "children": {},
            "extended": 1
          },
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "marker": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "states": {},
          "stickyTracking": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "pictorial": {
        "doclet": {
          "description": "A pictorial chart uses vector images to represents the data.\nThe shape of the data point is taken from the path parameter.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `pictorial` series are defined in\n   [plotOptions.pictorial](plotOptions.pictorial).\n3. Options for one single series are given in\n   [the series instance array](series.pictorial).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        pictorial: {\n            // shared options for all pictorial series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'pictorial'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.pictorial.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === pictorial) {\n    // code specific to the pictorial series\n}\n```\n            ",
          "samples": [
            {
              "name": "Pictorial chart",
              "value": "highcharts/demo/pictorial/",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.column",
          "since": "11.0.0",
          "products": ["highcharts"],
          "exclude": [
            "allAreas",
            "borderRadius",
            "centerInCategory",
            "colorAxis",
            "colorKey",
            "connectEnds",
            "connectNulls",
            "crisp",
            "compare",
            "compareBase",
            "dataSorting",
            "dashStyle",
            "dataAsColumns",
            "linecap",
            "lineWidth",
            "shadow",
            "onPoint"
          ],
          "requires": ["module:modules/pictorial"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Pictorial/PictorialSeries.js",
          "name": "pictorial",
          "fullname": "plotOptions.pictorial",
          "line": 154,
          "lineEnd": 171,
          "column": 0
        },
        "children": {
          "borderWidth": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0 },
            "meta": {
              "fullname": "plotOptions.pictorial.borderWidth",
              "name": "borderWidth",
              "line": 173,
              "lineEnd": 173,
              "column": 4,
              "filename": "code/es-modules/Series/Pictorial/PictorialSeries.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "borderColor": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "dragDrop": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "pie": {
        "doclet": {
          "description": "A pie chart is a circular graphic which is divided into slices to\nillustrate numerical proportion.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `pie` series are defined in\n   [plotOptions.pie](plotOptions.pie).\n3. Options for one single series are given in\n   [the series instance array](series.pie).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        pie: {\n            // shared options for all pie series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'pie'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.pie.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === pie) {\n    // code specific to the pie series\n}\n```\n            ",
          "samples": [
            { "name": "Pie chart", "value": "highcharts/demo/pie-chart/" }
          ],
          "extends": "plotOptions.line",
          "exclude": [
            "animationLimit",
            "boostThreshold",
            "connectEnds",
            "connectNulls",
            "cropThreshold",
            "dashStyle",
            "dataSorting",
            "dragDrop",
            "findNearestPointBy",
            "getExtremesFromAll",
            "label",
            "lineWidth",
            "linkedTo",
            "marker",
            "negativeColor",
            "pointInterval",
            "pointIntervalUnit",
            "pointPlacement",
            "pointStart",
            "softThreshold",
            "stacking",
            "step",
            "threshold",
            "turboThreshold",
            "zoneAxis",
            "zones",
            "dataSorting",
            "boostBlending"
          ],
          "products": ["highcharts", "highmaps"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
          "name": "pie",
          "fullname": "plotOptions.pie",
          "line": 11,
          "lineEnd": 15,
          "column": 0
        },
        "children": {
          "borderColor": {
            "doclet": {
              "description": "The color of the border surrounding each slice. When `null`, the\nborder takes the same color as the slice fill. This can be used\ntogether with a `borderWidth` to fill drawing gaps created by\nantialiazing artefacts in borderless pies.\n\nIn styled mode, the border stroke is given in the `.highcharts-point`\nclass.",
              "samples": [
                {
                  "name": "Black border",
                  "value": "highcharts/plotoptions/pie-bordercolor-black/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "defaultvalue": "#ffffff",
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "plotOptions.pie.borderColor",
              "name": "borderColor",
              "line": 515,
              "lineEnd": 532,
              "column": 4,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "default": "#ffffff"
            },
            "children": {},
            "extended": 1
          },
          "borderRadius": {
            "doclet": {
              "description": "The corner radius of the border surrounding each slice. A number\nsignifies pixels. A percentage string, like for example `50%`, signifies\na size relative to the radius and the inner radius.",
              "samples": [
                {
                  "name": "Column and pie with rounded border",
                  "value": "highcharts/plotoptions/series-border-radius"
                }
              ],
              "since": "11.0.0",
              "type": {
                "names": [
                  "number",
                  "string",
                  "Highcharts.BorderRadiusOptionsObject"
                ]
              },
              "defaultvalue": 3
            },
            "meta": {
              "fullname": "plotOptions.pie.borderRadius",
              "name": "borderRadius",
              "line": 37,
              "lineEnd": 48,
              "column": 4,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "default": 3
            },
            "children": {},
            "extended": 1
          },
          "borderWidth": {
            "doclet": {
              "description": "The width of the border surrounding each slice.\n\nWhen setting the border width to 0, there may be small gaps between\nthe slices due to SVG antialiasing artefacts. To work around this,\nkeep the border width at 0.5 or 1, but set the `borderColor` to\n`null` instead.\n\nIn styled mode, the border stroke width is given in the\n`.highcharts-point` class.",
              "samples": [
                {
                  "name": "3px border",
                  "value": "highcharts/plotoptions/pie-borderwidth/",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts", "highmaps"],
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "plotOptions.pie.borderWidth",
              "name": "borderWidth",
              "line": 534,
              "lineEnd": 551,
              "column": 4,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "center": {
            "doclet": {
              "description": "The center of the pie chart relative to the plot area. Can be\npercentages or pixel values. The default behaviour (as of 3.0) is to\ncenter the pie so that all slices and data labels are within the plot\narea. As a consequence, the pie may actually jump around in a chart\nwith dynamic values, as the data labels move. In that case, the\ncenter should be explicitly set, for example to `[\"50%\", \"50%\"]`.",
              "samples": [
                {
                  "name": "Centered at 100, 100",
                  "value": "highcharts/plotoptions/pie-center/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": ["Array.<(number|string|null), (number|string|null)>"]
              },
              "defaultvalue": "[null, null]",
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "plotOptions.pie.center",
              "name": "center",
              "line": 50,
              "lineEnd": 53,
              "column": 4,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "clip": {
            "doclet": {
              "products": ["highcharts"],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.pie.clip",
              "name": "clip",
              "line": 104,
              "lineEnd": 122,
              "column": 4,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "color": {
            "doclet": {
              "description": "The color of the pie series. A pie series is represented as an empty\ncircle if the total sum of its values is 0. Use this property to\ndefine the color of its border.\n\nIn styled mode, the color can be defined by the\n[colorIndex](#plotOptions.series.colorIndex) option. Also, the series\ncolor can be set with the `.highcharts-series`,\n`.highcharts-color-{n}`, `.highcharts-{type}-series` or\n`.highcharts-series-{n}` class, or individual classes given by the\n`className` option.",
              "samples": [
                {
                  "name": "Empty pie series",
                  "value": "highcharts/plotoptions/pie-emptyseries/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "defaultvalue": "#cccccc"
            },
            "meta": {
              "fullname": "plotOptions.pie.color",
              "name": "color",
              "line": 104,
              "lineEnd": 122,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "colors": {
            "doclet": {
              "description": "A series specific or series type specific color set to use instead\nof the global [colors](#colors).",
              "samples": [
                {
                  "name": "Set default colors for all pies",
                  "value": "highcharts/demo/pie-monochrome/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject)>"
                ]
              },
              "since": "3.0.0",
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "plotOptions.pie.colors",
              "name": "colors",
              "line": 135,
              "lineEnd": 146,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "declare": "Highcharts.SeriesPieDataLabelsOptionsObject",
              "extends": "plotOptions.series.dataLabels",
              "exclude": [
                "align",
                "allowOverlap",
                "inside",
                "staggerLines",
                "step"
              ]
            },
            "meta": {
              "fullname": "plotOptions.pie.dataLabels",
              "name": "dataLabels",
              "line": 134,
              "lineEnd": 134,
              "column": 24,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js"
            },
            "children": {
              "alignTo": {
                "doclet": {
                  "description": "Alignment method for data labels. Possible values are:\n\n- `plotEdges`: Each label touches the nearest vertical edge of\n  the plot area.\n\n- `connectors`: Connectors have the same x position and the\n  widest label of each half (left & right) touches the nearest\n  vertical edge of the plot area.",
                  "samples": [
                    {
                      "name": "alignTo: connectors",
                      "value": "highcharts/plotoptions/pie-datalabels-alignto-connectors/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "alignTo: plotEdges",
                      "value": "highcharts/plotoptions/pie-datalabels-alignto-plotedges/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "7.0.0",
                  "products": ["highcharts", "highmaps"]
                },
                "meta": {
                  "fullname": "plotOptions.pie.dataLabels.alignTo",
                  "name": "alignTo",
                  "line": 154,
                  "lineEnd": 173,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "connectorColor": {
                "doclet": {
                  "description": "The color of the line connecting the data label to the pie slice.\nThe default color is the same as the point's color.\n\nIn styled mode, the connector stroke is given in the\n`.highcharts-data-label-connector` class.",
                  "samples": [
                    {
                      "name": "Blue connectors",
                      "value": "highcharts/plotoptions/pie-datalabels-connectorcolor/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Styled connectors",
                      "value": "highcharts/css/pie-point/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "since": "2.1.0",
                  "products": ["highcharts", "highmaps"]
                },
                "meta": {
                  "fullname": "plotOptions.pie.dataLabels.connectorColor",
                  "name": "connectorColor",
                  "line": 174,
                  "lineEnd": 190,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "connectorPadding": {
                "doclet": {
                  "description": "The distance from the data label to the connector. Note that\ndata labels also have a default `padding`, so in order for the\nconnector to touch the text, the `padding` must also be 0.",
                  "samples": [
                    {
                      "name": "No padding",
                      "value": "highcharts/plotoptions/pie-datalabels-connectorpadding/",
                      "products": ["highcharts"]
                    }
                  ],
                  "since": "2.1.0",
                  "products": ["highcharts", "highmaps"],
                  "type": { "names": ["number"] },
                  "defaultvalue": 5
                },
                "meta": {
                  "fullname": "plotOptions.pie.dataLabels.connectorPadding",
                  "name": "connectorPadding",
                  "line": 154,
                  "lineEnd": 173,
                  "column": 8,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                  "default": 5
                },
                "children": {},
                "extended": 1
              },
              "connectorShape": {
                "doclet": {
                  "description": "Specifies the method that is used to generate the connector path.\nHighcharts provides 3 built-in connector shapes: `'crookedLine'`\n(default since v11), `'fixedOffset'` and `'straight'`.\n\nUsers can provide their own method by passing a function instead of a\nstring. Three arguments are passed to the callback:\n\n- An object that holds the information about the coordinates of the\n  label (`x` & `y` properties) and how the label is located in\n  relation to the pie (`alignment` property). `alignment` can by one\n  of the following: `'left'` (pie on the left side of the data\n  label), `'right'` (pie on the right side of the data label) or\n  `'center'` (data label overlaps the pie).\n\n- An object that holds the information about the position of the\n  connector. Its `touchingSliceAt`  porperty tells the position of\n  the place where the connector touches the slice.\n\n- Data label options\n\nThe function has to return an SVG path definition in array form (see\nthe example).",
                  "samples": [
                    {
                      "name": "connectorShape is a String",
                      "value": "highcharts/plotoptions/pie-datalabels-connectorshape-string/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "connectorShape is a function",
                      "value": "highcharts/plotoptions/pie-datalabels-connectorshape-function/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string", "function"] },
                  "since": "7.0.0",
                  "products": ["highcharts", "highmaps"],
                  "defaultvalue": "crookedLine"
                },
                "meta": {
                  "fullname": "plotOptions.pie.dataLabels.connectorShape",
                  "name": "connectorShape",
                  "line": 203,
                  "lineEnd": 237,
                  "column": 8,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                  "default": "crookedLine"
                },
                "children": {},
                "extended": 1
              },
              "connectorWidth": {
                "doclet": {
                  "description": "The width of the line connecting the data label to the pie slice.\n\nIn styled mode, the connector stroke width is given in the\n`.highcharts-data-label-connector` class.",
                  "samples": [
                    {
                      "name": "Disable the connector",
                      "value": "highcharts/plotoptions/pie-datalabels-connectorwidth-disabled/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Styled connectors",
                      "value": "highcharts/css/pie-point/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": "1",
                  "since": "2.1.0",
                  "products": ["highcharts", "highmaps"]
                },
                "meta": {
                  "fullname": "plotOptions.pie.dataLabels.connectorWidth",
                  "name": "connectorWidth",
                  "line": 239,
                  "lineEnd": 255,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "crookDistance": {
                "doclet": {
                  "description": "Works only if `connectorShape` is `'crookedLine'`. It defines how\nfar from the vertical plot edge the coonnector path should be\ncrooked. With the default, `undefined`, the crook is placed so that\nthe horizontal line from the label intersects with the radial line\nextending through the center of the pie slice.",
                  "samples": [
                    {
                      "name": "crookDistance set to 90%",
                      "value": "highcharts/plotoptions/pie-datalabels-crookdistance/",
                      "products": ["highcharts"]
                    }
                  ],
                  "since": "7.0.0",
                  "products": ["highcharts", "highmaps"],
                  "type": { "names": ["string"] },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.pie.dataLabels.crookDistance",
                  "name": "crookDistance",
                  "line": 239,
                  "lineEnd": 255,
                  "column": 8,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "distance": {
                "doclet": {
                  "description": "The distance of the data label from the pie's edge. Negative\nnumbers put the data label on top of the pie slices. Can also be\ndefined as a percentage of pie's radius. Connectors are only\nshown for data labels outside the pie.",
                  "samples": [
                    {
                      "name": "Data labels on top of the pie",
                      "value": "highcharts/plotoptions/pie-datalabels-distance/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number", "string"] },
                  "since": "2.1.0",
                  "products": ["highcharts", "highmaps"],
                  "defaultvalue": 30
                },
                "meta": {
                  "fullname": "plotOptions.pie.dataLabels.distance",
                  "name": "distance",
                  "line": 270,
                  "lineEnd": 282,
                  "column": 8,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                  "default": 30
                },
                "children": {},
                "extended": 1
              },
              "enabled": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.pie.dataLabels.enabled",
                  "name": "enabled",
                  "line": 284,
                  "lineEnd": 284,
                  "column": 8,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "format": {
                "doclet": {
                  "description": "A\n[format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\nfor the data label. Available variables are the same as for\n`formatter`.",
                  "samples": [
                    {
                      "name": "Add a unit",
                      "value": "highcharts/plotoptions/series-datalabels-format/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "defaultvalue": "undefined",
                  "since": "3.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.pie.dataLabels.format",
                  "name": "format",
                  "line": 285,
                  "lineEnd": 298,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "formatter": {
                "doclet": {
                  "description": "Callback JavaScript function to format the data label. Note that\nif a `format` is defined, the format takes precedence and the\nformatter is ignored.",
                  "type": {
                    "names": ["Highcharts.DataLabelsFormatterCallbackFunction"]
                  },
                  "defaultvalue": "function () { return this.point.isNull ? void 0 : this.point.name; }"
                },
                "meta": {
                  "fullname": "plotOptions.pie.dataLabels.formatter",
                  "name": "formatter",
                  "line": 285,
                  "lineEnd": 298,
                  "column": 8,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js"
                },
                "children": {},
                "extended": 1
              },
              "softConnector": {
                "doclet": {
                  "description": "Whether to render the connector as a soft arc or a line with a sharp\nbreak. Works only if `connectorShape` equals to `fixedOffset`.",
                  "samples": [
                    {
                      "name": "Soft",
                      "value": "highcharts/plotoptions/pie-datalabels-softconnector-true/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Non soft",
                      "value": "highcharts/plotoptions/pie-datalabels-softconnector-false/",
                      "products": ["highcharts"]
                    }
                  ],
                  "since": "2.1.7",
                  "products": ["highcharts", "highmaps"],
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.pie.dataLabels.softConnector",
                  "name": "softConnector",
                  "line": 311,
                  "lineEnd": 324,
                  "column": 8,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "style": {
                "doclet": {
                  "samples": [
                    {
                      "name": "Long labels truncated with an ellipsis",
                      "value": "highcharts/plotoptions/pie-datalabels-overflow",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Long labels are wrapped",
                      "value": "highcharts/plotoptions/pie-datalabels-overflow-wrap",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["Highcharts.CSSObject"] }
                },
                "meta": {
                  "fullname": "plotOptions.pie.dataLabels.style",
                  "name": "style",
                  "line": 326,
                  "lineEnd": 334,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "crop": {},
              "defer": {},
              "filter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "textPath": {},
              "useHTML": {},
              "verticalAlign": {},
              "x": {},
              "y": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "depth": {
            "doclet": {
              "description": "The thickness of a 3D pie.",
              "type": { "names": ["number"] },
              "defaultvalue": "0",
              "since": "4.0.0",
              "products": ["highcharts"],
              "requires": ["module:highcharts-3d"]
            },
            "meta": {
              "fullname": "plotOptions.pie.depth",
              "name": "depth",
              "line": 200,
              "lineEnd": 209,
              "filename": "code/es-modules/Series/Pie3D/Pie3DSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "endAngle": {
            "doclet": {
              "description": "The end angle of the pie in degrees where 0 is top and 90 is right.\nDefaults to `startAngle` plus 360.",
              "samples": [
                {
                  "name": "Semi-circle donut",
                  "value": "highcharts/demo/pie-semi-circle/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "1.3.6",
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "plotOptions.pie.endAngle",
              "name": "endAngle",
              "line": 350,
              "lineEnd": 361,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "events": {
            "doclet": {
              "exclude": ["legendItemClick"],
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.events"
            },
            "meta": {
              "fullname": "plotOptions.pie.events",
              "name": "events",
              "line": 50,
              "lineEnd": 53,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "checkboxClick": {
                "doclet": {
                  "description": "Fires when the checkbox next to the point name in the legend is\nclicked. One parameter, event, is passed to the function. The state\nof the checkbox is found by event.checked. The checked item is found\nby event.item. Return false to prevent the default action which is to\ntoggle the select state of the series.",
                  "samples": [
                    {
                      "name": "Alert checkbox status",
                      "value": "highcharts/plotoptions/series-events-checkboxclick/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["function"] },
                  "since": "1.2.0",
                  "products": ["highcharts", "highmaps"],
                  "context": "Highcharts.Point"
                },
                "meta": {
                  "fullname": "plotOptions.pie.events.checkboxClick",
                  "name": "checkboxClick",
                  "line": 54,
                  "lineEnd": 69,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "afterAnimate": {},
              "click": {},
              "hide": {},
              "mouseOut": {},
              "mouseOver": {},
              "show": {}
            },
            "extended": 1
          },
          "fillColor": {
            "doclet": {
              "description": "If the total sum of the pie's values is 0, the series is represented\nas an empty circle . The `fillColor` option defines the color of that\ncircle. Use [pie.borderWidth](#plotOptions.pie.borderWidth) to set\nthe border thickness.",
              "samples": [
                {
                  "name": "Empty pie series",
                  "value": "highcharts/plotoptions/pie-emptyseries/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "defaultvalue": "undefined"
            },
            "meta": {
              "fullname": "plotOptions.pie.fillColor",
              "name": "fillColor",
              "line": 337,
              "lineEnd": 348,
              "column": 4,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "ignoreHiddenPoint": {
            "doclet": {
              "description": "Equivalent to [chart.ignoreHiddenSeries](#chart.ignoreHiddenSeries),\nthis option tells whether the series shall be redrawn as if the\nhidden point were `null`.\n\nThe default value changed from `false` to `true` with Highcharts\n3.0.",
              "samples": [
                {
                  "name": "True, the hiddden point is ignored",
                  "value": "highcharts/plotoptions/pie-ignorehiddenpoint/",
                  "products": ["highcharts"]
                }
              ],
              "since": "2.3.0",
              "products": ["highcharts", "highmaps"],
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.pie.ignoreHiddenPoint",
              "name": "ignoreHiddenPoint",
              "line": 350,
              "lineEnd": 361,
              "column": 4,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "inactiveOtherPoints": {
            "doclet": {
              "defaultvalue": "true",
              "extends": "plotOptions.series.inactiveOtherPoints"
            },
            "meta": {
              "fullname": "plotOptions.pie.inactiveOtherPoints",
              "name": "inactiveOtherPoints",
              "line": 390,
              "lineEnd": 394,
              "column": 4,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "innerSize": {
            "doclet": {
              "description": "The size of the inner diameter for the pie. A size greater than 0\nrenders a donut chart. Can be a percentage or pixel value.\nPercentages are relative to the pie size. Pixel values are given as\nintegers. Setting overridden by thickness.\n\n\nNote: in Highcharts < 4.1.2, the percentage was relative to the plot\narea, not the pie size.",
              "samples": [
                {
                  "name": "80px inner size",
                  "value": "highcharts/plotoptions/pie-innersize-80px/",
                  "products": ["highcharts"]
                },
                {
                  "name": "50% of the plot area",
                  "value": "highcharts/plotoptions/pie-innersize-50percent/",
                  "products": ["highcharts"]
                },
                {
                  "name": "3D donut",
                  "value": "highcharts/demo/3d-pie-donut/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "string"] },
              "defaultvalue": "0",
              "since": "2.0.0",
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "plotOptions.pie.innerSize",
              "name": "innerSize",
              "line": 396,
              "lineEnd": 418,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "minSize": {
            "doclet": {
              "description": "The minimum size for a pie in response to auto margins. The pie will\ntry to shrink to make room for data labels in side the plot area,\n but only to this size.",
              "type": { "names": ["number", "string"] },
              "defaultvalue": "80",
              "since": "3.0.0",
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "plotOptions.pie.minSize",
              "name": "minSize",
              "line": 431,
              "lineEnd": 441,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "point": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.point"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "plotOptions.pie.point",
              "line": 0,
              "lineEnd": 0,
              "name": "point"
            },
            "children": {
              "events": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.series.point.events"
                },
                "meta": {
                  "column": 0,
                  "filename": "",
                  "fullname": "plotOptions.pie.point.events",
                  "line": 0,
                  "lineEnd": 0,
                  "name": "events"
                },
                "children": {
                  "legendItemClick": {
                    "doclet": {
                      "description": "Fires when the legend item belonging to the pie point (slice) is\nclicked. The `this` keyword refers to the point itself. One\nparameter, `event`, is passed to the function, containing common\nevent information. The default action is to toggle the visibility of\nthe point. This can be prevented by calling `event.preventDefault()`.\n\n **Note:** This option is deprecated in favor of\n[legend.events.itemClick](#legend.events.itemClick).",
                      "deprecated": "11.4.4",
                      "type": {
                        "names": [
                          "Highcharts.PointLegendItemClickCallbackFunction"
                        ]
                      },
                      "since": "1.2.0",
                      "products": ["highcharts", "highmaps"]
                    },
                    "meta": {
                      "fullname": "plotOptions.pie.point.events.legendItemClick",
                      "name": "legendItemClick",
                      "line": 70,
                      "lineEnd": 85,
                      "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "click": {},
                  "drag": {},
                  "dragStart": {},
                  "drop": {},
                  "mouseOut": {},
                  "mouseOver": {},
                  "remove": {},
                  "select": {},
                  "unselect": {},
                  "update": {}
                },
                "extended": 1
              }
            },
            "extended": 1
          },
          "showInLegend": {
            "doclet": {
              "description": "Whether to display this particular series or series type in the\nlegend. Since 2.1, pies are not shown in the legend by default.",
              "samples": [
                {
                  "name": "One series in the legend, one hidden",
                  "value": "highcharts/plotoptions/series-showinlegend/",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts", "highmaps"],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.pie.showInLegend",
              "name": "showInLegend",
              "line": 461,
              "lineEnd": 471,
              "column": 4,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "size": {
            "doclet": {
              "description": "The diameter of the pie relative to the plot area. Can be a\npercentage or pixel value. Pixel values are given as integers. The\ndefault behaviour (as of 3.0) is to scale to the plot area and give\nroom for data labels within the plot area.\n[slicedOffset](#plotOptions.pie.slicedOffset) is also included in the\ndefault size calculation. As a consequence, the size of the pie may\nvary when points are updated and data labels more around. In that\ncase it is best to set a fixed value, for example `\"75%\"`.",
              "samples": [
                {
                  "name": "Smaller pie",
                  "value": "highcharts/plotoptions/pie-size/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "string", "null"] },
              "products": ["highcharts", "highmaps"],
              "defaultvalue": null
            },
            "meta": {
              "fullname": "plotOptions.pie.size",
              "name": "size",
              "line": 430,
              "lineEnd": 430,
              "column": 18,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "default": null
            },
            "children": {},
            "extended": 1
          },
          "slicedOffset": {
            "doclet": {
              "description": "If a point is sliced, moved out from the center, how many pixels\nshould it be moved?.",
              "samples": [
                {
                  "name": "20px offset",
                  "value": "highcharts/plotoptions/pie-slicedoffset-20/",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts", "highmaps"],
              "type": { "names": ["number"] },
              "defaultvalue": 10
            },
            "meta": {
              "fullname": "plotOptions.pie.slicedOffset",
              "name": "slicedOffset",
              "line": 473,
              "lineEnd": 483,
              "column": 4,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "default": 10
            },
            "children": {},
            "extended": 1
          },
          "startAngle": {
            "doclet": {
              "description": "The start angle of the pie slices in degrees where 0 is top and 90\nright.",
              "samples": [
                {
                  "name": "Start from right",
                  "value": "highcharts/plotoptions/pie-startangle-90/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "0",
              "since": "2.3.4",
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "plotOptions.pie.startAngle",
              "name": "startAngle",
              "line": 485,
              "lineEnd": 497,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.states"
            },
            "meta": {
              "fullname": "plotOptions.pie.states",
              "name": "states",
              "line": 557,
              "lineEnd": 557,
              "column": 23,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js"
            },
            "children": {
              "hover": {
                "doclet": {
                  "extends": "plotOptions.series.states.hover",
                  "exclude": ["marker", "lineWidth", "lineWidthPlus"],
                  "products": ["highcharts", "highmaps"]
                },
                "meta": {
                  "fullname": "plotOptions.pie.states.hover",
                  "name": "hover",
                  "line": 559,
                  "lineEnd": 563,
                  "column": 8,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js"
                },
                "children": {
                  "brightness": {
                    "doclet": {
                      "description": "How much to brighten the point on interaction. Requires the\nmain color to be defined in hex or rgb(a) format.\n\nIn styled mode, the hover brightness is by default replaced\nby a fill-opacity given in the `.highcharts-point-hover`\nclass.",
                      "samples": [
                        {
                          "name": "Brightened by 0.5",
                          "value": "highcharts/plotoptions/pie-states-hover-brightness/",
                          "products": ["highcharts"]
                        }
                      ],
                      "products": ["highcharts", "highmaps"],
                      "type": { "names": ["number"] },
                      "defaultvalue": 0.1
                    },
                    "meta": {
                      "fullname": "plotOptions.pie.states.hover.brightness",
                      "name": "brightness",
                      "line": 565,
                      "lineEnd": 577,
                      "column": 12,
                      "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                      "default": 0.1
                    },
                    "children": {},
                    "extended": 1
                  },
                  "animation": {},
                  "enabled": {},
                  "halo": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {},
              "select": {}
            },
            "extended": 1
          },
          "stickyTracking": {
            "doclet": {
              "description": "Sticky tracking of mouse events. When true, the `mouseOut` event\non a series isn't triggered until the mouse moves over another\nseries, or out of the plot area. When false, the `mouseOut` event on\na series is triggered when the mouse leaves the area around the\nseries'  graph or markers. This also implies the tooltip. When\n`stickyTracking` is false and `tooltip.shared` is false, the tooltip\nwill be hidden when moving the mouse between series.",
              "products": ["highcharts", "highmaps"],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.pie.stickyTracking",
              "name": "stickyTracking",
              "line": 485,
              "lineEnd": 497,
              "column": 4,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "thickness": {
            "doclet": {
              "description": "Thickness describing the ring size for a donut type chart,\noverriding [innerSize](#plotOptions.pie.innerSize).",
              "type": { "names": ["number"] },
              "defaultvalue": "undefined",
              "products": ["highcharts"],
              "since": "10.1.0"
            },
            "meta": {
              "fullname": "plotOptions.pie.thickness",
              "name": "thickness",
              "line": 362,
              "lineEnd": 372,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.pie.tooltip",
              "name": "tooltip",
              "line": 512,
              "lineEnd": 512,
              "column": 4,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js"
            },
            "children": {
              "followPointer": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.pie.tooltip.followPointer",
                  "name": "followPointer",
                  "line": 513,
                  "lineEnd": 513,
                  "column": 8,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "distance": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "headerFormat": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormat": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "includeInDataExport": {},
          "keys": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "onPoint": {},
          "opacity": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "visible": {}
        },
        "extended": 1
      },
      "polygon": {
        "doclet": {
          "description": "A polygon series can be used to draw any freeform shape in the cartesian\ncoordinate system. A fill is applied with the `color` option, and\nstroke is applied through `lineWidth` and `lineColor` options.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `polygon` series are defined in\n   [plotOptions.polygon](plotOptions.polygon).\n3. Options for one single series are given in\n   [the series instance array](series.polygon).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        polygon: {\n            // shared options for all polygon series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'polygon'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.polygon.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === polygon) {\n    // code specific to the polygon series\n}\n```\n            ",
          "samples": [
            {
              "name": "Polygon",
              "value": "highcharts/demo/polygon/",
              "products": ["highcharts"]
            },
            {
              "name": "Polygon",
              "value": "highcharts/demo/polygon/",
              "products": ["highstock"]
            }
          ],
          "extends": "plotOptions.scatter",
          "since": "4.1.0",
          "exclude": [
            "jitter",
            "softThreshold",
            "threshold",
            "cluster",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts", "highstock"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Polygon/PolygonSeriesDefaults.js",
          "name": "polygon",
          "fullname": "plotOptions.polygon",
          "line": 11,
          "lineEnd": 15,
          "column": 0
        },
        "children": {
          "legendSymbol": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "rectangle"
            },
            "meta": {
              "fullname": "plotOptions.polygon.legendSymbol",
              "name": "legendSymbol",
              "line": 49,
              "lineEnd": 49,
              "column": 4,
              "filename": "code/es-modules/Series/Polygon/PolygonSeriesDefaults.js",
              "default": "rectangle"
            },
            "children": {},
            "extended": 1
          },
          "marker": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.marker"
            },
            "meta": {
              "fullname": "plotOptions.polygon.marker",
              "name": "marker",
              "line": 35,
              "lineEnd": 35,
              "column": 4,
              "filename": "code/es-modules/Series/Polygon/PolygonSeriesDefaults.js"
            },
            "children": {
              "enabled": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.polygon.marker.enabled",
                  "name": "enabled",
                  "line": 36,
                  "lineEnd": 36,
                  "column": 8,
                  "filename": "code/es-modules/Series/Polygon/PolygonSeriesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "states": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.scatter.marker.states"
                },
                "meta": {
                  "fullname": "plotOptions.polygon.marker.states",
                  "name": "states",
                  "line": 37,
                  "lineEnd": 37,
                  "column": 8,
                  "filename": "code/es-modules/Series/Polygon/PolygonSeriesDefaults.js"
                },
                "children": {
                  "hover": {
                    "doclet": {
                      "type": { "names": ["*"] },
                      "extends": "plotOptions.series.marker.states.hover"
                    },
                    "meta": {
                      "fullname": "plotOptions.polygon.marker.states.hover",
                      "name": "hover",
                      "line": 38,
                      "lineEnd": 38,
                      "column": 12,
                      "filename": "code/es-modules/Series/Polygon/PolygonSeriesDefaults.js"
                    },
                    "children": {
                      "enabled": {
                        "doclet": {
                          "type": { "names": ["boolean"] },
                          "defaultvalue": false
                        },
                        "meta": {
                          "fullname": "plotOptions.polygon.marker.states.hover.enabled",
                          "name": "enabled",
                          "line": 39,
                          "lineEnd": 39,
                          "column": 16,
                          "filename": "code/es-modules/Series/Polygon/PolygonSeriesDefaults.js",
                          "default": false
                        },
                        "children": {},
                        "extended": 1
                      },
                      "animation": {},
                      "fillColor": {},
                      "lineColor": {},
                      "lineWidth": {},
                      "lineWidthPlus": {},
                      "radius": {},
                      "radiusPlus": {}
                    },
                    "extended": 1
                  },
                  "normal": {},
                  "select": {}
                },
                "extended": 1
              },
              "enabledThreshold": {},
              "fillColor": {},
              "height": {},
              "lineColor": {},
              "lineWidth": {},
              "radius": {},
              "symbol": {},
              "width": {}
            },
            "extended": 1
          },
          "stickyTracking": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.polygon.stickyTracking",
              "name": "stickyTracking",
              "line": 43,
              "lineEnd": 43,
              "column": 4,
              "filename": "code/es-modules/Series/Polygon/PolygonSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.polygon.tooltip",
              "name": "tooltip",
              "line": 44,
              "lineEnd": 44,
              "column": 4,
              "filename": "code/es-modules/Series/Polygon/PolygonSeriesDefaults.js"
            },
            "children": {
              "followPointer": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.polygon.tooltip.followPointer",
                  "name": "followPointer",
                  "line": 45,
                  "lineEnd": 45,
                  "column": 8,
                  "filename": "code/es-modules/Series/Polygon/PolygonSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": ""
                },
                "meta": {
                  "fullname": "plotOptions.polygon.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 46,
                  "lineEnd": 46,
                  "column": 8,
                  "filename": "code/es-modules/Series/Polygon/PolygonSeriesDefaults.js",
                  "default": ""
                },
                "children": {},
                "extended": 1
              },
              "headerFormat": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "distance": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "trackByArea": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.polygon.trackByArea",
              "name": "trackByArea",
              "line": 48,
              "lineEnd": 48,
              "column": 4,
              "filename": "code/es-modules/Series/Polygon/PolygonSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "findNearestPointBy": {},
          "lineWidth": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "stacking": {},
          "states": {},
          "step": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "pyramid": {
        "doclet": {
          "description": "A pyramid series is a special type of funnel, without neck and reversed\nby default.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `pyramid` series are defined in\n   [plotOptions.pyramid](plotOptions.pyramid).\n3. Options for one single series are given in\n   [the series instance array](series.pyramid).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        pyramid: {\n            // shared options for all pyramid series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'pyramid'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.pyramid.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === pyramid) {\n    // code specific to the pyramid series\n}\n```\n            ",
          "samples": [
            { "name": "Pyramid chart", "value": "highcharts/demo/pyramid/" }
          ],
          "extends": "plotOptions.funnel",
          "products": ["highcharts"],
          "requires": ["module:modules/funnel"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Pyramid/PyramidSeries.js",
          "name": "pyramid",
          "fullname": "plotOptions.pyramid",
          "line": 34,
          "lineEnd": 38,
          "column": 0
        },
        "children": {
          "animation": {},
          "borderRadius": {},
          "center": {},
          "dataLabels": {},
          "height": {},
          "neckHeight": {},
          "neckWidth": {},
          "reversed": {},
          "states": {},
          "width": {},
          "borderColor": {},
          "borderWidth": {},
          "clip": {},
          "color": {},
          "colors": {},
          "depth": {},
          "endAngle": {},
          "events": {},
          "fillColor": {},
          "ignoreHiddenPoint": {},
          "inactiveOtherPoints": {},
          "minSize": {},
          "point": {},
          "showInLegend": {},
          "slicedOffset": {},
          "startAngle": {},
          "stickyTracking": {},
          "thickness": {},
          "tooltip": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "className": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "includeInDataExport": {},
          "keys": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "onPoint": {},
          "opacity": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "visible": {}
        },
        "extended": 1
      },
      "pyramid3d": {
        "doclet": {
          "description": "A pyramid3d is a 3d version of pyramid series type. Pyramid charts are\na type of chart often used to visualize stages in a sales project,\nwhere the top are the initial stages with the most clients.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `pyramid3d` series are defined in\n   [plotOptions.pyramid3d](plotOptions.pyramid3d).\n3. Options for one single series are given in\n   [the series instance array](series.pyramid3d).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        pyramid3d: {\n            // shared options for all pyramid3d series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'pyramid3d'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.pyramid3d.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === pyramid3d) {\n    // code specific to the pyramid3d series\n}\n```\n            ",
          "samples": [
            { "name": "Pyramid3d", "value": "highcharts/demo/pyramid3d/" }
          ],
          "extends": "plotOptions.funnel3d",
          "exclude": [
            "dataSorting",
            "legendSymbolColor",
            "neckHeight",
            "neckWidth",
            ""
          ],
          "products": ["highcharts"],
          "since": "7.1.0",
          "requires": [
            "module:highcharts-3d",
            "module:modules/cylinder",
            "module:modules/funnel3d",
            "module:modules/pyramid3d"
          ]
        },
        "meta": {
          "filename": "code/es-modules/Series/Pyramid3D/Pyramid3DSeriesDefaults.js",
          "name": "pyramid3d",
          "fullname": "plotOptions.pyramid3d",
          "line": 14,
          "lineEnd": 18,
          "column": 0
        },
        "children": {
          "dataLabels": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.funnel3d.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.pyramid3d.dataLabels",
              "name": "dataLabels",
              "line": 47,
              "lineEnd": 47,
              "column": 4,
              "filename": "code/es-modules/Series/Pyramid3D/Pyramid3DSeriesDefaults.js"
            },
            "children": {
              "verticalAlign": {
                "doclet": {
                  "defaultvalue": "top",
                  "type": { "names": ["string"] }
                },
                "meta": {
                  "fullname": "plotOptions.pyramid3d.dataLabels.verticalAlign",
                  "name": "verticalAlign",
                  "line": 48,
                  "lineEnd": 50,
                  "column": 8,
                  "filename": "code/es-modules/Series/Pyramid3D/Pyramid3DSeriesDefaults.js",
                  "default": "top"
                },
                "children": {},
                "extended": 1
              },
              "align": {},
              "crop": {},
              "inside": {},
              "overflow": {},
              "y": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "defer": {},
              "enabled": {},
              "filter": {},
              "format": {},
              "formatter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "style": {},
              "textPath": {},
              "useHTML": {},
              "x": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "neckHeight": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0 },
            "meta": {
              "fullname": "plotOptions.pyramid3d.neckHeight",
              "name": "neckHeight",
              "line": 45,
              "lineEnd": 45,
              "column": 4,
              "filename": "code/es-modules/Series/Pyramid3D/Pyramid3DSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "neckWidth": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0 },
            "meta": {
              "fullname": "plotOptions.pyramid3d.neckWidth",
              "name": "neckWidth",
              "line": 46,
              "lineEnd": 46,
              "column": 4,
              "filename": "code/es-modules/Series/Pyramid3D/Pyramid3DSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "reversed": {
            "doclet": {
              "description": "A reversed pyramid3d is funnel3d, but the latter supports neck\nrelated options: neckHeight and neckWidth",
              "products": ["highcharts"],
              "since": "7.1.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.pyramid3d.reversed",
              "name": "reversed",
              "line": 38,
              "lineEnd": 43,
              "column": 4,
              "filename": "code/es-modules/Series/Pyramid3D/Pyramid3DSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "animation": {},
          "colorByPoint": {},
          "edgeWidth": {},
          "gradientForSides": {},
          "height": {},
          "showInLegend": {},
          "width": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "depth": {},
          "dragDrop": {},
          "edgeColor": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "sankey": {
        "doclet": {
          "description": "A sankey diagram is a type of flow diagram, in which the width of the\nlink between two nodes is shown proportionally to the flow quantity.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `sankey` series are defined in\n   [plotOptions.sankey](plotOptions.sankey).\n3. Options for one single series are given in\n   [the series instance array](series.sankey).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        sankey: {\n            // shared options for all sankey series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'sankey'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.sankey.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === sankey) {\n    // code specific to the sankey series\n}\n```\n            ",
          "samples": [
            {
              "name": "Sankey diagram",
              "value": "highcharts/demo/sankey-diagram/"
            },
            {
              "name": "Inverted sankey diagram",
              "value": "highcharts/plotoptions/sankey-inverted/"
            },
            {
              "name": "Sankey diagram with outgoing links",
              "value": "highcharts/plotoptions/sankey-outgoing"
            }
          ],
          "extends": "plotOptions.column",
          "since": "6.0.0",
          "products": ["highcharts"],
          "exclude": [
            "animationLimit",
            "boostBlending",
            "boostThreshold",
            "borderRadius",
            "crisp",
            "cropThreshold",
            "colorAxis",
            "colorKey",
            "dataSorting",
            "depth",
            "dragDrop",
            "edgeColor",
            "edgeWidth",
            "findNearestPointBy",
            "grouping",
            "groupPadding",
            "groupZPadding",
            "legendSymbolColor",
            "maxPointWidth",
            "minPointLength",
            "negativeColor",
            "pointInterval",
            "pointIntervalUnit",
            "pointPadding",
            "pointPlacement",
            "pointRange",
            "pointStart",
            "pointWidth",
            "shadow",
            "softThreshold",
            "stacking",
            "threshold",
            "zoneAxis",
            "zones"
          ],
          "requires": ["module:modules/sankey"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
          "name": "sankey",
          "fullname": "plotOptions.sankey",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "borderWidth": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0 },
            "meta": {
              "fullname": "plotOptions.sankey.borderWidth",
              "name": "borderWidth",
              "line": 46,
              "lineEnd": 46,
              "column": 4,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "colorByPoint": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.sankey.colorByPoint",
              "name": "colorByPoint",
              "line": 47,
              "lineEnd": 47,
              "column": 4,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "curveFactor": {
            "doclet": {
              "description": "Higher numbers makes the links in a sankey diagram or dependency\nwheelrender more curved. A `curveFactor` of 0 makes the lines\nstraight.",
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 0.33
            },
            "meta": {
              "fullname": "plotOptions.sankey.curveFactor",
              "name": "curveFactor",
              "line": 48,
              "lineEnd": 54,
              "column": 4,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "default": 0.33
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "description": "Options for the data labels appearing on top of the nodes and links.\nFor sankey charts, data labels are visible for the nodes by default,\nbut hidden for links. This is controlled by modifying the\n`nodeFormat`, and the `format` that applies to links and is an empty\nstring by default.",
              "declare": "Highcharts.SeriesSankeyDataLabelsOptionsObject",
              "since": "6.0.0",
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.sankey.dataLabels",
              "name": "dataLabels",
              "line": 56,
              "lineEnd": 66,
              "column": 4,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js"
            },
            "children": {
              "backgroundColor": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "none"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.dataLabels.backgroundColor",
                  "name": "backgroundColor",
                  "line": 69,
                  "lineEnd": 69,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "default": "none"
                },
                "children": {},
                "extended": 1
              },
              "crop": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.sankey.dataLabels.crop",
                  "name": "crop",
                  "line": 69,
                  "lineEnd": 69,
                  "column": 33,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "enabled": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.sankey.dataLabels.enabled",
                  "name": "enabled",
                  "line": 68,
                  "lineEnd": 68,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "format": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.dataLabels.format",
                  "name": "format",
                  "line": 94,
                  "lineEnd": 94,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "formatter": {
                "doclet": {
                  "type": {
                    "names": [
                      "Highcharts.SeriesSankeyDataLabelsFormatterCallbackFunction"
                    ]
                  }
                },
                "meta": {
                  "fullname": "plotOptions.sankey.dataLabels.formatter",
                  "name": "formatter",
                  "line": 95,
                  "lineEnd": 97,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js"
                },
                "children": {},
                "extended": 1
              },
              "inside": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.sankey.dataLabels.inside",
                  "name": "inside",
                  "line": 101,
                  "lineEnd": 101,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "nodeFormat": {
                "doclet": {
                  "description": "The\n[format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\nspecifying what to show for _nodes_ in the sankey diagram. By\ndefault the `nodeFormatter` returns `{point.name}`.",
                  "samples": [
                    {
                      "name": "Node and link data labels",
                      "value": "highcharts/plotoptions/sankey-link-datalabels/"
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "6.0.0",
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.dataLabels.nodeFormat",
                  "name": "nodeFormat",
                  "line": 71,
                  "lineEnd": 81,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "nodeFormatter": {
                "doclet": {
                  "description": "Callback to format data labels for _nodes_ in the sankey diagram.\nThe `nodeFormat` option takes precedence over the\n`nodeFormatter`.",
                  "type": {
                    "names": [
                      "Highcharts.SeriesSankeyDataLabelsFormatterCallbackFunction"
                    ]
                  },
                  "since": "6.0.2"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.dataLabels.nodeFormatter",
                  "name": "nodeFormatter",
                  "line": 83,
                  "lineEnd": 90,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js"
                },
                "children": {},
                "extended": 1
              },
              "align": {},
              "verticalAlign": {},
              "y": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "defer": {},
              "filter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "style": {},
              "textPath": {},
              "useHTML": {},
              "x": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "inactiveOtherPoints": {
            "doclet": {
              "defaultvalue": "true",
              "extends": "plotOptions.series.inactiveOtherPoints"
            },
            "meta": {
              "fullname": "plotOptions.sankey.inactiveOtherPoints",
              "name": "inactiveOtherPoints",
              "line": 103,
              "lineEnd": 107,
              "column": 4,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "levels": {
            "doclet": {
              "description": "Set options on specific levels. Takes precedence over series options,\nbut not node and link options.",
              "samples": [
                {
                  "name": "Sunburst chart",
                  "value": "highcharts/demo/sunburst"
                }
              ],
              "type": { "names": ["Array.<*>"] },
              "since": "7.1.0"
            },
            "meta": {
              "fullname": "plotOptions.sankey.levels",
              "name": "levels",
              "line": 109,
              "lineEnd": 119,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "column": 0
            },
            "children": {
              "borderColor": {
                "doclet": {
                  "description": "Can set `borderColor` on all nodes which lay on the same level.",
                  "type": { "names": ["Highcharts.ColorString"] },
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.levels.borderColor",
                  "name": "borderColor",
                  "line": 120,
                  "lineEnd": 125,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "borderWidth": {
                "doclet": {
                  "description": "Can set `borderWidth` on all nodes which lay on the same level.",
                  "type": { "names": ["number"] },
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.levels.borderWidth",
                  "name": "borderWidth",
                  "line": 126,
                  "lineEnd": 131,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "color": {
                "doclet": {
                  "description": "Can set `color` on all nodes which lay on the same level.",
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.levels.color",
                  "name": "color",
                  "line": 132,
                  "lineEnd": 137,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "colorByPoint": {
                "doclet": {
                  "description": "Can set `colorByPoint` on all nodes which lay on the same level.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.levels.colorByPoint",
                  "name": "colorByPoint",
                  "line": 138,
                  "lineEnd": 144,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dataLabels": {
                "doclet": {
                  "description": "Can set `dataLabels` on all points which lay on the same level.",
                  "extends": "plotOptions.sankey.dataLabels",
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.levels.dataLabels",
                  "name": "dataLabels",
                  "line": 145,
                  "lineEnd": 150,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "backgroundColor": {},
                  "crop": {},
                  "enabled": {},
                  "format": {},
                  "formatter": {},
                  "inside": {},
                  "nodeFormat": {},
                  "nodeFormatter": {},
                  "align": {},
                  "verticalAlign": {},
                  "y": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "defer": {},
                  "filter": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "style": {},
                  "textPath": {},
                  "useHTML": {},
                  "x": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "level": {
                "doclet": {
                  "description": "Decides which level takes effect from the options set in the levels\nobject.",
                  "type": { "names": ["number"] },
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.levels.level",
                  "name": "level",
                  "line": 151,
                  "lineEnd": 157,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "linkOpacity": {
                "doclet": {
                  "description": "Can set `linkOpacity` on all points which lay on the same level.",
                  "type": { "names": ["number"] },
                  "defaultvalue": "0.5",
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.levels.linkOpacity",
                  "name": "linkOpacity",
                  "line": 158,
                  "lineEnd": 164,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "states": {
                "doclet": {
                  "description": "Can set `states` on all nodes and points which lay on the same level.",
                  "extends": "plotOptions.sankey.states",
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.levels.states",
                  "name": "states",
                  "line": 165,
                  "lineEnd": 170,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "hover": {},
                  "inactive": {},
                  "select": {},
                  "normal": {}
                },
                "extended": 1
              }
            },
            "extended": 1
          },
          "linkColorMode": {
            "doclet": {
              "description": "Determines color mode for sankey links. Available options:\n\n- `from` color of the sankey link will be the same as the 'from node'\n\n- `gradient` color of the sankey link will be set to gradient between\ncolors of 'from node' and 'to node'\n\n- `to` color of the sankey link will be same as the 'to node'.",
              "samples": [
                {
                  "name": "Vertical sankey diagram with gradients",
                  "value": "highcharts/demo/vertical-sankey"
                },
                {
                  "name": "Sankey diagram with gradients and explanation",
                  "value": "highcharts/series-sankey/link-color-mode"
                }
              ],
              "type": { "names": ["'from'", "'gradient'", "'to'"] },
              "since": "11.2.0",
              "defaultvalue": "from"
            },
            "meta": {
              "fullname": "plotOptions.sankey.linkColorMode",
              "name": "linkColorMode",
              "line": 109,
              "lineEnd": 119,
              "column": 4,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "default": "from"
            },
            "children": {},
            "extended": 1
          },
          "linkOpacity": {
            "doclet": {
              "description": "Opacity for the links between nodes in the sankey diagram.",
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 0.5
            },
            "meta": {
              "fullname": "plotOptions.sankey.linkOpacity",
              "name": "linkOpacity",
              "line": 190,
              "lineEnd": 194,
              "column": 4,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "default": 0.5
            },
            "children": {},
            "extended": 1
          },
          "minLinkWidth": {
            "doclet": {
              "description": "The minimal width for a line of a sankey. By default,\n0 values are not shown.",
              "samples": [
                {
                  "name": "Sankey diagram with minimal link height",
                  "value": "highcharts/plotoptions/sankey-minlinkwidth"
                }
              ],
              "type": { "names": ["number"] },
              "since": "7.1.3",
              "defaultvalue": "0"
            },
            "meta": {
              "fullname": "plotOptions.sankey.minLinkWidth",
              "name": "minLinkWidth",
              "line": 202,
              "lineEnd": 215,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "nodeAlignment": {
            "doclet": {
              "description": "Determines which side of the chart the nodes are to be aligned to. When\nthe chart is inverted, `top` aligns to the left and `bottom` to the\nright.",
              "samples": [
                {
                  "name": "Node alignment demonstrated",
                  "value": "highcharts/plotoptions/sankey-nodealignment"
                }
              ],
              "type": { "names": ["'top'", "'center'", "'bottom'"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "plotOptions.sankey.nodeAlignment",
              "name": "nodeAlignment",
              "line": 217,
              "lineEnd": 227,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "nodeDistance": {
            "doclet": {
              "description": "The distance between nodes in a sankey diagram in the longitudinal\ndirection. The longitudinal direction means the direction that the chart\nflows - in a horizontal chart the distance is horizontal, in an inverted\nchart (vertical), the distance is vertical.\n\nIf a number is given, it denotes pixels. If a percentage string is given,\nthe distance is a percentage of the rendered node width. A `nodeDistance`\nof `100%` will render equal widths for the nodes and the gaps between\nthem.\n\nThis option applies only when the `nodeWidth` option is `auto`, making\nthe node width respond to the number of columns.",
              "since": "11.4.0",
              "samples": [
                {
                  "name": "Sankey with dnode distance of 100% means equal to node width",
                  "value": "highcharts/series-sankey/node-distance"
                },
                {
                  "name": "Organization chart with node distance of 50%",
                  "value": "highcharts/series-organization/node-distance"
                }
              ],
              "type": { "names": ["number", "string"] },
              "defaultvalue": 30
            },
            "meta": {
              "fullname": "plotOptions.sankey.nodeDistance",
              "name": "nodeDistance",
              "line": 259,
              "lineEnd": 279,
              "column": 4,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "default": 30
            },
            "children": {},
            "extended": 1
          },
          "nodePadding": {
            "doclet": {
              "description": "The padding between nodes in a sankey diagram or dependency wheel, in\npixels. For sankey charts, this applies to the nodes of the same column,\nso vertical distance by default, or horizontal distance in an inverted\n(vertical) sankey.\n\nIf the number of nodes is so great that it is impossible to lay them out\nwithin the plot area with the given `nodePadding`, they will be rendered\nwith a smaller padding as a strategy to avoid overflow.",
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 10
            },
            "meta": {
              "fullname": "plotOptions.sankey.nodePadding",
              "name": "nodePadding",
              "line": 248,
              "lineEnd": 257,
              "column": 4,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "default": 10
            },
            "children": {},
            "extended": 1
          },
          "nodeWidth": {
            "doclet": {
              "description": "The pixel width of each node in a sankey diagram or dependency wheel, or\nthe height in case the chart is inverted.\n\nCan be a number or a percentage string.\n\nSankey series also support setting it to `auto`. With this setting, the\nnodes are sized to fill up the plot area in the longitudinal direction,\nregardless of the number of levels.",
              "see": ["[sankey.nodeDistance](#nodeDistance)"],
              "samples": [
                {
                  "name": "Sankey with auto node width combined with node distance",
                  "value": "highcharts/series-sankey/node-distance"
                },
                {
                  "name": "Organization chart with node distance of 50%",
                  "value": "highcharts/series-organization/node-distance"
                }
              ],
              "type": { "names": ["number", "string"] },
              "since": "6.0.0",
              "defaultvalue": 20
            },
            "meta": {
              "fullname": "plotOptions.sankey.nodeWidth",
              "name": "nodeWidth",
              "line": 229,
              "lineEnd": 246,
              "column": 4,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "default": 20
            },
            "children": {},
            "extended": 1
          },
          "opacity": {
            "doclet": {
              "description": "Opacity for the nodes in the sankey diagram.",
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "plotOptions.sankey.opacity",
              "name": "opacity",
              "line": 196,
              "lineEnd": 200,
              "column": 4,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "showInLegend": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.sankey.showInLegend",
              "name": "showInLegend",
              "line": 281,
              "lineEnd": 281,
              "column": 4,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.states"
            },
            "meta": {
              "fullname": "plotOptions.sankey.states",
              "name": "states",
              "line": 282,
              "lineEnd": 282,
              "column": 4,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js"
            },
            "children": {
              "hover": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.column.states.hover"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.states.hover",
                  "name": "hover",
                  "line": 283,
                  "lineEnd": 283,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js"
                },
                "children": {
                  "linkOpacity": {
                    "doclet": {
                      "description": "Opacity for the links between nodes in the sankey diagram in\nhover mode.",
                      "type": { "names": ["number"] },
                      "defaultvalue": 1
                    },
                    "meta": {
                      "fullname": "plotOptions.sankey.states.hover.linkOpacity",
                      "name": "linkOpacity",
                      "line": 284,
                      "lineEnd": 287,
                      "column": 12,
                      "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                      "default": 1
                    },
                    "children": {},
                    "extended": 1
                  },
                  "opacity": {
                    "doclet": {
                      "description": "Opacity for the nodes in the sankey diagram in hover mode.",
                      "type": { "names": ["number"] },
                      "defaultvalue": 1
                    },
                    "meta": {
                      "fullname": "plotOptions.sankey.states.hover.opacity",
                      "name": "opacity",
                      "line": 289,
                      "lineEnd": 291,
                      "column": 12,
                      "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                      "default": 1
                    },
                    "children": {},
                    "extended": 1
                  },
                  "borderColor": {},
                  "brightness": {},
                  "color": {},
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "inactive": {
                "doclet": {
                  "description": "The opposite state of a hover for a single point node/link.",
                  "declare": "Highcharts.SeriesStatesInactiveOptionsObject",
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.column.states.inactive"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.states.inactive",
                  "name": "inactive",
                  "line": 294,
                  "lineEnd": 298,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js"
                },
                "children": {
                  "linkOpacity": {
                    "doclet": {
                      "description": "Opacity for the links between nodes in the sankey diagram in\ninactive mode.",
                      "type": { "names": ["number"] },
                      "defaultvalue": 0.1
                    },
                    "meta": {
                      "fullname": "plotOptions.sankey.states.inactive.linkOpacity",
                      "name": "linkOpacity",
                      "line": 300,
                      "lineEnd": 303,
                      "column": 12,
                      "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                      "default": 0.1
                    },
                    "children": {},
                    "extended": 1
                  },
                  "opacity": {
                    "doclet": {
                      "description": "Opacity of the nodes in the sankey diagram in inactive mode.",
                      "type": { "names": ["number"] },
                      "defaultvalue": 0.1
                    },
                    "meta": {
                      "fullname": "plotOptions.sankey.states.inactive.opacity",
                      "name": "opacity",
                      "line": 305,
                      "lineEnd": 307,
                      "column": 12,
                      "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                      "default": 0.1
                    },
                    "children": {},
                    "extended": 1
                  },
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "select": {},
              "normal": {}
            },
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.sankey.tooltip",
              "name": "tooltip",
              "line": 321,
              "lineEnd": 321,
              "column": 4,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js"
            },
            "children": {
              "followPointer": {
                "doclet": {
                  "description": "Whether the tooltip should follow the pointer or stay fixed on\nthe item.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.sankey.tooltip.followPointer",
                  "name": "followPointer",
                  "line": 322,
                  "lineEnd": 329,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "headerFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "<span style=\"font-size: 0.8em\">{series.name}</span><br/>"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.tooltip.headerFormat",
                  "name": "headerFormat",
                  "line": 335,
                  "lineEnd": 335,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "default": "<span style=\"font-size: 0.8em\">{series.name}</span><br/>"
                },
                "children": {},
                "extended": 1
              },
              "nodeFormat": {
                "doclet": {
                  "description": "The\n[format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\nspecifying what to show for _nodes_ in tooltip of a diagram\nseries, as opposed to links.",
                  "type": { "names": ["string"] },
                  "defaultvalue": "{point.name}: <b>{point.sum}</b><br/>"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.tooltip.nodeFormat",
                  "name": "nodeFormat",
                  "line": 337,
                  "lineEnd": 342,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "default": "{point.name}: <b>{point.sum}</b><br/>"
                },
                "children": {},
                "extended": 1
              },
              "nodeFormatter": {
                "doclet": {
                  "description": "A callback for defining the format for _nodes_ in the chart's\ntooltip, as opposed to links.",
                  "type": {
                    "names": [
                      "Highcharts.FormatterCallbackFunction.<Highcharts.SankeyNodeObject>"
                    ]
                  },
                  "since": "6.0.2"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.tooltip.nodeFormatter",
                  "name": "nodeFormatter",
                  "line": 322,
                  "lineEnd": 329,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "{point.fromNode.name} → {point.toNode.name}: <b>{point.weight}</b><br/>"
                },
                "meta": {
                  "fullname": "plotOptions.sankey.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 336,
                  "lineEnd": 336,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "default": "{point.fromNode.name} → {point.toNode.name}: <b>{point.weight}</b><br/>"
                },
                "children": {},
                "extended": 1
              },
              "distance": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "borderColor": {},
          "centerInCategory": {},
          "colors": {},
          "dataGrouping": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "onPoint": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "scatter": {
        "doclet": {
          "description": "A scatter plot uses cartesian coordinates to display values for two\nvariables for a set of data.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `scatter` series are defined in\n   [plotOptions.scatter](plotOptions.scatter).\n3. Options for one single series are given in\n   [the series instance array](series.scatter).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        scatter: {\n            // shared options for all scatter series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'scatter'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.scatter.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === scatter) {\n    // code specific to the scatter series\n}\n```\n            ",
          "samples": [
            {
              "name": "Scatter plot",
              "value": "highcharts/demo/scatter/",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.line",
          "exclude": [
            "cropThreshold",
            "legendSymbolColor",
            "pointPlacement",
            "shadow",
            "useOhlcData"
          ],
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Scatter/ScatterSeriesDefaults.js",
          "name": "scatter",
          "fullname": "plotOptions.scatter",
          "line": 11,
          "lineEnd": 15,
          "column": 0
        },
        "children": {
          "cluster": {
            "doclet": {
              "description": "Options for marker clusters, the concept of sampling the data\nvalues into larger blocks in order to ease readability and\nincrease performance of the JavaScript charts.\n\nNote: marker clusters module is not working with `boost`\nand `draggable-points` modules.\n\nThe marker clusters feature requires the marker-clusters.js\nfile to be loaded, found in the modules directory of the download\npackage, or online at [code.highcharts.com/modules/marker-clusters.js](code.highcharts.com/modules/marker-clusters.js).",
              "samples": [
                {
                  "name": "Maps marker clusters",
                  "value": "maps/marker-clusters/europe"
                },
                {
                  "name": "Scatter marker clusters",
                  "value": "highcharts/marker-clusters/basic"
                },
                {
                  "name": "Marker clusters with colorAxis",
                  "value": "maps/marker-clusters/optimized-kmeans"
                }
              ],
              "products": ["highcharts", "highmaps"],
              "since": "8.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
              "name": "cluster",
              "fullname": "plotOptions.scatter.cluster",
              "line": 15,
              "lineEnd": 19,
              "column": 0
            },
            "children": {
              "allowOverlap": {
                "doclet": {
                  "description": "When set to `false` prevent cluster overlapping - this option\nworks only when `layoutAlgorithm.type = \"grid\"`.",
                  "samples": [
                    {
                      "name": "Prevent overlapping",
                      "value": "highcharts/marker-clusters/grid"
                    }
                  ],
                  "since": "8.0.0",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.scatter.cluster.allowOverlap",
                  "name": "allowOverlap",
                  "line": 56,
                  "lineEnd": 62,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "animation": {
                "doclet": {
                  "description": "Options for the cluster marker animation.",
                  "type": {
                    "names": [
                      "boolean",
                      "Partial.<Highcharts.AnimationOptionsObject>"
                    ]
                  },
                  "defaultvalue": "{ \"duration\": 500 }",
                  "since": "8.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.scatter.cluster.animation",
                  "name": "animation",
                  "line": 64,
                  "lineEnd": 68,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js"
                },
                "children": {},
                "extended": 1
              },
              "dataLabels": {
                "doclet": {
                  "description": "Options for the cluster data labels.",
                  "type": { "names": ["Highcharts.DataLabelsOptions"] },
                  "since": "8.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.scatter.cluster.dataLabels",
                  "name": "dataLabels",
                  "line": 218,
                  "lineEnd": 228,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js"
                },
                "children": {
                  "align": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["string"] },
                      "defaultvalue": "center"
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.dataLabels.align",
                      "name": "align",
                      "line": 296,
                      "lineEnd": 296,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "default": "center"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "enabled": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["boolean"] },
                      "defaultvalue": true
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.dataLabels.enabled",
                      "name": "enabled",
                      "line": 290,
                      "lineEnd": 290,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "default": true
                    },
                    "children": {},
                    "extended": 1
                  },
                  "format": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["string"] },
                      "defaultvalue": "{point.clusterPointsAmount}"
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.dataLabels.format",
                      "name": "format",
                      "line": 292,
                      "lineEnd": 292,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "default": "{point.clusterPointsAmount}"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "inside": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["boolean"] },
                      "defaultvalue": true
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.dataLabels.inside",
                      "name": "inside",
                      "line": 302,
                      "lineEnd": 302,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "default": true
                    },
                    "children": {},
                    "extended": 1
                  },
                  "style": {
                    "doclet": { "internal": true, "type": { "names": ["*"] } },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.dataLabels.style",
                      "name": "style",
                      "line": 298,
                      "lineEnd": 298,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js"
                    },
                    "children": {
                      "color": {
                        "doclet": {
                          "type": { "names": ["string"] },
                          "defaultvalue": "contrast"
                        },
                        "meta": {
                          "fullname": "plotOptions.scatter.cluster.dataLabels.style.color",
                          "name": "color",
                          "line": 300,
                          "lineEnd": 300,
                          "column": 12,
                          "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                          "default": "contrast"
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "extended": 1
                  },
                  "verticalAlign": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["string"] },
                      "defaultvalue": "middle"
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.dataLabels.verticalAlign",
                      "name": "verticalAlign",
                      "line": 294,
                      "lineEnd": 294,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "default": "middle"
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "drillToCluster": {
                "doclet": {
                  "description": "Zoom the plot area to the cluster points range when a cluster is clicked.",
                  "since": "8.0.0",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.scatter.cluster.drillToCluster",
                  "name": "drillToCluster",
                  "line": 73,
                  "lineEnd": 75,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "enabled": {
                "doclet": {
                  "description": "Whether to enable the marker-clusters module.",
                  "samples": [
                    {
                      "name": "Maps marker clusters",
                      "value": "maps/marker-clusters/basic"
                    },
                    {
                      "name": "Scatter marker clusters",
                      "value": "highcharts/marker-clusters/basic"
                    }
                  ],
                  "since": "8.0.0",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.scatter.cluster.enabled",
                  "name": "enabled",
                  "line": 47,
                  "lineEnd": 54,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "events": {
                "doclet": { "type": { "names": ["*"] } },
                "meta": {
                  "column": 0,
                  "filename": "",
                  "fullname": "plotOptions.scatter.cluster.events",
                  "line": 0,
                  "lineEnd": 0,
                  "name": "events"
                },
                "children": {
                  "drillToCluster": {
                    "doclet": {
                      "description": "Fires when the cluster point is clicked and `drillToCluster` is enabled.\nOne parameter, `event`, is passed to the function. The default action\nis to zoom to the cluster points range. This can be prevented\nby calling `event.preventDefault()`.",
                      "type": {
                        "names": [
                          "Highcharts.MarkerClusterDrillCallbackFunction"
                        ]
                      },
                      "products": ["highcharts", "highmaps"],
                      "see": [
                        "[cluster.drillToCluster](#plotOptions.scatter.cluster.drillToCluster)"
                      ]
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.events.drillToCluster",
                      "name": "drillToCluster",
                      "line": 218,
                      "lineEnd": 228,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "layoutAlgorithm": {
                "doclet": {
                  "description": "Options for layout algorithm. Inside there\nare options to change the type of the algorithm, gridSize,\ndistance or iterations.",
                  "since": "8.0.0",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "plotOptions.scatter.cluster.layoutAlgorithm",
                  "name": "layoutAlgorithm",
                  "line": 85,
                  "lineEnd": 89,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js"
                },
                "children": {
                  "distance": {
                    "doclet": {
                      "description": "When `type` is set to `kmeans`,\n`distance` is a maximum distance between point and cluster center\nso that this point will be inside the cluster. The distance\nis either a number defining pixels or a percentage\ndefining a percentage of the plot area width.",
                      "type": { "names": ["number", "string"] },
                      "since": "8.0.0",
                      "defaultvalue": 40
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.layoutAlgorithm.distance",
                      "name": "distance",
                      "line": 176,
                      "lineEnd": 183,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "default": 40
                    },
                    "children": {},
                    "extended": 1
                  },
                  "gridSize": {
                    "doclet": {
                      "description": "When `type` is set to the `grid`,\n`gridSize` is a size of a grid square element either as a number\ndefining pixels, or a percentage defining a percentage\nof the plot area width.",
                      "type": { "names": ["number", "string"] },
                      "since": "8.0.0",
                      "defaultvalue": 50
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.layoutAlgorithm.gridSize",
                      "name": "gridSize",
                      "line": 91,
                      "lineEnd": 166,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "default": 50
                    },
                    "children": {},
                    "extended": 1
                  },
                  "iterations": {
                    "doclet": {
                      "description": "When `type` is set to `kmeans`,\n`iterations` are the number of iterations that this algorithm will be\nrepeated to find clusters positions.",
                      "type": { "names": ["number"] },
                      "since": "8.0.0"
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.layoutAlgorithm.iterations",
                      "name": "iterations",
                      "line": 176,
                      "lineEnd": 183,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "kmeansThreshold": {
                    "doclet": {
                      "description": "When `type` is set to `undefined` and there are more visible points\nthan the kmeansThreshold the `grid` algorithm is used to find\nclusters, otherwise `kmeans`. It ensures good performance on\nlarge datasets and better clusters arrangement after the zoom.",
                      "since": "8.0.0",
                      "type": { "names": ["number"] },
                      "defaultvalue": 100
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.layoutAlgorithm.kmeansThreshold",
                      "name": "kmeansThreshold",
                      "line": 194,
                      "lineEnd": 199,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "default": 100
                    },
                    "children": {},
                    "extended": 1
                  },
                  "type": {
                    "doclet": {
                      "description": "Type of the algorithm used to combine points into a cluster.\nThere are three available algorithms:\n\n1) `grid` - grid-based clustering technique. Points are assigned\nto squares of set size depending on their position on the plot\narea. Points inside the grid square are combined into a cluster.\nThe grid size can be controlled by `gridSize` property\n(grid size changes at certain zoom levels).\n\n2) `kmeans` - based on K-Means clustering technique. In the\nfirst step, points are divided using the grid method (distance\nproperty is a grid size) to find the initial amount of clusters.\nNext, each point is classified by computing the distance between\neach cluster center and that point. When the closest cluster\ndistance is lower than distance property set by a user the point\nis added to this cluster otherwise is classified as `noise`. The\nalgorithm is repeated until each cluster center not change its\nprevious position more than one pixel. This technique is more\naccurate but also more time consuming than the `grid` algorithm,\nespecially for big datasets.\n\n3) `optimizedKmeans` - based on K-Means clustering technique. This\nalgorithm uses k-means algorithm only on the chart initialization\nor when chart extremes have greater range than on initialization.\nWhen a chart is redrawn the algorithm checks only clustered points\ndistance from the cluster center and rebuild it when the point is\nspaced enough to be outside the cluster. It provides performance\nimprovement and more stable clusters position yet can be used rather\non small and sparse datasets.\n\nBy default, the algorithm depends on visible quantity of points\nand `kmeansThreshold`. When there are more visible points than the\n`kmeansThreshold` the `grid` algorithm is used, otherwise `kmeans`.\n\nThe custom clustering algorithm can be added by assigning a callback\nfunction as the type property. This function takes an array of\n`processedXData`, `processedYData`, `processedXData` indexes and\n`layoutAlgorithm` options as arguments and should return an object\nwith grouped data.\n\nThe algorithm should return an object like that:\n<pre>{\n clusterId1: [{\n     x: 573,\n     y: 285,\n     index: 1 // point index in the data array\n }, {\n     x: 521,\n     y: 197,\n     index: 2\n }],\n clusterId2: [{\n     ...\n }]\n ...\n}</pre>\n\n`clusterId` (example above - unique id of a cluster or noise)\nis an array of points belonging to a cluster. If the\narray has only one point or fewer points than set in\n`cluster.minimumClusterSize` it won't be combined into a cluster.",
                      "samples": [
                        {
                          "name": "Optimized K-Means algorithm",
                          "value": "maps/marker-clusters/optimized-kmeans"
                        },
                        {
                          "name": "K-Means algorithm",
                          "value": "highcharts/marker-clusters/kmeans"
                        },
                        {
                          "name": "Grid algorithm",
                          "value": "highcharts/marker-clusters/grid"
                        },
                        {
                          "name": "Custom algorithm",
                          "value": "maps/marker-clusters/custom-alg"
                        }
                      ],
                      "type": { "names": ["string", "function"] },
                      "see": [
                        "[cluster.minimumClusterSize](#plotOptions.scatter.cluster.minimumClusterSize)"
                      ],
                      "since": "8.0.0"
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.layoutAlgorithm.type",
                      "name": "type",
                      "line": 91,
                      "lineEnd": 166,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "marker": {
                "doclet": {
                  "description": "Options for the cluster marker.",
                  "type": { "names": ["Highcharts.PointMarkerOptionsObject"] },
                  "extends": "plotOptions.series.marker",
                  "exclude": ["enabledThreshold", "states"],
                  "since": "8.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.scatter.cluster.marker",
                  "name": "marker",
                  "line": 202,
                  "lineEnd": 207,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js"
                },
                "children": {
                  "lineColor": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["string"] },
                      "defaultvalue": "#ffffff"
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.marker.lineColor",
                      "name": "lineColor",
                      "line": 215,
                      "lineEnd": 215,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "default": "#ffffff"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "lineWidth": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["number"] },
                      "defaultvalue": 0
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.marker.lineWidth",
                      "name": "lineWidth",
                      "line": 213,
                      "lineEnd": 213,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "default": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "radius": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["number"] },
                      "defaultvalue": 15
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.marker.radius",
                      "name": "radius",
                      "line": 211,
                      "lineEnd": 211,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "default": 15
                    },
                    "children": {},
                    "extended": 1
                  },
                  "symbol": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["string"] },
                      "defaultvalue": "cluster"
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.marker.symbol",
                      "name": "symbol",
                      "line": 209,
                      "lineEnd": 209,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "default": "cluster"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "enabled": {},
                  "fillColor": {},
                  "height": {},
                  "width": {}
                },
                "extended": 1
              },
              "minimumClusterSize": {
                "doclet": {
                  "description": "The minimum amount of points to be combined into a cluster.\nThis value has to be greater or equal to 2.",
                  "samples": [
                    {
                      "name": "At least three points in the cluster",
                      "value": "highcharts/marker-clusters/basic"
                    }
                  ],
                  "since": "8.0.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 2
                },
                "meta": {
                  "fullname": "plotOptions.scatter.cluster.minimumClusterSize",
                  "name": "minimumClusterSize",
                  "line": 77,
                  "lineEnd": 83,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                  "default": 2
                },
                "children": {},
                "extended": 1
              },
              "states": {
                "doclet": { "type": { "names": ["*"] } },
                "meta": {
                  "column": 0,
                  "filename": "",
                  "fullname": "plotOptions.scatter.cluster.states",
                  "line": 0,
                  "lineEnd": 0,
                  "name": "states"
                },
                "children": {
                  "hover": {
                    "doclet": { "type": { "names": ["*"] } },
                    "meta": {
                      "column": 0,
                      "filename": "",
                      "fullname": "plotOptions.scatter.cluster.states.hover",
                      "line": 0,
                      "lineEnd": 0,
                      "name": "hover"
                    },
                    "children": {
                      "fillColor": {
                        "doclet": {
                          "description": "The fill color of the cluster marker in hover state. When\n`undefined`, the series' or point's fillColor for normal\nstate is used.",
                          "type": { "names": ["Highcharts.ColorType"] }
                        },
                        "meta": {
                          "fullname": "plotOptions.scatter.cluster.states.hover.fillColor",
                          "name": "fillColor",
                          "line": 277,
                          "lineEnd": 284,
                          "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "zones": {
                "doclet": {
                  "description": "An array defining zones within marker clusters.\n\nIn styled mode, the color zones are styled with the\n`.highcharts-cluster-zone-{n}` class, or custom\nclassed from the `className`\noption.",
                  "samples": [
                    {
                      "name": "Marker clusters zones",
                      "value": "highcharts/marker-clusters/basic"
                    },
                    {
                      "name": "Zones on maps",
                      "value": "maps/marker-clusters/custom-alg"
                    }
                  ],
                  "type": { "names": ["Array.<*>"] },
                  "products": ["highcharts", "highmaps"],
                  "since": "8.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.scatter.cluster.zones",
                  "name": "zones",
                  "line": 229,
                  "lineEnd": 245,
                  "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                  "column": 0
                },
                "children": {
                  "className": {
                    "doclet": {
                      "description": "Styled mode only. A custom class name for the zone.",
                      "samples": [
                        {
                          "name": "Zones styled by class name",
                          "value": "highcharts/css/color-zones/"
                        }
                      ],
                      "type": { "names": ["string"] },
                      "since": "8.0.0"
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.zones.className",
                      "name": "className",
                      "line": 246,
                      "lineEnd": 254,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "from": {
                    "doclet": {
                      "description": "The value where the zone starts.",
                      "type": { "names": ["number"] },
                      "products": ["highcharts", "highmaps"],
                      "since": "8.0.0"
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.zones.from",
                      "name": "from",
                      "line": 263,
                      "lineEnd": 269,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "marker": {
                    "doclet": {
                      "description": "Settings for the cluster marker belonging to the zone.",
                      "see": [
                        "[cluster.marker](#plotOptions.scatter.cluster.marker)"
                      ],
                      "extends": "plotOptions.scatter.cluster.marker",
                      "products": ["highcharts", "highmaps"],
                      "since": "8.0.0"
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.zones.marker",
                      "name": "marker",
                      "line": 255,
                      "lineEnd": 262,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "column": 0
                    },
                    "children": {
                      "lineColor": {},
                      "lineWidth": {},
                      "radius": {},
                      "symbol": {},
                      "enabled": {},
                      "fillColor": {},
                      "height": {},
                      "width": {}
                    },
                    "extended": 1
                  },
                  "to": {
                    "doclet": {
                      "description": "The value where the zone ends.",
                      "type": { "names": ["number"] },
                      "products": ["highcharts", "highmaps"],
                      "since": "8.0.0"
                    },
                    "meta": {
                      "fullname": "plotOptions.scatter.cluster.zones.to",
                      "name": "to",
                      "line": 270,
                      "lineEnd": 276,
                      "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              }
            },
            "extended": 1
          },
          "findNearestPointBy": {
            "doclet": { "type": { "names": ["string"] }, "defaultvalue": "xy" },
            "meta": {
              "fullname": "plotOptions.scatter.findNearestPointBy",
              "name": "findNearestPointBy",
              "line": 41,
              "lineEnd": 41,
              "column": 4,
              "filename": "code/es-modules/Series/Scatter/ScatterSeriesDefaults.js",
              "default": "xy"
            },
            "children": {},
            "extended": 1
          },
          "jitter": {
            "doclet": {
              "description": "Apply a jitter effect for the rendered markers. When plotting\ndiscrete values, a little random noise may help telling the points\napart. The jitter setting applies a random displacement of up to `n`\naxis units in either direction. So for example on a horizontal X\naxis, setting the `jitter.x` to 0.24 will render the point in a\nrandom position between 0.24 units to the left and 0.24 units to the\nright of the true axis position. On a category axis, setting it to\n0.5 will fill up the bin and make the data appear continuous.\n\nWhen rendered on top of a box plot or a column series, a jitter value\nof 0.24 will correspond to the underlying series' default\n[groupPadding](https://api.highcharts.com/highcharts/plotOptions.column.groupPadding)\nand [pointPadding](https://api.highcharts.com/highcharts/plotOptions.column.pointPadding)\nsettings.\n\n**Note:** With boost mode enabled, the jitter effect is not supported.",
              "samples": [
                {
                  "name": "Jitter on a scatter plot",
                  "value": "highcharts/demo/scatter-jitter",
                  "products": ["highcharts"]
                },
                {
                  "name": "Jittered scatter plot on top of a box plot",
                  "value": "highcharts/series-scatter/jitter-boxplot",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts", "highstock"],
              "since": "7.0.2",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.scatter.jitter",
              "name": "jitter",
              "line": 42,
              "lineEnd": 70,
              "column": 4,
              "filename": "code/es-modules/Series/Scatter/ScatterSeriesDefaults.js"
            },
            "children": {
              "x": {
                "doclet": {
                  "description": "The maximal X offset for the random jitter effect.",
                  "since": "7.0.2",
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.scatter.jitter.x",
                  "name": "x",
                  "line": 72,
                  "lineEnd": 74,
                  "column": 8,
                  "filename": "code/es-modules/Series/Scatter/ScatterSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "description": "The maximal Y offset for the random jitter effect.",
                  "since": "7.0.2",
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.scatter.jitter.y",
                  "name": "y",
                  "line": 76,
                  "lineEnd": 78,
                  "column": 8,
                  "filename": "code/es-modules/Series/Scatter/ScatterSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "lineWidth": {
            "doclet": {
              "description": "The width of the line connecting the data points.",
              "samples": [
                {
                  "name": "0 by default",
                  "value": "highcharts/plotoptions/scatter-linewidth-none/",
                  "products": ["highcharts"]
                },
                {
                  "name": "1px",
                  "value": "highcharts/plotoptions/scatter-linewidth-1/",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts", "highstock"],
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "plotOptions.scatter.lineWidth",
              "name": "lineWidth",
              "line": 30,
              "lineEnd": 39,
              "column": 4,
              "filename": "code/es-modules/Series/Scatter/ScatterSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "marker": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.marker"
            },
            "meta": {
              "fullname": "plotOptions.scatter.marker",
              "name": "marker",
              "line": 81,
              "lineEnd": 81,
              "column": 4,
              "filename": "code/es-modules/Series/Scatter/ScatterSeriesDefaults.js"
            },
            "children": {
              "enabled": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.scatter.marker.enabled",
                  "name": "enabled",
                  "line": 82,
                  "lineEnd": 82,
                  "column": 8,
                  "filename": "code/es-modules/Series/Scatter/ScatterSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "enabledThreshold": {},
              "fillColor": {},
              "height": {},
              "lineColor": {},
              "lineWidth": {},
              "radius": {},
              "states": {},
              "symbol": {},
              "width": {}
            },
            "extended": 1
          },
          "stickyTracking": {
            "doclet": {
              "description": "Sticky tracking of mouse events. When true, the `mouseOut` event\non a series isn't triggered until the mouse moves over another\nseries, or out of the plot area. When false, the `mouseOut` event on\na series is triggered when the mouse leaves the area around the\nseries' graph or markers. This also implies the tooltip. When\n`stickyTracking` is false and `tooltip.shared` is false, the tooltip\nwill be hidden when moving the mouse between series.",
              "type": { "names": ["boolean"] },
              "defaultvalue": "false",
              "products": ["highcharts", "highstock", "highmaps"]
            },
            "meta": {
              "fullname": "plotOptions.scatter.stickyTracking",
              "name": "stickyTracking",
              "line": 84,
              "lineEnd": 97,
              "filename": "code/es-modules/Series/Scatter/ScatterSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "description": "A configuration object for the tooltip rendering of each single\nseries. Properties are inherited from [tooltip](#tooltip).\nOverridable properties are `headerFormat`, `pointFormat`,\n`yDecimals`, `xDateFormat`, `yPrefix` and `ySuffix`. Unlike other\nseries, in a scatter plot the series.name by default shows in the\nheaderFormat and point.x and point.y in the pointFormat.",
              "products": ["highcharts", "highstock", "highmaps"],
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.scatter.tooltip",
              "name": "tooltip",
              "line": 84,
              "lineEnd": 97,
              "column": 4,
              "filename": "code/es-modules/Series/Scatter/ScatterSeriesDefaults.js"
            },
            "children": {
              "headerFormat": {
                "doclet": {
                  "products": ["highcharts", "highstock"],
                  "type": { "names": ["string"] },
                  "defaultvalue": "<span style=\"color:{point.color}\">●</span> <span style=\"font-size: 0.8em\"> {series.name}</span><br/>"
                },
                "meta": {
                  "fullname": "plotOptions.scatter.tooltip.headerFormat",
                  "name": "headerFormat",
                  "line": 109,
                  "lineEnd": 111,
                  "column": 8,
                  "filename": "code/es-modules/Series/Scatter/ScatterSeriesDefaults.js",
                  "default": "<span style=\"color:{point.color}\">●</span> <span style=\"font-size: 0.8em\"> {series.name}</span><br/>"
                },
                "children": {},
                "extended": 1
              },
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>"
                },
                "meta": {
                  "fullname": "plotOptions.scatter.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 114,
                  "lineEnd": 114,
                  "column": 8,
                  "filename": "code/es-modules/Series/Scatter/ScatterSeriesDefaults.js",
                  "default": "x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>"
                },
                "children": {},
                "extended": 1
              },
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "distance": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "states": {},
          "step": {},
          "threshold": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "scatter3d": {
        "doclet": {
          "description": "A 3D scatter plot uses x, y and z coordinates to display values for three\nvariables for a set of data.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `scatter3d` series are defined in\n   [plotOptions.scatter3d](plotOptions.scatter3d).\n3. Options for one single series are given in\n   [the series instance array](series.scatter3d).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        scatter3d: {\n            // shared options for all scatter3d series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'scatter3d'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.scatter3d.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === scatter3d) {\n    // code specific to the scatter3d series\n}\n```\n            ",
          "samples": [
            {
              "name": "Simple 3D scatter",
              "value": "highcharts/3d/scatter/",
              "products": ["highcharts"]
            },
            {
              "name": "Draggable 3d scatter",
              "value": "highcharts/demo/3d-scatter-draggable",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.scatter",
          "exclude": [
            "boostThreshold",
            "boostBlending",
            "cluster",
            "dragDrop",
            "legendSymbolColor"
          ],
          "products": ["highcharts"],
          "requires": ["module:highcharts-3d"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Scatter3D/Scatter3DSeriesDefaults.js",
          "name": "scatter3d",
          "fullname": "plotOptions.scatter3d",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.scatter3d.tooltip",
              "name": "tooltip",
              "line": 35,
              "lineEnd": 35,
              "column": 4,
              "filename": "code/es-modules/Series/Scatter3D/Scatter3DSeriesDefaults.js"
            },
            "children": {
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>z: <b>{point.z}</b><br/>"
                },
                "meta": {
                  "fullname": "plotOptions.scatter3d.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 36,
                  "lineEnd": 36,
                  "column": 8,
                  "filename": "code/es-modules/Series/Scatter3D/Scatter3DSeriesDefaults.js",
                  "default": "x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>z: <b>{point.z}</b><br/>"
                },
                "children": {},
                "extended": 1
              },
              "headerFormat": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "distance": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "findNearestPointBy": {},
          "jitter": {},
          "lineWidth": {},
          "marker": {},
          "stickyTracking": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "states": {},
          "step": {},
          "threshold": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "series": {
        "doclet": {
          "description": "General options for all series types.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `line` series are defined in\n   [plotOptions.line](plotOptions.line).\n3. Options for one single series are given in\n   [the series instance array](series.line).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        line: {\n            // shared options for all line series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'line'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.line.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === line) {\n    // code specific to the line series\n}\n```\n            ",
          "type": { "names": ["*"] }
        },
        "meta": {
          "filename": "code/es-modules/Series/Line/LineSeries.js",
          "name": "series",
          "fullname": "plotOptions.series",
          "line": 225,
          "lineEnd": 229,
          "column": 0
        },
        "children": {
          "accessibility": {
            "doclet": {
              "description": "Accessibility options for a series.",
              "declare": "Highcharts.SeriesAccessibilityOptionsObject",
              "since": "7.1.0",
              "requires": ["module:modules/accessibility"],
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.series.accessibility",
              "name": "accessibility",
              "line": 755,
              "lineEnd": 762,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {
              "description": {
                "doclet": {
                  "description": "Provide a description of the series, announced to screen readers.",
                  "type": { "names": ["string"] },
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.accessibility.description",
                  "name": "description",
                  "line": 770,
                  "lineEnd": 776,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "descriptionFormat": {
                "doclet": {
                  "description": "Format to use for describing the data series group to assistive\ntechnology - including screen readers.",
                  "see": [
                    "[series.descriptionFormat](#accessibility.series.descriptionFormat)"
                  ],
                  "type": { "names": ["string"] },
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.accessibility.descriptionFormat",
                  "name": "descriptionFormat",
                  "line": 777,
                  "lineEnd": 785,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "enabled": {
                "doclet": {
                  "description": "Enable/disable accessibility functionality for a specific series.",
                  "type": { "names": ["boolean"] },
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.accessibility.enabled",
                  "name": "enabled",
                  "line": 763,
                  "lineEnd": 769,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "exposeAsGroupOnly": {
                "doclet": {
                  "description": "Expose only the series element to screen readers, not its points.",
                  "type": { "names": ["boolean"] },
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.accessibility.exposeAsGroupOnly",
                  "name": "exposeAsGroupOnly",
                  "line": 786,
                  "lineEnd": 792,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "keyboardNavigation": {
                "doclet": {
                  "description": "Keyboard navigation for a series",
                  "declare": "Highcharts.SeriesAccessibilityKeyboardNavigationOptionsObject",
                  "since": "7.1.0",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "plotOptions.series.accessibility.keyboardNavigation",
                  "name": "keyboardNavigation",
                  "line": 818,
                  "lineEnd": 824,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "column": 0
                },
                "children": {
                  "enabled": {
                    "doclet": {
                      "description": "Enable/disable keyboard navigation support for a specific series.",
                      "type": { "names": ["boolean"] },
                      "since": "7.1.0"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.accessibility.keyboardNavigation.enabled",
                      "name": "enabled",
                      "line": 825,
                      "lineEnd": 831,
                      "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSeriesAccessibilityKeyboardNavigationOptions",
                "extended": 1
              },
              "point": {
                "doclet": {
                  "description": "Point accessibility options for a series.",
                  "extends": "accessibility.point",
                  "since": "9.3.0",
                  "requires": ["module:modules/accessibility"]
                },
                "meta": {
                  "fullname": "plotOptions.series.accessibility.point",
                  "name": "point",
                  "line": 793,
                  "lineEnd": 800,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "column": 0
                },
                "children": {
                  "descriptionFormatter": {
                    "doclet": {
                      "description": "Formatter function to use instead of the default for point\ndescriptions. Same as `accessibility.point.descriptionFormatter`, but\napplies to a series instead of the whole chart.\n\nNote: Prefer using [accessibility.point.valueDescriptionFormat](#plotOptions.series.accessibility.point.valueDescriptionFormat)\ninstead if possible, as default functionality such as describing\nannotations will be preserved.",
                      "see": [
                        "[accessibility.point.valueDescriptionFormat](#plotOptions.series.accessibility.point.valueDescriptionFormat)",
                        "[point.accessibility.description](#series.line.data.accessibility.description)",
                        "[accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter)"
                      ],
                      "type": {
                        "names": [
                          "Highcharts.ScreenReaderFormatterCallbackFunction.<Highcharts.Point>"
                        ]
                      },
                      "since": "9.3.0"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.accessibility.point.descriptionFormatter",
                      "name": "descriptionFormatter",
                      "line": 801,
                      "lineEnd": 817,
                      "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "dateFormat": {},
                  "dateFormatter": {},
                  "describeNull": {},
                  "descriptionFormat": {},
                  "valueDecimals": {},
                  "valueDescriptionFormat": {},
                  "valuePrefix": {},
                  "valueSuffix": {}
                },
                "flutterClassName": "HighchartsSeriesAccessibilityPointOptions",
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsSeriesAccessibilityOptions",
            "extended": 1
          },
          "allowPointSelect": {
            "doclet": {
              "description": "Allow this series' points to be selected by clicking on the graphic\n(columns, point markers, pie slices, map areas etc).\n\nThe selected points can be handled by point select and unselect\nevents, or collectively by the [getSelectedPoints](/class-reference/Highcharts.Chart#getSelectedPoints) function.\n\nAnd alternative way of selecting points is through dragging.",
              "samples": [
                {
                  "name": "Line",
                  "value": "highcharts/plotoptions/series-allowpointselect-line/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Column",
                  "value": "highcharts/plotoptions/series-allowpointselect-column/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Pie",
                  "value": "highcharts/plotoptions/series-allowpointselect-pie/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Select a range of points through a drag selection",
                  "value": "highcharts/chart/events-selection-points/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Map area",
                  "value": "maps/plotoptions/series-allowpointselect/",
                  "products": ["highmaps"]
                },
                {
                  "name": "Map bubble",
                  "value": "maps/plotoptions/mapbubble-allowpointselect/",
                  "products": ["highmaps"]
                }
              ],
              "since": "1.2.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.series.allowPointSelect",
              "name": "allowPointSelect",
              "line": 47,
              "lineEnd": 61,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "animation": {
            "doclet": {
              "description": "Enable or disable the initial animation when a series is displayed.\nThe animation can also be set as a configuration object. Please\nnote that this option only applies to the initial animation of the\nseries itself. For other animations, see [chart.animation](#chart.animation) and the animation parameter under the API methods.\nThe following properties are supported:\n\n- `defer`: The animation delay time in milliseconds.\n\n- `duration`: The duration of the animation in milliseconds. (Defaults to\n  `1000`)\n\n- `easing`: Can be a string reference to an easing function set on\n  the `Math` object or a function. See the _Custom easing function_\n  demo below. (Defaults to `easeInOutSine`)\n\nDue to poor performance, animation is disabled in old IE browsers\nfor several chart types.",
              "samples": [
                {
                  "name": "Animation disabled",
                  "value": "highcharts/plotoptions/series-animation-disabled/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Slower animation",
                  "value": "highcharts/plotoptions/series-animation-slower/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Custom easing function",
                  "value": "highcharts/plotoptions/series-animation-easing/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Slower animation",
                  "value": "stock/plotoptions/animation-slower/",
                  "products": ["highstock"]
                },
                {
                  "name": "Custom easing function",
                  "value": "stock/plotoptions/animation-easing/",
                  "products": ["highstock"]
                },
                {
                  "name": "Animation enabled on map series",
                  "value": "maps/plotoptions/series-animation-true/",
                  "products": ["highmaps"]
                },
                {
                  "name": "Disabled on mapbubble series",
                  "value": "maps/plotoptions/mapbubble-animation-false/",
                  "products": ["highmaps"]
                }
              ],
              "type": {
                "names": ["boolean", "Highcharts.AnimationOptionsObject"]
              },
              "defaultByProduct": {
                "highcharts": true,
                "highstock": true,
                "highmaps": false
              }
            },
            "meta": {
              "fullname": "plotOptions.series.animation",
              "name": "animation",
              "line": 124,
              "lineEnd": 165,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "animationLimit": {
            "doclet": {
              "description": "For some series, there is a limit that shuts down animation\nby default when the total number of points in the chart is too high.\nFor example, for a column chart and its derivatives, animation does\nnot run if there is more than 250 points totally. To disable this\ncap, set `animationLimit` to `Infinity`. This option works if animation\nis fired on individual points, not on a group of points like e.g. during\nthe initial animation.",
              "samples": [
                {
                  "name": "Animation limit on updating individual points",
                  "value": "highcharts/plotoptions/series-animationlimit/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] }
            },
            "meta": {
              "fullname": "plotOptions.series.animationLimit",
              "name": "animationLimit",
              "line": 47,
              "lineEnd": 61,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "boostBlending": {
            "doclet": {
              "description": "Sets the color blending in the boost module.",
              "type": { "names": ["\"add\"", "\"multiply\"", "\"darken\""] },
              "defaultvalue": "undefined",
              "requires": ["module:modules/boost"]
            },
            "meta": {
              "fullname": "plotOptions.series.boostBlending",
              "name": "boostBlending",
              "line": 357,
              "lineEnd": 365,
              "filename": "code/es-modules/Extensions/Boost/Boost.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "boostThreshold": {
            "doclet": {
              "description": "Set the point threshold for when a series should enter boost mode.\n\nSetting it to e.g. 2000 will cause the series to enter boost mode when there\nare 2000 or more points in the series.\n\nTo disable boosting on the series, set the `boostThreshold` to 0. Setting it\nto 1 will force boosting.\n\nNote that the [cropThreshold](plotOptions.series.cropThreshold) also affects\nthis setting. When zooming in on a series that has fewer points than the\n`cropThreshold`, all points are rendered although outside the visible plot\narea, and the `boostThreshold` won't take effect.",
              "type": { "names": ["number"] },
              "defaultvalue": "5000",
              "requires": ["module:modules/boost"]
            },
            "meta": {
              "fullname": "plotOptions.series.boostThreshold",
              "name": "boostThreshold",
              "line": 338,
              "lineEnd": 356,
              "filename": "code/es-modules/Extensions/Boost/Boost.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "className": {
            "doclet": {
              "description": "An additional class name to apply to the series' graphical elements.\nThis option does not replace default class names of the graphical\nelement. Changes to the series' color will also be reflected in a\nchart's legend and tooltip.",
              "samples": [
                {
                  "name": "Series and point class name",
                  "value": "highcharts/css/point-series-classname",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["string"] },
              "since": "5.0.0"
            },
            "meta": {
              "fullname": "plotOptions.series.className",
              "name": "className",
              "line": 170,
              "lineEnd": 182,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "clip": {
            "doclet": {
              "description": "Disable this option to allow series rendering in the whole plotting\narea.\n\n**Note:** Clipping should be always enabled when\n[chart.zoomType](#chart.zoomType) is set",
              "samples": [
                {
                  "name": "Disabled clipping",
                  "value": "highcharts/plotoptions/series-clip/",
                  "products": ["highcharts"]
                }
              ],
              "defaultvalue": "true",
              "type": { "names": ["boolean"] },
              "since": "3.0.0"
            },
            "meta": {
              "fullname": "plotOptions.series.clip",
              "name": "clip",
              "line": 183,
              "lineEnd": 197,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "color": {
            "doclet": {
              "description": "The main color of the series. In line type series it applies to the\nline and the point markers unless otherwise specified. In bar type\nseries it applies to the bars unless a color is specified per point.\nThe default value is pulled from the `options.colors` array.\n\nIn styled mode, the color can be defined by the\n[colorIndex](#plotOptions.series.colorIndex) option. Also, the series\ncolor can be set with the `.highcharts-series`,\n`.highcharts-color-{n}`, `.highcharts-{type}-series` or\n`.highcharts-series-{n}` class, or individual classes given by the\n`className` option.",
              "productdesc": [
                {
                  "value": "In maps, the series color is rarely used, as most choropleth maps use\nthe color to denote the value of each point. The series color can\nhowever be used in a map with multiple series holding categorized\ndata.",
                  "products": ["highmaps"]
                }
              ],
              "samples": [
                {
                  "name": "General plot option",
                  "value": "highcharts/plotoptions/series-color-general/",
                  "products": ["highcharts"]
                },
                {
                  "name": "One specific series",
                  "value": "highcharts/plotoptions/series-color-specific/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Area color",
                  "value": "highcharts/plotoptions/series-color-area/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Pattern fill",
                  "value": "highcharts/series/infographic/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Category map by multiple series",
                  "value": "maps/demo/category-map/",
                  "products": ["highmaps"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              }
            },
            "meta": {
              "fullname": "plotOptions.series.color",
              "name": "color",
              "line": 198,
              "lineEnd": 230,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "colorAxis": {
            "doclet": {
              "description": "When using dual or multiple color axes, this number defines which\ncolorAxis the particular series is connected to. It refers to\neither the\n{@link #colorAxis.id|axis id}\nor the index of the axis in the colorAxis array, with 0 being the\nfirst. Set this option to false to prevent a series from connecting\nto the default color axis.\n\nSince v7.2.0 the option can also be an axis id or an axis index\ninstead of a boolean flag.",
              "samples": [
                {
                  "name": "Color axis with pie series",
                  "value": "highcharts/coloraxis/coloraxis-with-pie/"
                },
                {
                  "name": "Multiple color axis",
                  "value": "highcharts/coloraxis/multiple-coloraxis/"
                }
              ],
              "type": { "names": ["number", "string", "boolean"] },
              "defaultvalue": "0",
              "products": ["highcharts", "highstock", "highmaps"]
            },
            "meta": {
              "fullname": "plotOptions.series.colorAxis",
              "name": "colorAxis",
              "line": 2319,
              "lineEnd": 2340,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "colorIndex": {
            "doclet": {
              "description": "Styled mode only. A specific color index to use for the series, so its\ngraphic representations are given the class name `highcharts-color-{n}`.\n\nSince v11, CSS variables on the form `--highcharts-color-{n}` make\nchanging the color scheme very convenient.",
              "samples": [
                {
                  "name": "Series and point color index",
                  "value": "highcharts/css/colorindex/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "5.0.0"
            },
            "meta": {
              "fullname": "plotOptions.series.colorIndex",
              "name": "colorIndex",
              "line": 231,
              "lineEnd": 244,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "colorKey": {
            "doclet": {
              "description": "Determines what data value should be used to calculate point color\nif `colorAxis` is used. Requires to set `min` and `max` if some\ncustom point property is used or if approximation for data grouping\nis set to `'sum'`.",
              "samples": [
                {
                  "name": "Custom color key",
                  "value": "highcharts/coloraxis/custom-color-key/"
                },
                {
                  "name": "Custom colorKey with color axis stops",
                  "value": "highcharts/coloraxis/color-key-with-stops/"
                },
                {
                  "name": "Changed default color key",
                  "value": "highcharts/coloraxis/changed-default-color-key/"
                }
              ],
              "type": { "names": ["string"] },
              "defaultvalue": "y",
              "since": "7.2.0",
              "products": ["highcharts", "highstock", "highmaps"]
            },
            "meta": {
              "fullname": "plotOptions.series.colorKey",
              "name": "colorKey",
              "line": 2341,
              "lineEnd": 2359,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "connectEnds": {
            "doclet": {
              "description": "Polar charts only. Whether to connect the ends of a line series\nplot across the extremes.",
              "samples": [
                {
                  "name": "Do not connect",
                  "value": "highcharts/plotoptions/line-connectends-false/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["boolean"] },
              "since": "2.3.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.series.connectEnds",
              "name": "connectEnds",
              "line": 681,
              "lineEnd": 692,
              "filename": "code/es-modules/Series/PolarComposition.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "connectNulls": {
            "doclet": {
              "description": "Whether to connect a graph line across null points, or render a gap\nbetween the two points on either side of the null.\n\nIn stacked area chart, if `connectNulls` is set to true,\nnull points are interpreted as 0.",
              "samples": [
                {
                  "name": "False by default",
                  "value": "highcharts/plotoptions/series-connectnulls-false/",
                  "products": ["highcharts"]
                },
                {
                  "name": "True",
                  "value": "highcharts/plotoptions/series-connectnulls-true/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "false",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.series.connectNulls",
              "name": "connectNulls",
              "line": 245,
              "lineEnd": 261,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "crisp": {
            "doclet": {
              "description": "When true, each point or column edge is rounded to its nearest pixel\nin order to render sharp on screen. In some cases, when there are a\nlot of densely packed columns, this leads to visible difference\nin column widths or distance between columns. In these cases,\nsetting `crisp` to `false` may look better, even though each column\nis rendered blurry.",
              "samples": [
                {
                  "name": "Crisp is false",
                  "value": "highcharts/plotoptions/column-crisp-false/",
                  "products": ["highcharts"]
                }
              ],
              "since": "5.0.10",
              "products": ["highcharts", "highstock", "gantt"],
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.series.crisp",
              "name": "crisp",
              "line": 90,
              "lineEnd": 105,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "cropThreshold": {
            "doclet": {
              "description": "When the series contains less points than the crop threshold, all\npoints are drawn, even if the points fall outside the visible plot\narea at the current zoom. The advantage of drawing all points\n(including markers and columns), is that animation is performed on\nupdates. On the other hand, when the series contains more points than\nthe crop threshold, the series data is cropped to only contain points\nthat fall within the plot area. The advantage of cropping away\ninvisible points is to increase performance on large series.",
              "since": "2.2.0",
              "products": ["highcharts", "highstock"],
              "type": { "names": ["number"] },
              "defaultvalue": 300
            },
            "meta": {
              "fullname": "plotOptions.series.cropThreshold",
              "name": "cropThreshold",
              "line": 1917,
              "lineEnd": 1931,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "default": 300
            },
            "children": {},
            "extended": 1
          },
          "cursor": {
            "doclet": {
              "description": "You can set the cursor to \"pointer\" if you have click events attached\nto the series, to signal to the user that the points and lines can\nbe clicked.\n\nIn styled mode, the series cursor can be set with the same classes\nas listed under [series.color](#plotOptions.series.color).",
              "samples": [
                {
                  "name": "On line graph",
                  "value": "highcharts/plotoptions/series-cursor-line/",
                  "products": ["highcharts"]
                },
                {
                  "name": "On columns",
                  "value": "highcharts/plotoptions/series-cursor-column/",
                  "products": ["highcharts"]
                },
                {
                  "name": "On scatter markers",
                  "value": "highcharts/plotoptions/series-cursor-scatter/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Pointer on a line graph",
                  "value": "stock/plotoptions/cursor/",
                  "products": ["highstock"]
                },
                {
                  "name": "Map area",
                  "value": "maps/plotoptions/series-allowpointselect/",
                  "products": ["highmaps"]
                },
                {
                  "name": "Map bubble",
                  "value": "maps/plotoptions/mapbubble-allowpointselect/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["string", "Highcharts.CursorValue"] }
            },
            "meta": {
              "fullname": "plotOptions.series.cursor",
              "name": "cursor",
              "line": 262,
              "lineEnd": 285,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "custom": {
            "doclet": {
              "description": "A reserved subspace to store options and values for customized\nfunctionality. Here you can add additional data for your own event\ncallbacks and formatter callbacks.",
              "samples": [
                {
                  "name": "Point and series with custom data",
                  "value": "highcharts/point/custom/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.Dictionary.<*>"] }
            },
            "meta": {
              "fullname": "plotOptions.series.custom",
              "name": "custom",
              "line": 286,
              "lineEnd": 296,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "dashStyle": {
            "doclet": {
              "description": "Name of the dash style to use for the graph, or for some series types\nthe outline of each shape.\n\nIn styled mode, the\n[stroke dash-array](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/css/series-dashstyle/)\ncan be set with the same classes as listed under\n[series.color](#plotOptions.series.color).",
              "samples": [
                {
                  "name": "Possible values demonstrated",
                  "value": "highcharts/plotoptions/series-dashstyle-all/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Chart suitable for printing in black and white",
                  "value": "highcharts/plotoptions/series-dashstyle/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Possible values demonstrated",
                  "value": "highcharts/plotoptions/series-dashstyle-all/",
                  "products": ["highstock"]
                },
                {
                  "name": "Possible values demonstrated",
                  "value": "highcharts/plotoptions/series-dashstyle-all/",
                  "products": ["highmaps"]
                },
                {
                  "name": "Dotted borders on a map",
                  "value": "maps/plotoptions/series-dashstyle/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["Highcharts.DashStyleValue"] },
              "defaultvalue": "Solid",
              "since": "2.1.0"
            },
            "meta": {
              "fullname": "plotOptions.series.dashStyle",
              "name": "dashStyle",
              "line": 297,
              "lineEnd": 321,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "description": "Options for the series data labels, appearing next to each data\npoint.\n\nSince v6.2.0, multiple data labels can be applied to each single\npoint by defining them as an array of configs.\n\nIn styled mode, the data labels can be styled with the\n`.highcharts-data-label-box` and `.highcharts-data-label` class names\n([see example](https://www.highcharts.com/samples/highcharts/css/series-datalabels)).",
              "samples": [
                {
                  "name": "Data labels enabled",
                  "value": "highcharts/plotoptions/series-datalabels-enabled",
                  "products": ["highcharts"]
                },
                {
                  "name": "Multiple data labels on a bar series",
                  "value": "highcharts/plotoptions/series-datalabels-multiple",
                  "products": ["highcharts"]
                },
                {
                  "name": "Styled mode example",
                  "value": "highcharts/css/series-datalabels",
                  "products": ["highcharts"]
                },
                {
                  "name": "Choropleth map with data labels",
                  "value": "maps/demo/color-axis",
                  "products": ["highmaps"]
                },
                {
                  "name": "Using data labels as map markers",
                  "value": "maps/demo/mappoint-datalabels-mapmarker",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["*", "Array.<*>"] },
              "products": ["highcharts", "highstock", "highmaps", "gantt"]
            },
            "meta": {
              "fullname": "plotOptions.series.dataLabels",
              "name": "dataLabels",
              "line": 1379,
              "lineEnd": 1405,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
            },
            "children": {
              "align": {
                "doclet": {
                  "description": "The alignment of the data label compared to the point. If `right`,\nthe right side of the label should be touching the point. For points\nwith an extent, like columns, the alignments also dictates how to\nalign it inside the box, as given with the\n[inside](#plotOptions.column.dataLabels.inside) option. Can be one of\n`left`, `center` or `right`.",
                  "samples": [
                    {
                      "name": "Left aligned",
                      "value": "highcharts/plotoptions/series-datalabels-align-left/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Data labels inside the bar",
                      "value": "highcharts/plotoptions/bar-datalabels-align-inside-bar/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["Highcharts.AlignValue", "null"] },
                  "defaultvalue": null
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.align",
                  "name": "align",
                  "line": 1427,
                  "lineEnd": 1435,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "default": "center"
                },
                "children": {},
                "extended": 1
              },
              "alignTo": {
                "doclet": {
                  "description": "Alignment method for data labels. If set to `plotEdges`, the labels\nare aligned within the plot area in the direction of the y-axis. So\nin a regular column chart, the labels are aligned vertically\naccording to the `verticalAlign` setting. In a bar chart, which is\ninverted, the labels are aligned horizontally according to the\n`align` setting. Applies to cartesian series only.",
                  "samples": [
                    {
                      "name": "Align to plot edges",
                      "value": "highcharts/series-bar/datalabels-alignto/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "11.4.2"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.alignTo",
                  "name": "alignTo",
                  "line": 1454,
                  "lineEnd": 1468,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "allowOverlap": {
                "doclet": {
                  "description": "Whether to allow data labels to overlap. To make the labels less\nsensitive for overlapping, the\n[dataLabels.padding](#plotOptions.series.dataLabels.padding)\ncan be set to 0.",
                  "samples": [
                    {
                      "name": "Don't allow overlap",
                      "value": "highcharts/plotoptions/series-datalabels-allowoverlap-false/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "false",
                  "since": "4.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.allowOverlap",
                  "name": "allowOverlap",
                  "line": 1469,
                  "lineEnd": 1482,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "animation": {
                "doclet": {
                  "description": "Enable or disable the initial animation when a series is displayed\nfor the `dataLabels`. The animation can also be set as a\nconfiguration object. Please note that this option only applies to\nthe initial animation.\n\nFor other animations, see [chart.animation](#chart.animation) and the\nanimation parameter under the API methods. The following properties\nare supported:\n\n- `defer`: The animation delay time in milliseconds.",
                  "samples": [
                    {
                      "name": "Animation defer settings",
                      "value": "highcharts/plotoptions/animation-defer/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": [
                      "boolean",
                      "Partial.<Highcharts.AnimationOptionsObject>"
                    ]
                  },
                  "since": "8.2.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.animation",
                  "name": "animation",
                  "line": 1407,
                  "lineEnd": 1425,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "defer": {
                    "doclet": {
                      "description": "The animation delay time in milliseconds. Set to `0` to render the\ndata labels immediately. As `undefined` inherits defer time from the\n[series.animation.defer](#plotOptions.series.animation.defer).",
                      "type": { "names": ["number"] },
                      "since": "8.2.0"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.dataLabels.animation.defer",
                      "name": "defer",
                      "line": 1427,
                      "lineEnd": 1435,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSeriesDataLabelsAnimationOptions",
                "extended": 1
              },
              "backgroundColor": {
                "doclet": {
                  "description": "The background color or gradient for the data label. Setting it to\n`auto` will use the point's color.",
                  "samples": [
                    {
                      "name": "Data labels box options",
                      "value": "highcharts/plotoptions/series-datalabels-box/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Data labels box options",
                      "value": "maps/plotoptions/series-datalabels-box/",
                      "products": ["highmaps"]
                    },
                    {
                      "name": "Data labels as map markers",
                      "value": "maps/demo/mappoint-datalabels-mapmarker",
                      "products": ["highmaps"]
                    }
                  ],
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "since": "2.2.1"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.backgroundColor",
                  "name": "backgroundColor",
                  "line": 1483,
                  "lineEnd": 1497,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "borderColor": {
                "doclet": {
                  "description": "The border color for the data label. Setting it to `auto` will use\nthe point's color. Defaults to `undefined`.",
                  "samples": [
                    {
                      "name": "Data labels box options",
                      "value": "highcharts/plotoptions/series-datalabels-box/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "since": "2.2.1"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.borderColor",
                  "name": "borderColor",
                  "line": 1498,
                  "lineEnd": 1508,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "borderRadius": {
                "doclet": {
                  "description": "The border radius in pixels for the data label.",
                  "samples": [
                    {
                      "name": "Data labels box options",
                      "value": "highcharts/plotoptions/series-datalabels-box/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Data labels box options",
                      "value": "maps/plotoptions/series-datalabels-box/",
                      "products": ["highmaps"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": "0",
                  "since": "2.2.1"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.borderRadius",
                  "name": "borderRadius",
                  "line": 1509,
                  "lineEnd": 1521,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "borderWidth": {
                "doclet": {
                  "description": "The border width in pixels for the data label.",
                  "samples": [
                    {
                      "name": "Data labels box options",
                      "value": "highcharts/plotoptions/series-datalabels-box/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": "0",
                  "since": "2.2.1"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.borderWidth",
                  "name": "borderWidth",
                  "line": 1522,
                  "lineEnd": 1532,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "className": {
                "doclet": {
                  "description": "A class name for the data label. Particularly in styled mode,\nthis can be used to give each series' or point's data label\nunique styling. In addition to this option, a default color class\nname is added so that we can give the labels a contrast text\nshadow.",
                  "samples": [
                    {
                      "name": "Contrast text shadow",
                      "value": "highcharts/css/data-label-contrast/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Styling by CSS",
                      "value": "highcharts/css/series-datalabels/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "5.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.className",
                  "name": "className",
                  "line": 1534,
                  "lineEnd": 1549,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "color": {
                "doclet": {
                  "description": "This options is deprecated.\nUse [style.color](#plotOptions.series.dataLabels.style) instead.\n\nThe text color for the data labels. Defaults to `undefined`. For\ncertain series types, like column or map, the data labels can be\ndrawn inside the points. In this case the data label will be\ndrawn with maximum contrast by default. Additionally, it will be\ngiven a `text-outline` style with the opposite color, to further\nincrease the contrast. This can be overridden by setting the\n`text-outline` style to `none` in the `dataLabels.style` option.",
                  "samples": [
                    {
                      "name": "Red data labels",
                      "value": "highcharts/plotoptions/series-datalabels-color/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "White data labels",
                      "value": "maps/demo/color-axis/",
                      "products": ["highmaps"]
                    }
                  ],
                  "see": [
                    "[style.color](#plotOptions.series.dataLabels.style)"
                  ],
                  "type": { "names": ["Highcharts.ColorType"] },
                  "deprecated": "10.3.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.color",
                  "name": "color",
                  "line": 1550,
                  "lineEnd": 1572,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "crop": {
                "doclet": {
                  "description": "Whether to hide data labels that are outside the plot area. By\ndefault, the data label is moved inside the plot area according\nto the\n[overflow](#plotOptions.series.dataLabels.overflow)\noption.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "since": "2.3.3"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.crop",
                  "name": "crop",
                  "line": 1573,
                  "lineEnd": 1584,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "defer": {
                "doclet": {
                  "description": "Whether to defer displaying the data labels until the initial\nseries animation has finished. Setting to `false` renders the\ndata label immediately. If set to `true` inherits the defer\ntime set in [plotOptions.series.animation](#plotOptions.series.animation).",
                  "since": "4.0.0",
                  "type": { "names": ["boolean"] },
                  "products": ["highcharts", "highstock", "gantt"],
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.defer",
                  "name": "defer",
                  "line": 1534,
                  "lineEnd": 1549,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "enabled": {
                "doclet": {
                  "description": "Enable or disable the data labels.",
                  "samples": [
                    {
                      "name": "Data labels enabled",
                      "value": "highcharts/plotoptions/series-datalabels-enabled/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Data labels enabled",
                      "value": "maps/demo/color-axis/",
                      "products": ["highmaps"]
                    }
                  ],
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "false"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.enabled",
                  "name": "enabled",
                  "line": 1596,
                  "lineEnd": 1607,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "filter": {
                "doclet": {
                  "description": "A declarative filter to control of which data labels to display.\nThe declarative filter is designed for use when callback\nfunctions are not available, like when the chart options require\na pure JSON structure or for use with graphical editors. For\nprogrammatic control, use the `formatter` instead, and return\n`undefined` to disable a single data label.",
                  "examples": [
                    "filter: {\n    property: 'percentage',\n    operator: '>',\n    value: 4\n}"
                  ],
                  "samples": [
                    {
                      "name": "Data labels filtered by percentage",
                      "value": "highcharts/demo/pie-monochrome",
                      "products": ["highcharts"]
                    }
                  ],
                  "declare": "Highcharts.DataLabelsFilterOptionsObject",
                  "since": "6.0.3",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.filter",
                  "name": "filter",
                  "line": 1608,
                  "lineEnd": 1629,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "operator": {
                    "doclet": {
                      "description": "The operator to compare by. Can be one of `>`, `<`, `>=`, `<=`,\n`==`, `===`, `!=` and `!==`.",
                      "type": {
                        "names": [
                          "\">\"",
                          "\"<\"",
                          "\">=\"",
                          "\"<=\"",
                          "\"==\"",
                          "\"===\"",
                          "\"!=\"",
                          "\"!==\""
                        ]
                      },
                      "since": "6.0.3"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.dataLabels.filter.operator",
                      "name": "operator",
                      "line": 1630,
                      "lineEnd": 1637,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "property": {
                    "doclet": {
                      "description": "The point property to filter by. Point options are passed\ndirectly to properties, additionally there are `y` value,\n`percentage` and others listed under {@link Highcharts.Point}\nmembers.",
                      "type": { "names": ["string"] },
                      "since": "6.0.3"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.dataLabels.filter.property",
                      "name": "property",
                      "line": 1638,
                      "lineEnd": 1646,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "value": {
                    "doclet": {
                      "description": "The value to compare against.",
                      "type": { "names": ["number"] },
                      "since": "6.0.3"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.dataLabels.filter.value",
                      "name": "value",
                      "line": 1647,
                      "lineEnd": 1652,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSeriesDataLabelsFilterOptions",
                "extended": 1
              },
              "format": {
                "doclet": {
                  "description": "A\n[format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\nfor the data label. Available variables are the same as for\n`formatter`.",
                  "samples": [
                    {
                      "name": "Add a unit",
                      "value": "highcharts/plotoptions/series-datalabels-format/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Complex logic in the format string",
                      "value": "highcharts/plotoptions/series-datalabels-format-subexpression/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Formatted value in the data label",
                      "value": "maps/plotoptions/series-datalabels-format/",
                      "products": ["highmaps"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "defaultvalue": "point.value",
                  "since": "3.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.format",
                  "name": "format",
                  "line": 1653,
                  "lineEnd": 1671,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "formatter": {
                "doclet": {
                  "description": "Callback JavaScript function to format the data label. Note that if a\n`format` is defined, the format takes precedence and the formatter is\nignored.",
                  "samples": [
                    {
                      "name": "Formatted value",
                      "value": "maps/plotoptions/series-datalabels-format/",
                      "products": ["highmaps"]
                    }
                  ],
                  "type": {
                    "names": ["Highcharts.DataLabelsFormatterCallbackFunction"]
                  }
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.formatter",
                  "name": "formatter",
                  "line": 1596,
                  "lineEnd": 1607,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                },
                "children": {},
                "extended": 1
              },
              "inside": {
                "doclet": {
                  "description": "For points with an extent, like columns or map areas, whether to\nalign the data label inside the box or to the actual value point.\nDefaults to `false` in most cases, `true` in stacked columns.",
                  "type": { "names": ["boolean"] },
                  "since": "3.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.inside",
                  "name": "inside",
                  "line": 1688,
                  "lineEnd": 1696,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "nullFormat": {
                "doclet": {
                  "description": "Format for points with the value of null. Works analogously to\n[format](#plotOptions.series.dataLabels.format). `nullFormat` can\nbe applied only to series which support displaying null points\ni.e `heatmap` or `tilemap`. Does not work with series that don't\ndisplay null points, like `line`, `column`, `bar` or `pie`.",
                  "samples": [
                    {
                      "name": "Format data label for null points in heat map",
                      "value": "highcharts/plotoptions/series-datalabels-nullformat/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["boolean", "string"] },
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.nullFormat",
                  "name": "nullFormat",
                  "line": 1697,
                  "lineEnd": 1710,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "nullFormatter": {
                "doclet": {
                  "description": "Callback JavaScript function that defines formatting for points\nwith the value of null. Works analogously to\n[formatter](#plotOptions.series.dataLabels.formatter).\n`nullFormatter` can be applied only to series which support\ndisplaying null points i.e `heatmap` or `tilemap`. Does not work\nwith series that don't display null points, like `line`, `column`,\n`bar` or `pie`.",
                  "samples": [
                    {
                      "name": "Format data label for null points in heat map",
                      "value": "highcharts/plotoptions/series-datalabels-nullformat/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": ["Highcharts.DataLabelsFormatterCallbackFunction"]
                  },
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.nullFormatter",
                  "name": "nullFormatter",
                  "line": 1711,
                  "lineEnd": 1726,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "overflow": {
                "doclet": {
                  "description": "How to handle data labels that flow outside the plot area. The\ndefault is `\"justify\"`, which aligns them inside the plot area.\nFor columns and bars, this means it will be moved inside the bar.\nTo display data labels outside the plot area, set `crop` to\n`false` and `overflow` to `\"allow\"`.",
                  "type": { "names": ["Highcharts.DataLabelsOverflowValue"] },
                  "defaultvalue": "justify",
                  "since": "3.0.6"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.overflow",
                  "name": "overflow",
                  "line": 1727,
                  "lineEnd": 1738,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "padding": {
                "doclet": {
                  "description": "When either the `borderWidth` or the `backgroundColor` is set,\nthis is the padding within the box.",
                  "samples": [
                    {
                      "name": "Data labels box options",
                      "value": "highcharts/plotoptions/series-datalabels-box/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Data labels box options",
                      "value": "maps/plotoptions/series-datalabels-box/",
                      "products": ["highmaps"]
                    }
                  ],
                  "since": "2.2.1",
                  "type": { "names": ["number"] },
                  "defaultvalue": 5
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.padding",
                  "name": "padding",
                  "line": 1688,
                  "lineEnd": 1696,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "default": 5
                },
                "children": {},
                "extended": 1
              },
              "position": {
                "doclet": {
                  "description": "Aligns data labels relative to points. If `center` alignment is\nnot possible, it defaults to `right`.",
                  "type": { "names": ["Highcharts.AlignValue"] },
                  "defaultvalue": "center"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.position",
                  "name": "position",
                  "line": 1751,
                  "lineEnd": 1758,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "rotation": {
                "doclet": {
                  "description": "Text rotation in degrees. Note that due to a more complex\nstructure, backgrounds, borders and padding will be lost on a\nrotated data label.",
                  "samples": [
                    {
                      "name": "Vertical labels",
                      "value": "highcharts/plotoptions/series-datalabels-rotation/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": "0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.rotation",
                  "name": "rotation",
                  "line": 1759,
                  "lineEnd": 1770,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "shadow": {
                "doclet": {
                  "description": "The shadow of the box. Works best with `borderWidth` or\n`backgroundColor`. Since 2.3 the shadow can be an object\nconfiguration containing `color`, `offsetX`, `offsetY`, `opacity`\nand `width`.",
                  "samples": [
                    {
                      "name": "Data labels box options",
                      "value": "highcharts/plotoptions/series-datalabels-box/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": ["boolean", "Highcharts.ShadowOptionsObject"]
                  },
                  "defaultvalue": "false",
                  "since": "2.2.1"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.shadow",
                  "name": "shadow",
                  "line": 1771,
                  "lineEnd": 1784,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "shape": {
                "doclet": {
                  "description": "The name of a symbol to use for the border around the label.\nSymbols are predefined functions on the Renderer object.",
                  "samples": [
                    {
                      "name": "A callout for annotations",
                      "value": "highcharts/plotoptions/series-datalabels-shape/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "defaultvalue": "square",
                  "since": "4.1.2"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.shape",
                  "name": "shape",
                  "line": 1785,
                  "lineEnd": 1796,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "style": {
                "doclet": {
                  "description": "Styles for the label. The default `color` setting is\n`\"contrast\"`, which is a pseudo color that Highcharts picks up\nand applies the maximum contrast to the underlying point item,\nfor example the bar in a bar chart.\n\nThe `textOutline` is a pseudo property that applies an outline of\nthe given width with the given color, which by default is the\nmaximum contrast to the text. So a bright text color will result\nin a black text outline for maximum readability on a mixed\nbackground. In some cases, especially with grayscale text, the\ntext outline doesn't work well, in which cases it can be disabled\nby setting it to `\"none\"`. When `useHTML` is true, the\n`textOutline` will not be picked up. In this, case, the same\neffect can be acheived through the `text-shadow` CSS property.\n\nFor some series types, where each point has an extent, like for\nexample tree maps, the data label may overflow the point. There\nare two strategies for handling overflow. By default, the text\nwill wrap to multiple lines. The other strategy is to set\n`style.textOverflow` to `ellipsis`, which will keep the text on\none line plus it will break inside long words.",
                  "samples": [
                    {
                      "name": "Bold labels",
                      "value": "highcharts/plotoptions/series-datalabels-style/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Long labels truncated with an ellipsis in a pie",
                      "value": "highcharts/plotoptions/pie-datalabels-overflow/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Long labels are wrapped in a pie",
                      "value": "highcharts/plotoptions/pie-datalabels-overflow-wrap/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Bold labels",
                      "value": "maps/demo/color-axis/",
                      "products": ["highmaps"]
                    }
                  ],
                  "type": { "names": ["Highcharts.CSSObject"] },
                  "since": "4.1.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.style",
                  "name": "style",
                  "line": 1797,
                  "lineEnd": 1832,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "textPath": {
                "doclet": {
                  "description": "Options for a label text which should follow marker's shape.\nBorder and background are disabled for a label that follows a\npath.\n\n**Note:** Only SVG-based renderer supports this option. Setting\n`useHTML` to true will disable this option.",
                  "declare": "Highcharts.DataLabelsTextPathOptionsObject",
                  "since": "7.1.0",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.textPath",
                  "name": "textPath",
                  "line": 1843,
                  "lineEnd": 1854,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "attributes": {
                    "doclet": {
                      "description": "Presentation attributes for the text path.",
                      "type": { "names": ["Highcharts.SVGAttributes"] },
                      "since": "7.1.0"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.dataLabels.textPath.attributes",
                      "name": "attributes",
                      "line": 1855,
                      "lineEnd": 1861,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "enabled": {
                    "doclet": {
                      "description": "Enable or disable `textPath` option for link's or marker's data\nlabels.",
                      "type": { "names": ["boolean"] },
                      "since": "7.1.0",
                      "defaultvalue": "false"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.dataLabels.textPath.enabled",
                      "name": "enabled",
                      "line": 1862,
                      "lineEnd": 1869,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSeriesDataLabelsTextPathOptions",
                "extended": 1
              },
              "useHTML": {
                "doclet": {
                  "description": "Whether to\n[use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\nto render the labels.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "false"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.useHTML",
                  "name": "useHTML",
                  "line": 1870,
                  "lineEnd": 1878,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "description": "The vertical alignment of a data label. Can be one of `top`,\n`middle` or `bottom`. The default value depends on the data, for\ninstance in a column chart, the label is above positive values\nand below negative values.",
                  "type": {
                    "names": ["Highcharts.VerticalAlignValue", "null"]
                  },
                  "since": "2.3.3",
                  "defaultvalue": null
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.verticalAlign",
                  "name": "verticalAlign",
                  "line": 1843,
                  "lineEnd": 1854,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "default": "bottom"
                },
                "children": {},
                "extended": 1
              },
              "x": {
                "doclet": {
                  "description": "The x position offset of the label relative to the point in\npixels.",
                  "samples": [
                    {
                      "name": "Vertical and positioned",
                      "value": "highcharts/plotoptions/series-datalabels-rotation/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Data labels inside the bar",
                      "value": "highcharts/plotoptions/bar-datalabels-align-inside-bar/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.x",
                  "name": "x",
                  "line": 1889,
                  "lineEnd": 1897,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "description": "The y position offset of the label relative to the point in\npixels.",
                  "samples": [
                    {
                      "name": "Vertical and positioned",
                      "value": "highcharts/plotoptions/series-datalabels-rotation/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.y",
                  "name": "y",
                  "line": 1899,
                  "lineEnd": 1907,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "zIndex": {
                "doclet": {
                  "description": "The z index of the data labels. Use a `zIndex` of 6 to display it above\nthe series, or use a `zIndex` of 2 to display it behind the series.",
                  "type": { "names": ["number"] },
                  "defaultvalue": "6",
                  "since": "2.3.5"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataLabels.zIndex",
                  "name": "zIndex",
                  "line": 1899,
                  "lineEnd": 1907,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsSeriesDataLabelsOptions",
            "extended": 1
          },
          "dataSorting": {
            "doclet": {
              "description": "Options for the series data sorting.",
              "type": { "names": ["Highcharts.DataSortingOptionsObject"] },
              "since": "8.0.0",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.series.dataSorting",
              "name": "dataSorting",
              "line": 331,
              "lineEnd": 338,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {
              "enabled": {
                "doclet": {
                  "description": "Enable or disable data sorting for the series. Use [xAxis.reversed](#xAxis.reversed) to change the sorting order.",
                  "samples": [
                    {
                      "name": "Data sorting in scatter-3d",
                      "value": "highcharts/datasorting/animation/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Axis labels animation",
                      "value": "highcharts/datasorting/labels-animation/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Dependent series sorting",
                      "value": "highcharts/datasorting/dependent-sorting/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Independent series sorting",
                      "value": "highcharts/datasorting/independent-sorting/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["boolean"] },
                  "since": "8.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataSorting.enabled",
                  "name": "enabled",
                  "line": 339,
                  "lineEnd": 355,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "matchByName": {
                "doclet": {
                  "description": "Whether to allow matching points by name in an update. If this option\nis disabled, points will be matched by order.",
                  "samples": [
                    {
                      "name": "Enabled match by name",
                      "value": "highcharts/datasorting/match-by-name/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["boolean"] },
                  "since": "8.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataSorting.matchByName",
                  "name": "matchByName",
                  "line": 356,
                  "lineEnd": 366,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "sortKey": {
                "doclet": {
                  "description": "Determines what data value should be used to sort by.",
                  "samples": [
                    {
                      "name": "Sort key as `z` value",
                      "value": "highcharts/datasorting/sort-key/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "8.0.0",
                  "defaultvalue": "y"
                },
                "meta": {
                  "fullname": "plotOptions.series.dataSorting.sortKey",
                  "name": "sortKey",
                  "line": 367,
                  "lineEnd": 377,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsSeriesDataSortingOptions",
            "extended": 1
          },
          "description": {
            "doclet": {
              "description": "A description of the series to add to the screen reader information\nabout the series.",
              "type": { "names": ["string"] },
              "since": "5.0.0",
              "requires": ["module:modules/accessibility"]
            },
            "meta": {
              "fullname": "plotOptions.series.description",
              "name": "description",
              "line": 322,
              "lineEnd": 330,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "dragDrop": {
            "doclet": {
              "description": "The draggable-points module allows points to be moved around or modified in\nthe chart. In addition to the options mentioned under the `dragDrop` API\nstructure, the module fires three events,\n[point.dragStart](plotOptions.series.point.events.dragStart),\n[point.drag](plotOptions.series.point.events.drag) and\n[point.drop](plotOptions.series.point.events.drop).",
              "samples": [
                {
                  "name": "Draggable column and line series",
                  "value": "highcharts/dragdrop/resize-column",
                  "products": ["highcharts", "highstock"]
                },
                {
                  "name": "Draggable bar",
                  "value": "highcharts/dragdrop/bar-series",
                  "products": ["highcharts", "highstock"]
                },
                {
                  "name": "Draggable bubbles",
                  "value": "highcharts/dragdrop/drag-bubble",
                  "products": ["highcharts", "highstock"]
                },
                {
                  "name": "Draggable X range series",
                  "value": "highcharts/dragdrop/drag-xrange",
                  "products": ["highcharts", "highstock"]
                },
                {
                  "name": "Dragging disabled for specific points",
                  "value": "highcharts/dragdrop/undraggable-points",
                  "products": ["highcharts", "highstock"]
                },
                {
                  "name": "Draggable Map Point series",
                  "value": "maps/series/draggable-mappoint",
                  "products": ["highmaps"]
                }
              ],
              "declare": "Highcharts.SeriesDragDropOptionsObject",
              "since": "6.2.0",
              "requires": ["module:modules/draggable-points"],
              "type": { "names": ["*"] }
            },
            "meta": {
              "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
              "name": "dragDrop",
              "fullname": "plotOptions.series.dragDrop",
              "line": 13,
              "lineEnd": 17,
              "column": 0
            },
            "children": {
              "dragHandle": {
                "doclet": {
                  "description": "Options for the drag handles available in column series.",
                  "declare": "Highcharts.DragDropHandleOptionsObject",
                  "since": "6.2.0",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "plotOptions.series.dragDrop.dragHandle",
                  "name": "dragHandle",
                  "line": 242,
                  "lineEnd": 248,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js"
                },
                "children": {
                  "className": {
                    "doclet": {
                      "description": "The class name of the drag handles. Defaults to `highcharts-drag-handle`.",
                      "since": "6.2.0",
                      "type": { "names": ["string"] },
                      "defaultvalue": "highcharts-drag-handle"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.dragDrop.dragHandle.className",
                      "name": "className",
                      "line": 250,
                      "lineEnd": 258,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                      "default": "highcharts-drag-handle"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "color": {
                    "doclet": {
                      "description": "The fill color of the drag handles.",
                      "type": {
                        "names": [
                          "Highcharts.ColorString",
                          "Highcharts.GradientColorObject",
                          "Highcharts.PatternObject"
                        ]
                      },
                      "since": "6.2.0",
                      "defaultvalue": "#fff"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.dragDrop.dragHandle.color",
                      "name": "color",
                      "line": 276,
                      "lineEnd": 281,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                      "default": "#fff"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "lineColor": {
                    "doclet": {
                      "description": "The line color of the drag handles.",
                      "type": { "names": ["Highcharts.ColorString"] },
                      "since": "6.2.0",
                      "defaultvalue": "rgba(0, 0, 0, 0.6)"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.dragDrop.dragHandle.lineColor",
                      "name": "lineColor",
                      "line": 283,
                      "lineEnd": 288,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                      "default": "rgba(0, 0, 0, 0.6)"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "lineWidth": {
                    "doclet": {
                      "description": "The line width for the drag handles.",
                      "since": "6.2.0",
                      "type": { "names": ["number"] },
                      "defaultvalue": 1
                    },
                    "meta": {
                      "fullname": "plotOptions.series.dragDrop.dragHandle.lineWidth",
                      "name": "lineWidth",
                      "line": 290,
                      "lineEnd": 294,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                      "default": 1
                    },
                    "children": {},
                    "extended": 1
                  },
                  "zIndex": {
                    "doclet": {
                      "description": "The z index for the drag handles.",
                      "since": "6.2.0",
                      "type": { "names": ["number"] },
                      "defaultvalue": 901
                    },
                    "meta": {
                      "fullname": "plotOptions.series.dragDrop.dragHandle.zIndex",
                      "name": "zIndex",
                      "line": 296,
                      "lineEnd": 300,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                      "default": 901
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSeriesDragDropDragHandleOptions",
                "extended": 1
              },
              "dragMaxX": {
                "doclet": {
                  "description": "Set the maximum X value the points can be moved to.",
                  "samples": [
                    {
                      "name": "Limit dragging",
                      "value": "gantt/dragdrop/drag-gantt",
                      "products": ["gantt"]
                    },
                    {
                      "name": "Limit dragging",
                      "value": "highcharts/dragdrop/drag-xrange",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number", "string"] },
                  "since": "6.2.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dragDrop.dragMaxX",
                  "name": "dragMaxX",
                  "line": 63,
                  "lineEnd": 74,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dragMaxY": {
                "doclet": {
                  "description": "Set the maximum Y value the points can be moved to.",
                  "samples": [
                    {
                      "name": "Limit dragging",
                      "value": "gantt/dragdrop/drag-gantt",
                      "products": ["gantt"]
                    },
                    {
                      "name": "Limit dragging",
                      "value": "highcharts/dragdrop/drag-xrange",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "since": "6.2.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dragDrop.dragMaxY",
                  "name": "dragMaxY",
                  "line": 87,
                  "lineEnd": 98,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dragMinX": {
                "doclet": {
                  "description": "Set the minimum X value the points can be moved to.",
                  "samples": [
                    {
                      "name": "Limit dragging",
                      "value": "gantt/dragdrop/drag-gantt",
                      "products": ["gantt"]
                    },
                    {
                      "name": "Limit dragging",
                      "value": "highcharts/dragdrop/drag-xrange",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number", "string"] },
                  "since": "6.2.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dragDrop.dragMinX",
                  "name": "dragMinX",
                  "line": 51,
                  "lineEnd": 62,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dragMinY": {
                "doclet": {
                  "description": "Set the minimum Y value the points can be moved to.",
                  "samples": [
                    {
                      "name": "Limit dragging",
                      "value": "gantt/dragdrop/drag-gantt",
                      "products": ["gantt"]
                    },
                    {
                      "name": "Limit dragging",
                      "value": "highcharts/dragdrop/drag-xrange",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "since": "6.2.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dragDrop.dragMinY",
                  "name": "dragMinY",
                  "line": 75,
                  "lineEnd": 86,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dragPrecisionX": {
                "doclet": {
                  "description": "The X precision value to drag to for this series. Set to 0 to disable. By\ndefault this is disabled, except for category axes, where the default is\n`1`.",
                  "type": { "names": ["number"] },
                  "defaultvalue": "0",
                  "since": "6.2.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dragDrop.dragPrecisionX",
                  "name": "dragPrecisionX",
                  "line": 99,
                  "lineEnd": 108,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dragPrecisionY": {
                "doclet": {
                  "description": "The Y precision value to drag to for this series. Set to 0 to disable. By\ndefault this is disabled, except for category axes, where the default is\n`1`.",
                  "type": { "names": ["number"] },
                  "defaultvalue": "0",
                  "since": "6.2.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dragDrop.dragPrecisionY",
                  "name": "dragPrecisionY",
                  "line": 109,
                  "lineEnd": 118,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dragSensitivity": {
                "doclet": {
                  "description": "The amount of pixels to drag the pointer before it counts as a drag\noperation. This prevents drag/drop to fire when just clicking or\nselecting points.",
                  "type": { "names": ["number"] },
                  "defaultvalue": "2",
                  "since": "6.2.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dragDrop.dragSensitivity",
                  "name": "dragSensitivity",
                  "line": 51,
                  "lineEnd": 62,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                  "default": 2
                },
                "children": {},
                "extended": 1
              },
              "draggableX": {
                "doclet": {
                  "description": "Enable dragging in the X dimension.",
                  "type": { "names": ["boolean"] },
                  "since": "6.2.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dragDrop.draggableX",
                  "name": "draggableX",
                  "line": 119,
                  "lineEnd": 125,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "draggableY": {
                "doclet": {
                  "description": "Enable dragging in the Y dimension. Note that this is not supported for\nTreeGrid axes (the default axis type in Gantt charts).",
                  "type": { "names": ["boolean"] },
                  "since": "6.2.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dragDrop.draggableY",
                  "name": "draggableY",
                  "line": 126,
                  "lineEnd": 133,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "groupBy": {
                "doclet": {
                  "description": "Group the points by a property. Points with the same property value will\nbe grouped together when moving.",
                  "samples": [
                    {
                      "name": "Drag grouped points",
                      "value": "gantt/dragdrop/drag-gantt",
                      "products": ["gantt"]
                    },
                    {
                      "name": "Drag grouped points",
                      "value": "highcharts/dragdrop/drag-xrange",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "6.2.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dragDrop.groupBy",
                  "name": "groupBy",
                  "line": 134,
                  "lineEnd": 146,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "guideBox": {
                "doclet": {
                  "description": "Style options for the guide box. The guide box has one state by default,\nthe `default` state.",
                  "declare": "Highcharts.PlotOptionsSeriesDragDropGuideBoxOptions",
                  "since": "6.2.0",
                  "type": {
                    "names": [
                      "Highcharts.Dictionary.<Highcharts.DragDropGuideBoxOptionsObject>"
                    ]
                  }
                },
                "meta": {
                  "fullname": "plotOptions.series.dragDrop.guideBox",
                  "name": "guideBox",
                  "line": 303,
                  "lineEnd": 310,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js"
                },
                "children": {
                  "default": {
                    "doclet": {
                      "description": "Style options for the guide box default state.",
                      "declare": "Highcharts.DragDropGuideBoxOptionsObject",
                      "since": "6.2.0",
                      "type": { "names": ["*"] }
                    },
                    "meta": {
                      "fullname": "plotOptions.series.dragDrop.guideBox.default",
                      "name": "default",
                      "line": 312,
                      "lineEnd": 317,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js"
                    },
                    "children": {
                      "className": {
                        "doclet": {
                          "description": "CSS class name of the guide box in this state. Defaults to\n`highcharts-drag-box-default`.",
                          "since": "6.2.0",
                          "type": { "names": ["string"] },
                          "defaultvalue": "highcharts-drag-box-default"
                        },
                        "meta": {
                          "fullname": "plotOptions.series.dragDrop.guideBox.default.className",
                          "name": "className",
                          "line": 319,
                          "lineEnd": 324,
                          "column": 12,
                          "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                          "default": "highcharts-drag-box-default"
                        },
                        "children": {},
                        "extended": 1
                      },
                      "color": {
                        "doclet": {
                          "description": "Guide box fill color.",
                          "type": {
                            "names": [
                              "Highcharts.ColorString",
                              "Highcharts.GradientColorObject",
                              "Highcharts.PatternObject"
                            ]
                          },
                          "since": "6.2.0",
                          "defaultvalue": "rgba(0, 0, 0, 0.1)"
                        },
                        "meta": {
                          "fullname": "plotOptions.series.dragDrop.guideBox.default.color",
                          "name": "color",
                          "line": 339,
                          "lineEnd": 344,
                          "column": 12,
                          "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                          "default": "rgba(0, 0, 0, 0.1)"
                        },
                        "children": {},
                        "extended": 1
                      },
                      "cursor": {
                        "doclet": {
                          "description": "Guide box cursor.",
                          "since": "6.2.0",
                          "type": { "names": ["string"] },
                          "defaultvalue": "move"
                        },
                        "meta": {
                          "fullname": "plotOptions.series.dragDrop.guideBox.default.cursor",
                          "name": "cursor",
                          "line": 346,
                          "lineEnd": 350,
                          "column": 12,
                          "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                          "default": "move"
                        },
                        "children": {},
                        "extended": 1
                      },
                      "lineColor": {
                        "doclet": {
                          "description": "Color of the border around the guide box.",
                          "type": { "names": ["Highcharts.ColorString"] },
                          "since": "6.2.0",
                          "defaultvalue": "#888"
                        },
                        "meta": {
                          "fullname": "plotOptions.series.dragDrop.guideBox.default.lineColor",
                          "name": "lineColor",
                          "line": 332,
                          "lineEnd": 337,
                          "column": 12,
                          "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                          "default": "#888"
                        },
                        "children": {},
                        "extended": 1
                      },
                      "lineWidth": {
                        "doclet": {
                          "description": "Width of the line around the guide box.",
                          "since": "6.2.0",
                          "type": { "names": ["number"] },
                          "defaultvalue": 1
                        },
                        "meta": {
                          "fullname": "plotOptions.series.dragDrop.guideBox.default.lineWidth",
                          "name": "lineWidth",
                          "line": 326,
                          "lineEnd": 330,
                          "column": 12,
                          "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                          "default": 1
                        },
                        "children": {},
                        "extended": 1
                      },
                      "zIndex": {
                        "doclet": {
                          "description": "Guide box zIndex.",
                          "since": "6.2.0",
                          "type": { "names": ["number"] },
                          "defaultvalue": 900
                        },
                        "meta": {
                          "fullname": "plotOptions.series.dragDrop.guideBox.default.zIndex",
                          "name": "zIndex",
                          "line": 352,
                          "lineEnd": 356,
                          "column": 12,
                          "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                          "default": 900
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "flutterClassName": "HighchartsSeriesDragDropGuideBoxDefaultOptions",
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSeriesDragDropGuideBoxOptions",
                "extended": 1
              },
              "liveRedraw": {
                "doclet": {
                  "description": "Update points as they are dragged. If false, a guide box is drawn to\nillustrate the new point size.",
                  "samples": [
                    {
                      "name": "liveRedraw disabled",
                      "value": "gantt/dragdrop/drag-gantt",
                      "products": ["gantt"]
                    },
                    {
                      "name": "liveRedraw disabled",
                      "value": "highcharts/dragdrop/drag-xrange",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "since": "6.2.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.dragDrop.liveRedraw",
                  "name": "liveRedraw",
                  "line": 147,
                  "lineEnd": 160,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsSeriesDragDropOptions",
            "extended": 1
          },
          "enableMouseTracking": {
            "doclet": {
              "description": "Enable or disable the mouse tracking for a specific series. This\nincludes point tooltips and click events on graphs and points. For\nlarge datasets it improves performance.",
              "samples": [
                {
                  "name": "No mouse tracking",
                  "value": "highcharts/plotoptions/series-enablemousetracking-false/",
                  "products": ["highcharts"]
                },
                {
                  "name": "No mouse tracking",
                  "value": "maps/plotoptions/series-enablemousetracking-false/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "true"
            },
            "meta": {
              "fullname": "plotOptions.series.enableMouseTracking",
              "name": "enableMouseTracking",
              "line": 378,
              "lineEnd": 391,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "events": {
            "doclet": {
              "description": "General event handlers for the series items. These event hooks can\nalso be attached to the series at run time using the\n`Highcharts.addEvent` function.",
              "declare": "Highcharts.SeriesEventsOptionsObject",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.series.events",
              "name": "events",
              "line": 393,
              "lineEnd": 404,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
            },
            "children": {
              "afterAnimate": {
                "doclet": {
                  "description": "Fires after the series has finished its initial animation, or in case\nanimation is disabled, immediately as the series is displayed.",
                  "samples": [
                    {
                      "name": "Show label after animate",
                      "value": "highcharts/plotoptions/series-events-afteranimate/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Show label after animate",
                      "value": "highcharts/plotoptions/series-events-afteranimate/",
                      "products": ["highstock"]
                    }
                  ],
                  "type": {
                    "names": ["Highcharts.SeriesAfterAnimateCallbackFunction"]
                  },
                  "since": "4.0.0",
                  "products": ["highcharts", "highstock", "gantt"],
                  "context": "Highcharts.Series"
                },
                "meta": {
                  "fullname": "plotOptions.series.events.afterAnimate",
                  "name": "afterAnimate",
                  "line": 839,
                  "lineEnd": 853,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "checkboxClick": {
                "doclet": {
                  "description": "Fires when the checkbox next to the series' name in the legend is\nclicked. One parameter, `event`, is passed to the function. The state\nof the checkbox is found by `event.checked`. The checked item is\nfound by `event.item`. Return `false` to prevent the default action\nwhich is to toggle the select state of the series.",
                  "samples": [
                    {
                      "name": "Alert checkbox status",
                      "value": "highcharts/plotoptions/series-events-checkboxclick/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": ["Highcharts.SeriesCheckboxClickCallbackFunction"]
                  },
                  "since": "1.2.0",
                  "context": "Highcharts.Series"
                },
                "meta": {
                  "fullname": "plotOptions.series.events.checkboxClick",
                  "name": "checkboxClick",
                  "line": 854,
                  "lineEnd": 868,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "click": {
                "doclet": {
                  "description": "Fires when the series is clicked. One parameter, `event`, is passed\nto the function, containing common event information. Additionally,\n`event.point` holds a pointer to the nearest point on the graph.",
                  "samples": [
                    {
                      "name": "Alert click info",
                      "value": "highcharts/plotoptions/series-events-click/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Alert click info",
                      "value": "stock/plotoptions/series-events-click/",
                      "products": ["highstock"]
                    },
                    {
                      "name": "Display click info in subtitle",
                      "value": "maps/plotoptions/series-events-click/",
                      "products": ["highmaps"]
                    }
                  ],
                  "type": {
                    "names": ["Highcharts.SeriesClickCallbackFunction"]
                  },
                  "context": "Highcharts.Series"
                },
                "meta": {
                  "fullname": "plotOptions.series.events.click",
                  "name": "click",
                  "line": 869,
                  "lineEnd": 884,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "hide": {
                "doclet": {
                  "description": "Fires when the series is hidden after chart generation time, either\nby clicking the legend item or by calling `.hide()`.",
                  "samples": [
                    {
                      "name": "Alert when the series is hidden by clicking the legend item",
                      "value": "highcharts/plotoptions/series-events-hide/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": ["Highcharts.SeriesHideCallbackFunction"]
                  },
                  "since": "1.2.0",
                  "context": "Highcharts.Series"
                },
                "meta": {
                  "fullname": "plotOptions.series.events.hide",
                  "name": "hide",
                  "line": 885,
                  "lineEnd": 896,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "legendItemClick": {
                "doclet": {
                  "description": "Fires when the legend item belonging to the series is clicked. One\nparameter, `event`, is passed to the function. The default action\nis to toggle the visibility of the series. This can be prevented\nby returning `false` or calling `event.preventDefault()`.\n\n**Note:** This option is deprecated in favor of\n[legend.events.itemClick](#legend.events.itemClick).",
                  "type": {
                    "names": [
                      "Highcharts.SeriesLegendItemClickCallbackFunction"
                    ]
                  },
                  "deprecated": "11.4.4",
                  "context": "Highcharts.Series"
                },
                "meta": {
                  "fullname": "plotOptions.series.events.legendItemClick",
                  "name": "legendItemClick",
                  "line": 897,
                  "lineEnd": 910,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "mouseOut": {
                "doclet": {
                  "description": "Fires when the mouse leaves the graph. One parameter, `event`, is\npassed to the function, containing common event information. If the\n[stickyTracking](#plotOptions.series) option is true, `mouseOut`\ndoesn't happen before the mouse enters another graph or leaves the\nplot area.",
                  "samples": [
                    {
                      "name": "With sticky tracking by default",
                      "value": "highcharts/plotoptions/series-events-mouseover-sticky/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Without sticky tracking",
                      "value": "highcharts/plotoptions/series-events-mouseover-no-sticky/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": ["Highcharts.SeriesMouseOutCallbackFunction"]
                  },
                  "context": "Highcharts.Series"
                },
                "meta": {
                  "fullname": "plotOptions.series.events.mouseOut",
                  "name": "mouseOut",
                  "line": 911,
                  "lineEnd": 926,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "mouseOver": {
                "doclet": {
                  "description": "Fires when the mouse enters the graph. One parameter, `event`, is\npassed to the function, containing common event information.",
                  "samples": [
                    {
                      "name": "With sticky tracking by default",
                      "value": "highcharts/plotoptions/series-events-mouseover-sticky/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Without sticky tracking",
                      "value": "highcharts/plotoptions/series-events-mouseover-no-sticky/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": ["Highcharts.SeriesMouseOverCallbackFunction"]
                  },
                  "context": "Highcharts.Series"
                },
                "meta": {
                  "fullname": "plotOptions.series.events.mouseOver",
                  "name": "mouseOver",
                  "line": 927,
                  "lineEnd": 939,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "show": {
                "doclet": {
                  "description": "Fires when the series is shown after chart generation time, either\nby clicking the legend item or by calling `.show()`.",
                  "samples": [
                    {
                      "name": "Alert when the series is shown by clicking the legend item.",
                      "value": "highcharts/plotoptions/series-events-show/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": ["Highcharts.SeriesShowCallbackFunction"]
                  },
                  "since": "1.2.0",
                  "context": "Highcharts.Series"
                },
                "meta": {
                  "fullname": "plotOptions.series.events.show",
                  "name": "show",
                  "line": 940,
                  "lineEnd": 951,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsSeriesEventsOptions",
            "extended": 1
          },
          "findNearestPointBy": {
            "doclet": {
              "description": "Determines whether the series should look for the nearest point\nin both dimensions or just the x-dimension when hovering the series.\nDefaults to `'xy'` for scatter series and `'x'` for most other\nseries. If the data has duplicate x-values, it is recommended to\nset this to `'xy'` to allow hovering over all points.\n\nApplies only to series types using nearest neighbor search (not\ndirect hover) for tooltip.",
              "samples": [
                {
                  "name": "Different hover behaviors",
                  "value": "highcharts/series/findnearestpointby/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Different hover behaviors",
                  "value": "highcharts/series/findnearestpointby/",
                  "products": ["highstock"]
                },
                {
                  "name": "Different hover behaviors",
                  "value": "highcharts/series/findnearestpointby/",
                  "products": ["highmaps"]
                }
              ],
              "since": "5.0.10",
              "values": "[\"x\", \"xy\"]",
              "type": { "names": ["string"] },
              "defaultvalue": "x"
            },
            "meta": {
              "fullname": "plotOptions.series.findNearestPointBy",
              "name": "findNearestPointBy",
              "line": 2243,
              "lineEnd": 2266,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "default": "x"
            },
            "children": {},
            "extended": 1
          },
          "getExtremesFromAll": {
            "doclet": {
              "description": "Whether to use the Y extremes of the total chart width or only the\nzoomed area when zooming in on parts of the X axis. By default, the\nY axis adjusts to the min and max of the visible data. Cartesian\nseries only.",
              "type": { "names": ["boolean"] },
              "defaultvalue": "false",
              "since": "4.1.6",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "plotOptions.series.getExtremesFromAll",
              "name": "getExtremesFromAll",
              "line": 393,
              "lineEnd": 404,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "inactiveOtherPoints": {
            "doclet": {
              "description": "Highlight only the hovered point and fade the remaining points.\n\nScatter-type series require enabling the 'inactive' marker state and\nadjusting opacity. Note that this approach could affect performance\nwith large datasets.",
              "samples": [
                {
                  "name": "Chart with inactiveOtherPoints option enabled.",
                  "value": "highcharts/plotoptions/series-inactiveotherpoints-enabled/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "false"
            },
            "meta": {
              "fullname": "plotOptions.series.inactiveOtherPoints",
              "name": "inactiveOtherPoints",
              "line": 405,
              "lineEnd": 418,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "includeInDataExport": {
            "doclet": {
              "description": "When set to `false` will prevent the series data from being included in\nany form of data export.\n\nSince version 6.0.0 until 7.1.0 the option was existing undocumented\nas `includeInCSVExport`.",
              "type": { "names": ["boolean"] },
              "since": "7.1.0",
              "requires": ["module:modules/export-data"]
            },
            "meta": {
              "fullname": "plotOptions.series.includeInDataExport",
              "name": "includeInDataExport",
              "line": 277,
              "lineEnd": 288,
              "filename": "code/es-modules/Extensions/ExportData/ExportDataDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "keys": {
            "doclet": {
              "description": "An array specifying which option maps to which key in the data point\narray. This makes it convenient to work with unstructured data arrays\nfrom different sources.",
              "see": ["[series.data](#series.line.data)"],
              "samples": [
                {
                  "name": "An extended data array with keys",
                  "value": "highcharts/series/data-keys/",
                  "products": ["highcharts", "highstock"]
                },
                {
                  "name": "Nested keys used to access object properties",
                  "value": "highcharts/series/data-nested-keys/",
                  "products": ["highcharts", "highstock"]
                }
              ],
              "type": { "names": ["Array.<string>"] },
              "since": "4.1.6"
            },
            "meta": {
              "fullname": "plotOptions.series.keys",
              "name": "keys",
              "line": 419,
              "lineEnd": 434,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "label": {
            "doclet": {
              "description": "Series labels are placed as close to the series as possible in a\nnatural way, seeking to avoid other series. The goal of this\nfeature is to make the chart more easily readable, like if a\nhuman designer placed the labels in the optimal position.\n\nThe series labels currently work with series types having a\n`graph` or an `area`.",
              "samples": [
                {
                  "name": "Line chart",
                  "value": "highcharts/series-label/line-chart"
                },
                {
                  "name": "Stream graph",
                  "value": "highcharts/demo/streamgraph"
                },
                {
                  "name": "Stock chart",
                  "value": "highcharts/series-label/stock-chart"
                }
              ],
              "declare": "Highcharts.SeriesLabelOptionsObject",
              "since": "6.0.0",
              "products": ["highcharts", "highstock", "gantt"],
              "requires": ["module:modules/series-label"],
              "type": { "names": ["*"] }
            },
            "meta": {
              "filename": "code/es-modules/Extensions/SeriesLabel/SeriesLabelDefaults.js",
              "name": "label",
              "fullname": "plotOptions.series.label",
              "line": 11,
              "lineEnd": 15,
              "column": 0
            },
            "children": {
              "boxesToAvoid": {
                "doclet": {
                  "description": "An array of boxes to avoid when laying out the labels. Each\nitem has a `left`, `right`, `top` and `bottom` property.",
                  "type": {
                    "names": ["Array.<Highcharts.LabelIntersectBoxObject>"]
                  },
                  "since": "6.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.label.boxesToAvoid",
                  "name": "boxesToAvoid",
                  "line": 124,
                  "lineEnd": 129,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/SeriesLabel/SeriesLabelDefaults.js"
                },
                "children": {},
                "extended": 1
              },
              "connectorAllowed": {
                "doclet": {
                  "description": "Allow labels to be placed distant to the graph if necessary,\nand draw a connector line to the graph. Setting this option\nto true may decrease the performance significantly, since the\nalgorithm with systematically search for open spaces in the\nwhole plot area. Visually, it may also result in a more\ncluttered chart, though more of the series will be labeled.",
                  "since": "6.0.0",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.series.label.connectorAllowed",
                  "name": "connectorAllowed",
                  "line": 43,
                  "lineEnd": 50,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/SeriesLabel/SeriesLabelDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "connectorNeighbourDistance": {
                "doclet": {
                  "description": "If the label is closer than this to a neighbour graph, draw a\nconnector.",
                  "since": "6.0.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 24
                },
                "meta": {
                  "fullname": "plotOptions.series.label.connectorNeighbourDistance",
                  "name": "connectorNeighbourDistance",
                  "line": 52,
                  "lineEnd": 55,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/SeriesLabel/SeriesLabelDefaults.js",
                  "default": 24
                },
                "children": {},
                "extended": 1
              },
              "enabled": {
                "doclet": {
                  "description": "Enable the series label per series.",
                  "since": "6.0.0",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.series.label.enabled",
                  "name": "enabled",
                  "line": 39,
                  "lineEnd": 41,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/SeriesLabel/SeriesLabelDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "format": {
                "doclet": {
                  "description": "A format string for the label, with support for a subset of\nHTML. Variables are enclosed by curly brackets. Available\nvariables are `name`, `options.xxx`, `color` and other\nmembers from the `series` object. Use this option also to set\na static text for the label.",
                  "type": { "names": ["string"] },
                  "since": "8.1.0",
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.series.label.format",
                  "name": "format",
                  "line": 57,
                  "lineEnd": 66,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/SeriesLabel/SeriesLabelDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "formatter": {
                "doclet": {
                  "description": "Callback function to format each of the series' labels. The\n`this` keyword refers to the series object. By default the\n`formatter` is undefined and the `series.name` is rendered.",
                  "type": {
                    "names": ["Highcharts.FormatterCallbackFunction.<Series>"]
                  },
                  "since": "8.1.0",
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.series.label.formatter",
                  "name": "formatter",
                  "line": 68,
                  "lineEnd": 75,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/SeriesLabel/SeriesLabelDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "maxFontSize": {
                "doclet": {
                  "description": "For area-like series, allow the font size to vary so that\nsmall areas get a smaller font size. The default applies this\neffect to area-like series but not line-like series.",
                  "samples": [
                    {
                      "name": "Min and max font size on a streamgraph",
                      "value": "highcharts/demo/streamgraph"
                    }
                  ],
                  "type": { "names": ["number", "null"] },
                  "since": "6.0.0",
                  "defaultvalue": null
                },
                "meta": {
                  "fullname": "plotOptions.series.label.maxFontSize",
                  "name": "maxFontSize",
                  "line": 87,
                  "lineEnd": 96,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/SeriesLabel/SeriesLabelDefaults.js",
                  "default": null
                },
                "children": {},
                "extended": 1
              },
              "minFontSize": {
                "doclet": {
                  "description": "For area-like series, allow the font size to vary so that\nsmall areas get a smaller font size. The default applies this\neffect to area-like series but not line-like series.",
                  "samples": [
                    {
                      "name": "Min and max font size on a streamgraph",
                      "value": "highcharts/demo/streamgraph"
                    }
                  ],
                  "type": { "names": ["number", "null"] },
                  "since": "6.0.0",
                  "defaultvalue": null
                },
                "meta": {
                  "fullname": "plotOptions.series.label.minFontSize",
                  "name": "minFontSize",
                  "line": 77,
                  "lineEnd": 85,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/SeriesLabel/SeriesLabelDefaults.js",
                  "default": null
                },
                "children": {},
                "extended": 1
              },
              "onArea": {
                "doclet": {
                  "description": "Draw the label on the area of an area series. By default it\nis drawn on the area. Set it to `false` to draw it next to\nthe graph instead.",
                  "type": { "names": ["boolean", "null"] },
                  "since": "6.0.0",
                  "defaultvalue": null
                },
                "meta": {
                  "fullname": "plotOptions.series.label.onArea",
                  "name": "onArea",
                  "line": 98,
                  "lineEnd": 104,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/SeriesLabel/SeriesLabelDefaults.js",
                  "default": null
                },
                "children": {},
                "extended": 1
              },
              "style": {
                "doclet": {
                  "description": "Styles for the series label. The color defaults to the series\ncolor, or a contrast color if `onArea`.",
                  "type": { "names": ["Highcharts.CSSObject"] },
                  "since": "6.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.label.style",
                  "name": "style",
                  "line": 106,
                  "lineEnd": 111,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/SeriesLabel/SeriesLabelDefaults.js"
                },
                "children": {
                  "fontSize": {
                    "doclet": {
                      "type": { "names": ["number", "string"] },
                      "defaultvalue": "0.8em"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.label.style.fontSize",
                      "name": "fontSize",
                      "line": 113,
                      "lineEnd": 115,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/SeriesLabel/SeriesLabelDefaults.js",
                      "default": "0.8em"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "fontWeight": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["string"] },
                      "defaultvalue": "bold"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.label.style.fontWeight",
                      "name": "fontWeight",
                      "line": 117,
                      "lineEnd": 117,
                      "column": 8,
                      "filename": "code/es-modules/Extensions/SeriesLabel/SeriesLabelDefaults.js",
                      "default": "bold"
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSeriesLabelStyleOptions",
                "extended": 1
              },
              "useHTML": {
                "doclet": {
                  "description": "Whether to use HTML to render the series label.",
                  "since": "6.0.0",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.series.label.useHTML",
                  "name": "useHTML",
                  "line": 120,
                  "lineEnd": 122,
                  "column": 4,
                  "filename": "code/es-modules/Extensions/SeriesLabel/SeriesLabelDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsSeriesLabelOptions",
            "extended": 1
          },
          "legendSymbol": {
            "doclet": {
              "description": "What type of legend symbol to render for this series. Can be one of\n`areaMarker`, `lineMarker` or `rectangle`.",
              "values": "[\"areaMarker\", \"lineMarker\", \"rectangle\"]",
              "samples": [
                {
                  "name": "Change the legend symbol",
                  "value": "highcharts/series/legend-symbol/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["string"] },
              "defaultvalue": "rectangle",
              "since": "11.0.1"
            },
            "meta": {
              "fullname": "plotOptions.series.legendSymbol",
              "name": "legendSymbol",
              "line": 231,
              "lineEnd": 231,
              "column": 4,
              "filename": "code/es-modules/Series/Line/LineSeries.js",
              "default": "lineMarker"
            },
            "children": {},
            "extended": 1
          },
          "legendSymbolColor": {
            "doclet": {
              "description": "Defines the color of the legend symbol for this series. Defaults to\nundefined, in which case the series color is used. Does not work with\nstyled mode.",
              "samples": [
                {
                  "name": "Change the legend symbol color",
                  "value": "highcharts/series/legend-symbol-color/",
                  "products": ["highcharts", "highstock"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "defaultvalue": "undefined",
              "since": "12.0.0",
              "products": ["highcharts", "highstock", "highmaps"]
            },
            "meta": {
              "fullname": "plotOptions.series.legendSymbolColor",
              "name": "legendSymbolColor",
              "line": 2374,
              "lineEnd": 2387,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "lineWidth": {
            "doclet": {
              "description": "Pixel width of the graph line.",
              "see": [
                "In styled mode, the line stroke-width can be set with the\n     `.highcharts-graph` class name."
              ],
              "samples": [
                {
                  "name": "On all series",
                  "value": "highcharts/plotoptions/series-linewidth-general/",
                  "products": ["highcharts"]
                },
                {
                  "name": "On one single series",
                  "value": "highcharts/plotoptions/series-linewidth-specific/",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts", "highstock"],
              "type": { "names": ["number"] },
              "defaultvalue": 2
            },
            "meta": {
              "fullname": "plotOptions.series.lineWidth",
              "name": "lineWidth",
              "line": 22,
              "lineEnd": 22,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "default": 2
            },
            "children": {},
            "extended": 1
          },
          "linecap": {
            "doclet": {
              "description": "The line cap used for line ends and line joins on the graph.",
              "samples": [
                {
                  "name": "Line cap comparison",
                  "value": "highcharts/series-line/linecap/"
                }
              ],
              "type": { "names": ["Highcharts.SeriesLinecapValue"] },
              "defaultvalue": "round",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.series.linecap",
              "name": "linecap",
              "line": 435,
              "lineEnd": 445,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "linkedTo": {
            "doclet": {
              "description": "The [id](#series.id) of another series to link to. Additionally,\nthe value can be \":previous\" to link to the previous series. When\ntwo series are linked, only the first one appears in the legend.\nToggling the visibility of this also toggles the linked series.\n\nIf master series uses data sorting and linked series does not have\nits own sorting definition, the linked series will be sorted in the\nsame order as the master one.",
              "samples": [
                {
                  "name": "Linked series",
                  "value": "highcharts/demo/arearange-line/",
                  "products": ["highcharts", "highstock"]
                }
              ],
              "type": { "names": ["string"] },
              "since": "3.0.0",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "plotOptions.series.linkedTo",
              "name": "linkedTo",
              "line": 446,
              "lineEnd": 463,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "marker": {
            "doclet": {
              "description": "Options for the point markers of line and scatter-like series. Properties\nlike `fillColor`, `lineColor` and `lineWidth` define the visual\nappearance of the markers. The `symbol` option defines the shape. Other\nseries types, like column series, don't have markers, but have visual\noptions on the series level instead.\n\nIn styled mode, the markers can be styled with the `.highcharts-point`,\n`.highcharts-point-hover` and `.highcharts-point-select` class names.",
              "declare": "Highcharts.PointMarkerOptionsObject",
              "samples": [
                {
                  "name": "Using the mapmarker symbol for points",
                  "value": "maps/demo/mappoint-mapmarker",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.series.marker",
              "name": "marker",
              "line": 839,
              "lineEnd": 853,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
            },
            "children": {
              "enabled": {
                "doclet": {
                  "description": "Enable or disable the point marker. If `undefined`, the markers\nare hidden when the data is dense, and shown for more widespread\ndata points.",
                  "samples": [
                    {
                      "name": "Disabled markers",
                      "value": "highcharts/plotoptions/series-marker-enabled/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Disabled in normal state but enabled on hover",
                      "value": "highcharts/plotoptions/series-marker-enabled-false/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Enabled markers",
                      "value": "stock/plotoptions/series-marker/",
                      "products": ["highstock"]
                    }
                  ],
                  "type": { "names": ["boolean"] },
                  "defaultByProduct": {
                    "highcharts": "undefined",
                    "highstock": false
                  }
                },
                "meta": {
                  "fullname": "plotOptions.series.marker.enabled",
                  "name": "enabled",
                  "line": 970,
                  "lineEnd": 986,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "enabledThreshold": {
                "doclet": {
                  "description": "The threshold for how dense the point markers should be before\nthey are hidden, given that `enabled` is not defined. The number\nindicates the horizontal distance between the two closest points\nin the series, as multiples of the `marker.radius`. In other\nwords, the default value of 2 means points are hidden if\noverlapping horizontally.",
                  "samples": [
                    {
                      "name": "A higher threshold",
                      "value": "highcharts/plotoptions/series-marker-enabledthreshold"
                    }
                  ],
                  "since": "6.0.5",
                  "type": { "names": ["number"] },
                  "defaultvalue": 2
                },
                "meta": {
                  "fullname": "plotOptions.series.marker.enabledThreshold",
                  "name": "enabledThreshold",
                  "line": 970,
                  "lineEnd": 986,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "default": 2
                },
                "children": {},
                "extended": 1
              },
              "fillColor": {
                "doclet": {
                  "description": "The fill color of the point marker. When `undefined`, the series'\nor point's color is used.",
                  "samples": [
                    {
                      "name": "White fill",
                      "value": "highcharts/plotoptions/series-marker-fillcolor/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  }
                },
                "meta": {
                  "fullname": "plotOptions.series.marker.fillColor",
                  "name": "fillColor",
                  "line": 1001,
                  "lineEnd": 1010,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "height": {
                "doclet": {
                  "description": "Image markers only. Set the image width explicitly. When using\nthis option, a `width` must also be set.",
                  "samples": [
                    {
                      "name": "Fixed width and height",
                      "value": "highcharts/plotoptions/series-marker-width-height/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Fixed width and height",
                      "value": "highcharts/plotoptions/series-marker-width-height/",
                      "products": ["highstock"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "since": "4.0.4"
                },
                "meta": {
                  "fullname": "plotOptions.series.marker.height",
                  "name": "height",
                  "line": 1011,
                  "lineEnd": 1023,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "lineColor": {
                "doclet": {
                  "description": "The color of the point marker's outline. When `undefined`, the\nseries' or point's color is used.",
                  "samples": [
                    {
                      "name": "Inherit from series color (undefined)",
                      "value": "highcharts/plotoptions/series-marker-fillcolor/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "defaultvalue": "#ffffff"
                },
                "meta": {
                  "fullname": "plotOptions.series.marker.lineColor",
                  "name": "lineColor",
                  "line": 1001,
                  "lineEnd": 1010,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "default": "#ffffff"
                },
                "children": {},
                "extended": 1
              },
              "lineWidth": {
                "doclet": {
                  "description": "The width of the point marker's outline.",
                  "samples": [
                    {
                      "name": "2px blue marker",
                      "value": "highcharts/plotoptions/series-marker-fillcolor/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.series.marker.lineWidth",
                  "name": "lineWidth",
                  "line": 1034,
                  "lineEnd": 1039,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "radius": {
                "doclet": {
                  "description": "The radius of the point marker.",
                  "samples": [
                    {
                      "name": "Bigger markers",
                      "value": "highcharts/plotoptions/series-marker-radius/",
                      "products": ["highcharts"]
                    }
                  ],
                  "defaultByProduct": { "highstock": 2, "highcharts": 4 },
                  "type": { "names": ["number"] },
                  "defaultvalue": 4
                },
                "meta": {
                  "fullname": "plotOptions.series.marker.radius",
                  "name": "radius",
                  "line": 1041,
                  "lineEnd": 1050,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "default": 4
                },
                "children": {},
                "extended": 1
              },
              "states": {
                "doclet": {
                  "description": "States for a single point marker.",
                  "declare": "Highcharts.PointStatesOptionsObject",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "plotOptions.series.marker.states",
                  "name": "states",
                  "line": 1052,
                  "lineEnd": 1076,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                },
                "children": {
                  "hover": {
                    "doclet": {
                      "description": "The hover state for a single point marker.",
                      "declare": "Highcharts.PointStatesHoverOptionsObject",
                      "type": { "names": ["*"] }
                    },
                    "meta": {
                      "fullname": "plotOptions.series.marker.states.hover",
                      "name": "hover",
                      "line": 1111,
                      "lineEnd": 1115,
                      "column": 12,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                    },
                    "children": {
                      "animation": {
                        "doclet": {
                          "description": "Animation when hovering over the marker.",
                          "type": {
                            "names": [
                              "boolean",
                              "Partial.<Highcharts.AnimationOptionsObject>"
                            ]
                          }
                        },
                        "meta": {
                          "fullname": "plotOptions.series.marker.states.hover.animation",
                          "name": "animation",
                          "line": 1117,
                          "lineEnd": 1121,
                          "column": 16,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                        },
                        "children": {
                          "duration": {
                            "doclet": {
                              "internal": true,
                              "type": { "names": ["number"] },
                              "defaultvalue": 150
                            },
                            "meta": {
                              "fullname": "plotOptions.series.marker.states.hover.animation.duration",
                              "name": "duration",
                              "line": 1123,
                              "lineEnd": 1123,
                              "column": 20,
                              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                              "default": 150
                            },
                            "children": {},
                            "extended": 1
                          }
                        },
                        "flutterClassName": "HighchartsSeriesMarkerStatesHoverAnimationOptions",
                        "extended": 1
                      },
                      "enabled": {
                        "doclet": {
                          "description": "Enable or disable the point marker.",
                          "samples": [
                            {
                              "name": "Disabled hover state",
                              "value": "highcharts/plotoptions/series-marker-states-hover-enabled/",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["boolean"] },
                          "defaultvalue": true
                        },
                        "meta": {
                          "fullname": "plotOptions.series.marker.states.hover.enabled",
                          "name": "enabled",
                          "line": 1126,
                          "lineEnd": 1131,
                          "column": 16,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "default": true
                        },
                        "children": {},
                        "extended": 1
                      },
                      "fillColor": {
                        "doclet": {
                          "description": "The fill color of the marker in hover state. When\n`undefined`, the series' or point's fillColor for normal\nstate is used.",
                          "type": {
                            "names": [
                              "Highcharts.ColorString",
                              "Highcharts.GradientColorObject",
                              "Highcharts.PatternObject"
                            ]
                          }
                        },
                        "meta": {
                          "fullname": "plotOptions.series.marker.states.hover.fillColor",
                          "name": "fillColor",
                          "line": 1133,
                          "lineEnd": 1140,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "lineColor": {
                        "doclet": {
                          "description": "The color of the point marker's outline. When\n`undefined`, the series' or point's lineColor for normal\nstate is used.",
                          "samples": [
                            {
                              "name": "White fill color, black line color",
                              "value": "highcharts/plotoptions/series-marker-states-hover-linecolor/",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": {
                            "names": [
                              "Highcharts.ColorString",
                              "Highcharts.GradientColorObject",
                              "Highcharts.PatternObject"
                            ]
                          }
                        },
                        "meta": {
                          "fullname": "plotOptions.series.marker.states.hover.lineColor",
                          "name": "lineColor",
                          "line": 1141,
                          "lineEnd": 1151,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "lineWidth": {
                        "doclet": {
                          "description": "The width of the point marker's outline. When\n`undefined`, the series' or point's lineWidth for normal\nstate is used.",
                          "samples": [
                            {
                              "name": "3px line width",
                              "value": "highcharts/plotoptions/series-marker-states-hover-linewidth/",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number"] }
                        },
                        "meta": {
                          "fullname": "plotOptions.series.marker.states.hover.lineWidth",
                          "name": "lineWidth",
                          "line": 1152,
                          "lineEnd": 1162,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "lineWidthPlus": {
                        "doclet": {
                          "description": "The additional line width for a hovered point.",
                          "samples": [
                            {
                              "name": "2 pixels wider on hover",
                              "value": "highcharts/plotoptions/series-states-hover-linewidthplus/",
                              "products": ["highcharts"]
                            },
                            {
                              "name": "2 pixels wider on hover",
                              "value": "highcharts/plotoptions/series-states-hover-linewidthplus/",
                              "products": ["highstock"]
                            }
                          ],
                          "since": "4.0.3",
                          "type": { "names": ["number"] },
                          "defaultvalue": 1
                        },
                        "meta": {
                          "fullname": "plotOptions.series.marker.states.hover.lineWidthPlus",
                          "name": "lineWidthPlus",
                          "line": 1187,
                          "lineEnd": 1196,
                          "column": 16,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "default": 1
                        },
                        "children": {},
                        "extended": 1
                      },
                      "radius": {
                        "doclet": {
                          "description": "The radius of the point marker. In hover state, it\ndefaults to the normal state's radius + 2 as per the\n[radiusPlus](#plotOptions.series.marker.states.hover.radiusPlus)\noption.",
                          "samples": [
                            {
                              "name": "10px radius",
                              "value": "highcharts/plotoptions/series-marker-states-hover-radius/",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number"] }
                        },
                        "meta": {
                          "fullname": "plotOptions.series.marker.states.hover.radius",
                          "name": "radius",
                          "line": 1163,
                          "lineEnd": 1174,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "radiusPlus": {
                        "doclet": {
                          "description": "The number of pixels to increase the radius of the\nhovered point.",
                          "samples": [
                            {
                              "name": "5 pixels greater radius on hover",
                              "value": "highcharts/plotoptions/series-states-hover-linewidthplus/",
                              "products": ["highcharts"]
                            },
                            {
                              "name": "5 pixels greater radius on hover",
                              "value": "highcharts/plotoptions/series-states-hover-linewidthplus/",
                              "products": ["highstock"]
                            }
                          ],
                          "since": "4.0.3",
                          "type": { "names": ["number"] },
                          "defaultvalue": 2
                        },
                        "meta": {
                          "fullname": "plotOptions.series.marker.states.hover.radiusPlus",
                          "name": "radiusPlus",
                          "line": 1133,
                          "lineEnd": 1140,
                          "column": 16,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "default": 2
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "flutterClassName": "HighchartsSeriesMarkerStatesHoverOptions",
                    "extended": 1
                  },
                  "normal": {
                    "doclet": {
                      "description": "The normal state of a single point marker. Currently only\nused for setting animation when returning to normal state\nfrom hover.",
                      "declare": "Highcharts.PointStatesNormalOptionsObject",
                      "type": { "names": ["*"] }
                    },
                    "meta": {
                      "fullname": "plotOptions.series.marker.states.normal",
                      "name": "normal",
                      "line": 1096,
                      "lineEnd": 1102,
                      "column": 12,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                    },
                    "children": {
                      "animation": {
                        "doclet": {
                          "description": "Animation when returning to normal state after hovering.",
                          "type": {
                            "names": [
                              "boolean",
                              "Partial.<Highcharts.AnimationOptionsObject>"
                            ]
                          },
                          "defaultvalue": true
                        },
                        "meta": {
                          "fullname": "plotOptions.series.marker.states.normal.animation",
                          "name": "animation",
                          "line": 1104,
                          "lineEnd": 1108,
                          "column": 16,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "default": true
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "flutterClassName": "HighchartsSeriesMarkerStatesNormalOptions",
                    "extended": 1
                  },
                  "select": {
                    "doclet": {
                      "description": "The appearance of the point marker when selected. In order to\nallow a point to be selected, set the\n`series.allowPointSelect` option to true.",
                      "declare": "Highcharts.PointStatesSelectOptionsObject",
                      "type": { "names": ["*"] }
                    },
                    "meta": {
                      "fullname": "plotOptions.series.marker.states.select",
                      "name": "select",
                      "line": 1199,
                      "lineEnd": 1205,
                      "column": 12,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                    },
                    "children": {
                      "enabled": {
                        "doclet": {
                          "description": "Enable or disable visible feedback for selection.",
                          "samples": [
                            {
                              "name": "Disabled select state",
                              "value": "highcharts/plotoptions/series-marker-states-select-enabled/",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["boolean"] },
                          "defaultvalue": "true"
                        },
                        "meta": {
                          "fullname": "plotOptions.series.marker.states.select.enabled",
                          "name": "enabled",
                          "line": 1207,
                          "lineEnd": 1216,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "fillColor": {
                        "doclet": {
                          "description": "The fill color of the point marker.",
                          "samples": [
                            {
                              "name": "Solid red discs for selected points",
                              "value": "highcharts/plotoptions/series-marker-states-select-fillcolor/",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": {
                            "names": [
                              "Highcharts.ColorString",
                              "Highcharts.GradientColorObject",
                              "Highcharts.PatternObject"
                            ]
                          },
                          "defaultvalue": "#cccccc"
                        },
                        "meta": {
                          "fullname": "plotOptions.series.marker.states.select.fillColor",
                          "name": "fillColor",
                          "line": 1207,
                          "lineEnd": 1216,
                          "column": 16,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "default": "#cccccc"
                        },
                        "children": {},
                        "extended": 1
                      },
                      "lineColor": {
                        "doclet": {
                          "description": "The color of the point marker's outline. When\n`undefined`, the series' or point's color is used.",
                          "samples": [
                            {
                              "name": "Red line color for selected points",
                              "value": "highcharts/plotoptions/series-marker-states-select-linecolor/",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": {
                            "names": [
                              "Highcharts.ColorString",
                              "Highcharts.GradientColorObject",
                              "Highcharts.PatternObject"
                            ]
                          },
                          "defaultvalue": "#000000"
                        },
                        "meta": {
                          "fullname": "plotOptions.series.marker.states.select.lineColor",
                          "name": "lineColor",
                          "line": 1236,
                          "lineEnd": 1244,
                          "column": 16,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "default": "#000000"
                        },
                        "children": {},
                        "extended": 1
                      },
                      "lineWidth": {
                        "doclet": {
                          "description": "The width of the point marker's outline.",
                          "samples": [
                            {
                              "name": "3px line width for selected points",
                              "value": "highcharts/plotoptions/series-marker-states-select-linewidth/",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number"] },
                          "defaultvalue": 2
                        },
                        "meta": {
                          "fullname": "plotOptions.series.marker.states.select.lineWidth",
                          "name": "lineWidth",
                          "line": 1246,
                          "lineEnd": 1251,
                          "column": 16,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "default": 2
                        },
                        "children": {},
                        "extended": 1
                      },
                      "radius": {
                        "doclet": {
                          "description": "The radius of the point marker. In hover state, it\ndefaults to the normal state's radius + 2.",
                          "samples": [
                            {
                              "name": "10px radius for selected points",
                              "value": "highcharts/plotoptions/series-marker-states-select-radius/",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number"] }
                        },
                        "meta": {
                          "fullname": "plotOptions.series.marker.states.select.radius",
                          "name": "radius",
                          "line": 1217,
                          "lineEnd": 1226,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "flutterClassName": "HighchartsSeriesMarkerStatesSelectOptions",
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSeriesMarkerStatesOptions",
                "extended": 1
              },
              "symbol": {
                "doclet": {
                  "description": "A predefined shape or symbol for the marker. When undefined, the\nsymbol is pulled from options.symbols. Other possible values are\n`'circle'`, `'square'`,`'diamond'`, `'triangle'` and\n`'triangle-down'`.\n\nAdditionally, the URL to a graphic can be given on this form:\n`'url(graphic.png)'`. Note that for the image to be applied to\nexported charts, its URL needs to be accessible by the export\nserver.\n\nCustom callbacks for symbol path generation can also be added to\n`Highcharts.SVGRenderer.prototype.symbols`. The callback is then\nused by its method name, as shown in the demo.",
                  "samples": [
                    {
                      "name": "Predefined, graphic and custom markers",
                      "value": "highcharts/plotoptions/series-marker-symbol/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Predefined, graphic and custom markers",
                      "value": "highcharts/plotoptions/series-marker-symbol/",
                      "products": ["highstock"]
                    },
                    {
                      "name": "Using the mapmarker symbol for points",
                      "value": "maps/demo/mappoint-mapmarker",
                      "products": ["highmaps"]
                    }
                  ],
                  "type": { "names": ["string"] }
                },
                "meta": {
                  "fullname": "plotOptions.series.marker.symbol",
                  "name": "symbol",
                  "line": 1052,
                  "lineEnd": 1076,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "width": {
                "doclet": {
                  "description": "Image markers only. Set the image width explicitly. When using\nthis option, a `height` must also be set.",
                  "samples": [
                    {
                      "name": "Fixed width and height",
                      "value": "highcharts/plotoptions/series-marker-width-height/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Fixed width and height",
                      "value": "highcharts/plotoptions/series-marker-width-height/",
                      "products": ["highstock"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "since": "4.0.4"
                },
                "meta": {
                  "fullname": "plotOptions.series.marker.width",
                  "name": "width",
                  "line": 1077,
                  "lineEnd": 1089,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsSeriesMarkerOptions",
            "extended": 1
          },
          "negativeColor": {
            "doclet": {
              "description": "The color for the parts of the graph or points that are below the\n[threshold](#plotOptions.series.threshold). Note that `zones` takes\nprecedence over the negative color. Using `negativeColor` is\nequivalent to applying a zone with value of 0.",
              "see": [
                "In styled mode, a negative color is applied by setting this option\n     to `true` combined with the `.highcharts-negative` class name."
              ],
              "samples": [
                {
                  "name": "Spline, area and column",
                  "value": "highcharts/plotoptions/series-negative-color/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arearange",
                  "value": "highcharts/plotoptions/arearange-negativecolor/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Styled mode",
                  "value": "highcharts/css/series-negative-color/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Spline, area and column",
                  "value": "highcharts/plotoptions/series-negative-color/",
                  "products": ["highstock"]
                },
                {
                  "name": "Arearange",
                  "value": "highcharts/plotoptions/arearange-negativecolor/",
                  "products": ["highstock"]
                },
                {
                  "name": "Spline, area and column",
                  "value": "highcharts/plotoptions/series-negative-color/",
                  "products": ["highmaps"]
                },
                {
                  "name": "Arearange",
                  "value": "highcharts/plotoptions/arearange-negativecolor/",
                  "products": ["highmaps"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "3.0.0"
            },
            "meta": {
              "fullname": "plotOptions.series.negativeColor",
              "name": "negativeColor",
              "line": 481,
              "lineEnd": 508,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "onPoint": {
            "doclet": {
              "description": "Options for the _Series on point_ feature. Only `pie` and `sunburst` series\nare supported at this moment.",
              "samples": [
                {
                  "name": "Series on point",
                  "value": "highcharts/series-on-point/series-on-point",
                  "products": ["highcharts"]
                },
                {
                  "name": "Pies on a map",
                  "value": "maps/demo/map-pies",
                  "products": ["highmaps"]
                }
              ],
              "requires": ["module:modules/series-on-point"],
              "since": "10.2.0",
              "type": { "names": ["object"] }
            },
            "meta": {
              "fullname": "plotOptions.series.onPoint",
              "name": "onPoint",
              "line": 292,
              "lineEnd": 304,
              "filename": "code/es-modules/Series/SeriesOnPointComposition.js",
              "column": 0
            },
            "children": {
              "connectorOptions": {
                "doclet": {
                  "description": "Options for the connector in the _Series on point_ feature.\n\nIn styled mode, the connector can be styled with the\n`.highcharts-connector-seriesonpoint` class name.",
                  "requires": ["module:modules/series-on-point"],
                  "since": "10.2.0",
                  "type": { "names": ["Highcharts.SVGAttributes"] }
                },
                "meta": {
                  "fullname": "plotOptions.series.onPoint.connectorOptions",
                  "name": "connectorOptions",
                  "line": 305,
                  "lineEnd": 315,
                  "filename": "code/es-modules/Series/SeriesOnPointComposition.js",
                  "column": 0
                },
                "children": {
                  "dashstyle": {
                    "doclet": {
                      "description": "A name for the dash style to use for the connector.",
                      "requires": ["module:modules/series-on-point"],
                      "since": "10.2.0",
                      "type": { "names": ["string"] }
                    },
                    "meta": {
                      "fullname": "plotOptions.series.onPoint.connectorOptions.dashstyle",
                      "name": "dashstyle",
                      "line": 324,
                      "lineEnd": 331,
                      "filename": "code/es-modules/Series/SeriesOnPointComposition.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "stroke": {
                    "doclet": {
                      "description": "Color of the connector line. By default it's the series' color.",
                      "requires": ["module:modules/series-on-point"],
                      "since": "10.2.0",
                      "type": { "names": ["string"] }
                    },
                    "meta": {
                      "fullname": "plotOptions.series.onPoint.connectorOptions.stroke",
                      "name": "stroke",
                      "line": 316,
                      "lineEnd": 323,
                      "filename": "code/es-modules/Series/SeriesOnPointComposition.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "width": {
                    "doclet": {
                      "description": "Pixel width of the connector line.",
                      "defaultvalue": "1",
                      "requires": ["module:modules/series-on-point"],
                      "type": { "names": ["number"] },
                      "since": "10.2.0"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.onPoint.connectorOptions.width",
                      "name": "width",
                      "line": 332,
                      "lineEnd": 340,
                      "filename": "code/es-modules/Series/SeriesOnPointComposition.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSeriesOnPointConnectorOptions",
                "extended": 1
              },
              "id": {
                "doclet": {
                  "description": "The `id` of the point that we connect the series to. Only points with a given\n`plotX` and `plotY` values and map points are valid.",
                  "requires": ["module:modules/series-on-point"],
                  "since": "10.2.0",
                  "type": { "names": ["string"] }
                },
                "meta": {
                  "fullname": "plotOptions.series.onPoint.id",
                  "name": "id",
                  "line": 341,
                  "lineEnd": 349,
                  "filename": "code/es-modules/Series/SeriesOnPointComposition.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "position": {
                "doclet": {
                  "description": "Options allowing to set a position and an offset of the series in the\n_Series on point_ feature.",
                  "requires": ["module:modules/series-on-point"],
                  "since": "10.2.0",
                  "type": { "names": ["object"] }
                },
                "meta": {
                  "fullname": "plotOptions.series.onPoint.position",
                  "name": "position",
                  "line": 350,
                  "lineEnd": 358,
                  "filename": "code/es-modules/Series/SeriesOnPointComposition.js",
                  "column": 0
                },
                "children": {
                  "offsetX": {
                    "doclet": {
                      "description": "Series center offset from the original x position. If defined, the connector\nline is drawn connecting original position with new position.",
                      "requires": ["module:modules/series-on-point"],
                      "since": "10.2.0",
                      "type": { "names": ["number"] }
                    },
                    "meta": {
                      "fullname": "plotOptions.series.onPoint.position.offsetX",
                      "name": "offsetX",
                      "line": 359,
                      "lineEnd": 367,
                      "filename": "code/es-modules/Series/SeriesOnPointComposition.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "offsetY": {
                    "doclet": {
                      "description": "Series center offset from the original y position. If defined, the connector\nline is drawn from original position to a new position.",
                      "requires": ["module:modules/series-on-point"],
                      "since": "10.2.0",
                      "type": { "names": ["number"] }
                    },
                    "meta": {
                      "fullname": "plotOptions.series.onPoint.position.offsetY",
                      "name": "offsetY",
                      "line": 368,
                      "lineEnd": 376,
                      "filename": "code/es-modules/Series/SeriesOnPointComposition.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "x": {
                    "doclet": {
                      "description": "X position of the series center. By default, the series is displayed on the\npoint that it is connected to.",
                      "requires": ["module:modules/series-on-point"],
                      "since": "10.2.0",
                      "type": { "names": ["number"] }
                    },
                    "meta": {
                      "fullname": "plotOptions.series.onPoint.position.x",
                      "name": "x",
                      "line": 377,
                      "lineEnd": 385,
                      "filename": "code/es-modules/Series/SeriesOnPointComposition.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "y": {
                    "doclet": {
                      "description": "Y position of the series center. By default, the series is displayed on the\npoint that it is connected to.",
                      "requires": ["module:modules/series-on-point"],
                      "since": "10.2.0",
                      "type": { "names": ["number"] }
                    },
                    "meta": {
                      "fullname": "plotOptions.series.onPoint.position.y",
                      "name": "y",
                      "line": 386,
                      "lineEnd": 394,
                      "filename": "code/es-modules/Series/SeriesOnPointComposition.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSeriesOnPointPositionOptions",
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsSeriesOnPointOptions",
            "extended": 1
          },
          "opacity": {
            "doclet": {
              "description": "Opacity of a series parts: line, fill (e.g. area) and dataLabels.",
              "see": [
                "[states.inactive.opacity](#plotOptions.series.states.inactive.opacity)"
              ],
              "since": "7.1.0",
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "plotOptions.series.opacity",
              "name": "opacity",
              "line": 1933,
              "lineEnd": 1941,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "point": {
            "doclet": {
              "description": "Properties for each single point.",
              "declare": "Highcharts.PlotSeriesPointOptions",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.series.point",
              "name": "point",
              "line": 1256,
              "lineEnd": 1262,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
            },
            "children": {
              "events": {
                "doclet": {
                  "description": "Events for each single point.",
                  "declare": "Highcharts.PointEventsOptionsObject",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "plotOptions.series.point.events",
                  "name": "events",
                  "line": 1264,
                  "lineEnd": 1286,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                },
                "children": {
                  "click": {
                    "doclet": {
                      "description": "Fires when a point is clicked. One parameter, `event`, is passed\nto the function, containing common event information.\n\nIf the `series.allowPointSelect` option is true, the default\naction for the point's click event is to toggle the point's\nselect state. Returning `false` cancels this action.",
                      "samples": [
                        {
                          "name": "Click marker to alert values",
                          "value": "highcharts/plotoptions/series-point-events-click/",
                          "products": ["highcharts"]
                        },
                        {
                          "name": "Click column",
                          "value": "highcharts/plotoptions/series-point-events-click-column/",
                          "products": ["highcharts"]
                        },
                        {
                          "name": "Go to URL",
                          "value": "highcharts/plotoptions/series-point-events-click-url/",
                          "products": ["highcharts"]
                        },
                        {
                          "name": "Click marker to display values",
                          "value": "maps/plotoptions/series-point-events-click/",
                          "products": ["highmaps"]
                        },
                        {
                          "name": "Go to URL",
                          "value": "maps/plotoptions/series-point-events-click-url/",
                          "products": ["highmaps"]
                        }
                      ],
                      "type": {
                        "names": ["Highcharts.PointClickCallbackFunction"]
                      },
                      "context": "Highcharts.Point"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.point.events.click",
                      "name": "click",
                      "line": 1264,
                      "lineEnd": 1286,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "drag": {
                    "doclet": {
                      "description": "Callback that fires while dragging a point. The mouse event is passed in\nas parameter. The original data can be accessed from `e.origin`, and the\nnew point values can be accessed from `e.newPoints`. If there is only a\nsingle point being updated, it can be accessed from `e.newPoint` for\nsimplicity, and its ID can be accessed from `e.newPointId`. The `this`\ncontext is the point being dragged. To stop the default drag action,\nreturn false. See [drag and drop options](plotOptions.series.dragDrop).",
                      "samples": [
                        {
                          "name": "Drag events",
                          "value": "highcharts/dragdrop/drag-xrange",
                          "products": ["highcharts"]
                        },
                        {
                          "name": "Dragging disabled for specific points",
                          "value": "highcharts/dragdrop/undraggable-points",
                          "products": ["highcharts", "highstock"]
                        }
                      ],
                      "type": {
                        "names": ["Highcharts.PointDragCallbackFunction"]
                      },
                      "since": "6.2.0",
                      "requires": ["module:modules/draggable-points"]
                    },
                    "meta": {
                      "fullname": "plotOptions.series.point.events.drag",
                      "name": "drag",
                      "line": 187,
                      "lineEnd": 205,
                      "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "dragStart": {
                    "doclet": {
                      "description": "Callback that fires when starting to drag a point. The mouse event object\nis passed in as an argument. If a drag handle is used, `e.updateProp` is\nset to the data property being dragged. The `this` context is the point.\nSee [drag and drop options](plotOptions.series.dragDrop).",
                      "samples": [
                        {
                          "name": "Drag events",
                          "value": "highcharts/dragdrop/drag-xrange",
                          "products": ["highcharts"]
                        }
                      ],
                      "type": {
                        "names": ["Highcharts.PointDragStartCallbackFunction"]
                      },
                      "since": "6.2.0",
                      "requires": ["module:modules/draggable-points"]
                    },
                    "meta": {
                      "fullname": "plotOptions.series.point.events.dragStart",
                      "name": "dragStart",
                      "line": 173,
                      "lineEnd": 186,
                      "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "drop": {
                    "doclet": {
                      "description": "Callback that fires when the point is dropped. The parameters passed are\nthe same as for [drag](#plotOptions.series.point.events.drag). To stop\nthe default drop action, return false. See\n[drag and drop options](plotOptions.series.dragDrop).",
                      "samples": [
                        {
                          "name": "Drag events",
                          "value": "highcharts/dragdrop/drag-xrange",
                          "products": ["highcharts"]
                        },
                        {
                          "name": "Dragging disabled for specific points",
                          "value": "highcharts/dragdrop/undraggable-points",
                          "products": ["highcharts", "highstock"]
                        }
                      ],
                      "type": {
                        "names": ["Highcharts.PointDropCallbackFunction"]
                      },
                      "since": "6.2.0",
                      "requires": ["module:modules/draggable-points"]
                    },
                    "meta": {
                      "fullname": "plotOptions.series.point.events.drop",
                      "name": "drop",
                      "line": 206,
                      "lineEnd": 221,
                      "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "mouseOut": {
                    "doclet": {
                      "description": "Fires when the mouse leaves the area close to the point. One\nparameter, `event`, is passed to the function, containing common\nevent information.",
                      "samples": [
                        {
                          "name": "Show values in the chart's corner on mouse over",
                          "value": "highcharts/plotoptions/series-point-events-mouseover/",
                          "products": ["highcharts"]
                        }
                      ],
                      "type": {
                        "names": ["Highcharts.PointMouseOutCallbackFunction"]
                      },
                      "context": "Highcharts.Point"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.point.events.mouseOut",
                      "name": "mouseOut",
                      "line": 1287,
                      "lineEnd": 1298,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "mouseOver": {
                    "doclet": {
                      "description": "Fires when the mouse enters the area close to the point. One\nparameter, `event`, is passed to the function, containing common\nevent information.\n\nReturning `false` cancels the default behavior, which is to show a\ntooltip for the point.",
                      "samples": [
                        {
                          "name": "Show values in the chart's corner on mouse over",
                          "value": "highcharts/plotoptions/series-point-events-mouseover/",
                          "products": ["highcharts"]
                        }
                      ],
                      "type": {
                        "names": ["Highcharts.PointMouseOverCallbackFunction"]
                      },
                      "context": "Highcharts.Point"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.point.events.mouseOver",
                      "name": "mouseOver",
                      "line": 1299,
                      "lineEnd": 1313,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "remove": {
                    "doclet": {
                      "description": "Fires when the point is removed using the `.remove()` method. One\nparameter, `event`, is passed to the function. Returning `false`\ncancels the operation.",
                      "samples": [
                        {
                          "name": "Remove point and confirm",
                          "value": "highcharts/plotoptions/series-point-events-remove/",
                          "products": ["highcharts"]
                        }
                      ],
                      "type": {
                        "names": ["Highcharts.PointRemoveCallbackFunction"]
                      },
                      "since": "1.2.0",
                      "context": "Highcharts.Point"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.point.events.remove",
                      "name": "remove",
                      "line": 1314,
                      "lineEnd": 1326,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "select": {
                    "doclet": {
                      "description": "Fires when the point is selected either programmatically or\nfollowing a click on the point. One parameter, `event`, is passed\nto the function. Returning `false` cancels the operation.",
                      "samples": [
                        {
                          "name": "Report the last selected point",
                          "value": "highcharts/plotoptions/series-point-events-select/",
                          "products": ["highcharts"]
                        },
                        {
                          "name": "Report select and unselect",
                          "value": "maps/plotoptions/series-allowpointselect/",
                          "products": ["highmaps"]
                        }
                      ],
                      "type": {
                        "names": ["Highcharts.PointSelectCallbackFunction"]
                      },
                      "since": "1.2.0",
                      "context": "Highcharts.Point"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.point.events.select",
                      "name": "select",
                      "line": 1327,
                      "lineEnd": 1341,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "unselect": {
                    "doclet": {
                      "description": "Fires when the point is unselected either programmatically or\nfollowing a click on the point. One parameter, `event`, is passed\nto the function.\n Returning `false` cancels the operation.",
                      "samples": [
                        {
                          "name": "Report the last unselected point",
                          "value": "highcharts/plotoptions/series-point-events-unselect/",
                          "products": ["highcharts"]
                        },
                        {
                          "name": "Report select and unselect",
                          "value": "maps/plotoptions/series-allowpointselect/",
                          "products": ["highmaps"]
                        }
                      ],
                      "type": {
                        "names": ["Highcharts.PointUnselectCallbackFunction"]
                      },
                      "since": "1.2.0",
                      "context": "Highcharts.Point"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.point.events.unselect",
                      "name": "unselect",
                      "line": 1342,
                      "lineEnd": 1357,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "update": {
                    "doclet": {
                      "description": "Fires when the point is updated programmatically through the\n`.update()` method. One parameter, `event`, is passed to the\nfunction. The new point options can be accessed through\n`event.options`. Returning `false` cancels the operation.",
                      "samples": [
                        {
                          "name": "Confirm point updating",
                          "value": "highcharts/plotoptions/series-point-events-update/",
                          "products": ["highcharts"]
                        }
                      ],
                      "type": {
                        "names": ["Highcharts.PointUpdateCallbackFunction"]
                      },
                      "since": "1.2.0",
                      "context": "Highcharts.Point"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.point.events.update",
                      "name": "update",
                      "line": 1358,
                      "lineEnd": 1371,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSeriesPointEventsOptions",
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsSeriesPointOptions",
            "extended": 1
          },
          "pointDescriptionFormat": {
            "doclet": {
              "description": "Same as\n[accessibility.point.descriptionFormat](#accessibility.point.descriptionFormat),\nbut for an individual series. Overrides the chart wide configuration.",
              "type": { "names": ["function"] },
              "since": "11.1.0"
            },
            "meta": {
              "fullname": "plotOptions.series.pointDescriptionFormat",
              "name": "pointDescriptionFormat",
              "line": 509,
              "lineEnd": 517,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "pointDescriptionFormatter": {
            "doclet": {
              "description": "Same as\n[accessibility.series.descriptionFormatter](#accessibility.series.descriptionFormatter),\nbut for an individual series. Overrides the chart wide configuration.",
              "type": { "names": ["function"] },
              "since": "5.0.12"
            },
            "meta": {
              "fullname": "plotOptions.series.pointDescriptionFormatter",
              "name": "pointDescriptionFormatter",
              "line": 518,
              "lineEnd": 526,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "pointInterval": {
            "doclet": {
              "description": "If no x values are given for the points in a series, `pointInterval`\ndefines the interval of the x values. For example, if a series\ncontains one value every decade starting from year 0, set\n`pointInterval` to `10`. In true `datetime` axes, the `pointInterval`\nis set in milliseconds.\n\nIt can be also be combined with `pointIntervalUnit` to draw irregular\ntime intervals.\n\nIf combined with `relativeXValue`, an x value can be set on each\npoint, and the `pointInterval` is added x times to the `pointStart`\nsetting.\n\nPlease note that this options applies to the _series data_, not the\ninterval of the axis ticks, which is independent.",
              "samples": [
                {
                  "name": "Datetime X axis",
                  "value": "highcharts/plotoptions/series-pointstart-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Relative x value",
                  "value": "highcharts/plotoptions/series-relativexvalue/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Using pointStart and pointInterval",
                  "value": "stock/plotoptions/pointinterval-pointstart/",
                  "products": ["highstock"]
                },
                {
                  "name": "Relative x value",
                  "value": "stock/plotoptions/relativexvalue/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "1",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "plotOptions.series.pointInterval",
              "name": "pointInterval",
              "line": 527,
              "lineEnd": 557,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "pointIntervalUnit": {
            "doclet": {
              "description": "On datetime series, this allows for setting the\n[pointInterval](#plotOptions.series.pointInterval) to irregular time\nunits, `day`, `month` and `year`. A day is usually the same as 24\nhours, but `pointIntervalUnit` also takes the DST crossover into\nconsideration when dealing with local time. Combine this option with\n`pointInterval` to draw weeks, quarters, 6 months, 10 years etc.\n\nPlease note that this options applies to the _series data_, not the\ninterval of the axis ticks, which is independent.",
              "samples": [
                {
                  "name": "One point a month",
                  "value": "highcharts/plotoptions/series-pointintervalunit/",
                  "products": ["highcharts"]
                },
                {
                  "name": "One point a month",
                  "value": "highcharts/plotoptions/series-pointintervalunit/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["\"day\"", "\"month\"", "\"year\""] },
              "since": "4.1.0",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "plotOptions.series.pointIntervalUnit",
              "name": "pointIntervalUnit",
              "line": 558,
              "lineEnd": 579,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "pointPlacement": {
            "doclet": {
              "description": "Possible values: `\"on\"`, `\"between\"`, `number`.\n\nIn a column chart, when pointPlacement is `\"on\"`, the point will not\ncreate any padding of the X axis. In a polar column chart this means\nthat the first column points directly north. If the pointPlacement is\n`\"between\"`, the columns will be laid out between ticks. This is\nuseful for example for visualising an amount between two points in\ntime or in a certain sector of a polar chart.\n\nSince Highcharts 3.0.2, the point placement can also be numeric,\nwhere 0 is on the axis value, -0.5 is between this value and the\nprevious, and 0.5 is between this value and the next. Unlike the\ntextual options, numeric point placement options won't affect axis\npadding.\n\nNote that pointPlacement needs a [pointRange](#plotOptions.series.pointRange) to work. For column series this is\ncomputed, but for line-type series it needs to be set.\n\nFor the `xrange` series type and gantt charts, if the Y axis is a\ncategory axis, the `pointPlacement` applies to the Y axis rather than\nthe (typically datetime) X axis.\n\nDefaults to `undefined` in cartesian charts, `\"between\"` in polar\ncharts.",
              "see": ["[xAxis.tickmarkPlacement](#xAxis.tickmarkPlacement)"],
              "samples": [
                {
                  "name": "Between in a column chart",
                  "value": "highcharts/plotoptions/series-pointplacement-between/",
                  "products": ["highcharts", "highstock"]
                },
                {
                  "name": "Numeric placement for custom layout",
                  "value": "highcharts/plotoptions/series-pointplacement-numeric/",
                  "products": ["highcharts", "highstock"]
                },
                {
                  "name": "Placement in heatmap",
                  "value": "maps/plotoptions/heatmap-pointplacement/",
                  "products": ["highcharts", "highstock"]
                }
              ],
              "type": { "names": ["string", "number"] },
              "since": "2.3.0",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "plotOptions.series.pointPlacement",
              "name": "pointPlacement",
              "line": 580,
              "lineEnd": 620,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "pointStart": {
            "doclet": {
              "description": "If no x values are given for the points in a series, `pointStart`\ndefines on what value to start. For example, if a series contains one\nyearly value starting from 1945, set `pointStart` to 1945.\n\nThe `pointStart` setting can be a number, or a datetime string that is\nparsed according to the `time.timezone` setting.\n\nIf combined with `relativeXValue`, an x value can be set on each\npoint. The x value from the point options is multiplied by\n`pointInterval` and added to `pointStart` to produce a modified x\nvalue.",
              "samples": [
                {
                  "name": "Linear",
                  "value": "highcharts/plotoptions/series-pointstart-linear/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Datetime",
                  "value": "highcharts/plotoptions/series-pointstart-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Relative x value",
                  "value": "highcharts/plotoptions/series-relativexvalue/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Using pointStart and pointInterval",
                  "value": "stock/plotoptions/pointinterval-pointstart/",
                  "products": ["highstock"]
                },
                {
                  "name": "Relative x value",
                  "value": "stock/plotoptions/relativexvalue/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["number", "string"] },
              "defaultvalue": "0",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "plotOptions.series.pointStart",
              "name": "pointStart",
              "line": 621,
              "lineEnd": 649,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "relativeXValue": {
            "doclet": {
              "description": "When true, X values in the data set are relative to the current\n`pointStart`, `pointInterval` and `pointIntervalUnit` settings. This\nallows compression of the data for datasets with irregular X values.\n\nThe real X values are computed on the formula `f(x) = ax + b`, where\n`a` is the `pointInterval` (optionally with a time unit given by\n`pointIntervalUnit`), and `b` is the `pointStart`.",
              "samples": [
                {
                  "name": "Relative X value",
                  "value": "highcharts/plotoptions/series-relativexvalue/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Relative X value",
                  "value": "stock/plotoptions/relativexvalue/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "false",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.series.relativeXValue",
              "name": "relativeXValue",
              "line": 650,
              "lineEnd": 668,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "selected": {
            "doclet": {
              "description": "Whether to select the series initially. If `showCheckbox` is true,\nthe checkbox next to the series name in the legend will be checked\nfor a selected series.",
              "samples": [
                {
                  "name": "One out of two series selected",
                  "value": "highcharts/plotoptions/series-selected/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "false",
              "since": "1.2.0"
            },
            "meta": {
              "fullname": "plotOptions.series.selected",
              "name": "selected",
              "line": 669,
              "lineEnd": 681,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "shadow": {
            "doclet": {
              "description": "Whether to apply a drop shadow to the graph line. Since 2.3 the\nshadow can be an object configuration containing `color`, `offsetX`,\n`offsetY`, `opacity` and `width`.\n\nNote that in some cases, like stacked columns or other dense layouts, the\nseries may cast shadows on each other. In that case, the\n`chart.seriesGroupShadow` allows applying a common drop shadow to the\nwhole series group.",
              "samples": [
                {
                  "name": "Shadow enabled",
                  "value": "highcharts/plotoptions/series-shadow/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": ["boolean", "Highcharts.ShadowOptionsObject"]
              },
              "defaultvalue": "false"
            },
            "meta": {
              "fullname": "plotOptions.series.shadow",
              "name": "shadow",
              "line": 682,
              "lineEnd": 698,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "showCheckbox": {
            "doclet": {
              "description": "If true, a checkbox is displayed next to the legend item to allow\nselecting the series. The state of the checkbox is determined by\nthe `selected` option.",
              "productdesc": [
                {
                  "value": "Note that if a `colorAxis` is defined, the color axis is represented\nin the legend, not the series.",
                  "products": ["highmaps"]
                }
              ],
              "samples": [
                {
                  "name": "Show select box",
                  "value": "highcharts/plotoptions/series-showcheckbox-true/",
                  "products": ["highcharts"]
                }
              ],
              "since": "1.2.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.series.showCheckbox",
              "name": "showCheckbox",
              "line": 107,
              "lineEnd": 122,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "showInLegend": {
            "doclet": {
              "description": "Whether to display this particular series or series type in the\nlegend. Standalone series are shown in legend by default, and linked\nseries are not. Since v7.2.0 it is possible to show series that use\ncolorAxis by setting this option to `true`.",
              "samples": [
                {
                  "name": "One series in the legend, one hidden",
                  "value": "highcharts/plotoptions/series-showinlegend/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["boolean"] }
            },
            "meta": {
              "fullname": "plotOptions.series.showInLegend",
              "name": "showInLegend",
              "line": 699,
              "lineEnd": 710,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "skipKeyboardNavigation": {
            "doclet": {
              "description": "If set to `true`, the accessibility module will skip past the points\nin this series for keyboard navigation.",
              "type": { "names": ["boolean"] },
              "since": "5.0.12"
            },
            "meta": {
              "fullname": "plotOptions.series.skipKeyboardNavigation",
              "name": "skipKeyboardNavigation",
              "line": 720,
              "lineEnd": 727,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "softThreshold": {
            "doclet": {
              "description": "When this is true, the series will not cause the Y axis to cross\nthe zero plane (or [threshold](#plotOptions.series.threshold) option)\nunless the data actually crosses the plane.\n\nFor example, if `softThreshold` is `false`, a series of 0, 1, 2,\n3 will make the Y axis show negative values according to the\n`minPadding` option. If `softThreshold` is `true`, the Y axis starts\nat 0.",
              "since": "4.1.9",
              "products": ["highcharts", "highstock"],
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.series.softThreshold",
              "name": "softThreshold",
              "line": 1954,
              "lineEnd": 1968,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "sonification": {
            "doclet": {
              "description": "Sonification/audio chart options for a series.",
              "declare": "Highcharts.SeriesSonificationOptions",
              "since": "11.0.0",
              "requires": ["module:modules/sonification"],
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.series.sonification",
              "name": "sonification",
              "line": 949,
              "lineEnd": 956,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {
              "contextTracks": {
                "doclet": {
                  "description": "Context tracks for this series. Context tracks are tracks that are not\ntied to data points.\n\nGiven as an array of instrument tracks, speech tracks, or a mix of both.",
                  "declare": "Highcharts.SeriesSonificationContextTracksOptions",
                  "type": { "names": ["Array.<*>"] },
                  "extends": "sonification.globalContextTracks",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.sonification.contextTracks",
                  "name": "contextTracks",
                  "line": 964,
                  "lineEnd": 974,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {
                  "timeInterval": {},
                  "valueInterval": {},
                  "valueMapFunction": {},
                  "valueProp": {},
                  "mapping": {},
                  "activeWhen": {},
                  "instrument": {},
                  "midiName": {},
                  "pointGrouping": {},
                  "roundToMusicalNotes": {},
                  "showPlayMarker": {},
                  "type": {}
                },
                "flutterClassName": "HighchartsSeriesSonificationContextTracksOptions",
                "extended": 1
              },
              "defaultInstrumentOptions": {
                "doclet": {
                  "description": "Default options for all this series' instrument tracks.",
                  "declare": "Highcharts.SeriesSonificationInstrumentOptions",
                  "extends": "sonification.defaultInstrumentOptions",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.sonification.defaultInstrumentOptions",
                  "name": "defaultInstrumentOptions",
                  "line": 985,
                  "lineEnd": 991,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {
                  "activeWhen": {},
                  "instrument": {},
                  "mapping": {},
                  "midiName": {},
                  "pointGrouping": {},
                  "roundToMusicalNotes": {},
                  "showPlayMarker": {},
                  "type": {}
                },
                "flutterClassName": "HighchartsSeriesSonificationDefaultInstrumentOptions",
                "extended": 1
              },
              "defaultSpeechOptions": {
                "doclet": {
                  "description": "Default options for all this series' speech tracks.",
                  "declare": "Highcharts.SeriesSonificationSpeechOptions",
                  "extends": "sonification.defaultSpeechOptions",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.sonification.defaultSpeechOptions",
                  "name": "defaultSpeechOptions",
                  "line": 992,
                  "lineEnd": 998,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {
                  "language": {},
                  "mapping": {},
                  "pointGrouping": {},
                  "preferredVoice": {},
                  "type": {},
                  "activeWhen": {},
                  "showPlayMarker": {}
                },
                "flutterClassName": "HighchartsSeriesSonificationDefaultSpeechOptions",
                "extended": 1
              },
              "enabled": {
                "doclet": {
                  "description": "Whether or not sonification is enabled for this series.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.sonification.enabled",
                  "name": "enabled",
                  "line": 957,
                  "lineEnd": 963,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "pointGrouping": {
                "doclet": {
                  "description": "Sonification point grouping options for this series.",
                  "declare": "Highcharts.SeriesSonificationPointGroupingOptions",
                  "extends": "sonification.pointGrouping",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.sonification.pointGrouping",
                  "name": "pointGrouping",
                  "line": 999,
                  "lineEnd": 1005,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {
                  "algorithm": {},
                  "enabled": {},
                  "groupTimespan": {},
                  "prop": {}
                },
                "flutterClassName": "HighchartsSeriesSonificationPointGroupingOptions",
                "extended": 1
              },
              "tracks": {
                "doclet": {
                  "description": "Tracks for this series.\n\nGiven as an array of instrument tracks, speech tracks, or a mix of both.",
                  "declare": "Highcharts.SeriesSonificationTracksOptions",
                  "type": { "names": ["Array.<*>"] },
                  "extends": "sonification.globalTracks",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.sonification.tracks",
                  "name": "tracks",
                  "line": 975,
                  "lineEnd": 984,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {
                  "mapping": {},
                  "activeWhen": {},
                  "instrument": {},
                  "midiName": {},
                  "pointGrouping": {},
                  "roundToMusicalNotes": {},
                  "showPlayMarker": {},
                  "type": {}
                },
                "flutterClassName": "HighchartsSeriesSonificationTracksOptions",
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsSeriesSonificationOptions",
            "extended": 1
          },
          "stacking": {
            "doclet": {
              "description": "Whether to stack the values of each series on top of each other.\nPossible values are `undefined` to disable, `\"normal\"` to stack by\nvalue or `\"percent\"`.\n\nWhen stacking is enabled, data must be sorted\nin ascending X order.\n\nSome stacking options are related to specific series types. In the\nstreamgraph series type, the stacking option is set to `\"stream\"`.\nThe second one is `\"overlap\"`, which only applies to waterfall\nseries.",
              "see": ["[yAxis.reversedStacks](#yAxis.reversedStacks)"],
              "samples": [
                {
                  "name": "Line",
                  "value": "highcharts/plotoptions/series-stacking-line/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Column",
                  "value": "highcharts/plotoptions/series-stacking-column/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Bar",
                  "value": "highcharts/plotoptions/series-stacking-bar/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Area",
                  "value": "highcharts/plotoptions/series-stacking-area/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Line",
                  "value": "highcharts/plotoptions/series-stacking-percent-line/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Column",
                  "value": "highcharts/plotoptions/series-stacking-percent-column/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Bar",
                  "value": "highcharts/plotoptions/series-stacking-percent-bar/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Area",
                  "value": "highcharts/plotoptions/series-stacking-percent-area/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Waterfall with normal stacking",
                  "value": "highcharts/plotoptions/series-waterfall-with-normal-stacking",
                  "products": ["highcharts"]
                },
                {
                  "name": "Waterfall with overlap stacking",
                  "value": "highcharts/plotoptions/series-waterfall-with-overlap-stacking",
                  "products": ["highcharts"]
                },
                {
                  "name": "Area",
                  "value": "stock/plotoptions/stacking/",
                  "products": ["highstock"]
                }
              ],
              "type": {
                "names": [
                  "\"normal\"",
                  "\"overlap\"",
                  "\"percent\"",
                  "\"stream\""
                ]
              },
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.series.stacking",
              "name": "stacking",
              "line": 728,
              "lineEnd": 770,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "declare": "Highcharts.SeriesStatesOptionsObject",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.series.states",
              "name": "states",
              "line": 1970,
              "lineEnd": 1974,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
            },
            "children": {
              "hover": {
                "doclet": {
                  "description": "Options for the hovered series. These settings override the\nnormal state options when a series is moused over or touched.",
                  "declare": "Highcharts.SeriesStatesHoverOptionsObject",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "plotOptions.series.states.hover",
                  "name": "hover",
                  "line": 1991,
                  "lineEnd": 1996,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                },
                "children": {
                  "animation": {
                    "doclet": {
                      "description": "Animation setting for hovering the graph in line-type series.",
                      "type": {
                        "names": [
                          "boolean",
                          "Partial.<Highcharts.AnimationOptionsObject>"
                        ]
                      },
                      "since": "5.0.8",
                      "products": ["highcharts", "highstock"]
                    },
                    "meta": {
                      "fullname": "plotOptions.series.states.hover.animation",
                      "name": "animation",
                      "line": 1998,
                      "lineEnd": 2013,
                      "column": 12,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                    },
                    "children": {
                      "duration": {
                        "doclet": {
                          "description": "The duration of the hover animation in milliseconds. By\ndefault the hover state animates quickly in, and slowly\nback to normal.",
                          "internal": true,
                          "since": "5.0.8",
                          "type": { "names": ["number"] },
                          "defaultvalue": 150
                        },
                        "meta": {
                          "fullname": "plotOptions.series.states.hover.animation.duration",
                          "name": "duration",
                          "line": 2022,
                          "lineEnd": 2028,
                          "column": 16,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "default": 150
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "flutterClassName": "HighchartsSeriesStatesHoverAnimationOptions",
                    "extended": 1
                  },
                  "enabled": {
                    "doclet": {
                      "description": "Enable separate styles for the hovered series to visualize\nthat the user hovers either the series itself or the legend.",
                      "samples": [
                        {
                          "name": "Line",
                          "value": "highcharts/plotoptions/series-states-hover-enabled/",
                          "products": ["highcharts"]
                        },
                        {
                          "name": "Column",
                          "value": "highcharts/plotoptions/series-states-hover-enabled-column/",
                          "products": ["highcharts"]
                        },
                        {
                          "name": "Pie",
                          "value": "highcharts/plotoptions/series-states-hover-enabled-pie/",
                          "products": ["highcharts"]
                        }
                      ],
                      "type": { "names": ["boolean"] },
                      "defaultvalue": "true",
                      "since": "1.2.0"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.states.hover.enabled",
                      "name": "enabled",
                      "line": 1998,
                      "lineEnd": 2013,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "halo": {
                    "doclet": {
                      "description": "Options for the halo appearing around the hovered point in\nline-type series as well as outside the hovered slice in pie\ncharts. By default the halo is filled by the current point or\nseries color with an opacity of 0.25\\. The halo can be\ndisabled by setting the `halo` option to `null`.\n\nIn styled mode, the halo is styled with the\n`.highcharts-halo` class, with colors inherited from\n`.highcharts-color-{n}`.",
                      "samples": [
                        {
                          "name": "Halo options",
                          "value": "highcharts/plotoptions/halo/",
                          "products": ["highcharts"]
                        },
                        {
                          "name": "Halo options",
                          "value": "highcharts/plotoptions/halo/",
                          "products": ["highstock"]
                        }
                      ],
                      "declare": "Highcharts.SeriesStatesHoverHaloOptionsObject",
                      "type": { "names": ["null", "*"] },
                      "since": "4.0.0",
                      "products": ["highcharts", "highstock"]
                    },
                    "meta": {
                      "fullname": "plotOptions.series.states.hover.halo",
                      "name": "halo",
                      "line": 2071,
                      "lineEnd": 2091,
                      "column": 12,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                    },
                    "children": {
                      "attributes": {
                        "doclet": {
                          "description": "A collection of SVG attributes to override the appearance\nof the halo, for example `fill`, `stroke` and\n`stroke-width`.",
                          "type": { "names": ["Highcharts.SVGAttributes"] },
                          "since": "4.0.0",
                          "products": ["highcharts", "highstock"]
                        },
                        "meta": {
                          "fullname": "plotOptions.series.states.hover.halo.attributes",
                          "name": "attributes",
                          "line": 2093,
                          "lineEnd": 2102,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "opacity": {
                        "doclet": {
                          "description": "Opacity for the halo unless a specific fill is overridden\nusing the `attributes` setting. Note that Highcharts is\nonly able to apply opacity to colors of hex or rgb(a)\nformats.",
                          "since": "4.0.0",
                          "products": ["highcharts", "highstock"],
                          "type": { "names": ["number"] },
                          "defaultvalue": 0.25
                        },
                        "meta": {
                          "fullname": "plotOptions.series.states.hover.halo.opacity",
                          "name": "opacity",
                          "line": 2113,
                          "lineEnd": 2121,
                          "column": 16,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "default": 0.25
                        },
                        "children": {},
                        "extended": 1
                      },
                      "size": {
                        "doclet": {
                          "description": "The pixel size of the halo. For point markers this is the\nradius of the halo. For pie slices it is the width of the\nhalo outside the slice. For bubbles it defaults to 5 and\nis the width of the halo outside the bubble.",
                          "since": "4.0.0",
                          "products": ["highcharts", "highstock"],
                          "type": { "names": ["number"] },
                          "defaultvalue": 10
                        },
                        "meta": {
                          "fullname": "plotOptions.series.states.hover.halo.size",
                          "name": "size",
                          "line": 2093,
                          "lineEnd": 2102,
                          "column": 16,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "default": 10
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "flutterClassName": "HighchartsSeriesStatesHoverHaloOptions",
                    "extended": 1
                  },
                  "lineWidth": {
                    "doclet": {
                      "description": "Pixel width of the graph line. By default this property is\nundefined, and the `lineWidthPlus` property dictates how much\nto increase the linewidth from normal state.",
                      "samples": [
                        {
                          "name": "5px line on hover",
                          "value": "highcharts/plotoptions/series-states-hover-linewidth/",
                          "products": ["highcharts"]
                        }
                      ],
                      "type": { "names": ["number"] },
                      "products": ["highcharts", "highstock"]
                    },
                    "meta": {
                      "fullname": "plotOptions.series.states.hover.lineWidth",
                      "name": "lineWidth",
                      "line": 2031,
                      "lineEnd": 2042,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "lineWidthPlus": {
                    "doclet": {
                      "description": "The additional line width for the graph of a hovered series.",
                      "samples": [
                        {
                          "name": "5 pixels wider",
                          "value": "highcharts/plotoptions/series-states-hover-linewidthplus/",
                          "products": ["highcharts"]
                        },
                        {
                          "name": "5 pixels wider",
                          "value": "highcharts/plotoptions/series-states-hover-linewidthplus/",
                          "products": ["highstock"]
                        }
                      ],
                      "since": "4.0.3",
                      "products": ["highcharts", "highstock"],
                      "type": { "names": ["number"] },
                      "defaultvalue": 1
                    },
                    "meta": {
                      "fullname": "plotOptions.series.states.hover.lineWidthPlus",
                      "name": "lineWidthPlus",
                      "line": 2031,
                      "lineEnd": 2042,
                      "column": 12,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "default": 1
                    },
                    "children": {},
                    "extended": 1
                  },
                  "marker": {
                    "doclet": {
                      "description": "In Highcharts 1.0, the appearance of all markers belonging\nto the hovered series. For settings on the hover state of the\nindividual point, see\n[marker.states.hover](#plotOptions.series.marker.states.hover).",
                      "deprecated": true,
                      "extends": "plotOptions.series.marker",
                      "exclude": ["states", "symbol"],
                      "products": ["highcharts", "highstock"]
                    },
                    "meta": {
                      "fullname": "plotOptions.series.states.hover.marker",
                      "name": "marker",
                      "line": 2055,
                      "lineEnd": 2066,
                      "column": 12,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                    },
                    "children": {
                      "enabled": {},
                      "enabledThreshold": {},
                      "fillColor": {},
                      "height": {},
                      "lineColor": {},
                      "lineWidth": {},
                      "radius": {},
                      "width": {}
                    },
                    "flutterClassName": "HighchartsSeriesStatesHoverMarkerOptions",
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSeriesStatesHoverOptions",
                "extended": 1
              },
              "inactive": {
                "doclet": {
                  "description": "The opposite state of a hover for series.",
                  "samples": [
                    {
                      "name": "Disabled inactive state",
                      "value": "highcharts/plotoptions/series-states-inactive-disabled"
                    }
                  ],
                  "declare": "Highcharts.SeriesStatesInactiveOptionsObject",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "plotOptions.series.states.inactive",
                  "name": "inactive",
                  "line": 2144,
                  "lineEnd": 2151,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                },
                "children": {
                  "animation": {
                    "doclet": {
                      "description": "Animation when not hovering over the marker.",
                      "type": {
                        "names": [
                          "boolean",
                          "Partial.<Highcharts.AnimationOptionsObject>"
                        ]
                      }
                    },
                    "meta": {
                      "fullname": "plotOptions.series.states.inactive.animation",
                      "name": "animation",
                      "line": 2153,
                      "lineEnd": 2162,
                      "column": 12,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                    },
                    "children": {
                      "duration": {
                        "doclet": {
                          "internal": true,
                          "type": { "names": ["number"] },
                          "defaultvalue": 150
                        },
                        "meta": {
                          "fullname": "plotOptions.series.states.inactive.animation.duration",
                          "name": "duration",
                          "line": 2169,
                          "lineEnd": 2169,
                          "column": 16,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "default": 150
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "flutterClassName": "HighchartsSeriesStatesInactiveAnimationOptions",
                    "extended": 1
                  },
                  "enabled": {
                    "doclet": {
                      "description": "Enable or disable the inactive state for a series",
                      "samples": [
                        {
                          "name": "Disabled inactive state",
                          "value": "highcharts/plotoptions/series-states-inactive-disabled"
                        }
                      ],
                      "type": { "names": ["boolean"] },
                      "defaultvalue": "true"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.states.inactive.enabled",
                      "name": "enabled",
                      "line": 2153,
                      "lineEnd": 2162,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "opacity": {
                    "doclet": {
                      "description": "Opacity of series elements (dataLabels, line, area).",
                      "type": { "names": ["number"] },
                      "defaultvalue": 0.2
                    },
                    "meta": {
                      "fullname": "plotOptions.series.states.inactive.opacity",
                      "name": "opacity",
                      "line": 2172,
                      "lineEnd": 2176,
                      "column": 12,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "default": 0.2
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSeriesStatesInactiveOptions",
                "extended": 1
              },
              "normal": {
                "doclet": {
                  "description": "The normal state of a series, or for point items in column, pie\nand similar series. Currently only used for setting animation\nwhen returning to normal state from hover.",
                  "declare": "Highcharts.SeriesStatesNormalOptionsObject",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "plotOptions.series.states.normal",
                  "name": "normal",
                  "line": 1976,
                  "lineEnd": 1982,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                },
                "children": {
                  "animation": {
                    "doclet": {
                      "description": "Animation when returning to normal state after hovering.",
                      "type": {
                        "names": [
                          "boolean",
                          "Partial.<Highcharts.AnimationOptionsObject>"
                        ]
                      },
                      "productdesc": [
                        {
                          "value": "The animation adds some latency in order to reduce the effect\nof flickering when hovering in and out of for example an\nuneven coastline.",
                          "products": ["highmaps"]
                        }
                      ],
                      "samples": [
                        {
                          "name": "No animation of fill color",
                          "value": "maps/plotoptions/series-states-animation-false/",
                          "products": ["highmaps"]
                        }
                      ],
                      "defaultvalue": true
                    },
                    "meta": {
                      "fullname": "plotOptions.series.states.normal.animation",
                      "name": "animation",
                      "line": 1984,
                      "lineEnd": 1988,
                      "column": 12,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                      "default": true
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSeriesStatesNormalOptions",
                "extended": 1
              },
              "select": {
                "doclet": {
                  "description": "Specific options for point in selected states, after being\nselected by\n[allowPointSelect](#plotOptions.series.allowPointSelect)\nor programmatically.",
                  "samples": [
                    {
                      "name": "Allow point select demo",
                      "value": "maps/plotoptions/series-allowpointselect/"
                    }
                  ],
                  "declare": "Highcharts.SeriesStatesSelectOptionsObject",
                  "extends": "plotOptions.series.states.hover",
                  "exclude": ["brightness"]
                },
                "meta": {
                  "fullname": "plotOptions.series.states.select",
                  "name": "select",
                  "line": 2125,
                  "lineEnd": 2137,
                  "column": 8,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                },
                "children": {
                  "animation": {
                    "doclet": {
                      "type": { "names": ["*"] },
                      "extends": "plotOptions.series.states.hover.animation"
                    },
                    "meta": {
                      "fullname": "plotOptions.series.states.select.animation",
                      "name": "animation",
                      "line": 2139,
                      "lineEnd": 2139,
                      "column": 12,
                      "filename": "code/es-modules/Core/Series/SeriesDefaults.js"
                    },
                    "children": {
                      "duration": {
                        "doclet": {
                          "internal": true,
                          "type": { "names": ["number"] },
                          "defaultvalue": 0
                        },
                        "meta": {
                          "fullname": "plotOptions.series.states.select.animation.duration",
                          "name": "duration",
                          "line": 2140,
                          "lineEnd": 2140,
                          "column": 16,
                          "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                          "default": 0
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "flutterClassName": "HighchartsSeriesStatesSelectAnimationOptions",
                    "extended": 1
                  },
                  "enabled": {},
                  "halo": {},
                  "lineWidth": {},
                  "lineWidthPlus": {},
                  "marker": {}
                },
                "flutterClassName": "HighchartsSeriesStatesSelectOptions",
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsSeriesStatesOptions",
            "extended": 1
          },
          "step": {
            "doclet": {
              "description": "Whether to apply steps to the line. Possible values are `left`,\n`center` and `right`.",
              "samples": [
                {
                  "name": "Different step line options",
                  "value": "highcharts/plotoptions/line-step/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Stepped, stacked area",
                  "value": "highcharts/plotoptions/area-step/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Step line",
                  "value": "stock/plotoptions/line-step/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["\"left\"", "\"center\"", "\"right\""] },
              "since": "1.2.5",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.series.step",
              "name": "step",
              "line": 771,
              "lineEnd": 787,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "stickyTracking": {
            "doclet": {
              "description": "Sticky tracking of mouse events. When true, the `mouseOut` event on a\nseries isn't triggered until the mouse moves over another series, or\nout of the plot area. When false, the `mouseOut` event on a series is\ntriggered when the mouse leaves the area around the series' graph or\nmarkers. This also implies the tooltip when not shared. When\n`stickyTracking` is false and `tooltip.shared` is false, the tooltip\nwill be hidden when moving the mouse between series. Defaults to true\nfor line and area type series, but to false for columns, pies etc.\n\n**Note:** The boost module will force this option because of\ntechnical limitations.",
              "samples": [
                {
                  "name": "True by default",
                  "value": "highcharts/plotoptions/series-stickytracking-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "False",
                  "value": "highcharts/plotoptions/series-stickytracking-false/",
                  "products": ["highcharts"]
                }
              ],
              "defaultByProduct": {
                "highcharts": true,
                "highstock": true,
                "highmaps": false
              },
              "since": "2.0.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.series.stickyTracking",
              "name": "stickyTracking",
              "line": 2180,
              "lineEnd": 2204,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "threshold": {
            "doclet": {
              "description": "The threshold, also called zero level or base level. For line type\nseries this is only used in conjunction with\n[negativeColor](#plotOptions.series.negativeColor).",
              "see": ["[softThreshold](#plotOptions.series.softThreshold)."],
              "type": { "names": ["number", "null"] },
              "defaultvalue": "0",
              "since": "3.0.0",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.series.threshold",
              "name": "threshold",
              "line": 788,
              "lineEnd": 800,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "description": "A configuration object for the tooltip rendering of each single\nseries. Properties are inherited from [tooltip](#tooltip), but only\nthe following properties can be defined on a series level.",
              "declare": "Highcharts.SeriesTooltipOptionsObject",
              "since": "2.3.0",
              "extends": "tooltip",
              "exclude": [
                "animation",
                "backgroundColor",
                "borderColor",
                "borderRadius",
                "borderWidth",
                "className",
                "crosshairs",
                "enabled",
                "formatter",
                "headerShape",
                "hideDelay",
                "outside",
                "padding",
                "positioner",
                "shadow",
                "shape",
                "shared",
                "snap",
                "split",
                "stickOnContact",
                "style",
                "useHTML"
              ]
            },
            "meta": {
              "fullname": "plotOptions.series.tooltip",
              "name": "tooltip",
              "line": 2206,
              "lineEnd": 2220,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "distance": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "headerFormat": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormat": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "flutterClassName": "HighchartsSeriesTooltipOptions",
            "extended": 1
          },
          "turboThreshold": {
            "doclet": {
              "description": "When a series contains a `data` array that is longer than this, the\nSeries class looks for data configurations of plain numbers or arrays of\nnumbers. The first and last valid points are checked. If found, the rest\nof the data is assumed to be the same. This saves expensive data checking\nand indexing in long series, and makes data-heavy charts render faster.\n\nSet it to `0` disable.\n\nNote:\n- In boost mode turbo threshold is forced. Only array of numbers or two\n  dimensional arrays are allowed.\n- In version 11.4.3 and earlier, if object configurations were passed\n  beyond the turbo threshold, a warning was logged in the console and the\n  data series didn't render.",
              "since": "2.2.0",
              "products": ["highcharts", "highstock", "gantt"],
              "type": { "names": ["number"] },
              "defaultvalue": 1000
            },
            "meta": {
              "fullname": "plotOptions.series.turboThreshold",
              "name": "turboThreshold",
              "line": 2206,
              "lineEnd": 2220,
              "column": 4,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "default": 1000
            },
            "children": {},
            "extended": 1
          },
          "visible": {
            "doclet": {
              "description": "Set the initial visibility of the series.",
              "samples": [
                {
                  "name": "Two series, one hidden and one visible",
                  "value": "highcharts/plotoptions/series-visible/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Hidden series",
                  "value": "stock/plotoptions/series-visibility/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "true"
            },
            "meta": {
              "fullname": "plotOptions.series.visible",
              "name": "visible",
              "line": 801,
              "lineEnd": 812,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "zoneAxis": {
            "doclet": {
              "description": "Defines the Axis on which the zones are applied.",
              "see": ["[zones](#plotOptions.series.zones)"],
              "samples": [
                {
                  "name": "Zones on the X-Axis",
                  "value": "highcharts/series/color-zones-zoneaxis-x/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Zones on the X-Axis",
                  "value": "highcharts/series/color-zones-zoneaxis-x/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["string"] },
              "defaultvalue": "y",
              "since": "4.1.0",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.series.zoneAxis",
              "name": "zoneAxis",
              "line": 813,
              "lineEnd": 828,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "zones": {
            "doclet": {
              "description": "An array defining zones within a series. Zones can be applied to the\nX axis, Y axis or Z axis for bubbles, according to the `zoneAxis`\noption. The zone definitions have to be in ascending order regarding\nto the value.\n\nIn styled mode, the color zones are styled with the\n`.highcharts-zone-{n}` class, or custom classed from the `className`\noption\n([view live demo](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/css/color-zones/)).",
              "see": ["[zoneAxis](#plotOptions.series.zoneAxis)"],
              "samples": [
                {
                  "name": "Color zones",
                  "value": "highcharts/series/color-zones-simple/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Color zones",
                  "value": "highcharts/series/color-zones-simple/",
                  "products": ["highstock"]
                }
              ],
              "declare": "Highcharts.SeriesZonesOptionsObject",
              "type": { "names": ["Array.<*>"] },
              "since": "4.1.0",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "plotOptions.series.zones",
              "name": "zones",
              "line": 2243,
              "lineEnd": 2266,
              "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
              "column": 0
            },
            "children": {
              "className": {
                "doclet": {
                  "description": "Styled mode only. A custom class name for the zone.",
                  "samples": [
                    {
                      "name": "Zones styled by class name",
                      "value": "highcharts/css/color-zones/"
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "5.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.series.zones.className",
                  "name": "className",
                  "line": 2267,
                  "lineEnd": 2276,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "color": {
                "doclet": {
                  "description": "Defines the color of the series.",
                  "see": ["[series color](#plotOptions.series.color)"],
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "since": "4.1.0",
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "plotOptions.series.zones.color",
                  "name": "color",
                  "line": 2277,
                  "lineEnd": 2286,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dashStyle": {
                "doclet": {
                  "description": "A name for the dash style to use for the graph.",
                  "see": [
                    "[plotOptions.series.dashStyle](#plotOptions.series.dashStyle)"
                  ],
                  "samples": [
                    {
                      "name": "Dashed line indicates prognosis",
                      "value": "highcharts/series/color-zones-dashstyle-dot/",
                      "products": ["highcharts", "highstock"]
                    }
                  ],
                  "type": { "names": ["Highcharts.DashStyleValue"] },
                  "since": "4.1.0",
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "plotOptions.series.zones.dashStyle",
                  "name": "dashStyle",
                  "line": 2287,
                  "lineEnd": 2299,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "fillColor": {
                "doclet": {
                  "description": "Defines the fill color for the series (in area type series)",
                  "see": ["[fillColor](#plotOptions.area.fillColor)"],
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "since": "4.1.0",
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "plotOptions.series.zones.fillColor",
                  "name": "fillColor",
                  "line": 2300,
                  "lineEnd": 2309,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "value": {
                "doclet": {
                  "description": "The value up to where the zone extends, if undefined the zones\nstretches to the last value in the series.",
                  "type": { "names": ["number"] },
                  "since": "4.1.0",
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "plotOptions.series.zones.value",
                  "name": "value",
                  "line": 2310,
                  "lineEnd": 2318,
                  "filename": "code/es-modules/Core/Series/SeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsSeriesZonesOptions",
            "extended": 1
          }
        },
        "extended": 1
      },
      "solidgauge": {
        "doclet": {
          "description": "A solid gauge is a circular gauge where the value is indicated by a filled\narc, and the color of the arc may variate with the value.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `solidgauge` series are defined in\n   [plotOptions.solidgauge](plotOptions.solidgauge).\n3. Options for one single series are given in\n   [the series instance array](series.solidgauge).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        solidgauge: {\n            // shared options for all solidgauge series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'solidgauge'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.solidgauge.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === solidgauge) {\n    // code specific to the solidgauge series\n}\n```\n            ",
          "samples": [
            { "name": "Solid gauges", "value": "highcharts/demo/gauge-solid/" }
          ],
          "extends": "plotOptions.gauge",
          "exclude": ["dial", "pivot", "wrap"],
          "products": ["highcharts"],
          "requires": ["module:modules/solid-gauge"]
        },
        "meta": {
          "filename": "code/es-modules/Series/SolidGauge/SolidGaugeSeriesDefaults.js",
          "name": "solidgauge",
          "fullname": "plotOptions.solidgauge",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "colorByPoint": {
            "doclet": {
              "description": "Whether to give each point an individual color.",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.solidgauge.colorByPoint",
              "name": "colorByPoint",
              "line": 32,
              "lineEnd": 44,
              "column": 4,
              "filename": "code/es-modules/Series/SolidGauge/SolidGaugeSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.gauge.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.solidgauge.dataLabels",
              "name": "dataLabels",
              "line": 114,
              "lineEnd": 114,
              "column": 4,
              "filename": "code/es-modules/Series/SolidGauge/SolidGaugeSeriesDefaults.js"
            },
            "children": {
              "y": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.solidgauge.dataLabels.y",
                  "name": "y",
                  "line": 115,
                  "lineEnd": 115,
                  "column": 8,
                  "filename": "code/es-modules/Series/SolidGauge/SolidGaugeSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "crop": {},
              "defer": {},
              "enabled": {},
              "verticalAlign": {},
              "zIndex": {},
              "align": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "backgroundColor": {},
              "className": {},
              "color": {},
              "filter": {},
              "format": {},
              "formatter": {},
              "inside": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "style": {},
              "textPath": {},
              "useHTML": {},
              "x": {}
            },
            "extended": 1
          },
          "innerRadius": {
            "doclet": {
              "description": "The inner radius for points in a solid gauge. Can be given only in\npercentage, either as a number or a string like `\"50%\"`.",
              "samples": [
                {
                  "name": "Individual radius and innerRadius",
                  "value": "highcharts/plotoptions/solidgauge-radius/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["string"] },
              "defaultvalue": "\"60%\"",
              "since": "4.1.6",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.solidgauge.innerRadius",
              "name": "innerRadius",
              "line": 32,
              "lineEnd": 44,
              "filename": "code/es-modules/Series/SolidGauge/SolidGaugeSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "linecap": {
            "doclet": {
              "description": "Whether the strokes of the solid gauge should be `round` or `square`.",
              "samples": [
                {
                  "name": "Rounded gauge",
                  "value": "highcharts/demo/gauge-multiple-kpi/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["\"square\"", "\"round\""] },
              "defaultvalue": "round",
              "since": "4.2.2",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.solidgauge.linecap",
              "name": "linecap",
              "line": 45,
              "lineEnd": 57,
              "filename": "code/es-modules/Series/SolidGauge/SolidGaugeSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "overshoot": {
            "doclet": {
              "description": "Allow the gauge to overshoot the end of the perimeter axis by this\nmany degrees. Say if the gauge axis goes from 0 to 60, a value of\n100, or 1000, will show 5 degrees beyond the end of the axis when this\noption is set to 5.",
              "type": { "names": ["number"] },
              "defaultvalue": "0",
              "since": "3.0.10",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.solidgauge.overshoot",
              "name": "overshoot",
              "line": 58,
              "lineEnd": 69,
              "filename": "code/es-modules/Series/SolidGauge/SolidGaugeSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "radius": {
            "doclet": {
              "description": "The outer radius for points in a solid gauge. Can be given only in\npercentage, either as a number or a string like `\"100%\"`.",
              "samples": [
                {
                  "name": "Individual radius and innerRadius",
                  "value": "highcharts/plotoptions/solidgauge-radius/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["string"] },
              "defaultvalue": "\"100%\"",
              "since": "4.1.6",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.solidgauge.radius",
              "name": "radius",
              "line": 70,
              "lineEnd": 82,
              "filename": "code/es-modules/Series/SolidGauge/SolidGaugeSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "rounded": {
            "doclet": {
              "description": "Whether to draw rounded edges on the gauge. This options adds the radius\nof the rounding to the ends of the arc, so it extends past the actual\nvalues. When `borderRadius` is set, it takes precedence over `rounded`. A\n`borderRadius` of 50% behaves like `rounded`, except the shape is not\nextended past its value.",
              "samples": [
                {
                  "name": "Gauge showing multiple KPIs",
                  "value": "highcharts/demo/gauge-multiple-kpi/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "false",
              "since": "5.0.8",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.solidgauge.rounded",
              "name": "rounded",
              "line": 83,
              "lineEnd": 98,
              "filename": "code/es-modules/Series/SolidGauge/SolidGaugeSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "threshold": {
            "doclet": {
              "description": "The threshold or base level for the gauge.",
              "samples": [
                {
                  "name": "Zero threshold with negative and positive values",
                  "value": "highcharts/plotoptions/solidgauge-threshold/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "null"] },
              "since": "5.0.3",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.solidgauge.threshold",
              "name": "threshold",
              "line": 99,
              "lineEnd": 109,
              "filename": "code/es-modules/Series/SolidGauge/SolidGaugeSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "showInLegend": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "stickyTracking": {},
          "visible": {}
        },
        "extended": 1
      },
      "spline": {
        "doclet": {
          "description": "A spline series is a special type of line series, where the segments\nbetween the data points are smoothed.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `spline` series are defined in\n   [plotOptions.spline](plotOptions.spline).\n3. Options for one single series are given in\n   [the series instance array](series.spline).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        spline: {\n            // shared options for all spline series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'spline'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.spline.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === spline) {\n    // code specific to the spline series\n}\n```\n            ",
          "samples": [
            {
              "name": "Spline chart",
              "value": "highcharts/demo/spline-irregular-time/",
              "products": ["highcharts"]
            },
            {
              "name": "Spline chart",
              "value": "stock/demo/spline/",
              "products": ["highstock"]
            }
          ],
          "extends": "plotOptions.series",
          "exclude": ["step", "boostThreshold", "boostBlending"],
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Spline/SplineSeries.js",
          "name": "spline",
          "fullname": "plotOptions.spline",
          "line": 172,
          "lineEnd": 176,
          "column": 0
        },
        "children": {
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linecap": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "streamgraph": {
        "doclet": {
          "description": "A streamgraph is a type of stacked area graph which is displaced around a\ncentral axis, resulting in a flowing, organic shape.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `streamgraph` series are defined in\n   [plotOptions.streamgraph](plotOptions.streamgraph).\n3. Options for one single series are given in\n   [the series instance array](series.streamgraph).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        streamgraph: {\n            // shared options for all streamgraph series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'streamgraph'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.streamgraph.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === streamgraph) {\n    // code specific to the streamgraph series\n}\n```\n            ",
          "samples": [
            {
              "name": "Streamgraph",
              "value": "highcharts/demo/streamgraph/",
              "products": ["highcharts", "highstock"]
            }
          ],
          "extends": "plotOptions.areaspline",
          "since": "6.0.0",
          "products": ["highcharts", "highstock"],
          "requires": ["module:modules/streamgraph"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Streamgraph/StreamgraphSeriesDefaults.js",
          "name": "streamgraph",
          "fullname": "plotOptions.streamgraph",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "color": {
            "doclet": {
              "see": [
                "[fillColor](#plotOptions.streamgraph.fillColor)",
                "[fillOpacity](#plotOptions.streamgraph.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "plotOptions.streamgraph.color",
              "name": "color",
              "line": 32,
              "lineEnd": 37,
              "filename": "code/es-modules/Series/Streamgraph/StreamgraphSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillColor": {
            "doclet": {
              "see": [
                "[color](#plotOptions.streamgraph.color)",
                "[fillOpacity](#plotOptions.streamgraph.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "plotOptions.streamgraph.fillColor",
              "name": "fillColor",
              "line": 38,
              "lineEnd": 43,
              "filename": "code/es-modules/Series/Streamgraph/StreamgraphSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillOpacity": {
            "doclet": {
              "see": [
                "[color](#plotOptions.streamgraph.color)",
                "[fillColor](#plotOptions.streamgraph.fillColor)"
              ],
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "plotOptions.streamgraph.fillOpacity",
              "name": "fillOpacity",
              "line": 32,
              "lineEnd": 37,
              "column": 4,
              "filename": "code/es-modules/Series/Streamgraph/StreamgraphSeriesDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "lineWidth": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0 },
            "meta": {
              "fullname": "plotOptions.streamgraph.lineWidth",
              "name": "lineWidth",
              "line": 51,
              "lineEnd": 51,
              "column": 4,
              "filename": "code/es-modules/Series/Streamgraph/StreamgraphSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "marker": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.areaspline.marker"
            },
            "meta": {
              "fullname": "plotOptions.streamgraph.marker",
              "name": "marker",
              "line": 52,
              "lineEnd": 52,
              "column": 4,
              "filename": "code/es-modules/Series/Streamgraph/StreamgraphSeriesDefaults.js"
            },
            "children": {
              "enabled": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.streamgraph.marker.enabled",
                  "name": "enabled",
                  "line": 53,
                  "lineEnd": 53,
                  "column": 8,
                  "filename": "code/es-modules/Series/Streamgraph/StreamgraphSeriesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "enabledThreshold": {},
              "fillColor": {},
              "height": {},
              "lineColor": {},
              "lineWidth": {},
              "radius": {},
              "states": {},
              "symbol": {},
              "width": {}
            },
            "extended": 1
          },
          "stacking": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "stream"
            },
            "meta": {
              "fullname": "plotOptions.streamgraph.stacking",
              "name": "stacking",
              "line": 55,
              "lineEnd": 55,
              "column": 4,
              "filename": "code/es-modules/Series/Streamgraph/StreamgraphSeriesDefaults.js",
              "default": "stream"
            },
            "children": {},
            "extended": 1
          },
          "legendSymbol": {},
          "lineColor": {},
          "negativeFillColor": {},
          "threshold": {},
          "trackByArea": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "states": {},
          "stickyTracking": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "sunburst": {
        "doclet": {
          "description": "A Sunburst displays hierarchical data, where a level in the hierarchy is\nrepresented by a circle. The center represents the root node of the tree.\nThe visualization bears a resemblance to both treemap and pie charts.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `sunburst` series are defined in\n   [plotOptions.sunburst](plotOptions.sunburst).\n3. Options for one single series are given in\n   [the series instance array](series.sunburst).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        sunburst: {\n            // shared options for all sunburst series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'sunburst'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.sunburst.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === sunburst) {\n    // code specific to the sunburst series\n}\n```\n            ",
          "samples": [
            { "name": "Sunburst chart", "value": "highcharts/demo/sunburst" }
          ],
          "extends": "plotOptions.pie",
          "exclude": [
            "allAreas",
            "clip",
            "colorAxis",
            "colorKey",
            "compare",
            "compareBase",
            "dataGrouping",
            "depth",
            "dragDrop",
            "endAngle",
            "gapSize",
            "gapUnit",
            "ignoreHiddenPoint",
            "innerSize",
            "joinBy",
            "legendType",
            "linecap",
            "minSize",
            "navigatorOptions",
            "pointRange"
          ],
          "products": ["highcharts"],
          "requires": ["module:modules/sunburst"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
          "name": "sunburst",
          "fullname": "plotOptions.sunburst",
          "line": 15,
          "lineEnd": 19,
          "column": 0
        },
        "children": {
          "allowDrillToNode": {
            "doclet": {
              "description": "When enabled the user can click on a point which is a parent and\nzoom in on its children. Deprecated and replaced by\n[allowTraversingTree](#plotOptions.sunburst.allowTraversingTree).",
              "deprecated": true,
              "type": { "names": ["boolean"] },
              "defaultvalue": "false",
              "since": "6.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.sunburst.allowDrillToNode",
              "name": "allowDrillToNode",
              "line": 132,
              "lineEnd": 143,
              "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "allowTraversingTree": {
            "doclet": {
              "description": "When enabled the user can click on a point which is a parent and\nzoom in on its children.",
              "type": { "names": ["boolean"] },
              "defaultvalue": "false",
              "since": "7.0.3",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.sunburst.allowTraversingTree",
              "name": "allowTraversingTree",
              "line": 144,
              "lineEnd": 153,
              "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "breadcrumbs": {
            "doclet": {
              "description": "Options for the breadcrumbs, the navigation at the top leading the\nway up through the traversed levels.",
              "since": "10.0.0",
              "products": ["highcharts"],
              "extends": "navigation.breadcrumbs"
            },
            "meta": {
              "fullname": "plotOptions.sunburst.breadcrumbs",
              "name": "breadcrumbs",
              "line": 40,
              "lineEnd": 48,
              "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "buttonSpacing": {},
              "buttonTheme": {},
              "events": {},
              "floating": {},
              "format": {},
              "formatter": {},
              "position": {},
              "relativeTo": {},
              "rtl": {},
              "separator": {},
              "showFullPath": {},
              "style": {},
              "useHTML": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "center": {
            "doclet": {
              "description": "The center of the sunburst chart relative to the plot area. Can be\npercentages or pixel values.",
              "samples": [
                {
                  "name": "Centered at 100, 100",
                  "value": "highcharts/plotoptions/pie-center/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Array.<(number|string)>"] },
              "defaultvalue": "[\"50%\", \"50%\"]",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.sunburst.center",
              "name": "center",
              "line": 40,
              "lineEnd": 48,
              "column": 4,
              "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "clip": {
            "doclet": {
              "products": ["highcharts"],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.sunburst.clip",
              "name": "clip",
              "line": 168,
              "lineEnd": 172,
              "column": 4,
              "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "colorByPoint": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.sunburst.colorByPoint",
              "name": "colorByPoint",
              "line": 174,
              "lineEnd": 174,
              "column": 4,
              "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "declare": "Highcharts.SeriesSunburstDataLabelsOptionsObject",
              "type": { "names": ["*"] },
              "extends": "plotOptions.pie.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.sunburst.dataLabels",
              "name": "dataLabels",
              "line": 183,
              "lineEnd": 187,
              "column": 4,
              "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js"
            },
            "children": {
              "allowOverlap": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.sunburst.dataLabels.allowOverlap",
                  "name": "allowOverlap",
                  "line": 189,
                  "lineEnd": 189,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "defer": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.sunburst.dataLabels.defer",
                  "name": "defer",
                  "line": 190,
                  "lineEnd": 190,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "rotationMode": {
                "doclet": {
                  "description": "Decides how the data label will be rotated relative to the\nperimeter of the sunburst. Valid values are `circular`, `auto`,\n`parallel` and `perpendicular`. When `circular`, the best fit\nwill be computed for the point, so that the label is curved\naround the center when there is room for it, otherwise\nperpendicular. The legacy `auto` option works similar to\n`circular`, but instead of curving the labels they are tangent to\nthe perimeter.\n\nThe `rotation` option takes precedence over `rotationMode`.",
                  "type": {
                    "names": [
                      "\"auto\"",
                      "\"perpendicular\"",
                      "\"parallel\"",
                      "\"circular\""
                    ]
                  },
                  "samples": [
                    {
                      "name": "Circular rotation mode",
                      "value": "highcharts/plotoptions/sunburst-datalabels-rotationmode-circular/",
                      "products": ["highcharts"]
                    }
                  ],
                  "since": "6.0.0",
                  "defaultvalue": "circular"
                },
                "meta": {
                  "fullname": "plotOptions.sunburst.dataLabels.rotationMode",
                  "name": "rotationMode",
                  "line": 191,
                  "lineEnd": 209,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "default": "circular"
                },
                "children": {},
                "extended": 1
              },
              "style": {
                "doclet": { "type": { "names": ["*"] } },
                "meta": {
                  "fullname": "plotOptions.sunburst.dataLabels.style",
                  "name": "style",
                  "line": 211,
                  "lineEnd": 211,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js"
                },
                "children": {
                  "textOverflow": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["string"] },
                      "defaultvalue": "ellipsis"
                    },
                    "meta": {
                      "fullname": "plotOptions.sunburst.dataLabels.style.textOverflow",
                      "name": "textOverflow",
                      "line": 212,
                      "lineEnd": 212,
                      "column": 12,
                      "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                      "default": "ellipsis"
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "alignTo": {},
              "connectorColor": {},
              "connectorPadding": {},
              "connectorShape": {},
              "connectorWidth": {},
              "crookDistance": {},
              "distance": {},
              "enabled": {},
              "format": {},
              "formatter": {},
              "softConnector": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "crop": {},
              "filter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "textPath": {},
              "useHTML": {},
              "verticalAlign": {},
              "x": {},
              "y": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "levelIsConstant": {
            "doclet": {
              "description": "Used together with the levels and `allowDrillToNode` options. When\nset to false the first level visible when drilling is considered\nto be level one. Otherwise the level will be the same as the tree\nstructure.",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.sunburst.levelIsConstant",
              "name": "levelIsConstant",
              "line": 224,
              "lineEnd": 231,
              "column": 4,
              "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "levelSize": {
            "doclet": {
              "description": "Determines the width of the ring per level.",
              "samples": [
                {
                  "name": "Sunburst with various sizes per level",
                  "value": "highcharts/plotoptions/sunburst-levelsize/",
                  "products": ["highcharts"]
                }
              ],
              "since": "6.0.5",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.sunburst.levelSize",
              "name": "levelSize",
              "line": 233,
              "lineEnd": 242,
              "column": 4,
              "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js"
            },
            "children": {
              "unit": {
                "doclet": {
                  "description": "How to interpret `levelSize.value`.\n\n- `percentage` gives a width relative to result of outer radius\n  minus inner radius.\n\n- `pixels` gives the ring a fixed width in pixels.\n\n- `weight` takes the remaining width after percentage and pixels,\n  and distributes it across all \"weighted\" levels. The value\n  relative to the sum of all weights determines the width.",
                  "samples": [
                    {
                      "name": "Sunburst with various sizes per level",
                      "value": "highcharts/plotoptions/sunburst-levelsize/",
                      "products": ["highcharts"]
                    }
                  ],
                  "values": "[\"percentage\", \"pixels\", \"weight\"]",
                  "since": "6.0.5",
                  "type": { "names": ["string"] },
                  "defaultvalue": "weight"
                },
                "meta": {
                  "fullname": "plotOptions.sunburst.levelSize.unit",
                  "name": "unit",
                  "line": 252,
                  "lineEnd": 268,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "default": "weight"
                },
                "children": {},
                "extended": 1
              },
              "value": {
                "doclet": {
                  "description": "The value used for calculating the width of the ring. Its' affect\nis determined by `levelSize.unit`.",
                  "samples": [
                    {
                      "name": "Sunburst with various sizes per level",
                      "value": "highcharts/plotoptions/sunburst-levelsize/",
                      "products": ["highcharts"]
                    }
                  ],
                  "since": "6.0.5",
                  "type": { "names": ["number"] },
                  "defaultvalue": 1
                },
                "meta": {
                  "fullname": "plotOptions.sunburst.levelSize.value",
                  "name": "value",
                  "line": 244,
                  "lineEnd": 250,
                  "column": 8,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "default": 1
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "levels": {
            "doclet": {
              "description": "Set options on specific levels. Takes precedence over series options,\nbut not point options.",
              "samples": [
                {
                  "name": "Sunburst chart",
                  "value": "highcharts/demo/sunburst"
                }
              ],
              "type": { "names": ["Array.<*>"] }
            },
            "meta": {
              "fullname": "plotOptions.sunburst.levels",
              "name": "levels",
              "line": 49,
              "lineEnd": 58,
              "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "borderColor": {
                "doclet": {
                  "description": "Can set a `borderColor` on all points which lies on the same level.",
                  "type": { "names": ["Highcharts.ColorString"] }
                },
                "meta": {
                  "fullname": "plotOptions.sunburst.levels.borderColor",
                  "name": "borderColor",
                  "line": 59,
                  "lineEnd": 64,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "borderDashStyle": {
                "doclet": {
                  "description": "Can set a `borderDashStyle` on all points which lies on the same\nlevel.",
                  "type": { "names": ["Highcharts.DashStyleValue"] }
                },
                "meta": {
                  "fullname": "plotOptions.sunburst.levels.borderDashStyle",
                  "name": "borderDashStyle",
                  "line": 71,
                  "lineEnd": 77,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "borderWidth": {
                "doclet": {
                  "description": "Can set a `borderWidth` on all points which lies on the same level.",
                  "type": { "names": ["number"] }
                },
                "meta": {
                  "fullname": "plotOptions.sunburst.levels.borderWidth",
                  "name": "borderWidth",
                  "line": 65,
                  "lineEnd": 70,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "color": {
                "doclet": {
                  "description": "Can set a `color` on all points which lies on the same level.",
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  }
                },
                "meta": {
                  "fullname": "plotOptions.sunburst.levels.color",
                  "name": "color",
                  "line": 78,
                  "lineEnd": 83,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "colorByPoint": {
                "doclet": {
                  "description": "Determines whether the chart should receive one color per point based\non this level.",
                  "type": { "names": ["boolean"] }
                },
                "meta": {
                  "fullname": "plotOptions.sunburst.levels.colorByPoint",
                  "name": "colorByPoint",
                  "line": 84,
                  "lineEnd": 90,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "colorVariation": {
                "doclet": {
                  "description": "Can set a `colorVariation` on all points which lies on the same\nlevel.",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "plotOptions.sunburst.levels.colorVariation",
                  "name": "colorVariation",
                  "line": 91,
                  "lineEnd": 96,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "key": {
                    "doclet": {
                      "description": "The key of a color variation. Currently supports `brightness` only.",
                      "type": { "names": ["string"] }
                    },
                    "meta": {
                      "fullname": "plotOptions.sunburst.levels.colorVariation.key",
                      "name": "key",
                      "line": 97,
                      "lineEnd": 102,
                      "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "to": {
                    "doclet": {
                      "description": "The ending value of a color variation. The last sibling will receive\nthis value.",
                      "type": { "names": ["number"] }
                    },
                    "meta": {
                      "fullname": "plotOptions.sunburst.levels.colorVariation.to",
                      "name": "to",
                      "line": 103,
                      "lineEnd": 109,
                      "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "dataLabels": {
                "doclet": {
                  "description": "Can set `dataLabels` on all points which lies on the same level.",
                  "extends": "plotOptions.sunburst.dataLabels"
                },
                "meta": {
                  "fullname": "plotOptions.sunburst.levels.dataLabels",
                  "name": "dataLabels",
                  "line": 110,
                  "lineEnd": 115,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "allowOverlap": {},
                  "defer": {},
                  "rotationMode": {},
                  "style": {},
                  "alignTo": {},
                  "connectorColor": {},
                  "connectorPadding": {},
                  "connectorShape": {},
                  "connectorWidth": {},
                  "crookDistance": {},
                  "distance": {},
                  "enabled": {},
                  "format": {},
                  "formatter": {},
                  "softConnector": {},
                  "animation": {},
                  "backgroundColor": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "crop": {},
                  "filter": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "textPath": {},
                  "useHTML": {},
                  "verticalAlign": {},
                  "x": {},
                  "y": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "level": {
                "doclet": {
                  "description": "Decides which level takes effect from the options set in the levels\nobject.",
                  "samples": [
                    {
                      "name": "Sunburst chart",
                      "value": "highcharts/demo/sunburst"
                    }
                  ],
                  "type": { "names": ["number"] }
                },
                "meta": {
                  "fullname": "plotOptions.sunburst.levels.level",
                  "name": "level",
                  "line": 116,
                  "lineEnd": 125,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "levelSize": {
                "doclet": {
                  "description": "Can set a `levelSize` on all points which lies on the same level.",
                  "type": { "names": ["Object"] }
                },
                "meta": {
                  "fullname": "plotOptions.sunburst.levels.levelSize",
                  "name": "levelSize",
                  "line": 126,
                  "lineEnd": 131,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "rootId": {
            "doclet": {
              "description": "Which point to use as a root in the visualization.",
              "type": { "names": ["string"] },
              "defaultvalue": "undefined"
            },
            "meta": {
              "fullname": "plotOptions.sunburst.rootId",
              "name": "rootId",
              "line": 216,
              "lineEnd": 222,
              "column": 4,
              "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "slicedOffset": {
            "doclet": {
              "description": "If a point is sliced, moved out from the center, how many pixels\nshould it be moved?.",
              "samples": [
                {
                  "name": "Sliced sunburst",
                  "value": "highcharts/plotoptions/sunburst-sliced"
                }
              ],
              "since": "6.0.4",
              "type": { "names": ["number"] },
              "defaultvalue": 10
            },
            "meta": {
              "fullname": "plotOptions.sunburst.slicedOffset",
              "name": "slicedOffset",
              "line": 271,
              "lineEnd": 280,
              "column": 4,
              "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
              "default": 10
            },
            "children": {},
            "extended": 1
          },
          "traverseUpButton": {
            "doclet": {
              "description": "Options for the button appearing when traversing down in a sunburst.\nSince v9.3.3 the `traverseUpButton` is replaced by `breadcrumbs`.",
              "extends": "plotOptions.treemap.traverseUpButton",
              "since": "6.0.0",
              "deprecated": true
            },
            "meta": {
              "fullname": "plotOptions.sunburst.traverseUpButton",
              "name": "traverseUpButton",
              "line": 271,
              "lineEnd": 280,
              "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
              "column": 0
            },
            "children": { "position": {} },
            "extended": 1
          },
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "color": {},
          "colors": {},
          "events": {},
          "fillColor": {},
          "inactiveOtherPoints": {},
          "point": {},
          "showInLegend": {},
          "size": {},
          "startAngle": {},
          "states": {},
          "stickyTracking": {},
          "thickness": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "includeInDataExport": {},
          "keys": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "onPoint": {},
          "opacity": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "visible": {}
        },
        "extended": 1
      },
      "tilemap": {
        "doclet": {
          "description": "A tilemap series is a type of heatmap where the tile shapes are\nconfigurable.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `tilemap` series are defined in\n   [plotOptions.tilemap](plotOptions.tilemap).\n3. Options for one single series are given in\n   [the series instance array](series.tilemap).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        tilemap: {\n            // shared options for all tilemap series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'tilemap'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.tilemap.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === tilemap) {\n    // code specific to the tilemap series\n}\n```\n            ",
          "samples": [
            {
              "name": "Honeycomb tilemap, USA",
              "value": "highcharts/demo/honeycomb-usa/"
            },
            {
              "name": "Honeycomb tilemap, Brazil",
              "value": "maps/plotoptions/honeycomb-brazil/"
            },
            {
              "name": "Honeycomb tilemap, China",
              "value": "maps/plotoptions/honeycomb-china/"
            },
            {
              "name": "Honeycomb tilemap, Europe",
              "value": "maps/plotoptions/honeycomb-europe/"
            },
            {
              "name": "Circlemap tilemap, Africa",
              "value": "maps/demo/circlemap-africa/"
            },
            { "name": "Diamondmap tilemap", "value": "maps/demo/diamondmap" }
          ],
          "extends": "plotOptions.heatmap",
          "since": "6.0.0",
          "exclude": [
            "jitter",
            "joinBy",
            "shadow",
            "allAreas",
            "mapData",
            "marker",
            "data",
            "dataSorting",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts", "highmaps"],
          "requires": ["module:modules/tilemap"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js",
          "name": "tilemap",
          "fullname": "plotOptions.tilemap",
          "line": 14,
          "lineEnd": 18,
          "column": 0
        },
        "children": {
          "colsize": {
            "doclet": {
              "description": "The column size - how many X axis units each column in the tilemap\nshould span. Works as in [Heatmaps](#plotOptions.heatmap.colsize).",
              "samples": [
                {
                  "name": "One day",
                  "value": "maps/demo/heatmap/",
                  "products": ["highcharts"]
                },
                {
                  "name": "One day",
                  "value": "maps/demo/heatmap/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "1",
              "products": ["highcharts", "highmaps"],
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "plotOptions.tilemap.colsize",
              "name": "colsize",
              "line": 67,
              "lineEnd": 80,
              "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "marker": {
            "doclet": { "type": { "names": ["*"] }, "defaultvalue": null },
            "meta": {
              "fullname": "plotOptions.tilemap.marker",
              "name": "marker",
              "line": 45,
              "lineEnd": 45,
              "column": 4,
              "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js",
              "default": null
            },
            "children": {},
            "extended": 1
          },
          "pointPadding": {
            "doclet": {
              "description": "The padding between points in the tilemap.",
              "samples": [
                {
                  "name": "Point padding on tiles",
                  "value": "maps/plotoptions/tilemap-pointpadding"
                }
              ],
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 2
            },
            "meta": {
              "fullname": "plotOptions.tilemap.pointPadding",
              "name": "pointPadding",
              "line": 60,
              "lineEnd": 65,
              "column": 4,
              "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js",
              "default": 2
            },
            "children": {},
            "extended": 1
          },
          "rowsize": {
            "doclet": {
              "description": "The row size - how many Y axis units each tilemap row should span.\nAnalogous to [colsize](#plotOptions.tilemap.colsize).",
              "samples": [
                {
                  "name": "1 by default",
                  "value": "maps/demo/heatmap/",
                  "products": ["highcharts"]
                },
                {
                  "name": "1 by default",
                  "value": "maps/demo/heatmap/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "1",
              "products": ["highcharts", "highmaps"],
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "plotOptions.tilemap.rowsize",
              "name": "rowsize",
              "line": 81,
              "lineEnd": 94,
              "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.heatmap.states"
            },
            "meta": {
              "fullname": "plotOptions.tilemap.states",
              "name": "states",
              "line": 48,
              "lineEnd": 48,
              "column": 4,
              "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js"
            },
            "children": {
              "hover": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.heatmap.states.hover"
                },
                "meta": {
                  "fullname": "plotOptions.tilemap.states.hover",
                  "name": "hover",
                  "line": 49,
                  "lineEnd": 49,
                  "column": 8,
                  "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js"
                },
                "children": {
                  "halo": {
                    "doclet": {
                      "type": { "names": ["*"] },
                      "extends": "plotOptions.heatmap.states.hover.halo"
                    },
                    "meta": {
                      "fullname": "plotOptions.tilemap.states.hover.halo",
                      "name": "halo",
                      "line": 50,
                      "lineEnd": 50,
                      "column": 12,
                      "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js"
                    },
                    "children": {
                      "attributes": {
                        "doclet": { "type": { "names": ["*"] } },
                        "meta": {
                          "fullname": "plotOptions.tilemap.states.hover.halo.attributes",
                          "name": "attributes",
                          "line": 54,
                          "lineEnd": 54,
                          "column": 16,
                          "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js"
                        },
                        "children": {
                          "zIndex": {
                            "doclet": {
                              "type": { "names": ["number"] },
                              "defaultvalue": 3
                            },
                            "meta": {
                              "fullname": "plotOptions.tilemap.states.hover.halo.attributes.zIndex",
                              "name": "zIndex",
                              "line": 55,
                              "lineEnd": 55,
                              "column": 20,
                              "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js",
                              "default": 3
                            },
                            "children": {},
                            "extended": 1
                          }
                        },
                        "extended": 1
                      },
                      "enabled": {
                        "doclet": {
                          "type": { "names": ["boolean"] },
                          "defaultvalue": true
                        },
                        "meta": {
                          "fullname": "plotOptions.tilemap.states.hover.halo.enabled",
                          "name": "enabled",
                          "line": 51,
                          "lineEnd": 51,
                          "column": 16,
                          "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js",
                          "default": true
                        },
                        "children": {},
                        "extended": 1
                      },
                      "opacity": {
                        "doclet": {
                          "type": { "names": ["number"] },
                          "defaultvalue": 0.5
                        },
                        "meta": {
                          "fullname": "plotOptions.tilemap.states.hover.halo.opacity",
                          "name": "opacity",
                          "line": 53,
                          "lineEnd": 53,
                          "column": 16,
                          "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js",
                          "default": 0.5
                        },
                        "children": {},
                        "extended": 1
                      },
                      "size": {
                        "doclet": {
                          "type": { "names": ["number"] },
                          "defaultvalue": 2
                        },
                        "meta": {
                          "fullname": "plotOptions.tilemap.states.hover.halo.size",
                          "name": "size",
                          "line": 52,
                          "lineEnd": 52,
                          "column": 16,
                          "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js",
                          "default": 2
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "extended": 1
                  },
                  "brightness": {},
                  "animation": {},
                  "enabled": {},
                  "lineWidth": {},
                  "lineWidthPlus": {},
                  "marker": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {},
              "select": {}
            },
            "extended": 1
          },
          "tileShape": {
            "doclet": {
              "description": "The shape of the tiles in the tilemap. Possible values are `hexagon`,\n`circle`, `diamond`, and `square`.",
              "samples": [
                {
                  "name": "Circular tile shapes",
                  "value": "maps/demo/circlemap-africa"
                },
                {
                  "name": "Diamond tile shapes",
                  "value": "maps/demo/diamondmap"
                }
              ],
              "type": { "names": ["Highcharts.TilemapShapeValue"] },
              "since": "6.0.0",
              "defaultvalue": "hexagon"
            },
            "meta": {
              "fullname": "plotOptions.tilemap.tileShape",
              "name": "tileShape",
              "line": 67,
              "lineEnd": 80,
              "column": 4,
              "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js",
              "default": "hexagon"
            },
            "children": {},
            "extended": 1
          },
          "animation": {},
          "borderRadius": {},
          "borderWidth": {},
          "clip": {},
          "color": {},
          "colorKey": {},
          "dataLabels": {},
          "interpolation": {},
          "legendSymbol": {},
          "nullColor": {},
          "tooltip": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "className": {},
          "colorAxis": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "timeline": {
        "doclet": {
          "description": "The timeline series presents given events along a drawn line.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `timeline` series are defined in\n   [plotOptions.timeline](plotOptions.timeline).\n3. Options for one single series are given in\n   [the series instance array](series.timeline).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        timeline: {\n            // shared options for all timeline series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'timeline'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.timeline.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === timeline) {\n    // code specific to the timeline series\n}\n```\n            ",
          "samples": [
            {
              "name": "Timeline series",
              "value": "highcharts/series-timeline/alternate-labels"
            },
            {
              "name": "Inverted timeline",
              "value": "highcharts/series-timeline/inverted"
            },
            {
              "name": "With true datetime axis",
              "value": "highcharts/series-timeline/datetime-axis"
            }
          ],
          "extends": "plotOptions.line",
          "exclude": [
            "animationLimit",
            "boostThreshold",
            "connectEnds",
            "connectNulls",
            "cropThreshold",
            "dashStyle",
            "findNearestPointBy",
            "getExtremesFromAll",
            "negativeColor",
            "pointInterval",
            "pointIntervalUnit",
            "pointPlacement",
            "pointStart",
            "softThreshold",
            "stacking",
            "step",
            "threshold",
            "turboThreshold",
            "zoneAxis",
            "zones",
            "dataSorting",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "since": "7.0.0",
          "requires": ["module:modules/timeline"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
          "name": "timeline",
          "fullname": "plotOptions.timeline",
          "line": 15,
          "lineEnd": 19,
          "column": 0
        },
        "children": {
          "colorByPoint": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.timeline.colorByPoint",
              "name": "colorByPoint",
              "line": 43,
              "lineEnd": 43,
              "column": 4,
              "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "colorKey": {
            "doclet": { "type": { "names": ["string"] }, "defaultvalue": "x" },
            "meta": {
              "fullname": "plotOptions.timeline.colorKey",
              "name": "colorKey",
              "line": 177,
              "lineEnd": 177,
              "column": 4,
              "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
              "default": "x"
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "declare": "Highcharts.TimelineDataLabelsOptionsObject",
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.timeline.dataLabels",
              "name": "dataLabels",
              "line": 64,
              "lineEnd": 66,
              "column": 4,
              "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js"
            },
            "children": {
              "allowOverlap": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.timeline.dataLabels.allowOverlap",
                  "name": "allowOverlap",
                  "line": 69,
                  "lineEnd": 69,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "alternate": {
                "doclet": {
                  "description": "Whether to position data labels alternately. For example, if\n[distance](#plotOptions.timeline.dataLabels.distance)\nis set equal to `100`, then data labels will be positioned\nalternately (on both sides of the point) at a distance of 100px.",
                  "samples": [
                    {
                      "name": "Alternate disabled",
                      "value": "highcharts/series-timeline/alternate-disabled",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.timeline.dataLabels.alternate",
                  "name": "alternate",
                  "line": 70,
                  "lineEnd": 78,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "backgroundColor": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "#ffffff"
                },
                "meta": {
                  "fullname": "plotOptions.timeline.dataLabels.backgroundColor",
                  "name": "backgroundColor",
                  "line": 80,
                  "lineEnd": 80,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": "#ffffff"
                },
                "children": {},
                "extended": 1
              },
              "borderColor": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "#999999"
                },
                "meta": {
                  "fullname": "plotOptions.timeline.dataLabels.borderColor",
                  "name": "borderColor",
                  "line": 82,
                  "lineEnd": 82,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": "#999999"
                },
                "children": {},
                "extended": 1
              },
              "borderRadius": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 3
                },
                "meta": {
                  "fullname": "plotOptions.timeline.dataLabels.borderRadius",
                  "name": "borderRadius",
                  "line": 83,
                  "lineEnd": 83,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": 3
                },
                "children": {},
                "extended": 1
              },
              "borderWidth": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 1
                },
                "meta": {
                  "fullname": "plotOptions.timeline.dataLabels.borderWidth",
                  "name": "borderWidth",
                  "line": 81,
                  "lineEnd": 81,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": 1
                },
                "children": {},
                "extended": 1
              },
              "color": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "#333333"
                },
                "meta": {
                  "fullname": "plotOptions.timeline.dataLabels.color",
                  "name": "color",
                  "line": 84,
                  "lineEnd": 84,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": "#333333"
                },
                "children": {},
                "extended": 1
              },
              "connectorColor": {
                "doclet": {
                  "description": "The color of the line connecting the data label to the point.\nThe default color is the same as the point's color.\n\nIn styled mode, the connector stroke is given in the\n`.highcharts-data-label-connector` class.",
                  "samples": [
                    {
                      "name": "Custom connector width and color",
                      "value": "highcharts/series-timeline/connector-styles",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  }
                },
                "meta": {
                  "fullname": "plotOptions.timeline.dataLabels.connectorColor",
                  "name": "connectorColor",
                  "line": 85,
                  "lineEnd": 97,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "connectorWidth": {
                "doclet": {
                  "description": "The width of the line connecting the data label to the point.\n\nIn styled mode, the connector stroke width is given in the\n`.highcharts-data-label-connector` class.",
                  "samples": [
                    {
                      "name": "Custom connector width and color",
                      "value": "highcharts/series-timeline/connector-styles",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": 1
                },
                "meta": {
                  "fullname": "plotOptions.timeline.dataLabels.connectorWidth",
                  "name": "connectorWidth",
                  "line": 85,
                  "lineEnd": 97,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": 1
                },
                "children": {},
                "extended": 1
              },
              "distance": {
                "doclet": {
                  "description": "A pixel value defining the distance between the data label and\nthe point. Negative numbers puts the label on top of the point in a\nnon-inverted chart. Defaults to 100 for horizontal and 20 for\nvertical timeline (`chart.inverted: true`).",
                  "type": { "names": ["string"] },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.timeline.dataLabels.distance",
                  "name": "distance",
                  "line": 108,
                  "lineEnd": 113,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "enabled": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.timeline.dataLabels.enabled",
                  "name": "enabled",
                  "line": 68,
                  "lineEnd": 68,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "formatter": {
                "doclet": { "defaultByProduct": {} },
                "meta": {
                  "fullname": "plotOptions.timeline.dataLabels.formatter",
                  "name": "formatter",
                  "line": 115,
                  "lineEnd": 115,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js"
                },
                "children": {},
                "extended": 1
              },
              "shadow": {
                "doclet": {
                  "description": "Shadow options for the data label.",
                  "type": { "names": ["boolean", "Highcharts.CSSObject"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.timeline.dataLabels.shadow",
                  "name": "shadow",
                  "line": 157,
                  "lineEnd": 161,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "style": {
                "doclet": { "type": { "names": ["*"] } },
                "meta": {
                  "fullname": "plotOptions.timeline.dataLabels.style",
                  "name": "style",
                  "line": 147,
                  "lineEnd": 147,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js"
                },
                "children": {
                  "fontSize": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["number"] },
                      "defaultvalue": null
                    },
                    "meta": {
                      "fullname": "plotOptions.timeline.dataLabels.style.fontSize",
                      "name": "fontSize",
                      "line": 152,
                      "lineEnd": 152,
                      "column": 12,
                      "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                      "default": "0.8em"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "fontWeight": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["string"] },
                      "defaultvalue": "normal"
                    },
                    "meta": {
                      "fullname": "plotOptions.timeline.dataLabels.style.fontWeight",
                      "name": "fontWeight",
                      "line": 150,
                      "lineEnd": 150,
                      "column": 12,
                      "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                      "default": "normal"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "textAlign": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["string"] },
                      "defaultvalue": "left"
                    },
                    "meta": {
                      "fullname": "plotOptions.timeline.dataLabels.style.textAlign",
                      "name": "textAlign",
                      "line": 154,
                      "lineEnd": 154,
                      "column": 12,
                      "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                      "default": "left"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "textOutline": {
                    "doclet": {
                      "internal": true,
                      "type": { "names": ["string"] },
                      "defaultvalue": "none"
                    },
                    "meta": {
                      "fullname": "plotOptions.timeline.dataLabels.style.textOutline",
                      "name": "textOutline",
                      "line": 148,
                      "lineEnd": 148,
                      "column": 12,
                      "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                      "default": "none"
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "width": {
                "doclet": { "type": { "names": ["number"] } },
                "meta": {
                  "fullname": "plotOptions.timeline.dataLabels.width",
                  "name": "width",
                  "line": 163,
                  "lineEnd": 166,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "align": {},
              "alignTo": {},
              "animation": {},
              "className": {},
              "crop": {},
              "defer": {},
              "filter": {},
              "format": {},
              "inside": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shape": {},
              "textPath": {},
              "useHTML": {},
              "verticalAlign": {},
              "x": {},
              "y": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "ignoreHiddenPoint": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.timeline.ignoreHiddenPoint",
              "name": "ignoreHiddenPoint",
              "line": 45,
              "lineEnd": 45,
              "column": 4,
              "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "legendSymbol": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "rectangle"
            },
            "meta": {
              "fullname": "plotOptions.timeline.legendSymbol",
              "name": "legendSymbol",
              "line": 178,
              "lineEnd": 178,
              "column": 4,
              "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
              "default": "rectangle"
            },
            "children": {},
            "extended": 1
          },
          "lineWidth": {
            "doclet": {
              "description": "Pixel width of the graph line.",
              "since": "7.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 4
            },
            "meta": {
              "fullname": "plotOptions.timeline.lineWidth",
              "name": "lineWidth",
              "line": 50,
              "lineEnd": 52,
              "column": 4,
              "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
              "default": 4
            },
            "children": {},
            "extended": 1
          },
          "marker": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.marker"
            },
            "meta": {
              "fullname": "plotOptions.timeline.marker",
              "name": "marker",
              "line": 169,
              "lineEnd": 169,
              "column": 4,
              "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js"
            },
            "children": {
              "enabledThreshold": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.timeline.marker.enabledThreshold",
                  "name": "enabledThreshold",
                  "line": 170,
                  "lineEnd": 170,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "height": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 15
                },
                "meta": {
                  "fullname": "plotOptions.timeline.marker.height",
                  "name": "height",
                  "line": 174,
                  "lineEnd": 174,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": 15
                },
                "children": {},
                "extended": 1
              },
              "lineWidth": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 2
                },
                "meta": {
                  "fullname": "plotOptions.timeline.marker.lineWidth",
                  "name": "lineWidth",
                  "line": 173,
                  "lineEnd": 173,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": 2
                },
                "children": {},
                "extended": 1
              },
              "radius": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 6
                },
                "meta": {
                  "fullname": "plotOptions.timeline.marker.radius",
                  "name": "radius",
                  "line": 172,
                  "lineEnd": 172,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": 6
                },
                "children": {},
                "extended": 1
              },
              "symbol": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "square"
                },
                "meta": {
                  "fullname": "plotOptions.timeline.marker.symbol",
                  "name": "symbol",
                  "line": 171,
                  "lineEnd": 171,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": "square"
                },
                "children": {},
                "extended": 1
              },
              "enabled": {},
              "fillColor": {},
              "lineColor": {},
              "states": {},
              "width": {}
            },
            "extended": 1
          },
          "showInLegend": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.timeline.showInLegend",
              "name": "showInLegend",
              "line": 176,
              "lineEnd": 176,
              "column": 4,
              "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.states"
            },
            "meta": {
              "fullname": "plotOptions.timeline.states",
              "name": "states",
              "line": 59,
              "lineEnd": 59,
              "column": 4,
              "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js"
            },
            "children": {
              "hover": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.series.states.hover"
                },
                "meta": {
                  "fullname": "plotOptions.timeline.states.hover",
                  "name": "hover",
                  "line": 60,
                  "lineEnd": 60,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js"
                },
                "children": {
                  "lineWidthPlus": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": 0
                    },
                    "meta": {
                      "fullname": "plotOptions.timeline.states.hover.lineWidthPlus",
                      "name": "lineWidthPlus",
                      "line": 61,
                      "lineEnd": 61,
                      "column": 12,
                      "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                      "default": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "animation": {},
                  "enabled": {},
                  "halo": {},
                  "lineWidth": {},
                  "marker": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {},
              "select": {}
            },
            "extended": 1
          },
          "stickyTracking": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.timeline.stickyTracking",
              "name": "stickyTracking",
              "line": 44,
              "lineEnd": 44,
              "column": 4,
              "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.line.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.timeline.tooltip",
              "name": "tooltip",
              "line": 54,
              "lineEnd": 54,
              "column": 4,
              "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js"
            },
            "children": {
              "headerFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "<span style=\"color:{point.color}\">●</span> <span style=\"font-size: 0.8em\"> {point.key}</span><br/>"
                },
                "meta": {
                  "fullname": "plotOptions.timeline.tooltip.headerFormat",
                  "name": "headerFormat",
                  "line": 55,
                  "lineEnd": 55,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": "<span style=\"color:{point.color}\">●</span> <span style=\"font-size: 0.8em\"> {point.key}</span><br/>"
                },
                "children": {},
                "extended": 1
              },
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "{point.description}"
                },
                "meta": {
                  "fullname": "plotOptions.timeline.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 57,
                  "lineEnd": 57,
                  "column": 8,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "default": "{point.description}"
                },
                "children": {},
                "extended": 1
              },
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "distance": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "visible": {}
        },
        "extended": 1
      },
      "treegraph": {
        "doclet": {
          "description": "A treegraph series is a diagram, which shows a relation between ancestors\nand descendants with a clear parent - child relation.\nThe best examples of the dataStructures, which best reflect this chart\nare e.g. genealogy tree or directory structure.\n\nTODO change back the demo path\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `treegraph` series are defined in\n   [plotOptions.treegraph](plotOptions.treegraph).\n3. Options for one single series are given in\n   [the series instance array](series.treegraph).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        treegraph: {\n            // shared options for all treegraph series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'treegraph'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.treegraph.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === treegraph) {\n    // code specific to the treegraph series\n}\n```\n            ",
          "samples": [
            {
              "name": "Treegraph Chart",
              "value": "highcharts/demo/treegraph-chart"
            }
          ],
          "extends": "plotOptions.treemap",
          "exclude": [
            "layoutAlgorithm",
            "dashStyle",
            "linecap",
            "lineWidth",
            "negativeColor",
            "threshold",
            "zones",
            "zoneAxis",
            "colorAxis",
            "colorKey",
            "compare",
            "dataGrouping",
            "endAngle",
            "gapSize",
            "gapUnit",
            "ignoreHiddenPoint",
            "innerSize",
            "joinBy",
            "legendType",
            "linecap",
            "minSize",
            "navigatorOptions",
            "pointRange",
            "allowTraversingTree",
            "alternateStartingDirection",
            "borderRadius",
            "breadcrumbs",
            "interactByLeaf",
            "layoutStartingDirection",
            "levelIsConstant",
            "lineWidth",
            "negativeColor",
            "nodes",
            "sortIndex",
            "zoneAxis",
            "zones",
            "cluster"
          ],
          "products": ["highcharts"],
          "since": "10.3.0",
          "requires": ["module:modules/treemap", "module:modules/treegraph"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
          "name": "treegraph",
          "fullname": "plotOptions.treegraph",
          "line": 11,
          "lineEnd": 15,
          "column": 0
        },
        "children": {
          "collapseButton": {
            "doclet": {
              "description": "Options applied to collapse Button. The collape button is the\nsmall button which indicates, that the node is collapsable.",
              "since": "10.3.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.treegraph.collapseButton",
              "name": "collapseButton",
              "line": 114,
              "lineEnd": 117,
              "column": 4,
              "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js"
            },
            "children": {
              "enabled": {
                "doclet": {
                  "description": "Whether the button should be visible.",
                  "since": "10.3.0",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.collapseButton.enabled",
                  "name": "enabled",
                  "line": 125,
                  "lineEnd": 127,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "height": {
                "doclet": {
                  "description": "Height of the button.",
                  "since": "10.3.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 18
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.collapseButton.height",
                  "name": "height",
                  "line": 141,
                  "lineEnd": 143,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": 18
                },
                "children": {},
                "extended": 1
              },
              "lineWidth": {
                "doclet": {
                  "description": "The line width of the button in pixels",
                  "since": "10.3.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 1
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.collapseButton.lineWidth",
                  "name": "lineWidth",
                  "line": 129,
                  "lineEnd": 131,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": 1
                },
                "children": {},
                "extended": 1
              },
              "onlyOnHover": {
                "doclet": {
                  "description": "Whether the button should be visible only when the node is\nhovered. When set to true, the button is hidden for nodes,\nwhich are not collapsed, and shown for the collapsed ones.",
                  "since": "10.3.0",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.collapseButton.onlyOnHover",
                  "name": "onlyOnHover",
                  "line": 119,
                  "lineEnd": 123,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "shape": {
                "doclet": {
                  "description": "The symbol of the collapse button.",
                  "since": "10.3.0",
                  "type": { "names": ["string"] },
                  "defaultvalue": "circle"
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.collapseButton.shape",
                  "name": "shape",
                  "line": 149,
                  "lineEnd": 151,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": "circle"
                },
                "children": {},
                "extended": 1
              },
              "style": {
                "doclet": {
                  "description": "CSS styles for the collapse button.\n\nIn styled mode, the collapse button style is given in the\n`.highcharts-collapse-button` class.",
                  "since": "10.3.0",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.collapseButton.style",
                  "name": "style",
                  "line": 153,
                  "lineEnd": 158,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js"
                },
                "children": {
                  "cursor": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "pointer"
                    },
                    "meta": {
                      "fullname": "plotOptions.treegraph.collapseButton.style.cursor",
                      "name": "cursor",
                      "line": 160,
                      "lineEnd": 160,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                      "default": "pointer"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "fontSize": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": null
                    },
                    "meta": {
                      "fullname": "plotOptions.treegraph.collapseButton.style.fontSize",
                      "name": "fontSize",
                      "line": 162,
                      "lineEnd": 162,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                      "default": "1em"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "fontWeight": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "bold"
                    },
                    "meta": {
                      "fullname": "plotOptions.treegraph.collapseButton.style.fontWeight",
                      "name": "fontWeight",
                      "line": 161,
                      "lineEnd": 161,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                      "default": "bold"
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "width": {
                "doclet": {
                  "description": "Width of the button.",
                  "since": "10.3.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 18
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.collapseButton.width",
                  "name": "width",
                  "line": 145,
                  "lineEnd": 147,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": 18
                },
                "children": {},
                "extended": 1
              },
              "x": {
                "doclet": {
                  "description": "Offset of the button in the x direction.",
                  "since": "10.3.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.collapseButton.x",
                  "name": "x",
                  "line": 133,
                  "lineEnd": 135,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "description": "Offset of the button in the y direction.",
                  "since": "10.3.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.collapseButton.y",
                  "name": "y",
                  "line": 137,
                  "lineEnd": 139,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "description": "Options for the data labels appearing on top of the nodes and\nlinks. For treegraph charts, data labels are visible for the\nnodes by default, but hidden for links. This is controlled by\nmodifying the `nodeFormat`, and the `format` that applies to\nlinks and is an empty string by default.",
              "declare": "Highcharts.SeriesTreegraphDataLabelsOptionsObject",
              "since": "10.3.0",
              "type": { "names": ["*"] },
              "extends": "plotOptions.treemap.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.treegraph.dataLabels",
              "name": "dataLabels",
              "line": 206,
              "lineEnd": 214,
              "column": 4,
              "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js"
            },
            "children": {
              "defer": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.dataLabels.defer",
                  "name": "defer",
                  "line": 216,
                  "lineEnd": 216,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "enabled": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.dataLabels.enabled",
                  "name": "enabled",
                  "line": 236,
                  "lineEnd": 236,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "linkTextPath": {
                "doclet": {
                  "description": "Options for a _link_ label text which should follow link\nconnection. Border and background are disabled for a label\nthat follows a path.\n\n**Note:** Only SVG-based renderer supports this option.\nSetting `useHTML` to true will disable this option.",
                  "samples": [
                    {
                      "name": "Treegraph series with link text path dataLabels.",
                      "value": "highcharts/series-treegraph/link-text-path"
                    }
                  ],
                  "extends": "plotOptions.treegraph.dataLabels.textPath",
                  "since": "10.3.0"
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.dataLabels.linkTextPath",
                  "name": "linkTextPath",
                  "line": 217,
                  "lineEnd": 230,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js"
                },
                "children": {
                  "attributes": {
                    "doclet": { "type": { "names": ["*"] } },
                    "meta": {
                      "fullname": "plotOptions.treegraph.dataLabels.linkTextPath.attributes",
                      "name": "attributes",
                      "line": 232,
                      "lineEnd": 232,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js"
                    },
                    "children": {
                      "startOffset": {
                        "doclet": {
                          "type": { "names": ["number"] },
                          "defaultvalue": null
                        },
                        "meta": {
                          "fullname": "plotOptions.treegraph.dataLabels.linkTextPath.attributes.startOffset",
                          "name": "startOffset",
                          "line": 233,
                          "lineEnd": 233,
                          "column": 16,
                          "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                          "default": "50%"
                        },
                        "children": {},
                        "extended": 1
                      }
                    },
                    "extended": 1
                  },
                  "enabled": {}
                },
                "extended": 1
              },
              "padding": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 5
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.dataLabels.padding",
                  "name": "padding",
                  "line": 238,
                  "lineEnd": 238,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": 5
                },
                "children": {},
                "extended": 1
              },
              "style": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.treemap.dataLabels.style"
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.dataLabels.style",
                  "name": "style",
                  "line": 239,
                  "lineEnd": 239,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js"
                },
                "children": {
                  "textOverflow": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "none"
                    },
                    "meta": {
                      "fullname": "plotOptions.treegraph.dataLabels.style.textOverflow",
                      "name": "textOverflow",
                      "line": 240,
                      "lineEnd": 240,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                      "default": "none"
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "inside": {},
              "verticalAlign": {},
              "align": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "crop": {},
              "filter": {},
              "format": {},
              "formatter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "textPath": {},
              "useHTML": {},
              "x": {},
              "y": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "fillSpace": {
            "doclet": {
              "description": "Whether the treegraph series should fill the entire plot area in the X\naxis direction, even when there are collapsed points.",
              "samples": [
                {
                  "name": "Fill space demonstrated",
                  "value": "highcharts/series-treegraph/fillspace"
                }
              ],
              "products": ["highcharts"],
              "since": "10.3.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.treegraph.fillSpace",
              "name": "fillSpace",
              "line": 165,
              "lineEnd": 173,
              "column": 4,
              "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "link": {
            "doclet": { "type": { "names": ["*"] } },
            "meta": {
              "fullname": "plotOptions.treegraph.link",
              "name": "link",
              "line": 68,
              "lineEnd": 68,
              "column": 4,
              "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js"
            },
            "children": {
              "color": {
                "doclet": {
                  "description": "The color of the links between nodes.",
                  "type": { "names": ["Highcharts.ColorString"] },
                  "defaultvalue": "#666666"
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.link.color",
                  "name": "color",
                  "line": 69,
                  "lineEnd": 79,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": "#666666"
                },
                "children": {},
                "extended": 1
              },
              "cursor": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "default"
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.link.cursor",
                  "name": "cursor",
                  "line": 101,
                  "lineEnd": 101,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": "default"
                },
                "children": {},
                "extended": 1
              },
              "lineWidth": {
                "doclet": {
                  "description": "The line width of the links connecting nodes, in pixels.",
                  "type": { "names": ["number"] },
                  "defaultvalue": 1
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.link.lineWidth",
                  "name": "lineWidth",
                  "line": 87,
                  "lineEnd": 92,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": 1
                },
                "children": {},
                "extended": 1
              },
              "radius": {
                "doclet": {
                  "description": "Radius for the rounded corners of the links between nodes.\nWorks for `default` link type.",
                  "type": { "names": ["number"] },
                  "defaultvalue": 10
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.link.radius",
                  "name": "radius",
                  "line": 94,
                  "lineEnd": 99,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": 10
                },
                "children": {},
                "extended": 1
              },
              "type": {
                "doclet": {
                  "description": "Type of the link shape.",
                  "samples": [
                    {
                      "name": "Different link types",
                      "value": "highcharts/series-treegraph/link-types"
                    }
                  ],
                  "type": { "names": ["'default'", "'curved'", "'straight'"] },
                  "products": ["highcharts"],
                  "defaultvalue": "curved"
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.link.type",
                  "name": "type",
                  "line": 102,
                  "lineEnd": 111,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": "curved"
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "marker": {
            "doclet": {
              "extends": "plotOptions.series.marker",
              "exclude": ["enabled", "enabledThreshold"]
            },
            "meta": {
              "fullname": "plotOptions.treegraph.marker",
              "name": "marker",
              "line": 57,
              "lineEnd": 60,
              "column": 4,
              "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js"
            },
            "children": {
              "fillOpacity": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 1
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.marker.fillOpacity",
                  "name": "fillOpacity",
                  "line": 65,
                  "lineEnd": 65,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": 1
                },
                "children": {},
                "extended": 1
              },
              "lineWidth": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.marker.lineWidth",
                  "name": "lineWidth",
                  "line": 63,
                  "lineEnd": 63,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "radius": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 10
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.marker.radius",
                  "name": "radius",
                  "line": 62,
                  "lineEnd": 62,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": 10
                },
                "children": {},
                "extended": 1
              },
              "symbol": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "circle"
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.marker.symbol",
                  "name": "symbol",
                  "line": 64,
                  "lineEnd": 64,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": "circle"
                },
                "children": {},
                "extended": 1
              },
              "fillColor": {},
              "height": {},
              "lineColor": {},
              "states": {},
              "width": {}
            },
            "extended": 1
          },
          "nodeDistance": {
            "doclet": {
              "description": "The distance between nodes in a tree graph in the longitudinal direction.\nThe longitudinal direction means the direction that the chart flows - in\na horizontal chart the distance is horizontal, in an inverted chart\n(vertical), the distance is vertical.\n\nIf a number is given, it denotes pixels. If a percentage string is given,\nthe distance is a percentage of the rendered node width. A `nodeDistance`\nof `100%` will render equal widths for the nodes and the gaps between\nthem.\n\nThis option applies only when the `nodeWidth` option is `auto`, making\nthe node width respond to the number of columns.",
              "since": "11.4.0",
              "samples": [
                {
                  "name": "Node distance of 100% means equal to node width",
                  "value": "highcharts/series-treegraph/node-distance"
                }
              ],
              "type": { "names": ["number", "string"] },
              "defaultvalue": 30
            },
            "meta": {
              "fullname": "plotOptions.treegraph.nodeDistance",
              "name": "nodeDistance",
              "line": 243,
              "lineEnd": 261,
              "column": 4,
              "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
              "default": 30
            },
            "children": {},
            "extended": 1
          },
          "nodeWidth": {
            "doclet": {
              "description": "The pixel width of each node in a, or the height in case the chart is\ninverted. For tree graphs, the node width is only applied if the marker\nsymbol is `rect`, otherwise the `marker` sizing options apply.\n\nCan be a number or a percentage string, or `auto`. If `auto`, the nodes\nare sized to fill up the plot area in the longitudinal direction,\nregardless of the number of levels.",
              "since": "11.4.0",
              "see": ["[treegraph.nodeDistance](#nodeDistance)"],
              "samples": [
                {
                  "name": "Node width is auto and combined with node distance",
                  "value": "highcharts/series-treegraph/node-distance"
                }
              ],
              "type": { "names": ["number", "string"] },
              "defaultvalue": "undefined"
            },
            "meta": {
              "fullname": "plotOptions.treegraph.nodeWidth",
              "name": "nodeWidth",
              "line": 263,
              "lineEnd": 278,
              "column": 4,
              "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "reversed": {
            "doclet": {
              "description": "Flips the positions of the nodes of a treegraph along the\nhorizontal axis (vertical if chart is inverted).",
              "samples": [
                {
                  "name": "Treegraph series with reversed nodes.",
                  "value": "highcharts/series-treegraph/reversed-nodes"
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "false",
              "products": ["highcharts"],
              "since": "10.3.0"
            },
            "meta": {
              "fullname": "plotOptions.treegraph.reversed",
              "name": "reversed",
              "line": 44,
              "lineEnd": 55,
              "column": 4,
              "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "extends": "plotOptions.series.tooltip",
              "exclude": ["clusterFormat"]
            },
            "meta": {
              "fullname": "plotOptions.treegraph.tooltip",
              "name": "tooltip",
              "line": 175,
              "lineEnd": 178,
              "column": 4,
              "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js"
            },
            "children": {
              "linkFormat": {
                "doclet": {
                  "description": "The HTML of the point's line in the tooltip. Variables are\nenclosed by curly brackets. Available variables are\n`point.id`,  `point.fromNode.id`, `point.toNode.id`,\n`series.name`, `series.color` and other properties on the\nsame form. Furthermore, This can also be overridden for each\nseries, which makes it a good hook for displaying units. In\nstyled mode, the dot is colored by a class name rather than\nthe point color.",
                  "type": { "names": ["string"] },
                  "since": "10.3.0",
                  "products": ["highcharts"],
                  "defaultvalue": "{point.fromNode.id} → {point.toNode.id}"
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.tooltip.linkFormat",
                  "name": "linkFormat",
                  "line": 180,
                  "lineEnd": 193,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": "{point.fromNode.id} → {point.toNode.id}"
                },
                "children": {},
                "extended": 1
              },
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "{point.id}"
                },
                "meta": {
                  "fullname": "plotOptions.treegraph.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 195,
                  "lineEnd": 195,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "default": "{point.id}"
                },
                "children": {},
                "extended": 1
              },
              "dateTimeLabelFormats": {},
              "distance": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "headerFormat": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "allowDrillToNode": {},
          "animationLimit": {},
          "borderColor": {},
          "borderWidth": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "events": {},
          "legendSymbol": {},
          "levels": {},
          "opacity": {},
          "showInLegend": {},
          "states": {},
          "traverseToLeaf": {},
          "traverseUpButton": {},
          "findNearestPointBy": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "linkedTo": {},
          "onPoint": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "step": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "treemap": {
        "doclet": {
          "description": "A treemap displays hierarchical data using nested rectangles. The data\ncan be laid out in varying ways depending on options.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `treemap` series are defined in\n   [plotOptions.treemap](plotOptions.treemap).\n3. Options for one single series are given in\n   [the series instance array](series.treemap).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        treemap: {\n            // shared options for all treemap series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'treemap'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.treemap.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === treemap) {\n    // code specific to the treemap series\n}\n```\n            ",
          "samples": [
            {
              "name": "Treemap",
              "value": "highcharts/demo/treemap-large-dataset/"
            }
          ],
          "extends": "plotOptions.scatter",
          "exclude": [
            "connectEnds",
            "connectNulls",
            "dataSorting",
            "dragDrop",
            "jitter",
            "marker"
          ],
          "products": ["highcharts"],
          "requires": ["module:modules/treemap"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
          "name": "treemap",
          "fullname": "plotOptions.treemap",
          "line": 16,
          "lineEnd": 20,
          "column": 0
        },
        "children": {
          "allowDrillToNode": {
            "doclet": {
              "description": "When enabled the user can click on a point which is a parent and\nzoom in on its children. Deprecated and replaced by\n[allowTraversingTree](#plotOptions.treemap.allowTraversingTree).",
              "samples": [
                {
                  "name": "Enabled",
                  "value": "highcharts/plotoptions/treemap-allowdrilltonode/",
                  "products": ["highcharts"]
                }
              ],
              "deprecated": true,
              "type": { "names": ["boolean"] },
              "defaultvalue": "false",
              "since": "4.1.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.treemap.allowDrillToNode",
              "name": "allowDrillToNode",
              "line": 35,
              "lineEnd": 49,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "allowTraversingTree": {
            "doclet": {
              "description": "When enabled the user can click on a point which is a parent and\nzoom in on its children.",
              "samples": [
                {
                  "name": "Enabled",
                  "value": "highcharts/plotoptions/treemap-allowtraversingtree/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Traversing to Grouped Points node",
                  "value": "highcharts/plotoptions/treemap-grouping-traversing/",
                  "products": ["highcharts"]
                }
              ],
              "since": "7.0.3",
              "products": ["highcharts"],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.treemap.allowTraversingTree",
              "name": "allowTraversingTree",
              "line": 35,
              "lineEnd": 49,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "alternateStartingDirection": {
            "doclet": {
              "description": "Enabling this option will make the treemap alternate the drawing\ndirection between vertical and horizontal. The next levels starting\ndirection will always be the opposite of the previous.",
              "samples": [
                {
                  "name": "Enabled",
                  "value": "highcharts/plotoptions/treemap-alternatestartingdirection-true/",
                  "products": ["highcharts"]
                }
              ],
              "since": "4.1.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.treemap.alternateStartingDirection",
              "name": "alternateStartingDirection",
              "line": 236,
              "lineEnd": 245,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "animationLimit": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 250 },
            "meta": {
              "fullname": "plotOptions.treemap.animationLimit",
              "name": "animationLimit",
              "line": 63,
              "lineEnd": 63,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": 250
            },
            "children": {},
            "extended": 1
          },
          "borderColor": {
            "doclet": {
              "description": "The color of the border surrounding each tree map item.",
              "type": { "names": ["Highcharts.ColorString"] },
              "defaultvalue": "#e6e6e6"
            },
            "meta": {
              "fullname": "plotOptions.treemap.borderColor",
              "name": "borderColor",
              "line": 292,
              "lineEnd": 305,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": "#e6e6e6"
            },
            "children": {},
            "extended": 1
          },
          "borderRadius": {
            "doclet": {
              "description": "The border radius for each treemap item.",
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "plotOptions.treemap.borderRadius",
              "name": "borderRadius",
              "line": 64,
              "lineEnd": 66,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "borderWidth": {
            "doclet": {
              "description": "The width of the border surrounding each tree map item.",
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "plotOptions.treemap.borderWidth",
              "name": "borderWidth",
              "line": 427,
              "lineEnd": 429,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "breadcrumbs": {
            "doclet": {
              "description": "Options for the breadcrumbs, the navigation at the top leading the\nway up through the traversed levels.",
              "since": "10.0.0",
              "products": ["highcharts"],
              "extends": "navigation.breadcrumbs"
            },
            "meta": {
              "fullname": "plotOptions.treemap.breadcrumbs",
              "name": "breadcrumbs",
              "line": 68,
              "lineEnd": 77,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "buttonSpacing": {},
              "buttonTheme": {},
              "events": {},
              "floating": {},
              "format": {},
              "formatter": {},
              "position": {},
              "relativeTo": {},
              "rtl": {},
              "separator": {},
              "showFullPath": {},
              "style": {},
              "useHTML": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "cluster": {
            "doclet": {
              "description": "An option to optimize treemap series rendering by grouping smaller leaf\nnodes below a certain square area threshold in pixels. If the square area\nof a point becomes smaller than the specified threshold, determined by\nthe `pixelWidth` and/or `pixelHeight` options, then this point is moved\ninto one group point per series.",
              "samples": [
                {
                  "name": "Simple demo of Treemap grouping",
                  "value": "highcharts/plotoptions/treemap-grouping-simple",
                  "products": ["highcharts"]
                },
                {
                  "name": "Treemap grouping with multiple parents",
                  "value": "highcharts/plotoptions/treemap-grouping-multiple-parents",
                  "products": ["highcharts"]
                },
                {
                  "name": "Advanced demo of Treemap grouping",
                  "value": "highcharts/plotoptions/treemap-grouping-advanced",
                  "products": ["highcharts"]
                }
              ],
              "since": "12.1.0",
              "exclude": [
                "allowOverlap",
                "animation",
                "dataLabels",
                "drillToCluster",
                "events",
                "layoutAlgorithm",
                "marker",
                "states",
                "zones"
              ],
              "products": ["highcharts"],
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.cluster"
            },
            "meta": {
              "fullname": "plotOptions.treemap.cluster",
              "name": "cluster",
              "line": 496,
              "lineEnd": 516,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js"
            },
            "children": {
              "className": {
                "doclet": {
                  "description": "An additional, individual class name for the grouped point's graphic\nrepresentation.",
                  "type": { "names": ["string"] },
                  "products": ["highcharts"],
                  "since": "12.1.0",
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.treemap.cluster.className",
                  "name": "className",
                  "line": 518,
                  "lineEnd": 524,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "color": {
                "doclet": {
                  "description": "Individual color for the grouped point. By default the color is\npulled from the parent color.",
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "products": ["highcharts"],
                  "since": "12.1.0",
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.treemap.cluster.color",
                  "name": "color",
                  "line": 526,
                  "lineEnd": 532,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "enabled": {
                "doclet": {
                  "description": "Enable or disable Treemap grouping.",
                  "type": { "names": ["boolean"] },
                  "since": "12.1.0",
                  "products": ["highcharts"],
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.treemap.cluster.enabled",
                  "name": "enabled",
                  "line": 534,
                  "lineEnd": 540,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "layoutAlgorithm": {
                "doclet": { "type": { "names": ["*"] } },
                "meta": {
                  "fullname": "plotOptions.treemap.cluster.layoutAlgorithm",
                  "name": "layoutAlgorithm",
                  "line": 589,
                  "lineEnd": 589,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js"
                },
                "children": {
                  "distance": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": 0
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.cluster.layoutAlgorithm.distance",
                      "name": "distance",
                      "line": 590,
                      "lineEnd": 590,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "default": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "gridSize": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": 0
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.cluster.layoutAlgorithm.gridSize",
                      "name": "gridSize",
                      "line": 591,
                      "lineEnd": 591,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "default": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "kmeansThreshold": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": 0
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.cluster.layoutAlgorithm.kmeansThreshold",
                      "name": "kmeansThreshold",
                      "line": 592,
                      "lineEnd": 592,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "default": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "marker": {
                "doclet": { "type": { "names": ["*"] } },
                "meta": {
                  "fullname": "plotOptions.treemap.cluster.marker",
                  "name": "marker",
                  "line": 594,
                  "lineEnd": 594,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js"
                },
                "children": {
                  "lineWidth": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": 0
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.cluster.marker.lineWidth",
                      "name": "lineWidth",
                      "line": 595,
                      "lineEnd": 595,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "default": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "radius": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": 0
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.cluster.marker.radius",
                      "name": "radius",
                      "line": 596,
                      "lineEnd": 596,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "default": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "minimumClusterSize": {
                "doclet": {
                  "description": "Defines the minimum number of child nodes required to create a group\nof small nodes.",
                  "type": { "names": ["number"] },
                  "since": "12.1.0",
                  "products": ["highcharts"],
                  "defaultvalue": 5
                },
                "meta": {
                  "fullname": "plotOptions.treemap.cluster.minimumClusterSize",
                  "name": "minimumClusterSize",
                  "line": 580,
                  "lineEnd": 587,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "default": 5
                },
                "children": {},
                "extended": 1
              },
              "name": {
                "doclet": {
                  "description": "The name of the point of grouped nodes shown in the tooltip,\ndataLabels, etc. By default it is set to '+ n', where n is number of\ngrouped points.",
                  "type": { "names": ["string"] },
                  "since": "12.1.0",
                  "products": ["highcharts"],
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "plotOptions.treemap.cluster.name",
                  "name": "name",
                  "line": 559,
                  "lineEnd": 567,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "pixelHeight": {
                "doclet": {
                  "description": "The pixel threshold height of area, which is used in Treemap\ngrouping.",
                  "type": { "names": ["number"] },
                  "since": "12.1.0",
                  "products": ["highcharts"],
                  "defaultvalue": null
                },
                "meta": {
                  "fullname": "plotOptions.treemap.cluster.pixelHeight",
                  "name": "pixelHeight",
                  "line": 550,
                  "lineEnd": 557,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "pixelWidth": {
                "doclet": {
                  "description": "The pixel threshold width of area, which is used in Treemap grouping.",
                  "type": { "names": ["number"] },
                  "since": "12.1.0",
                  "products": ["highcharts"],
                  "defaultvalue": null
                },
                "meta": {
                  "fullname": "plotOptions.treemap.cluster.pixelWidth",
                  "name": "pixelWidth",
                  "line": 542,
                  "lineEnd": 548,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              },
              "reductionFactor": {
                "doclet": {
                  "description": "A configuration property that specifies the factor by which the value\nand size of a grouped node are reduced. This can be particularly\nuseful when a grouped node occupies a disproportionately large\nportion of the graph, ensuring better visual balance and readability.",
                  "type": { "names": ["number"] },
                  "since": "12.1.0",
                  "products": ["highcharts"],
                  "defaultvalue": null
                },
                "meta": {
                  "fullname": "plotOptions.treemap.cluster.reductionFactor",
                  "name": "reductionFactor",
                  "line": 569,
                  "lineEnd": 578,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "default": "undefined"
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "colorByPoint": {
            "doclet": {
              "description": "When using automatic point colors pulled from the `options.colors`\ncollection, this option determines whether the chart should receive\none color per series or one color per point.",
              "see": ["[series colors](#plotOptions.treemap.colors)"],
              "since": "2.0.0",
              "products": ["highcharts"],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.treemap.colorByPoint",
              "name": "colorByPoint",
              "line": 155,
              "lineEnd": 165,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "colorKey": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "colorValue"
            },
            "meta": {
              "fullname": "plotOptions.treemap.colorKey",
              "name": "colorKey",
              "line": 431,
              "lineEnd": 431,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": "colorValue"
            },
            "children": {},
            "extended": 1
          },
          "colors": {
            "doclet": {
              "description": "A series specific or series type specific color set to apply instead\nof the global [colors](#colors) when\n[colorByPoint](#plotOptions.treemap.colorByPoint) is true.",
              "type": {
                "names": [
                  "Array.<(Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject)>"
                ]
              },
              "since": "3.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.treemap.colors",
              "name": "colors",
              "line": 136,
              "lineEnd": 145,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "cropThreshold": {
            "doclet": {
              "description": "When the series contains less points than the crop threshold, all\npoints are drawn, event if the points fall outside the visible plot\narea at the current zoom. The advantage of drawing all points\n(including markers and columns), is that animation is performed on\nupdates. On the other hand, when the series contains more points than\nthe crop threshold, the series data is cropped to only contain points\nthat fall within the plot area. The advantage of cropping away\ninvisible points is to increase performance on large series.",
              "type": { "names": ["number"] },
              "defaultvalue": "300",
              "since": "4.1.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.treemap.cropThreshold",
              "name": "cropThreshold",
              "line": 78,
              "lineEnd": 93,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "since": "4.1.0",
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.treemap.dataLabels",
              "name": "dataLabels",
              "line": 167,
              "lineEnd": 169,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js"
            },
            "children": {
              "defer": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "plotOptions.treemap.dataLabels.defer",
                  "name": "defer",
                  "line": 171,
                  "lineEnd": 171,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              },
              "enabled": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.treemap.dataLabels.enabled",
                  "name": "enabled",
                  "line": 172,
                  "lineEnd": 172,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "inside": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.treemap.dataLabels.inside",
                  "name": "inside",
                  "line": 179,
                  "lineEnd": 179,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "padding": {
                "doclet": {
                  "type": { "names": ["number"] },
                  "defaultvalue": 2
                },
                "meta": {
                  "fullname": "plotOptions.treemap.dataLabels.padding",
                  "name": "padding",
                  "line": 180,
                  "lineEnd": 180,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "default": 2
                },
                "children": {},
                "extended": 1
              },
              "style": {
                "doclet": { "type": { "names": ["*"] } },
                "meta": {
                  "fullname": "plotOptions.treemap.dataLabels.style",
                  "name": "style",
                  "line": 182,
                  "lineEnd": 182,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js"
                },
                "children": {
                  "textOverflow": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "ellipsis"
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.dataLabels.style.textOverflow",
                      "name": "textOverflow",
                      "line": 183,
                      "lineEnd": 183,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "default": "ellipsis"
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "middle"
                },
                "meta": {
                  "fullname": "plotOptions.treemap.dataLabels.verticalAlign",
                  "name": "verticalAlign",
                  "line": 181,
                  "lineEnd": 181,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "default": "middle"
                },
                "children": {},
                "extended": 1
              },
              "align": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "crop": {},
              "filter": {},
              "format": {},
              "formatter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "textPath": {},
              "useHTML": {},
              "x": {},
              "y": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "events": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.events"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "plotOptions.treemap.events",
              "line": 0,
              "lineEnd": 0,
              "name": "events"
            },
            "children": {
              "setRootNode": {
                "doclet": {
                  "description": "Fires on a request for change of root node for the tree, before the\nupdate is made. An event object is passed to the function, containing\nadditional properties `newRootId`, `previousRootId`, `redraw` and\n`trigger`.",
                  "samples": [
                    {
                      "name": "Alert update information on setRootNode event.",
                      "value": "highcharts/plotoptions/treemap-events-setrootnode/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["function"] },
                  "defaultvalue": "undefined",
                  "since": "7.0.3",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.treemap.events.setRootNode",
                  "name": "setRootNode",
                  "line": 94,
                  "lineEnd": 108,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "afterAnimate": {},
              "checkboxClick": {},
              "click": {},
              "hide": {},
              "legendItemClick": {},
              "mouseOut": {},
              "mouseOver": {},
              "show": {}
            },
            "extended": 1
          },
          "ignoreHiddenPoint": {
            "doclet": {
              "description": "Whether to ignore hidden points when the layout algorithm runs.\nIf `false`, hidden points will leave open spaces.",
              "since": "5.0.8",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.treemap.ignoreHiddenPoint",
              "name": "ignoreHiddenPoint",
              "line": 203,
              "lineEnd": 208,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "interactByLeaf": {
            "doclet": {
              "description": "This option decides if the user can interact with the parent nodes\nor just the leaf nodes. When this option is undefined, it will be\ntrue by default. However when allowTraversingTree is true, then it\nwill be false by default.",
              "samples": [
                {
                  "name": "False",
                  "value": "highcharts/plotoptions/treemap-interactbyleaf-false/",
                  "products": ["highcharts"]
                },
                {
                  "name": "InteractByLeaf and allowTraversingTree is true",
                  "value": "highcharts/plotoptions/treemap-interactbyleaf-true-and-allowtraversingtree/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["boolean"] },
              "since": "4.1.2",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.treemap.interactByLeaf",
              "name": "interactByLeaf",
              "line": 109,
              "lineEnd": 124,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "layoutAlgorithm": {
            "doclet": {
              "description": "This option decides which algorithm is used for setting position\nand dimensions of the points.",
              "see": [
                "[How to write your own algorithm](https://www.highcharts.com/docs/chart-and-series-types/treemap)"
              ],
              "samples": [
                {
                  "name": "SliceAndDice by default",
                  "value": "highcharts/plotoptions/treemap-layoutalgorithm-sliceanddice/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Stripes",
                  "value": "highcharts/plotoptions/treemap-layoutalgorithm-stripes/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Squarified",
                  "value": "highcharts/plotoptions/treemap-layoutalgorithm-squarified/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Strip",
                  "value": "highcharts/plotoptions/treemap-layoutalgorithm-strip/",
                  "products": ["highcharts"]
                }
              ],
              "since": "4.1.0",
              "values": "[\"sliceAndDice\", \"stripes\", \"squarified\", \"strip\"]",
              "type": { "names": ["string"] },
              "defaultvalue": "sliceAndDice"
            },
            "meta": {
              "fullname": "plotOptions.treemap.layoutAlgorithm",
              "name": "layoutAlgorithm",
              "line": 210,
              "lineEnd": 227,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": "sliceAndDice"
            },
            "children": {},
            "extended": 1
          },
          "layoutStartingDirection": {
            "doclet": {
              "description": "Defines which direction the layout algorithm will start drawing.",
              "since": "4.1.0",
              "values": "[\"vertical\", \"horizontal\"]",
              "type": { "names": ["string"] },
              "defaultvalue": "vertical"
            },
            "meta": {
              "fullname": "plotOptions.treemap.layoutStartingDirection",
              "name": "layoutStartingDirection",
              "line": 229,
              "lineEnd": 234,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": "vertical"
            },
            "children": {},
            "extended": 1
          },
          "legendSymbol": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "rectangle"
            },
            "meta": {
              "fullname": "plotOptions.treemap.legendSymbol",
              "name": "legendSymbol",
              "line": 481,
              "lineEnd": 481,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": "rectangle"
            },
            "children": {},
            "extended": 1
          },
          "levelIsConstant": {
            "doclet": {
              "description": "Used together with the levels and allowTraversingTree options. When\nset to false the first level visible to be level one, which is\ndynamic when traversing the tree. Otherwise the level will be the\nsame as the tree structure.",
              "since": "4.1.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.treemap.levelIsConstant",
              "name": "levelIsConstant",
              "line": 247,
              "lineEnd": 254,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "levels": {
            "doclet": {
              "description": "Set options on specific levels. Takes precedence over series options,\nbut not point options.",
              "samples": [
                {
                  "name": "Styling dataLabels and borders",
                  "value": "highcharts/plotoptions/treemap-levels/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Different layoutAlgorithm",
                  "value": "highcharts/demo/treemap-with-levels/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Array.<*>"] },
              "since": "4.1.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.treemap.levels",
              "name": "levels",
              "line": 292,
              "lineEnd": 305,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "borderColor": {
                "doclet": {
                  "description": "Can set a `borderColor` on all points which lies on the same level.",
                  "type": { "names": ["Highcharts.ColorString"] },
                  "since": "4.1.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.treemap.levels.borderColor",
                  "name": "borderColor",
                  "line": 306,
                  "lineEnd": 313,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "borderDashStyle": {
                "doclet": {
                  "description": "Set the dash style of the border of all the point which lies on the\nlevel. See\n[plotOptions.scatter.dashStyle](#plotoptions.scatter.dashstyle)\nfor possible options.",
                  "type": { "names": ["Highcharts.DashStyleValue"] },
                  "since": "4.1.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.treemap.levels.borderDashStyle",
                  "name": "borderDashStyle",
                  "line": 314,
                  "lineEnd": 324,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "borderWidth": {
                "doclet": {
                  "description": "Can set the borderWidth on all points which lies on the same level.",
                  "type": { "names": ["number"] },
                  "since": "4.1.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.treemap.levels.borderWidth",
                  "name": "borderWidth",
                  "line": 325,
                  "lineEnd": 332,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "color": {
                "doclet": {
                  "description": "Can set a color on all points which lies on the same level.",
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "since": "4.1.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.treemap.levels.color",
                  "name": "color",
                  "line": 333,
                  "lineEnd": 340,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "colorVariation": {
                "doclet": {
                  "description": "A configuration object to define how the color of a child varies from\nthe parent's color. The variation is distributed among the children\nof node. For example when setting brightness, the brightness change\nwill range from the parent's original brightness on the first child,\nto the amount set in the `to` setting on the last node. This allows a\ngradient-like color scheme that sets children out from each other\nwhile highlighting the grouping on treemaps and sectors on sunburst\ncharts.",
                  "samples": [
                    {
                      "name": "Sunburst with color variation",
                      "value": "highcharts/demo/sunburst/"
                    },
                    {
                      "name": "Treegraph nodes with color variation",
                      "value": "highcharts/series-treegraph/color-variation"
                    }
                  ],
                  "since": "6.0.0",
                  "products": ["highcharts"],
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "plotOptions.treemap.levels.colorVariation",
                  "name": "colorVariation",
                  "line": 341,
                  "lineEnd": 360,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "key": {
                    "doclet": {
                      "description": "The key of a color variation. Currently supports `brightness` only.",
                      "type": { "names": ["\"brightness\""] },
                      "since": "6.0.0",
                      "products": ["highcharts"]
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.levels.colorVariation.key",
                      "name": "key",
                      "line": 361,
                      "lineEnd": 369,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "to": {
                    "doclet": {
                      "description": "The ending value of a color variation. The last sibling will receive\nthis value.",
                      "type": { "names": ["number"] },
                      "since": "6.0.0",
                      "products": ["highcharts"]
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.levels.colorVariation.to",
                      "name": "to",
                      "line": 370,
                      "lineEnd": 378,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "dataLabels": {
                "doclet": {
                  "description": "Can set the options of dataLabels on each point which lies on the\nlevel.\n[plotOptions.treemap.dataLabels](#plotOptions.treemap.dataLabels) for\npossible values.",
                  "extends": "plotOptions.treemap.dataLabels",
                  "since": "4.1.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.treemap.levels.dataLabels",
                  "name": "dataLabels",
                  "line": 379,
                  "lineEnd": 389,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "defer": {},
                  "enabled": {},
                  "inside": {},
                  "padding": {},
                  "style": {},
                  "verticalAlign": {},
                  "align": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "backgroundColor": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "crop": {},
                  "filter": {},
                  "format": {},
                  "formatter": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "textPath": {},
                  "useHTML": {},
                  "x": {},
                  "y": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "layoutAlgorithm": {
                "doclet": {
                  "description": "Can set the layoutAlgorithm option on a specific level.",
                  "type": {
                    "names": [
                      "\"sliceAndDice\"",
                      "\"stripes\"",
                      "\"squarified\"",
                      "\"strip\""
                    ]
                  },
                  "since": "4.1.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.treemap.levels.layoutAlgorithm",
                  "name": "layoutAlgorithm",
                  "line": 390,
                  "lineEnd": 398,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "layoutStartingDirection": {
                "doclet": {
                  "description": "Can set the layoutStartingDirection option on a specific level.",
                  "type": { "names": ["\"vertical\"", "\"horizontal\""] },
                  "since": "4.1.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.treemap.levels.layoutStartingDirection",
                  "name": "layoutStartingDirection",
                  "line": 399,
                  "lineEnd": 407,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "level": {
                "doclet": {
                  "description": "Decides which level takes effect from the options set in the levels\nobject.",
                  "samples": [
                    {
                      "name": "Styling of both levels",
                      "value": "highcharts/plotoptions/treemap-levels/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "since": "4.1.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "plotOptions.treemap.levels.level",
                  "name": "level",
                  "line": 408,
                  "lineEnd": 419,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "opacity": {
            "doclet": {
              "description": "The opacity of a point in treemap. When a point has children, the\nvisibility of the children is determined by the opacity.",
              "since": "4.2.4",
              "type": { "names": ["number"] },
              "defaultvalue": 0.15
            },
            "meta": {
              "fullname": "plotOptions.treemap.opacity",
              "name": "opacity",
              "line": 432,
              "lineEnd": 437,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": 0.15
            },
            "children": {},
            "extended": 1
          },
          "showInLegend": {
            "doclet": {
              "description": "Whether to display this series type or specific series item in the\nlegend.",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.treemap.showInLegend",
              "name": "showInLegend",
              "line": 68,
              "lineEnd": 77,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "sortIndex": {
            "doclet": {
              "description": "The sort index of the point inside the treemap level.",
              "samples": [
                {
                  "name": "Sort by years",
                  "value": "highcharts/plotoptions/treemap-sortindex/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "4.1.10",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.treemap.sortIndex",
              "name": "sortIndex",
              "line": 125,
              "lineEnd": 135,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "description": "A wrapper object for all the series options in specific states.",
              "extends": "plotOptions.heatmap.states"
            },
            "meta": {
              "fullname": "plotOptions.treemap.states",
              "name": "states",
              "line": 439,
              "lineEnd": 443,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js"
            },
            "children": {
              "hover": {
                "doclet": {
                  "description": "Options for the hovered series",
                  "extends": "plotOptions.heatmap.states.hover",
                  "exclude": ["halo"]
                },
                "meta": {
                  "fullname": "plotOptions.treemap.states.hover",
                  "name": "hover",
                  "line": 445,
                  "lineEnd": 450,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js"
                },
                "children": {
                  "borderColor": {
                    "doclet": {
                      "description": "The border color for the hovered state.",
                      "type": { "names": ["string"] },
                      "defaultvalue": "#999999"
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.states.hover.borderColor",
                      "name": "borderColor",
                      "line": 452,
                      "lineEnd": 454,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "default": "#999999"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "brightness": {
                    "doclet": {
                      "description": "Brightness for the hovered point. Defaults to 0 if the\nheatmap series is loaded first, otherwise 0.1.",
                      "type": { "names": ["number"] },
                      "defaultvalue": "undefined"
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.states.hover.brightness",
                      "name": "brightness",
                      "line": 456,
                      "lineEnd": 462,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "halo": {
                    "doclet": {
                      "extends": "plotOptions.heatmap.states.hover.halo"
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.states.hover.halo",
                      "name": "halo",
                      "line": 464,
                      "lineEnd": 466,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "default": false
                    },
                    "children": { "attributes": {}, "opacity": {}, "size": {} },
                    "extended": 1
                  },
                  "opacity": {
                    "doclet": {
                      "description": "The opacity of a point in treemap. When a point has children,\nthe visibility of the children is determined by the opacity.",
                      "since": "4.2.4",
                      "type": { "names": ["number"] },
                      "defaultvalue": 0.75
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.states.hover.opacity",
                      "name": "opacity",
                      "line": 468,
                      "lineEnd": 473,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "default": 0.75
                    },
                    "children": {},
                    "extended": 1
                  },
                  "shadow": {
                    "doclet": {
                      "description": "The shadow option for hovered state.",
                      "type": { "names": ["boolean"] },
                      "defaultvalue": false
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.states.hover.shadow",
                      "name": "shadow",
                      "line": 475,
                      "lineEnd": 477,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "default": false
                    },
                    "children": {},
                    "extended": 1
                  },
                  "animation": {},
                  "enabled": {},
                  "lineWidth": {},
                  "lineWidthPlus": {},
                  "marker": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {},
              "select": {}
            },
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.treemap.tooltip",
              "name": "tooltip",
              "line": 186,
              "lineEnd": 186,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js"
            },
            "children": {
              "headerFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": ""
                },
                "meta": {
                  "fullname": "plotOptions.treemap.tooltip.headerFormat",
                  "name": "headerFormat",
                  "line": 187,
                  "lineEnd": 187,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "default": ""
                },
                "children": {},
                "extended": 1
              },
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "<b>{point.name}</b>: {point.value}<br/>"
                },
                "meta": {
                  "fullname": "plotOptions.treemap.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 188,
                  "lineEnd": 188,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "default": "<b>{point.name}</b>: {point.value}<br/>"
                },
                "children": {},
                "extended": 1
              },
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "distance": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "traverseToLeaf": {
            "doclet": {
              "description": "This option enables automatic traversing to the last child level upon\nnode interaction. This feature simplifies navigation by immediately\nfocusing on the deepest layer of the data structure without intermediate\nsteps.",
              "samples": [
                {
                  "name": "Traverse to leaf enabled",
                  "value": "highcharts/plotoptions/treemap-traverse-to-leaf/",
                  "products": ["highcharts"]
                }
              ],
              "since": "11.4.4",
              "products": ["highcharts"],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.treemap.traverseToLeaf",
              "name": "traverseToLeaf",
              "line": 482,
              "lineEnd": 494,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "traverseUpButton": {
            "doclet": {
              "description": "Options for the button appearing when traversing down in a treemap.\n\nSince v9.3.3 the `traverseUpButton` is replaced by `breadcrumbs`.",
              "deprecated": true,
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.treemap.traverseUpButton",
              "name": "traverseUpButton",
              "line": 256,
              "lineEnd": 262,
              "column": 4,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js"
            },
            "children": {
              "position": {
                "doclet": {
                  "description": "The position of the button.",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "plotOptions.treemap.traverseUpButton.position",
                  "name": "position",
                  "line": 264,
                  "lineEnd": 266,
                  "column": 8,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js"
                },
                "children": {
                  "align": {
                    "doclet": {
                      "description": "Horizontal alignment of the button.",
                      "type": { "names": ["Highcharts.AlignValue"] },
                      "defaultvalue": "right"
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.traverseUpButton.position.align",
                      "name": "align",
                      "line": 268,
                      "lineEnd": 275,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "default": "right"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "verticalAlign": {
                    "doclet": {
                      "description": "Vertical alignment of the button.",
                      "type": { "names": ["Highcharts.VerticalAlignValue"] },
                      "defaultvalue": "top",
                      "products": ["highcharts"]
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.traverseUpButton.position.verticalAlign",
                      "name": "verticalAlign",
                      "line": 268,
                      "lineEnd": 275,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "x": {
                    "doclet": {
                      "description": "Horizontal offset of the button.",
                      "type": { "names": ["number"] },
                      "defaultvalue": -10
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.traverseUpButton.position.x",
                      "name": "x",
                      "line": 282,
                      "lineEnd": 284,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "default": -10
                    },
                    "children": {},
                    "extended": 1
                  },
                  "y": {
                    "doclet": {
                      "description": "Vertical offset of the button.",
                      "type": { "names": ["number"] },
                      "defaultvalue": 10
                    },
                    "meta": {
                      "fullname": "plotOptions.treemap.traverseUpButton.position.y",
                      "name": "y",
                      "line": 286,
                      "lineEnd": 288,
                      "column": 12,
                      "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                      "default": 10
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              }
            },
            "extended": 1
          },
          "findNearestPointBy": {},
          "lineWidth": {},
          "stickyTracking": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "step": {},
          "threshold": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "variablepie": {
        "doclet": {
          "description": "A variable pie series is a two dimensional series type, where each point\nrenders an Y and Z value.  Each point is drawn as a pie slice where the\nsize (arc) of the slice relates to the Y value and the radius of pie\nslice relates to the Z value.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `variablepie` series are defined in\n   [plotOptions.variablepie](plotOptions.variablepie).\n3. Options for one single series are given in\n   [the series instance array](series.variablepie).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        variablepie: {\n            // shared options for all variablepie series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'variablepie'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.variablepie.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === variablepie) {\n    // code specific to the variablepie series\n}\n```\n            ",
          "samples": [
            {
              "name": "Variable-radius pie chart",
              "value": "highcharts/demo/variable-radius-pie/",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.pie",
          "exclude": ["dragDrop"],
          "since": "6.0.0",
          "products": ["highcharts"],
          "requires": ["module:modules/variable-pie"]
        },
        "meta": {
          "filename": "code/es-modules/Series/VariablePie/VariablePieSeriesDefaults.js",
          "name": "variablepie",
          "fullname": "plotOptions.variablepie",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "maxPointSize": {
            "doclet": {
              "description": "The maximum size of the points' radius related to chart's `plotArea`.\nIf a number is set, it applies in pixels.",
              "samples": [
                {
                  "name": "Example of minPointSize and maxPointSize",
                  "value": "highcharts/variable-radius-pie/min-max-point-size/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "string"] },
              "since": "6.0.0",
              "defaultvalue": "100%"
            },
            "meta": {
              "fullname": "plotOptions.variablepie.maxPointSize",
              "name": "maxPointSize",
              "line": 48,
              "lineEnd": 57,
              "column": 4,
              "filename": "code/es-modules/Series/VariablePie/VariablePieSeriesDefaults.js",
              "default": "100%"
            },
            "children": {},
            "extended": 1
          },
          "minPointSize": {
            "doclet": {
              "description": "The minimum size of the points' radius related to chart's `plotArea`.\nIf a number is set, it applies in pixels.",
              "samples": [
                {
                  "name": "Example of minPointSize and maxPointSize",
                  "value": "highcharts/variable-radius-pie/min-max-point-size/",
                  "products": ["highcharts"]
                },
                {
                  "name": "minPointSize set to 100",
                  "value": "highcharts/variable-radius-pie/min-point-size-100/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "string"] },
              "since": "6.0.0",
              "defaultvalue": "10%"
            },
            "meta": {
              "fullname": "plotOptions.variablepie.minPointSize",
              "name": "minPointSize",
              "line": 35,
              "lineEnd": 46,
              "column": 4,
              "filename": "code/es-modules/Series/VariablePie/VariablePieSeriesDefaults.js",
              "default": "10%"
            },
            "children": {},
            "extended": 1
          },
          "sizeBy": {
            "doclet": {
              "description": "Whether the pie slice's value should be represented by the area or\nthe radius of the slice. Can be either `area` or `radius`. The\ndefault, `area`, corresponds best to the human perception of the size\nof each pie slice.",
              "samples": [
                {
                  "name": "Difference between area and radius sizeBy",
                  "value": "highcharts/variable-radius-pie/sizeby/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.VariablePieSizeByValue"] },
              "since": "6.0.0",
              "defaultvalue": "area"
            },
            "meta": {
              "fullname": "plotOptions.variablepie.sizeBy",
              "name": "sizeBy",
              "line": 85,
              "lineEnd": 96,
              "column": 4,
              "filename": "code/es-modules/Series/VariablePie/VariablePieSeriesDefaults.js",
              "default": "area"
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.pie.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.variablepie.tooltip",
              "name": "tooltip",
              "line": 98,
              "lineEnd": 98,
              "column": 4,
              "filename": "code/es-modules/Series/VariablePie/VariablePieSeriesDefaults.js"
            },
            "children": {
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "<span style=\"color:{point.color}\">●</span> {series.name}<br/>Value: {point.y}<br/>Size: {point.z}<br/>"
                },
                "meta": {
                  "fullname": "plotOptions.variablepie.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 99,
                  "lineEnd": 99,
                  "column": 8,
                  "filename": "code/es-modules/Series/VariablePie/VariablePieSeriesDefaults.js",
                  "default": "<span style=\"color:{point.color}\">●</span> {series.name}<br/>Value: {point.y}<br/>Size: {point.z}<br/>"
                },
                "children": {},
                "extended": 1
              },
              "followPointer": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "distance": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "headerFormat": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "zMax": {
            "doclet": {
              "description": "The maximum possible z value for the point's radius calculation. If\nthe point's Z value is bigger than zMax, the slice will be drawn\naccording to the zMax value",
              "samples": [
                {
                  "name": "Series limited by both zMin and zMax",
                  "value": "highcharts/variable-radius-pie/zmin-zmax/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "6.0.0",
              "defaultvalue": null
            },
            "meta": {
              "fullname": "plotOptions.variablepie.zMax",
              "name": "zMax",
              "line": 73,
              "lineEnd": 83,
              "column": 4,
              "filename": "code/es-modules/Series/VariablePie/VariablePieSeriesDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "zMin": {
            "doclet": {
              "description": "The minimum possible z value for the point's radius calculation. If\nthe point's Z value is smaller than zMin, the slice will be drawn\naccording to the zMin value.",
              "samples": [
                {
                  "name": "zMin set to 5, smaller z values are treated as 5",
                  "value": "highcharts/variable-radius-pie/zmin-5/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Series limited by both zMin and zMax",
                  "value": "highcharts/variable-radius-pie/zmin-zmax/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "6.0.0",
              "defaultvalue": null
            },
            "meta": {
              "fullname": "plotOptions.variablepie.zMin",
              "name": "zMin",
              "line": 59,
              "lineEnd": 71,
              "column": 4,
              "filename": "code/es-modules/Series/VariablePie/VariablePieSeriesDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "center": {},
          "clip": {},
          "color": {},
          "colors": {},
          "dataLabels": {},
          "depth": {},
          "endAngle": {},
          "events": {},
          "fillColor": {},
          "ignoreHiddenPoint": {},
          "inactiveOtherPoints": {},
          "innerSize": {},
          "minSize": {},
          "point": {},
          "showInLegend": {},
          "size": {},
          "slicedOffset": {},
          "startAngle": {},
          "states": {},
          "stickyTracking": {},
          "thickness": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "includeInDataExport": {},
          "keys": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "onPoint": {},
          "opacity": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "visible": {}
        },
        "extended": 1
      },
      "variwide": {
        "doclet": {
          "description": "A variwide chart (related to marimekko chart) is a column chart with a\nvariable width expressing a third dimension.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `variwide` series are defined in\n   [plotOptions.variwide](plotOptions.variwide).\n3. Options for one single series are given in\n   [the series instance array](series.variwide).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        variwide: {\n            // shared options for all variwide series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'variwide'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.variwide.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === variwide) {\n    // code specific to the variwide series\n}\n```\n            ",
          "samples": [
            {
              "name": "Variwide chart",
              "value": "highcharts/demo/variwide/",
              "products": ["highcharts"]
            },
            {
              "name": "Inverted variwide chart",
              "value": "highcharts/series-variwide/inverted/",
              "products": ["highcharts"]
            },
            {
              "name": "Variwide columns on a datetime axis",
              "value": "highcharts/series-variwide/datetime/",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.column",
          "since": "6.0.0",
          "products": ["highcharts"],
          "exclude": [
            "boostThreshold",
            "crisp",
            "depth",
            "edgeColor",
            "edgeWidth",
            "groupZPadding",
            "boostBlending"
          ],
          "requires": ["module:modules/variwide"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Variwide/VariwideSeriesDefaults.js",
          "name": "variwide",
          "fullname": "plotOptions.variwide",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "groupPadding": {
            "doclet": {
              "description": "In a variwide chart, the group padding is 0 in order to express the\nhorizontal stacking of items.",
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "plotOptions.variwide.groupPadding",
              "name": "groupPadding",
              "line": 43,
              "lineEnd": 46,
              "column": 4,
              "filename": "code/es-modules/Series/Variwide/VariwideSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "pointPadding": {
            "doclet": {
              "description": "In a variwide chart, the point padding is 0 in order to express the\nhorizontal stacking of items.",
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "plotOptions.variwide.pointPadding",
              "name": "pointPadding",
              "line": 38,
              "lineEnd": 41,
              "column": 4,
              "filename": "code/es-modules/Series/Variwide/VariwideSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "dragDrop": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointRange": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "vector": {
        "doclet": {
          "description": "A vector plot is a type of cartesian chart where each point has an X and\nY position, a length and a direction. Vectors are drawn as arrows.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `vector` series are defined in\n   [plotOptions.vector](plotOptions.vector).\n3. Options for one single series are given in\n   [the series instance array](series.vector).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        vector: {\n            // shared options for all vector series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'vector'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.vector.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === vector) {\n    // code specific to the vector series\n}\n```\n            ",
          "samples": [
            {
              "name": "Vector pot",
              "value": "highcharts/demo/vector-plot/",
              "products": ["highcharts", "highstock"]
            }
          ],
          "since": "6.0.0",
          "extends": "plotOptions.scatter",
          "exclude": [
            "boostThreshold",
            "marker",
            "connectEnds",
            "connectNulls",
            "cropThreshold",
            "dashStyle",
            "dragDrop",
            "gapSize",
            "gapUnit",
            "dataGrouping",
            "linecap",
            "shadow",
            "stacking",
            "step",
            "jitter",
            "boostBlending"
          ],
          "products": ["highcharts", "highstock"],
          "requires": ["module:modules/vector"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Vector/VectorSeriesDefaults.js",
          "name": "vector",
          "fullname": "plotOptions.vector",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "lineWidth": {
            "doclet": {
              "description": "The line width for each vector arrow.",
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 2
            },
            "meta": {
              "fullname": "plotOptions.vector.lineWidth",
              "name": "lineWidth",
              "line": 36,
              "lineEnd": 38,
              "column": 4,
              "filename": "code/es-modules/Series/Vector/VectorSeriesDefaults.js",
              "default": 2
            },
            "children": {},
            "extended": 1
          },
          "marker": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "undefined"
            },
            "meta": {
              "fullname": "plotOptions.vector.marker",
              "name": "marker",
              "line": 40,
              "lineEnd": 40,
              "column": 4,
              "filename": "code/es-modules/Series/Vector/VectorSeriesDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "rotationOrigin": {
            "doclet": {
              "description": "What part of the vector it should be rotated around. Can be one of\n`start`, `center` and `end`. When `start`, the vectors will start\nfrom the given [x, y] position, and when `end` the vectors will end\nin the [x, y] position.",
              "samples": [
                {
                  "name": "Rotate from start",
                  "value": "highcharts/plotoptions/vector-rotationorigin-start/"
                }
              ],
              "values": "[\"start\", \"center\", \"end\"]",
              "since": "6.0.0",
              "type": { "names": ["string"] },
              "defaultvalue": "center"
            },
            "meta": {
              "fullname": "plotOptions.vector.rotationOrigin",
              "name": "rotationOrigin",
              "line": 41,
              "lineEnd": 51,
              "column": 4,
              "filename": "code/es-modules/Series/Vector/VectorSeriesDefaults.js",
              "default": "center"
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.states"
            },
            "meta": {
              "fullname": "plotOptions.vector.states",
              "name": "states",
              "line": 53,
              "lineEnd": 53,
              "column": 4,
              "filename": "code/es-modules/Series/Vector/VectorSeriesDefaults.js"
            },
            "children": {
              "hover": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.series.states.hover"
                },
                "meta": {
                  "fullname": "plotOptions.vector.states.hover",
                  "name": "hover",
                  "line": 54,
                  "lineEnd": 54,
                  "column": 8,
                  "filename": "code/es-modules/Series/Vector/VectorSeriesDefaults.js"
                },
                "children": {
                  "lineWidthPlus": {
                    "doclet": {
                      "description": "Additonal line width for the vector errors when they are\nhovered.",
                      "type": { "names": ["number"] },
                      "defaultvalue": 1
                    },
                    "meta": {
                      "fullname": "plotOptions.vector.states.hover.lineWidthPlus",
                      "name": "lineWidthPlus",
                      "line": 55,
                      "lineEnd": 58,
                      "column": 12,
                      "filename": "code/es-modules/Series/Vector/VectorSeriesDefaults.js",
                      "default": 1
                    },
                    "children": {},
                    "extended": 1
                  },
                  "animation": {},
                  "enabled": {},
                  "halo": {},
                  "lineWidth": {},
                  "marker": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {},
              "select": {}
            },
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.vector.tooltip",
              "name": "tooltip",
              "line": 62,
              "lineEnd": 62,
              "column": 4,
              "filename": "code/es-modules/Series/Vector/VectorSeriesDefaults.js"
            },
            "children": {
              "pointFormat": {
                "doclet": {
                  "defaultvalue": "[{point.x}, {point.y}] Length: {point.length} Direction: {point.direction}°",
                  "type": { "names": ["string"] }
                },
                "meta": {
                  "fullname": "plotOptions.vector.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 63,
                  "lineEnd": 65,
                  "column": 8,
                  "filename": "code/es-modules/Series/Vector/VectorSeriesDefaults.js",
                  "default": "<b>[{point.x}, {point.y}]</b><br/>Length: <b>{point.length}</b><br/>Direction: <b>{point.direction}°</b><br/>"
                },
                "children": {},
                "extended": 1
              },
              "headerFormat": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "distance": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "vectorLength": {
            "doclet": {
              "description": "Maximum length of the arrows in the vector plot. The individual arrow\nlength is computed between 0 and this value.",
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 20
            },
            "meta": {
              "fullname": "plotOptions.vector.vectorLength",
              "name": "vectorLength",
              "line": 68,
              "lineEnd": 71,
              "column": 4,
              "filename": "code/es-modules/Series/Vector/VectorSeriesDefaults.js",
              "default": 20
            },
            "children": {},
            "extended": 1
          },
          "cluster": {},
          "findNearestPointBy": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "threshold": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "venn": {
        "doclet": {
          "description": "A Venn diagram displays all possible logical relations between a\ncollection of different sets. The sets are represented by circles, and\nthe relation between the sets are displayed by the overlap or lack of\noverlap between them. The venn diagram is a special case of Euler\ndiagrams, which can also be displayed by this series type.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `venn` series are defined in\n   [plotOptions.venn](plotOptions.venn).\n3. Options for one single series are given in\n   [the series instance array](series.venn).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        venn: {\n            // shared options for all venn series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'venn'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.venn.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === venn) {\n    // code specific to the venn series\n}\n```\n            ",
          "samples": [
            {
              "name": "Venn diagram",
              "value": "highcharts/demo/venn-diagram/",
              "products": ["highcharts"]
            },
            {
              "name": "Euler diagram",
              "value": "highcharts/demo/euler-diagram/",
              "products": ["highcharts"]
            },
            {
              "name": "Venn diagram with a legend",
              "value": "highcharts/series-venn/point-legend/",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.scatter",
          "exclude": [
            "connectEnds",
            "connectNulls",
            "cropThreshold",
            "dragDrop",
            "findNearestPointBy",
            "getExtremesFromAll",
            "jitter",
            "label",
            "linecap",
            "lineWidth",
            "linkedTo",
            "marker",
            "negativeColor",
            "pointInterval",
            "pointIntervalUnit",
            "pointPlacement",
            "pointStart",
            "softThreshold",
            "stacking",
            "steps",
            "threshold",
            "xAxis",
            "yAxis",
            "zoneAxis",
            "zones",
            "dataSorting",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:modules/venn"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
          "name": "venn",
          "fullname": "plotOptions.venn",
          "line": 18,
          "lineEnd": 22,
          "column": 0
        },
        "children": {
          "borderColor": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "#cccccc"
            },
            "meta": {
              "fullname": "plotOptions.venn.borderColor",
              "name": "borderColor",
              "line": 50,
              "lineEnd": 50,
              "column": 4,
              "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
              "default": "#cccccc"
            },
            "children": {},
            "extended": 1
          },
          "borderDashStyle": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "solid"
            },
            "meta": {
              "fullname": "plotOptions.venn.borderDashStyle",
              "name": "borderDashStyle",
              "line": 51,
              "lineEnd": 51,
              "column": 4,
              "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
              "default": "solid"
            },
            "children": {},
            "extended": 1
          },
          "borderWidth": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 1 },
            "meta": {
              "fullname": "plotOptions.venn.borderWidth",
              "name": "borderWidth",
              "line": 52,
              "lineEnd": 52,
              "column": 4,
              "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "brighten": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0 },
            "meta": {
              "fullname": "plotOptions.venn.brighten",
              "name": "brighten",
              "line": 53,
              "lineEnd": 53,
              "column": 4,
              "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "clip": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.venn.clip",
              "name": "clip",
              "line": 54,
              "lineEnd": 54,
              "column": 4,
              "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "colorByPoint": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.venn.colorByPoint",
              "name": "colorByPoint",
              "line": 55,
              "lineEnd": 55,
              "column": 4,
              "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.venn.dataLabels",
              "name": "dataLabels",
              "line": 56,
              "lineEnd": 56,
              "column": 4,
              "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js"
            },
            "children": {
              "enabled": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.venn.dataLabels.enabled",
                  "name": "enabled",
                  "line": 57,
                  "lineEnd": 57,
                  "column": 8,
                  "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "middle"
                },
                "meta": {
                  "fullname": "plotOptions.venn.dataLabels.verticalAlign",
                  "name": "verticalAlign",
                  "line": 58,
                  "lineEnd": 58,
                  "column": 8,
                  "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
                  "default": "middle"
                },
                "children": {},
                "extended": 1
              },
              "align": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "crop": {},
              "defer": {},
              "filter": {},
              "format": {},
              "formatter": {},
              "inside": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "style": {},
              "textPath": {},
              "useHTML": {},
              "x": {},
              "y": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "inactiveOtherPoints": {
            "doclet": {
              "defaultvalue": "true",
              "extends": "plotOptions.series.inactiveOtherPoints"
            },
            "meta": {
              "fullname": "plotOptions.venn.inactiveOtherPoints",
              "name": "inactiveOtherPoints",
              "line": 63,
              "lineEnd": 67,
              "column": 4,
              "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "legendSymbol": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "rectangle"
            },
            "meta": {
              "fullname": "plotOptions.venn.legendSymbol",
              "name": "legendSymbol",
              "line": 105,
              "lineEnd": 105,
              "column": 4,
              "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
              "default": "rectangle"
            },
            "children": {},
            "extended": 1
          },
          "opacity": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0.75 },
            "meta": {
              "fullname": "plotOptions.venn.opacity",
              "name": "opacity",
              "line": 74,
              "lineEnd": 74,
              "column": 4,
              "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
              "default": 0.75
            },
            "children": {},
            "extended": 1
          },
          "showInLegend": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.venn.showInLegend",
              "name": "showInLegend",
              "line": 75,
              "lineEnd": 75,
              "column": 4,
              "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.states"
            },
            "meta": {
              "fullname": "plotOptions.venn.states",
              "name": "states",
              "line": 82,
              "lineEnd": 82,
              "column": 4,
              "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js"
            },
            "children": {
              "hover": {
                "doclet": {
                  "exclude": ["halo"],
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.series.states.hover"
                },
                "meta": {
                  "fullname": "plotOptions.venn.states.hover",
                  "name": "hover",
                  "line": 83,
                  "lineEnd": 85,
                  "column": 8,
                  "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js"
                },
                "children": {
                  "borderColor": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "#333333"
                    },
                    "meta": {
                      "fullname": "plotOptions.venn.states.hover.borderColor",
                      "name": "borderColor",
                      "line": 88,
                      "lineEnd": 88,
                      "column": 12,
                      "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
                      "default": "#333333"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "opacity": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": 1
                    },
                    "meta": {
                      "fullname": "plotOptions.venn.states.hover.opacity",
                      "name": "opacity",
                      "line": 87,
                      "lineEnd": 87,
                      "column": 12,
                      "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
                      "default": 1
                    },
                    "children": {},
                    "extended": 1
                  },
                  "animation": {},
                  "enabled": {},
                  "lineWidth": {},
                  "lineWidthPlus": {},
                  "marker": {}
                },
                "extended": 1
              },
              "inactive": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.series.states.inactive"
                },
                "meta": {
                  "fullname": "plotOptions.venn.states.inactive",
                  "name": "inactive",
                  "line": 98,
                  "lineEnd": 98,
                  "column": 8,
                  "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js"
                },
                "children": {
                  "opacity": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": 0.075
                    },
                    "meta": {
                      "fullname": "plotOptions.venn.states.inactive.opacity",
                      "name": "opacity",
                      "line": 99,
                      "lineEnd": 99,
                      "column": 12,
                      "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
                      "default": 0.075
                    },
                    "children": {},
                    "extended": 1
                  },
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "select": {
                "doclet": {
                  "exclude": ["halo"],
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.series.states.select"
                },
                "meta": {
                  "fullname": "plotOptions.venn.states.select",
                  "name": "select",
                  "line": 90,
                  "lineEnd": 92,
                  "column": 8,
                  "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js"
                },
                "children": {
                  "animation": {
                    "doclet": {
                      "type": { "names": ["boolean"] },
                      "defaultvalue": false,
                      "extends": "plotOptions.series.states.select.animation"
                    },
                    "meta": {
                      "fullname": "plotOptions.venn.states.select.animation",
                      "name": "animation",
                      "line": 96,
                      "lineEnd": 96,
                      "column": 12,
                      "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
                      "default": false
                    },
                    "children": { "duration": {} },
                    "extended": 1
                  },
                  "borderColor": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "#000000"
                    },
                    "meta": {
                      "fullname": "plotOptions.venn.states.select.borderColor",
                      "name": "borderColor",
                      "line": 95,
                      "lineEnd": 95,
                      "column": 12,
                      "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
                      "default": "#000000"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "color": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "#cccccc"
                    },
                    "meta": {
                      "fullname": "plotOptions.venn.states.select.color",
                      "name": "color",
                      "line": 94,
                      "lineEnd": 94,
                      "column": 12,
                      "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
                      "default": "#cccccc"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "enabled": {},
                  "lineWidth": {},
                  "lineWidthPlus": {},
                  "marker": {}
                },
                "extended": 1
              },
              "normal": {}
            },
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.scatter.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.venn.tooltip",
              "name": "tooltip",
              "line": 102,
              "lineEnd": 102,
              "column": 4,
              "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js"
            },
            "children": {
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "{point.name}: {point.value}"
                },
                "meta": {
                  "fullname": "plotOptions.venn.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 103,
                  "lineEnd": 103,
                  "column": 8,
                  "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
                  "default": "{point.name}: {point.value}"
                },
                "children": {},
                "extended": 1
              },
              "headerFormat": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "distance": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "cluster": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "includeInDataExport": {},
          "keys": {},
          "onPoint": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "step": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "waterfall": {
        "doclet": {
          "description": "A waterfall chart displays sequentially introduced positive or negative\nvalues in cumulative columns.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `waterfall` series are defined in\n   [plotOptions.waterfall](plotOptions.waterfall).\n3. Options for one single series are given in\n   [the series instance array](series.waterfall).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        waterfall: {\n            // shared options for all waterfall series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'waterfall'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.waterfall.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === waterfall) {\n    // code specific to the waterfall series\n}\n```\n            ",
          "samples": [
            {
              "name": "Waterfall chart",
              "value": "highcharts/demo/waterfall/"
            },
            {
              "name": "Horizontal (inverted) waterfall",
              "value": "highcharts/plotoptions/waterfall-inverted/"
            },
            {
              "name": "Stacked waterfall chart",
              "value": "highcharts/plotoptions/waterfall-stacked/"
            }
          ],
          "extends": "plotOptions.column",
          "exclude": ["boostThreshold", "boostBlending"],
          "products": ["highcharts"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Waterfall/WaterfallSeriesDefaults.js",
          "name": "waterfall",
          "fullname": "plotOptions.waterfall",
          "line": 11,
          "lineEnd": 15,
          "column": 0
        },
        "children": {
          "borderColor": {
            "doclet": {
              "description": "The color of the border of each waterfall column.\n\nIn styled mode, the border stroke can be set with the\n`.highcharts-point` class.",
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "3.0.0",
              "products": ["highcharts"],
              "defaultvalue": "#333333"
            },
            "meta": {
              "fullname": "plotOptions.waterfall.borderColor",
              "name": "borderColor",
              "line": 87,
              "lineEnd": 96,
              "column": 4,
              "filename": "code/es-modules/Series/Waterfall/WaterfallSeriesDefaults.js",
              "default": "#333333"
            },
            "children": {},
            "extended": 1
          },
          "color": {
            "doclet": {
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              }
            },
            "meta": {
              "fullname": "plotOptions.waterfall.color",
              "name": "color",
              "line": 34,
              "lineEnd": 37,
              "filename": "code/es-modules/Series/Waterfall/WaterfallSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "dashStyle": {
            "doclet": {
              "description": "A name for the dash style to use for the line connecting the columns\nof the waterfall series. Possible values: Dash, DashDot, Dot,\nLongDash, LongDashDot, LongDashDotDot, ShortDash, ShortDashDot,\nShortDashDotDot, ShortDot, Solid\n\nIn styled mode, the stroke dash-array can be set with the\n`.highcharts-graph` class.",
              "type": { "names": ["Highcharts.DashStyleValue"] },
              "since": "3.0.0",
              "products": ["highcharts"],
              "defaultvalue": "Dot"
            },
            "meta": {
              "fullname": "plotOptions.waterfall.dashStyle",
              "name": "dashStyle",
              "line": 73,
              "lineEnd": 85,
              "column": 4,
              "filename": "code/es-modules/Series/Waterfall/WaterfallSeriesDefaults.js",
              "default": "Dot"
            },
            "children": {},
            "extended": 1
          },
          "lineColor": {
            "doclet": {
              "description": "The color of the line that connects columns in a waterfall series.\n\nIn styled mode, the stroke can be set with the `.highcharts-graph`\nclass.",
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "3.0.0",
              "products": ["highcharts"],
              "defaultvalue": "#333333"
            },
            "meta": {
              "fullname": "plotOptions.waterfall.lineColor",
              "name": "lineColor",
              "line": 62,
              "lineEnd": 71,
              "column": 4,
              "filename": "code/es-modules/Series/Waterfall/WaterfallSeriesDefaults.js",
              "default": "#333333"
            },
            "children": {},
            "extended": 1
          },
          "lineWidth": {
            "doclet": {
              "description": "The width of the line connecting waterfall columns.",
              "products": ["highcharts"],
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "plotOptions.waterfall.lineWidth",
              "name": "lineWidth",
              "line": 56,
              "lineEnd": 60,
              "column": 4,
              "filename": "code/es-modules/Series/Waterfall/WaterfallSeriesDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.states"
            },
            "meta": {
              "fullname": "plotOptions.waterfall.states",
              "name": "states",
              "line": 98,
              "lineEnd": 98,
              "column": 4,
              "filename": "code/es-modules/Series/Waterfall/WaterfallSeriesDefaults.js"
            },
            "children": {
              "hover": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.column.states.hover"
                },
                "meta": {
                  "fullname": "plotOptions.waterfall.states.hover",
                  "name": "hover",
                  "line": 99,
                  "lineEnd": 99,
                  "column": 8,
                  "filename": "code/es-modules/Series/Waterfall/WaterfallSeriesDefaults.js"
                },
                "children": {
                  "lineWidthPlus": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": 0
                    },
                    "meta": {
                      "fullname": "plotOptions.waterfall.states.hover.lineWidthPlus",
                      "name": "lineWidthPlus",
                      "line": 100,
                      "lineEnd": 100,
                      "column": 12,
                      "filename": "code/es-modules/Series/Waterfall/WaterfallSeriesDefaults.js",
                      "default": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "borderColor": {},
                  "brightness": {},
                  "color": {},
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "select": {},
              "inactive": {},
              "normal": {}
            },
            "extended": 1
          },
          "upColor": {
            "doclet": {
              "description": "The color used specifically for positive point columns. When not\nspecified, the general series color is used.\n\nIn styled mode, the waterfall colors can be set with the\n`.highcharts-point-negative`, `.highcharts-sum` and\n`.highcharts-intermediate-sum` classes.",
              "samples": [
                {
                  "name": "Waterfall",
                  "value": "highcharts/demo/waterfall/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "plotOptions.waterfall.upColor",
              "name": "upColor",
              "line": 38,
              "lineEnd": 52,
              "filename": "code/es-modules/Series/Waterfall/WaterfallSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "dragDrop": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "windbarb": {
        "doclet": {
          "description": "Wind barbs are a convenient way to represent wind speed and direction in\none graphical form. Wind direction is given by the stem direction, and\nwind speed by the number and shape of barbs.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `windbarb` series are defined in\n   [plotOptions.windbarb](plotOptions.windbarb).\n3. Options for one single series are given in\n   [the series instance array](series.windbarb).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        windbarb: {\n            // shared options for all windbarb series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'windbarb'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.windbarb.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === windbarb) {\n    // code specific to the windbarb series\n}\n```\n            ",
          "samples": [
            {
              "name": "Wind barb series",
              "value": "highcharts/demo/windbarb-series/",
              "products": ["highcharts", "highstock"]
            }
          ],
          "extends": "plotOptions.column",
          "exclude": [
            "boostThreshold",
            "marker",
            "connectEnds",
            "connectNulls",
            "cropThreshold",
            "dashStyle",
            "dragDrop",
            "gapSize",
            "gapUnit",
            "linecap",
            "shadow",
            "stacking",
            "step",
            "boostBlending"
          ],
          "since": "6.0.0",
          "products": ["highcharts", "highstock"],
          "requires": ["module:modules/windbarb"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
          "name": "windbarb",
          "fullname": "plotOptions.windbarb",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "colorKey": {
            "doclet": {
              "defaultvalue": "value",
              "type": { "names": ["string"] }
            },
            "meta": {
              "fullname": "plotOptions.windbarb.colorKey",
              "name": "colorKey",
              "line": 104,
              "lineEnd": 106,
              "column": 4,
              "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
              "default": "value"
            },
            "children": {},
            "extended": 1
          },
          "dataGrouping": {
            "doclet": {
              "description": "Data grouping options for the wind barbs. In Highcharts, this\nrequires the `modules/datagrouping.js` module to be loaded. In\nHighcharts Stock, data grouping is included.",
              "samples": [
                {
                  "name": "Wind barb with data grouping",
                  "value": "highcharts/plotoptions/windbarb-datagrouping"
                }
              ],
              "since": "7.1.0",
              "products": ["highcharts", "highstock"],
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.dataGrouping"
            },
            "meta": {
              "fullname": "plotOptions.windbarb.dataGrouping",
              "name": "dataGrouping",
              "line": 36,
              "lineEnd": 46,
              "column": 4,
              "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js"
            },
            "children": {
              "approximation": {
                "doclet": {
                  "description": "Approximation function for the data grouping. The default\nreturns an average of wind speed and a vector average direction\nweighted by wind speed.",
                  "products": ["highcharts", "highstock"],
                  "type": { "names": ["string", "function"] },
                  "since": "7.1.0",
                  "defaultvalue": "windbarb"
                },
                "meta": {
                  "fullname": "plotOptions.windbarb.dataGrouping.approximation",
                  "name": "approximation",
                  "line": 54,
                  "lineEnd": 62,
                  "column": 8,
                  "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
                  "default": "windbarb"
                },
                "children": {},
                "extended": 1
              },
              "enabled": {
                "doclet": {
                  "description": "Whether to enable data grouping.",
                  "products": ["highcharts", "highstock"],
                  "since": "7.1.0",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.windbarb.dataGrouping.enabled",
                  "name": "enabled",
                  "line": 48,
                  "lineEnd": 52,
                  "column": 8,
                  "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "groupPixelWidth": {
                "doclet": {
                  "description": "The approximate data group width.",
                  "products": ["highcharts", "highstock"],
                  "since": "7.1.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 30
                },
                "meta": {
                  "fullname": "plotOptions.windbarb.dataGrouping.groupPixelWidth",
                  "name": "groupPixelWidth",
                  "line": 64,
                  "lineEnd": 68,
                  "column": 8,
                  "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
                  "default": 30
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "lineWidth": {
            "doclet": {
              "description": "The line width of the wind barb symbols.",
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 2
            },
            "meta": {
              "fullname": "plotOptions.windbarb.lineWidth",
              "name": "lineWidth",
              "line": 71,
              "lineEnd": 73,
              "column": 4,
              "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
              "default": 2
            },
            "children": {},
            "extended": 1
          },
          "onSeries": {
            "doclet": {
              "description": "The id of another series in the chart that the wind barbs are\nprojected on. When `null`, the wind symbols are drawn on the X axis,\nbut offset up or down by the `yOffset` setting.",
              "samples": [
                {
                  "name": "Projected on area series",
                  "value": "highcharts/plotoptions/windbarb-onseries",
                  "products": ["highcharts", "highstock"]
                }
              ],
              "type": { "names": ["string", "null"] },
              "since": "6.0.0",
              "defaultvalue": null
            },
            "meta": {
              "fullname": "plotOptions.windbarb.onSeries",
              "name": "onSeries",
              "line": 75,
              "lineEnd": 84,
              "column": 4,
              "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
              "default": null
            },
            "children": {},
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.states"
            },
            "meta": {
              "fullname": "plotOptions.windbarb.states",
              "name": "states",
              "line": 86,
              "lineEnd": 86,
              "column": 4,
              "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js"
            },
            "children": {
              "hover": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.column.states.hover"
                },
                "meta": {
                  "fullname": "plotOptions.windbarb.states.hover",
                  "name": "hover",
                  "line": 87,
                  "lineEnd": 87,
                  "column": 8,
                  "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js"
                },
                "children": {
                  "lineWidthPlus": {
                    "doclet": {
                      "type": { "names": ["number"] },
                      "defaultvalue": 0
                    },
                    "meta": {
                      "fullname": "plotOptions.windbarb.states.hover.lineWidthPlus",
                      "name": "lineWidthPlus",
                      "line": 88,
                      "lineEnd": 88,
                      "column": 12,
                      "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
                      "default": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "borderColor": {},
                  "brightness": {},
                  "color": {},
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "select": {},
              "inactive": {},
              "normal": {}
            },
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.windbarb.tooltip",
              "name": "tooltip",
              "line": 91,
              "lineEnd": 91,
              "column": 4,
              "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js"
            },
            "children": {
              "pointFormat": {
                "doclet": {
                  "description": "The default point format for the wind barb tooltip. Note the\n`point.beaufort` property that refers to the Beaufort wind scale.\nThe names can be internationalized by modifying\n`Highcharts.seriesTypes.windbarb.prototype.beaufortNames`.",
                  "type": { "names": ["string"] },
                  "defaultvalue": "<span style=\"color:{point.color}\">●</span> {series.name}: <b>{point.value}</b> ({point.beaufort})<br/>"
                },
                "meta": {
                  "fullname": "plotOptions.windbarb.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 92,
                  "lineEnd": 97,
                  "column": 8,
                  "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
                  "default": "<span style=\"color:{point.color}\">●</span> {series.name}: <b>{point.value}</b> ({point.beaufort})<br/>"
                },
                "children": {},
                "extended": 1
              },
              "distance": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "headerFormat": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "vectorLength": {
            "doclet": {
              "description": "Pixel length of the stems.",
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 20
            },
            "meta": {
              "fullname": "plotOptions.windbarb.vectorLength",
              "name": "vectorLength",
              "line": 100,
              "lineEnd": 102,
              "column": 4,
              "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
              "default": 20
            },
            "children": {},
            "extended": 1
          },
          "xOffset": {
            "doclet": {
              "description": "Horizontal offset from the cartesian position, in pixels. When the\nchart is inverted, this option allows translation like\n[yOffset](#plotOptions.windbarb.yOffset) in non inverted charts.",
              "since": "6.1.0",
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "plotOptions.windbarb.xOffset",
              "name": "xOffset",
              "line": 115,
              "lineEnd": 121,
              "column": 4,
              "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "yOffset": {
            "doclet": {
              "description": "Vertical offset from the cartesian position, in pixels. The default\nvalue makes sure the symbols don't overlap the X axis when `onSeries`\nis `null`, and that they don't overlap the linked series when\n`onSeries` is given.",
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": -20
            },
            "meta": {
              "fullname": "plotOptions.windbarb.yOffset",
              "name": "yOffset",
              "line": 108,
              "lineEnd": 113,
              "column": 4,
              "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
              "default": -20
            },
            "children": {},
            "extended": 1
          },
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "dataLabels": {},
          "depth": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "stickyTracking": {},
          "threshold": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "wordcloud": {
        "doclet": {
          "description": "A word cloud is a visualization of a set of words, where the size and\nplacement of a word is determined by how it is weighted.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `wordcloud` series are defined in\n   [plotOptions.wordcloud](plotOptions.wordcloud).\n3. Options for one single series are given in\n   [the series instance array](series.wordcloud).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        wordcloud: {\n            // shared options for all wordcloud series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'wordcloud'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.wordcloud.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === wordcloud) {\n    // code specific to the wordcloud series\n}\n```\n            ",
          "samples": [
            { "name": "Word Cloud chart", "value": "highcharts/demo/wordcloud" }
          ],
          "extends": "plotOptions.column",
          "exclude": [
            "allAreas",
            "boostThreshold",
            "clip",
            "colorAxis",
            "compare",
            "compareBase",
            "crisp",
            "cropThreshold",
            "dataGrouping",
            "dataLabels",
            "depth",
            "dragDrop",
            "edgeColor",
            "findNearestPointBy",
            "getExtremesFromAll",
            "grouping",
            "groupPadding",
            "groupZPadding",
            "joinBy",
            "maxPointWidth",
            "minPointLength",
            "navigatorOptions",
            "negativeColor",
            "pointInterval",
            "pointIntervalUnit",
            "pointPadding",
            "pointPlacement",
            "pointRange",
            "pointStart",
            "pointWidth",
            "pointStart",
            "pointWidth",
            "shadow",
            "showCheckbox",
            "showInNavigator",
            "softThreshold",
            "stacking",
            "threshold",
            "zoneAxis",
            "zones",
            "dataSorting",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "since": "6.0.0",
          "requires": ["module:modules/wordcloud"]
        },
        "meta": {
          "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
          "name": "wordcloud",
          "fullname": "plotOptions.wordcloud",
          "line": 13,
          "lineEnd": 17,
          "column": 0
        },
        "children": {
          "animation": {
            "doclet": { "type": { "names": ["*"] } },
            "meta": {
              "fullname": "plotOptions.wordcloud.animation",
              "name": "animation",
              "line": 52,
              "lineEnd": 52,
              "column": 4,
              "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js"
            },
            "children": {
              "duration": {
                "doclet": {
                  "internal": true,
                  "type": { "names": ["number"] },
                  "defaultvalue": 500
                },
                "meta": {
                  "fullname": "plotOptions.wordcloud.animation.duration",
                  "name": "duration",
                  "line": 53,
                  "lineEnd": 53,
                  "column": 8,
                  "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
                  "default": 500
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "borderWidth": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0 },
            "meta": {
              "fullname": "plotOptions.wordcloud.borderWidth",
              "name": "borderWidth",
              "line": 56,
              "lineEnd": 56,
              "column": 4,
              "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "colorByPoint": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.wordcloud.colorByPoint",
              "name": "colorByPoint",
              "line": 60,
              "lineEnd": 60,
              "column": 17,
              "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "maxFontSize": {
            "doclet": {
              "description": "The word with the largest weight will have a font size equal to this\nvalue. The font size of a word is the ratio between its weight and\nthe largest occuring weight, multiplied with the value of\nmaxFontSize.",
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 25
            },
            "meta": {
              "fullname": "plotOptions.wordcloud.maxFontSize",
              "name": "maxFontSize",
              "line": 68,
              "lineEnd": 73,
              "column": 4,
              "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
              "default": 25
            },
            "children": {},
            "extended": 1
          },
          "minFontSize": {
            "doclet": {
              "description": "A threshold determining the minimum font size that can be applied to\na word.",
              "since": "6.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 1
            },
            "meta": {
              "fullname": "plotOptions.wordcloud.minFontSize",
              "name": "minFontSize",
              "line": 63,
              "lineEnd": 66,
              "column": 4,
              "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
              "default": 1
            },
            "children": {},
            "extended": 1
          },
          "placementStrategy": {
            "doclet": {
              "description": "This option decides which algorithm is used for placement, and\nrotation of a word. The choice of algorith is therefore a crucial\npart of the resulting layout of the wordcloud. It is possible for\nusers to add their own custom placement strategies for use in word\ncloud. Read more about it in our\n[documentation](https://www.highcharts.com/docs/chart-and-series-types/word-cloud-series#custom-placement-strategies)",
              "values": "[\"center\", \"random\"]",
              "since": "6.0.0",
              "type": { "names": ["string"] },
              "defaultvalue": "center"
            },
            "meta": {
              "fullname": "plotOptions.wordcloud.placementStrategy",
              "name": "placementStrategy",
              "line": 75,
              "lineEnd": 84,
              "column": 4,
              "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
              "default": "center"
            },
            "children": {},
            "extended": 1
          },
          "rotation": {
            "doclet": {
              "description": "Rotation options for the words in the wordcloud.",
              "samples": [
                {
                  "name": "Word cloud with rotation",
                  "value": "highcharts/plotoptions/wordcloud-rotation"
                }
              ],
              "since": "6.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.wordcloud.rotation",
              "name": "rotation",
              "line": 86,
              "lineEnd": 91,
              "column": 4,
              "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js"
            },
            "children": {
              "from": {
                "doclet": {
                  "description": "The smallest degree of rotation for a word.",
                  "since": "6.0.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 0
                },
                "meta": {
                  "fullname": "plotOptions.wordcloud.rotation.from",
                  "name": "from",
                  "line": 93,
                  "lineEnd": 95,
                  "column": 8,
                  "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
                  "default": 0
                },
                "children": {},
                "extended": 1
              },
              "orientations": {
                "doclet": {
                  "description": "The number of possible orientations for a word, within the range\nof `rotation.from` and `rotation.to`. Must be a number larger\nthan 0.",
                  "since": "6.0.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 2
                },
                "meta": {
                  "fullname": "plotOptions.wordcloud.rotation.orientations",
                  "name": "orientations",
                  "line": 97,
                  "lineEnd": 101,
                  "column": 8,
                  "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
                  "default": 2
                },
                "children": {},
                "extended": 1
              },
              "to": {
                "doclet": {
                  "description": "The largest degree of rotation for a word.",
                  "since": "6.0.0",
                  "type": { "names": ["number"] },
                  "defaultvalue": 90
                },
                "meta": {
                  "fullname": "plotOptions.wordcloud.rotation.to",
                  "name": "to",
                  "line": 103,
                  "lineEnd": 105,
                  "column": 8,
                  "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
                  "default": 90
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "showInLegend": {
            "doclet": {
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "plotOptions.wordcloud.showInLegend",
              "name": "showInLegend",
              "line": 108,
              "lineEnd": 108,
              "column": 4,
              "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "spiral": {
            "doclet": {
              "description": "Spiral used for placing a word after the initial position\nexperienced a collision with either another word or the borders.\nIt is possible for users to add their own custom spiralling\nalgorithms for use in word cloud. Read more about it in our\n[documentation](https://www.highcharts.com/docs/chart-and-series-types/word-cloud-series#custom-spiralling-algorithm)",
              "values": "[\"archimedean\", \"rectangular\", \"square\"]",
              "since": "6.0.0",
              "type": { "names": ["string"] },
              "defaultvalue": "rectangular"
            },
            "meta": {
              "fullname": "plotOptions.wordcloud.spiral",
              "name": "spiral",
              "line": 109,
              "lineEnd": 117,
              "column": 4,
              "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
              "default": "rectangular"
            },
            "children": {},
            "extended": 1
          },
          "style": {
            "doclet": {
              "description": "CSS styles for the words.",
              "type": { "names": ["Highcharts.CSSObject"] },
              "defaultvalue": "{\"fontFamily\":\"sans-serif\", \"fontWeight\": \"900\"}",
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "plotOptions.wordcloud.style",
              "name": "style",
              "line": 119,
              "lineEnd": 124,
              "column": 4,
              "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.wordcloud.tooltip",
              "name": "tooltip",
              "line": 133,
              "lineEnd": 133,
              "column": 4,
              "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js"
            },
            "children": {
              "followPointer": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.wordcloud.tooltip.followPointer",
                  "name": "followPointer",
                  "line": 134,
                  "lineEnd": 134,
                  "column": 8,
                  "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "<span style=\"color:{point.color}\">●</span> {series.name}: <b>{point.weight}</b><br/>"
                },
                "meta": {
                  "fullname": "plotOptions.wordcloud.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 135,
                  "lineEnd": 135,
                  "column": 8,
                  "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
                  "default": "<span style=\"color:{point.color}\">●</span> {series.name}: <b>{point.weight}</b><br/>"
                },
                "children": {},
                "extended": 1
              },
              "distance": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "headerFormat": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "borderColor": {},
          "borderRadius": {},
          "centerInCategory": {},
          "colors": {},
          "edgeWidth": {},
          "states": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animationLimit": {},
          "className": {},
          "color": {},
          "colorIndex": {},
          "colorKey": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "xrange": {
        "doclet": {
          "description": "The X-range series displays ranges on the X axis, typically time\nintervals with a start and end date.\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `xrange` series are defined in\n   [plotOptions.xrange](plotOptions.xrange).\n3. Options for one single series are given in\n   [the series instance array](series.xrange).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        xrange: {\n            // shared options for all xrange series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'xrange'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.xrange.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === xrange) {\n    // code specific to the xrange series\n}\n```\n            ",
          "samples": [
            {
              "name": "X-range",
              "value": "highcharts/demo/x-range/",
              "products": ["highcharts"]
            },
            {
              "name": "Styled mode X-range",
              "value": "highcharts/css/x-range/",
              "products": ["highcharts"]
            },
            {
              "name": "Inverted X-range",
              "value": "highcharts/chart/inverted-xrange/",
              "products": ["highcharts"]
            }
          ],
          "extends": "plotOptions.column",
          "since": "6.0.0",
          "products": ["highcharts", "highstock", "gantt"],
          "exclude": [
            "boostThreshold",
            "crisp",
            "cropThreshold",
            "depth",
            "edgeColor",
            "edgeWidth",
            "findNearestPointBy",
            "getExtremesFromAll",
            "negativeColor",
            "pointInterval",
            "pointIntervalUnit",
            "pointPlacement",
            "pointRange",
            "pointStart",
            "softThreshold",
            "stacking",
            "threshold",
            "data",
            "dataSorting",
            "boostBlending"
          ],
          "requires": ["module:modules/xrange"]
        },
        "meta": {
          "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
          "name": "xrange",
          "fullname": "plotOptions.xrange",
          "line": 15,
          "lineEnd": 19,
          "column": 0
        },
        "children": {
          "borderRadius": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 3 },
            "meta": {
              "fullname": "plotOptions.xrange.borderRadius",
              "name": "borderRadius",
              "line": 97,
              "lineEnd": 97,
              "column": 4,
              "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
              "default": 3
            },
            "children": {},
            "extended": 1
          },
          "colorByPoint": {
            "doclet": {
              "description": "In an X-range series, this option makes all points of the same Y-axis\ncategory the same color.",
              "since": "6.0.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "plotOptions.xrange.colorByPoint",
              "name": "colorByPoint",
              "line": 43,
              "lineEnd": 53,
              "column": 4,
              "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.dataLabels"
            },
            "meta": {
              "fullname": "plotOptions.xrange.dataLabels",
              "name": "dataLabels",
              "line": 77,
              "lineEnd": 77,
              "column": 4,
              "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js"
            },
            "children": {
              "inside": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": true
                },
                "meta": {
                  "fullname": "plotOptions.xrange.dataLabels.inside",
                  "name": "inside",
                  "line": 87,
                  "lineEnd": 87,
                  "column": 8,
                  "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
                  "default": true
                },
                "children": {},
                "extended": 1
              },
              "style": {
                "doclet": { "type": { "names": ["*"] } },
                "meta": {
                  "fullname": "plotOptions.xrange.dataLabels.style",
                  "name": "style",
                  "line": 89,
                  "lineEnd": 89,
                  "column": 8,
                  "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js"
                },
                "children": {
                  "whiteSpace": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "nowrap"
                    },
                    "meta": {
                      "fullname": "plotOptions.xrange.dataLabels.style.whiteSpace",
                      "name": "whiteSpace",
                      "line": 90,
                      "lineEnd": 90,
                      "column": 12,
                      "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
                      "default": "nowrap"
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "middle"
                },
                "meta": {
                  "fullname": "plotOptions.xrange.dataLabels.verticalAlign",
                  "name": "verticalAlign",
                  "line": 88,
                  "lineEnd": 88,
                  "column": 8,
                  "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
                  "default": "middle"
                },
                "children": {},
                "extended": 1
              },
              "align": {},
              "y": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "crop": {},
              "defer": {},
              "enabled": {},
              "filter": {},
              "format": {},
              "formatter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "textPath": {},
              "useHTML": {},
              "x": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "dragDrop": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.dragDrop"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "plotOptions.xrange.dragDrop",
              "line": 0,
              "lineEnd": 0,
              "name": "dragDrop"
            },
            "children": {
              "draggableX1": {
                "doclet": {
                  "description": "Allow x value to be dragged individually.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "requires": ["module:modules/draggable-points"]
                },
                "meta": {
                  "fullname": "plotOptions.xrange.dragDrop.draggableX1",
                  "name": "draggableX1",
                  "line": 463,
                  "lineEnd": 470,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropProps.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "draggableX2": {
                "doclet": {
                  "description": "Allow x2 value to be dragged individually.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "true",
                  "requires": ["module:modules/draggable-points"]
                },
                "meta": {
                  "fullname": "plotOptions.xrange.dragDrop.draggableX2",
                  "name": "draggableX2",
                  "line": 481,
                  "lineEnd": 488,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropProps.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dragHandle": {},
              "dragMaxX": {},
              "dragMaxY": {},
              "dragMinX": {},
              "dragMinY": {},
              "dragPrecisionX": {},
              "dragPrecisionY": {},
              "dragSensitivity": {},
              "draggableX": {},
              "draggableY": {},
              "groupBy": {},
              "guideBox": {},
              "liveRedraw": {}
            },
            "extended": 1
          },
          "partialFill": {
            "doclet": {
              "description": "A partial fill for each point, typically used to visualize how much\nof a task is performed. The partial fill object can be set either on\nseries or point level.",
              "samples": [
                {
                  "name": "X-range with partial fill",
                  "value": "highcharts/demo/x-range",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts", "highstock", "gantt"],
              "since": "6.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "plotOptions.xrange.partialFill",
              "name": "partialFill",
              "line": 43,
              "lineEnd": 53,
              "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "fill": {
                "doclet": {
                  "description": "The fill color to be used for partial fills. Defaults to a darker\nshade of the point color.",
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "products": ["highcharts", "highstock", "gantt"],
                  "since": "6.0.0"
                },
                "meta": {
                  "fullname": "plotOptions.xrange.partialFill.fill",
                  "name": "fill",
                  "line": 54,
                  "lineEnd": 61,
                  "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "pointRange": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0 },
            "meta": {
              "fullname": "plotOptions.xrange.pointRange",
              "name": "pointRange",
              "line": 98,
              "lineEnd": 98,
              "column": 4,
              "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "tooltip": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.tooltip"
            },
            "meta": {
              "fullname": "plotOptions.xrange.tooltip",
              "name": "tooltip",
              "line": 93,
              "lineEnd": 93,
              "column": 4,
              "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js"
            },
            "children": {
              "headerFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "<span style=\"font-size: 0.8em\">{ucfirst point.x} - {point.x2}</span><br/>"
                },
                "meta": {
                  "fullname": "plotOptions.xrange.tooltip.headerFormat",
                  "name": "headerFormat",
                  "line": 94,
                  "lineEnd": 94,
                  "column": 8,
                  "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
                  "default": "<span style=\"font-size: 0.8em\">{ucfirst point.x} - {point.x2}</span><br/>"
                },
                "children": {},
                "extended": 1
              },
              "pointFormat": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "<span style=\"color:{point.color}\">●</span> {series.name}: <b>{point.yCategory}</b><br/>"
                },
                "meta": {
                  "fullname": "plotOptions.xrange.tooltip.pointFormat",
                  "name": "pointFormat",
                  "line": 95,
                  "lineEnd": 95,
                  "column": 8,
                  "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
                  "default": "<span style=\"color:{point.color}\">●</span> {series.name}: <b>{point.yCategory}</b><br/>"
                },
                "children": {},
                "extended": 1
              },
              "distance": {},
              "clusterFormat": {},
              "dateTimeLabelFormats": {},
              "followPointer": {},
              "followTouchMove": {},
              "footerFormat": {},
              "format": {},
              "nullFormat": {},
              "nullFormatter": {},
              "pointFormatter": {},
              "valueDecimals": {},
              "valuePrefix": {},
              "valueSuffix": {},
              "xDateFormat": {}
            },
            "extended": 1
          },
          "borderColor": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colors": {},
          "dataGrouping": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      }
    },
    "extended": 1
  },
  "responsive": {
    "doclet": {
      "description": "Allows setting a set of rules to apply for different screen or chart\nsizes. Each rule specifies additional chart options.",
      "samples": [
        {
          "name": "Stock chart",
          "value": "stock/demo/responsive/",
          "products": ["highstock"]
        },
        { "name": "Axis", "value": "highcharts/responsive/axis/" },
        { "name": "Legend", "value": "highcharts/responsive/legend/" },
        { "name": "Class name", "value": "highcharts/responsive/classname/" }
      ],
      "since": "5.0.0",
      "type": { "names": ["*"] }
    },
    "meta": {
      "fullname": "responsive",
      "name": "responsive",
      "line": 153,
      "lineEnd": 168,
      "filename": "code/es-modules/Core/Responsive.js",
      "column": 0
    },
    "children": {
      "rules": {
        "doclet": {
          "description": "A set of rules for responsive settings. The rules are executed from\nthe top down.",
          "samples": [
            {
              "name": "Axis changes",
              "value": "highcharts/responsive/axis/",
              "products": ["highcharts"]
            },
            {
              "name": "Axis changes",
              "value": "highcharts/responsive/axis/",
              "products": ["highstock"]
            },
            {
              "name": "Axis changes",
              "value": "highcharts/responsive/axis/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["Array.<*>"] },
          "since": "5.0.0"
        },
        "meta": {
          "fullname": "responsive.rules",
          "name": "rules",
          "line": 169,
          "lineEnd": 183,
          "filename": "code/es-modules/Core/Responsive.js",
          "column": 0
        },
        "children": {
          "chartOptions": {
            "doclet": {
              "description": "A full set of chart options to apply as overrides to the general\nchart options. The chart options are applied when the given rule\nis active.\n\nA special case is configuration objects that take arrays, for example\n[xAxis](#xAxis), [yAxis](#yAxis) or [series](#series). For these\ncollections, an `id` option is used to map the new option set to\nan existing object. If an existing object of the same id is not found,\nthe item of the same index updated. So for example, setting `chartOptions`\nwith two series items without an `id`, will cause the existing chart's\ntwo series to be updated with respective options.",
              "samples": [
                {
                  "name": "Stock chart",
                  "value": "stock/demo/responsive/",
                  "products": ["highstock"]
                },
                { "name": "Axis", "value": "highcharts/responsive/axis/" },
                { "name": "Legend", "value": "highcharts/responsive/legend/" },
                {
                  "name": "Class name",
                  "value": "highcharts/responsive/classname/"
                }
              ],
              "type": { "names": ["Highcharts.Options"] },
              "since": "5.0.0"
            },
            "meta": {
              "fullname": "responsive.rules.chartOptions",
              "name": "chartOptions",
              "line": 184,
              "lineEnd": 209,
              "filename": "code/es-modules/Core/Responsive.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "condition": {
            "doclet": {
              "description": "Under which conditions the rule applies.",
              "since": "5.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "responsive.rules.condition",
              "name": "condition",
              "line": 210,
              "lineEnd": 215,
              "filename": "code/es-modules/Core/Responsive.js",
              "column": 0
            },
            "children": {
              "callback": {
                "doclet": {
                  "description": "A callback function to gain complete control on when the responsive\nrule applies. Return `true` if it applies. This opens for checking\nagainst other metrics than the chart size, for example the document\nsize or other elements.",
                  "type": {
                    "names": ["Highcharts.ResponsiveCallbackFunction"]
                  },
                  "since": "5.0.0",
                  "context": "Highcharts.Chart"
                },
                "meta": {
                  "fullname": "responsive.rules.condition.callback",
                  "name": "callback",
                  "line": 216,
                  "lineEnd": 226,
                  "filename": "code/es-modules/Core/Responsive.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "maxHeight": {
                "doclet": {
                  "description": "The responsive rule applies if the chart height is less than this.",
                  "type": { "names": ["number"] },
                  "since": "5.0.0"
                },
                "meta": {
                  "fullname": "responsive.rules.condition.maxHeight",
                  "name": "maxHeight",
                  "line": 227,
                  "lineEnd": 233,
                  "filename": "code/es-modules/Core/Responsive.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "maxWidth": {
                "doclet": {
                  "description": "The responsive rule applies if the chart width is less than this.",
                  "samples": [
                    {
                      "name": "Max width is 500",
                      "value": "highcharts/responsive/axis/"
                    }
                  ],
                  "type": { "names": ["number"] },
                  "since": "5.0.0"
                },
                "meta": {
                  "fullname": "responsive.rules.condition.maxWidth",
                  "name": "maxWidth",
                  "line": 234,
                  "lineEnd": 243,
                  "filename": "code/es-modules/Core/Responsive.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "minHeight": {
                "doclet": {
                  "description": "The responsive rule applies if the chart height is greater than this.",
                  "type": { "names": ["number"] },
                  "defaultvalue": "0",
                  "since": "5.0.0"
                },
                "meta": {
                  "fullname": "responsive.rules.condition.minHeight",
                  "name": "minHeight",
                  "line": 244,
                  "lineEnd": 251,
                  "filename": "code/es-modules/Core/Responsive.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "minWidth": {
                "doclet": {
                  "description": "The responsive rule applies if the chart width is greater than this.",
                  "type": { "names": ["number"] },
                  "defaultvalue": "0",
                  "since": "5.0.0"
                },
                "meta": {
                  "fullname": "responsive.rules.condition.minWidth",
                  "name": "minWidth",
                  "line": 252,
                  "lineEnd": 259,
                  "filename": "code/es-modules/Core/Responsive.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsResponsiveRulesConditionOptions",
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsResponsiveRulesOptions",
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsResponsiveOptions",
    "extended": 1
  },
  "series": {
    "doclet": {
      "description": "Series options for specific data and the data itself. In TypeScript you\nhave to cast the series options to specific series types, to get all\npossible options for a series.",
      "examples": [
        "// TypeScript example\nHighcharts.chart('container', {\n    series: [{\n        color: '#06C',\n        data: [[0, 1], [2, 3]]\n    } as Highcharts.SeriesLineOptions ]\n});"
      ],
      "type": { "names": ["Array.<*>"] }
    },
    "meta": {
      "fullname": "series",
      "name": "series",
      "line": 3595,
      "lineEnd": 3611,
      "filename": "code/es-modules/Core/Series/Series.js",
      "column": 0
    },
    "children": {
      "arcdiagram": {
        "doclet": {
          "description": "An `arcdiagram` series. If the [type](#series.arcdiagram.type)\noption is not specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `arcdiagram` series are defined in\n   [plotOptions.arcdiagram](plotOptions.arcdiagram).\n3. Options for one single series are given in\n   [the series instance array](series.arcdiagram).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        arcdiagram: {\n            // shared options for all arcdiagram series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'arcdiagram'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.arcdiagram.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === arcdiagram) {\n    // code specific to the arcdiagram series\n}\n```\n            ",
          "extends": "series,plotOptions.arcdiagram",
          "exclude": [
            "dataSorting",
            "boostThreshold",
            "boostBlending",
            "curveFactor",
            "connectEnds",
            "connectNulls",
            "colorAxis",
            "colorKey",
            "dataSorting",
            "dragDrop",
            "getExtremesFromAll",
            "nodePadding",
            "centerInCategory",
            "pointInterval",
            "pointIntervalUnit",
            "pointPlacement",
            "pointStart",
            "relativeXValue",
            "softThreshold",
            "stack",
            "stacking",
            "step",
            "xAxis",
            "yAxis"
          ],
          "products": ["highcharts"],
          "requires": ["module:modules/sankey", "module:modules/arc-diagram"]
        },
        "meta": {
          "fullname": "series.arcdiagram",
          "name": "arcdiagram",
          "line": 157,
          "lineEnd": 172,
          "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `arcdiagram` series type,\npoints can be given in the following way:\n\nAn array of objects with named values. The following snippet shows only a few\nsettings, see the complete options set below. If the total number of data\npoints exceeds the series' [turboThreshold](#series.area.turboThreshold),\nthis option is not available.\n\n ```js\n    data: [{\n        from: 'Category1',\n        to: 'Category2',\n        weight: 2\n    }, {\n        from: 'Category1',\n        to: 'Category3',\n        weight: 5\n    }]\n ```",
              "type": { "names": ["Array.<*>"] },
              "extends": "series.sankey.data",
              "products": ["highcharts"],
              "exclude": ["outgoing", "dataLabels"]
            },
            "meta": {
              "fullname": "series.arcdiagram.data",
              "name": "data",
              "line": 211,
              "lineEnd": 237,
              "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "dataLabels": {
                "doclet": {
                  "type": {
                    "names": [
                      "Highcharts.SeriesArcDiagramDataLabelsOptionsObject",
                      "Array.<Highcharts.SeriesArcDiagramDataLabelsOptionsObject>"
                    ]
                  },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.arcdiagram.data.dataLabels",
                  "name": "dataLabels",
                  "line": 178,
                  "lineEnd": 182,
                  "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "color": {},
              "from": {},
              "to": {},
              "weight": {},
              "accessibility": {},
              "className": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {}
            },
            "extended": 1
          },
          "linkRadius": {
            "doclet": {
              "description": "The radius of the link arc. If not set, series renders a semi-circle\nbetween the nodes, except when overflowing the edge of the plot area,\nin which case an arc touching the edge is rendered. If `linkRadius`\nis set, an arc extending to the given value is rendered.",
              "type": { "names": ["number"] },
              "since": "10.0.0",
              "defaultvalue": "undefined",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.arcdiagram.linkRadius",
              "name": "linkRadius",
              "line": 98,
              "lineEnd": 109,
              "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "linkWeight": {
            "doclet": {
              "description": "The global link weight, in pixels. If not set, width is calculated\nper link, depending on the weight value.",
              "samples": [
                {
                  "name": "Link weight",
                  "value": "highcharts/series-arcdiagram/link-weight"
                }
              ],
              "type": { "names": ["number"] },
              "since": "10.0.0",
              "defaultvalue": "undefined",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.arcdiagram.linkWeight",
              "name": "linkWeight",
              "line": 110,
              "lineEnd": 122,
              "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "marker": {
            "doclet": {
              "extends": "plotOptions.series.marker",
              "exclude": [
                "enabled",
                "enabledThreshold",
                "height",
                "radius",
                "width"
              ]
            },
            "meta": {
              "fullname": "series.arcdiagram.marker",
              "name": "marker",
              "line": 173,
              "lineEnd": 177,
              "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "fillColor": {},
              "lineColor": {},
              "lineWidth": {},
              "states": {},
              "symbol": {}
            },
            "extended": 1
          },
          "nodes": {
            "doclet": {
              "description": "A collection of options for the individual nodes. The nodes in an arc diagram\nare auto-generated instances of `Highcharts.Point`, but options can be\napplied here and linked by the `id`.",
              "extends": "series.sankey.nodes",
              "type": { "names": ["Array.<*>"] },
              "products": ["highcharts"],
              "exclude": ["column", "level"]
            },
            "meta": {
              "fullname": "series.arcdiagram.nodes",
              "name": "nodes",
              "line": 183,
              "lineEnd": 193,
              "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "dataLabels": {
                "doclet": {
                  "description": "Individual data label for each node. The options are the same as the ones for\n[series.arcdiagram.dataLabels](#series.arcdiagram.dataLabels).",
                  "type": {
                    "names": [
                      "Highcharts.SeriesArcDiagramDataLabelsOptionsObject",
                      "Array.<Highcharts.SeriesArcDiagramDataLabelsOptionsObject>"
                    ]
                  },
                  "extends": "series.sankey.nodes.dataLabels"
                },
                "meta": {
                  "fullname": "series.arcdiagram.nodes.dataLabels",
                  "name": "dataLabels",
                  "line": 194,
                  "lineEnd": 202,
                  "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "backgroundColor": {},
                  "crop": {},
                  "enabled": {},
                  "format": {},
                  "formatter": {},
                  "inside": {},
                  "nodeFormat": {},
                  "nodeFormatter": {},
                  "align": {},
                  "verticalAlign": {},
                  "y": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "defer": {},
                  "filter": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "style": {},
                  "textPath": {},
                  "useHTML": {},
                  "x": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "color": {},
              "colorIndex": {},
              "height": {},
              "id": {},
              "name": {},
              "offset": {},
              "offsetHorizontal": {},
              "offsetVertical": {}
            },
            "extended": 1
          },
          "offset": {
            "doclet": {
              "description": "The offset of an arc diagram nodes column in relation to the\n`plotArea`. The offset equal to 50% places nodes in the center of a\nchart. By default the series is placed so that the biggest node is\ntouching the bottom border of the `plotArea`.",
              "type": { "names": ["string"] },
              "since": "10.0.0",
              "defaultvalue": "'100%'",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.arcdiagram.offset",
              "name": "offset",
              "line": 133,
              "lineEnd": 144,
              "filename": "code/es-modules/Series/ArcDiagram/ArcDiagramSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "centeredLinks": {},
          "dataLabels": {},
          "equalNodes": {},
          "reversed": {},
          "borderWidth": {},
          "colorByPoint": {},
          "inactiveOtherPoints": {},
          "levels": {},
          "linkColorMode": {},
          "linkOpacity": {},
          "minLinkWidth": {},
          "nodeDistance": {},
          "nodeWidth": {},
          "opacity": {},
          "showInLegend": {},
          "states": {},
          "tooltip": {},
          "borderColor": {},
          "colors": {},
          "dataGrouping": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "onPoint": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "area": {
        "doclet": {
          "description": "A `area` series. If the [type](#series.area.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `area` series are defined in\n   [plotOptions.area](plotOptions.area).\n3. Options for one single series are given in\n   [the series instance array](series.area).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        area: {\n            // shared options for all area series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'area'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.area.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === area) {\n    // code specific to the area series\n}\n```\n            ",
          "extends": "series,plotOptions.area",
          "exclude": ["dataParser", "dataURL", "useOhlcData"],
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "series.area",
          "name": "area",
          "line": 145,
          "lineEnd": 153,
          "filename": "code/es-modules/Series/Area/AreaSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "color": {
            "doclet": {
              "see": [
                "[fillColor](#series.area.fillColor)",
                "[fillOpacity](#series.area.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "series.area.color",
              "name": "color",
              "line": 154,
              "lineEnd": 159,
              "filename": "code/es-modules/Series/Area/AreaSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `area` series type,\npoints can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. The `x` values will be automatically\n   calculated, either starting at 0 and incremented by 1, or from\n   `pointStart` * and `pointInterval` given in the series options. If the\n   axis has categories, these will be used. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of arrays with 2 values. In this case, the values correspond to\n   `x,y`. If the first value is a string, it is applied as the name of the\n   point, and the `x` value is inferred.\n   ```js\n   data: [\n       [0, 9],\n       [1, 7],\n       [2, 6]\n   ]\n   ```\n\n3. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.area.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 1,\n       y: 9,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       y: 6,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(number|Array.<(number|string), (number|null)>|null|*)>"
                ]
              },
              "extends": "series.line.data",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.area.data",
              "name": "data",
              "line": 160,
              "lineEnd": 218,
              "filename": "code/es-modules/Series/Area/AreaSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "marker": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "fillColor": {
            "doclet": {
              "see": [
                "[color](#series.area.color)",
                "[fillOpacity](#series.area.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "series.area.fillColor",
              "name": "fillColor",
              "line": 219,
              "lineEnd": 224,
              "filename": "code/es-modules/Series/Area/AreaSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillOpacity": {
            "doclet": {
              "see": [
                "[color](#series.area.color)",
                "[fillColor](#series.area.fillColor)"
              ],
              "defaultByProduct": { "highcharts": "0.75", "highstock": "0.75" }
            },
            "meta": {
              "fullname": "series.area.fillOpacity",
              "name": "fillOpacity",
              "line": 225,
              "lineEnd": 232,
              "filename": "code/es-modules/Series/Area/AreaSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "legendSymbol": {},
          "lineColor": {},
          "negativeFillColor": {},
          "threshold": {},
          "trackByArea": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "states": {},
          "step": {},
          "stickyTracking": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "arearange": {
        "doclet": {
          "description": "A `arearange` series. If the [type](#series.arearange.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `arearange` series are defined in\n   [plotOptions.arearange](plotOptions.arearange).\n3. Options for one single series are given in\n   [the series instance array](series.arearange).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        arearange: {\n            // shared options for all arearange series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'arearange'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.arearange.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === arearange) {\n    // code specific to the arearange series\n}\n```\n            ",
          "extends": "series,plotOptions.arearange",
          "exclude": ["dataParser", "dataURL", "stack", "stacking"],
          "products": ["highcharts", "highstock"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "fullname": "series.arearange",
          "name": "arearange",
          "line": 140,
          "lineEnd": 150,
          "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "color": {
            "doclet": {
              "see": [
                "[fillColor](#series.arearange.fillColor)",
                "[fillOpacity](#series.arearange.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "series.arearange.color",
              "name": "color",
              "line": 151,
              "lineEnd": 156,
              "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `arearange` series type,\npoints can be given in the following ways:\n\n1.  An array of arrays with 3 or 2 values. In this case, the values\n    correspond to `x,low,high`. If the first value is a string, it is\n    applied as the name of the point, and the `x` value is inferred.\n    The `x` value can also be omitted, in which case the inner arrays\n    should be of length 2\\. Then the `x` value is automatically calculated,\n    either starting at 0 and incremented by 1, or from `pointStart`\n    and `pointInterval` given in the series options.\n    ```js\n    data: [\n        [0, 8, 3],\n        [1, 1, 1],\n        [2, 6, 8]\n    ]\n    ```\n\n2.  An array of objects with named values. The following snippet shows only a\n    few settings, see the complete options set below. If the total number of\n    data points exceeds the series'\n    [turboThreshold](#series.arearange.turboThreshold),\n    this option is not available.\n    ```js\n    data: [{\n        x: 1,\n        low: 9,\n        high: 0,\n        name: \"Point2\",\n        color: \"#00FF00\"\n    }, {\n        x: 1,\n        low: 3,\n        high: 4,\n        name: \"Point1\",\n        color: \"#FF00FF\"\n    }]\n    ```",
              "samples": [
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(Array.<(number|string), number>|Array.<(number|string), number, number>|*)>"
                ]
              },
              "extends": "series.line.data",
              "exclude": ["marker", "y"],
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.arearange.data",
              "name": "data",
              "line": 157,
              "lineEnd": 211,
              "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "dataLabels": {
                "doclet": {
                  "extends": "series.arearange.dataLabels",
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.arearange.data.dataLabels",
                  "name": "dataLabels",
                  "line": 212,
                  "lineEnd": 216,
                  "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "align": {},
                  "verticalAlign": {},
                  "xHigh": {},
                  "xLow": {},
                  "yHigh": {},
                  "yLow": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "backgroundColor": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "crop": {},
                  "defer": {},
                  "enabled": {},
                  "filter": {},
                  "format": {},
                  "formatter": {},
                  "inside": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "style": {},
                  "textPath": {},
                  "useHTML": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "high": {
                "doclet": {
                  "description": "The high or maximum value for each data point.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.arearange.data.high",
                  "name": "high",
                  "line": 253,
                  "lineEnd": 259,
                  "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "low": {
                "doclet": {
                  "description": "The low or minimum value for each data point.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.arearange.data.low",
                  "name": "low",
                  "line": 260,
                  "lineEnd": 266,
                  "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {}
            },
            "extended": 1
          },
          "fillColor": {
            "doclet": {
              "see": [
                "[color](#series.arearange.color)",
                "[fillOpacity](#series.arearange.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "series.arearange.fillColor",
              "name": "fillColor",
              "line": 217,
              "lineEnd": 222,
              "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillOpacity": {
            "doclet": {
              "see": [
                "[color](#series.arearange.color)",
                "[fillColor](#series.arearange.fillColor)"
              ],
              "defaultByProduct": { "highcharts": "0.75", "highstock": "0.75" }
            },
            "meta": {
              "fullname": "series.arearange.fillOpacity",
              "name": "fillOpacity",
              "line": 223,
              "lineEnd": 230,
              "filename": "code/es-modules/Series/AreaRange/AreaRangeSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "colorKey": {},
          "dataLabels": {},
          "dragDrop": {},
          "lineWidth": {},
          "lowMarker": {},
          "shadow": {},
          "threshold": {},
          "tooltip": {},
          "trackByArea": {},
          "legendSymbol": {},
          "lineColor": {},
          "negativeFillColor": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "states": {},
          "step": {},
          "stickyTracking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "areaspline": {
        "doclet": {
          "description": "A `areaspline` series. If the [type](#series.areaspline.type) option\nis not specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `areaspline` series are defined in\n   [plotOptions.areaspline](plotOptions.areaspline).\n3. Options for one single series are given in\n   [the series instance array](series.areaspline).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        areaspline: {\n            // shared options for all areaspline series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'areaspline'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.areaspline.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === areaspline) {\n    // code specific to the areaspline series\n}\n```\n            ",
          "extends": "series,plotOptions.areaspline",
          "exclude": [
            "dataParser",
            "dataURL",
            "step",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "series.areaspline",
          "name": "areaspline",
          "line": 88,
          "lineEnd": 97,
          "filename": "code/es-modules/Series/AreaSpline/AreaSplineSeries.js",
          "column": 0
        },
        "children": {
          "color": {
            "doclet": {
              "see": [
                "[fillColor](#series.areaspline.fillColor)",
                "[fillOpacity](#series.areaspline.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "series.areaspline.color",
              "name": "color",
              "line": 98,
              "lineEnd": 103,
              "filename": "code/es-modules/Series/AreaSpline/AreaSplineSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `areaspline` series\ntype, points can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. The `x` values will be automatically\n   calculated, either starting at 0 and incremented by 1, or from\n   `pointStart` and `pointInterval` given in the series options. If the axis\n   has categories, these will be used. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of arrays with 2 values. In this case, the values correspond to\n   `x,y`. If the first value is a string, it is applied as the name of the\n   point, and the `x` value is inferred.\n   ```js\n   data: [\n       [0, 10],\n       [1, 9],\n       [2, 3]\n   ]\n   ```\n\n3. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.areaspline.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 1,\n       y: 4,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       y: 4,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(number|Array.<(number|string), (number|null)>|null|*)>"
                ]
              },
              "extends": "series.line.data",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.areaspline.data",
              "name": "data",
              "line": 104,
              "lineEnd": 162,
              "filename": "code/es-modules/Series/AreaSpline/AreaSplineSeries.js",
              "column": 0
            },
            "children": {
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "marker": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "fillColor": {
            "doclet": {
              "see": [
                "[color](#series.areaspline.color)",
                "[fillOpacity](#series.areaspline.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "series.areaspline.fillColor",
              "name": "fillColor",
              "line": 163,
              "lineEnd": 168,
              "filename": "code/es-modules/Series/AreaSpline/AreaSplineSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillOpacity": {
            "doclet": {
              "see": [
                "[color](#series.areaspline.color)",
                "[fillColor](#series.areaspline.fillColor)"
              ],
              "defaultvalue": "0.75",
              "type": { "names": ["number"] }
            },
            "meta": {
              "fullname": "series.areaspline.fillOpacity",
              "name": "fillOpacity",
              "line": 169,
              "lineEnd": 175,
              "filename": "code/es-modules/Series/AreaSpline/AreaSplineSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "legendSymbol": {},
          "lineColor": {},
          "negativeFillColor": {},
          "threshold": {},
          "trackByArea": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "states": {},
          "stickyTracking": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "areasplinerange": {
        "doclet": {
          "description": "A `areasplinerange` series. If the [type](#series.areasplinerange.type)\noption is not specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `areasplinerange` series are defined in\n   [plotOptions.areasplinerange](plotOptions.areasplinerange).\n3. Options for one single series are given in\n   [the series instance array](series.areasplinerange).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        areasplinerange: {\n            // shared options for all areasplinerange series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'areasplinerange'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.areasplinerange.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === areasplinerange) {\n    // code specific to the areasplinerange series\n}\n```\n            ",
          "extends": "series,plotOptions.areasplinerange",
          "exclude": [
            "dataParser",
            "dataURL",
            "stack",
            "step",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts", "highstock"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "fullname": "series.areasplinerange",
          "name": "areasplinerange",
          "line": 87,
          "lineEnd": 96,
          "filename": "code/es-modules/Series/AreaSplineRange/AreaSplineRangeSeries.js",
          "column": 0
        },
        "children": {
          "color": {
            "doclet": {
              "see": [
                "[fillColor](#series.areasplinerange.fillColor)",
                "[fillOpacity](#series.areasplinerange.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "series.areasplinerange.color",
              "name": "color",
              "line": 97,
              "lineEnd": 102,
              "filename": "code/es-modules/Series/AreaSplineRange/AreaSplineRangeSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `areasplinerange`\nseries type, points can be given in the following ways:\n\n1. An array of arrays with 3 or 2 values. In this case, the values correspond\n   to `x,low,high`. If the first value is a string, it is applied as the name\n   of the point, and the `x` value is inferred. The `x` value can also be\n   omitted, in which case the inner arrays should be of length 2\\. Then the\n   `x` value is automatically calculated, either starting at 0 and\n   incremented by 1, or from `pointStart` and `pointInterval` given in the\n   series options.\n   ```js\n   data: [\n       [0, 0, 5],\n       [1, 9, 1],\n       [2, 5, 2]\n   ]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.areasplinerange.turboThreshold), this option is\n   not available.\n   ```js\n   data: [{\n       x: 1,\n       low: 5,\n       high: 0,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       low: 4,\n       high: 1,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(Array.<(number|string), number>|Array.<(number|string), number, number>|*)>"
                ]
              },
              "extends": "series.arearange.data",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.areasplinerange.data",
              "name": "data",
              "line": 103,
              "lineEnd": 156,
              "filename": "code/es-modules/Series/AreaSplineRange/AreaSplineRangeSeries.js",
              "column": 0
            },
            "children": {
              "dataLabels": {},
              "high": {},
              "low": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {}
            },
            "extended": 1
          },
          "fillColor": {
            "doclet": {
              "see": [
                "[color](#series.areasplinerange.color)",
                "[fillOpacity](#series.areasplinerange.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "series.areasplinerange.fillColor",
              "name": "fillColor",
              "line": 157,
              "lineEnd": 162,
              "filename": "code/es-modules/Series/AreaSplineRange/AreaSplineRangeSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillOpacity": {
            "doclet": {
              "see": [
                "[color](#series.areasplinerange.color)",
                "[fillColor](#series.areasplinerange.fillColor)"
              ],
              "defaultvalue": "0.75",
              "type": { "names": ["number"] }
            },
            "meta": {
              "fullname": "series.areasplinerange.fillOpacity",
              "name": "fillOpacity",
              "line": 163,
              "lineEnd": 169,
              "filename": "code/es-modules/Series/AreaSplineRange/AreaSplineRangeSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "colorKey": {},
          "dataLabels": {},
          "dragDrop": {},
          "lineWidth": {},
          "lowMarker": {},
          "shadow": {},
          "threshold": {},
          "tooltip": {},
          "trackByArea": {},
          "legendSymbol": {},
          "lineColor": {},
          "negativeFillColor": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "states": {},
          "stickyTracking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "bar": {
        "doclet": {
          "description": "A `bar` series. If the [type](#series.bar.type) option is not specified,\nit is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `bar` series are defined in\n   [plotOptions.bar](plotOptions.bar).\n3. Options for one single series are given in\n   [the series instance array](series.bar).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        bar: {\n            // shared options for all bar series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'bar'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.bar.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === bar) {\n    // code specific to the bar series\n}\n```\n            ",
          "extends": "series,plotOptions.bar",
          "exclude": [
            "connectNulls",
            "dashStyle",
            "dataParser",
            "dataURL",
            "gapSize",
            "gapUnit",
            "linecap",
            "lineWidth",
            "marker",
            "connectEnds",
            "step"
          ],
          "products": ["highcharts"]
        },
        "meta": {
          "fullname": "series.bar",
          "name": "bar",
          "line": 65,
          "lineEnd": 74,
          "filename": "code/es-modules/Series/Bar/BarSeries.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `bar` series type,\npoints can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. The `x` values will be automatically\n   calculated, either starting at 0 and incremented by 1, or from\n   `pointStart` and `pointInterval` given in the series options. If the axis\n   has categories, these will be used. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of arrays with 2 values. In this case, the values correspond to\n   `x,y`. If the first value is a string, it is applied as the name of the\n   point, and the `x` value is inferred.\n   ```js\n   data: [\n       [0, 5],\n       [1, 10],\n       [2, 3]\n   ]\n   ```\n\n3. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.bar.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 1,\n       y: 1,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       y: 10,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(number|Array.<(number|string), (number|null)>|null|*)>"
                ]
              },
              "extends": "series.column.data",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.bar.data",
              "name": "data",
              "line": 75,
              "lineEnd": 133,
              "filename": "code/es-modules/Series/Bar/BarSeries.js",
              "column": 0
            },
            "children": {
              "borderColor": {},
              "borderWidth": {},
              "dashStyle": {},
              "pointWidth": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.bar.states"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "series.bar.states",
              "line": 0,
              "lineEnd": 0,
              "name": "states"
            },
            "children": {
              "hover": {
                "doclet": {
                  "exclude": ["halo", "lineWidth", "lineWidthPlus", "marker"],
                  "products": ["highcharts", "highstock"],
                  "extends": "plotOptions.column.states.hover"
                },
                "meta": {
                  "fullname": "series.bar.states.hover",
                  "name": "hover",
                  "line": 134,
                  "lineEnd": 138,
                  "filename": "code/es-modules/Series/Bar/BarSeries.js",
                  "column": 0
                },
                "children": {
                  "borderColor": {},
                  "brightness": {},
                  "color": {},
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "select": {
                "doclet": {
                  "exclude": ["halo", "lineWidth", "lineWidthPlus", "marker"],
                  "products": ["highcharts", "highstock"],
                  "extends": "plotOptions.column.states.select"
                },
                "meta": {
                  "fullname": "series.bar.states.select",
                  "name": "select",
                  "line": 139,
                  "lineEnd": 143,
                  "filename": "code/es-modules/Series/Bar/BarSeries.js",
                  "column": 0
                },
                "children": {
                  "borderColor": {},
                  "color": {},
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "dragDrop": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "bellcurve": {
        "doclet": {
          "description": "A `bellcurve` series. If the [type](#series.bellcurve.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nFor options that apply to multiple series, it is recommended to add\nthem to the [plotOptions.series](#plotOptions.series) options structure.\nTo apply to all series of this specific type, apply it to\n[plotOptions.bellcurve](#plotOptions.bellcurve).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `bellcurve` series are defined in\n   [plotOptions.bellcurve](plotOptions.bellcurve).\n3. Options for one single series are given in\n   [the series instance array](series.bellcurve).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        bellcurve: {\n            // shared options for all bellcurve series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'bellcurve'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.bellcurve.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === bellcurve) {\n    // code specific to the bellcurve series\n}\n```\n            ",
          "extends": "series,plotOptions.bellcurve",
          "since": "6.0.0",
          "products": ["highcharts"],
          "exclude": [
            "dataParser",
            "dataURL",
            "data",
            "boostThreshold",
            "boostBlending"
          ],
          "requires": ["module:modules/histogram-bellcurve"]
        },
        "meta": {
          "fullname": "series.bellcurve",
          "name": "bellcurve",
          "line": 76,
          "lineEnd": 91,
          "filename": "code/es-modules/Series/Bellcurve/BellcurveSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "baseSeries": {
            "doclet": {
              "description": "An integer identifying the index to use for the base series, or a string\nrepresenting the id of the series.",
              "type": { "names": ["number", "string"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "series.bellcurve.baseSeries",
              "name": "baseSeries",
              "line": 92,
              "lineEnd": 98,
              "filename": "code/es-modules/Series/Bellcurve/BellcurveSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "color": {
            "doclet": {
              "see": [
                "[fillColor](#series.bellcurve.fillColor)",
                "[fillOpacity](#series.bellcurve.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "series.bellcurve.color",
              "name": "color",
              "line": 99,
              "lineEnd": 104,
              "filename": "code/es-modules/Series/Bellcurve/BellcurveSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillColor": {
            "doclet": {
              "see": [
                "[color](#series.bellcurve.color)",
                "[fillOpacity](#series.bellcurve.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "series.bellcurve.fillColor",
              "name": "fillColor",
              "line": 105,
              "lineEnd": 110,
              "filename": "code/es-modules/Series/Bellcurve/BellcurveSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillOpacity": {
            "doclet": {
              "see": [
                "[color](#series.bellcurve.color)",
                "[fillColor](#series.bellcurve.fillColor)"
              ],
              "defaultByProduct": { "highcharts": "0.75", "highstock": "0.75" }
            },
            "meta": {
              "fullname": "series.bellcurve.fillOpacity",
              "name": "fillOpacity",
              "line": 111,
              "lineEnd": 118,
              "filename": "code/es-modules/Series/Bellcurve/BellcurveSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "intervals": {},
          "marker": {},
          "pointsInInterval": {},
          "legendSymbol": {},
          "lineColor": {},
          "negativeFillColor": {},
          "threshold": {},
          "trackByArea": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "states": {},
          "stickyTracking": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "boxplot": {
        "doclet": {
          "description": "A `boxplot` series. If the [type](#series.boxplot.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `boxplot` series are defined in\n   [plotOptions.boxplot](plotOptions.boxplot).\n3. Options for one single series are given in\n   [the series instance array](series.boxplot).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        boxplot: {\n            // shared options for all boxplot series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'boxplot'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.boxplot.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === boxplot) {\n    // code specific to the boxplot series\n}\n```\n            ",
          "extends": "series,plotOptions.boxplot",
          "exclude": [
            "dataParser",
            "dataURL",
            "marker",
            "stack",
            "stacking",
            "states",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "fullname": "series.boxplot",
          "name": "boxplot",
          "line": 276,
          "lineEnd": 286,
          "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `boxplot` series\ntype, points can be given in the following ways:\n\n1. An array of arrays with 6 or 5 values. In this case, the values correspond\n   to `x,low,q1,median,q3,high`. If the first value is a string, it is\n   applied as the name of the point, and the `x` value is inferred. The `x`\n   value can also be omitted, in which case the inner arrays should be of\n   length 5. Then the `x` value is automatically calculated, either starting\n   at 0 and incremented by 1, or from `pointStart` and `pointInterval` given\n   in the series options.\n   ```js\n   data: [\n       [0, 3, 0, 10, 3, 5],\n       [1, 7, 8, 7, 2, 9],\n       [2, 6, 9, 5, 1, 3]\n   ]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.boxplot.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 1,\n       low: 4,\n       q1: 9,\n       median: 9,\n       q3: 1,\n       high: 10,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       low: 5,\n       q1: 7,\n       median: 3,\n       q3: 6,\n       high: 2,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(Array.<(number|string), number, number, number, number>|Array.<(number|string), number, number, number, number, number>|*)>"
                ]
              },
              "extends": "series.line.data",
              "exclude": ["marker"],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.boxplot.data",
              "name": "data",
              "line": 287,
              "lineEnd": 347,
              "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "boxDashStyle": {
                "doclet": {
                  "description": "The dash style of the box.",
                  "samples": [
                    {
                      "name": "Box plot styling",
                      "value": "highcharts/plotoptions/box-plot-styling/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Box plot in styled mode",
                      "value": "highcharts/css/boxplot/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["Highcharts.DashStyleValue"] },
                  "defaultvalue": "Solid",
                  "since": "8.1.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.boxplot.data.boxDashStyle",
                  "name": "boxDashStyle",
                  "line": 387,
                  "lineEnd": 400,
                  "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "high": {
                "doclet": {
                  "description": "The `high` value for each data point, signifying the highest value\nin the sample set. The top whisker is drawn here.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.boxplot.data.high",
                  "name": "high",
                  "line": 348,
                  "lineEnd": 355,
                  "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "low": {
                "doclet": {
                  "description": "The `low` value for each data point, signifying the lowest value\nin the sample set. The bottom whisker is drawn here.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.boxplot.data.low",
                  "name": "low",
                  "line": 356,
                  "lineEnd": 363,
                  "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "median": {
                "doclet": {
                  "description": "The median for each data point. This is drawn as a line through the\nmiddle area of the box.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.boxplot.data.median",
                  "name": "median",
                  "line": 364,
                  "lineEnd": 371,
                  "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "medianDashStyle": {
                "doclet": {
                  "description": "The dash style of the median.",
                  "samples": [
                    {
                      "name": "Box plot styling",
                      "value": "highcharts/plotoptions/box-plot-styling/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Box plot in styled mode",
                      "value": "highcharts/css/boxplot/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["Highcharts.DashStyleValue"] },
                  "defaultvalue": "Solid",
                  "since": "8.1.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.boxplot.data.medianDashStyle",
                  "name": "medianDashStyle",
                  "line": 401,
                  "lineEnd": 414,
                  "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "q1": {
                "doclet": {
                  "description": "The lower quartile for each data point. This is the bottom of the\nbox.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.boxplot.data.q1",
                  "name": "q1",
                  "line": 372,
                  "lineEnd": 379,
                  "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "q3": {
                "doclet": {
                  "description": "The higher quartile for each data point. This is the top of the box.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.boxplot.data.q3",
                  "name": "q3",
                  "line": 380,
                  "lineEnd": 386,
                  "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "stemDashStyle": {
                "doclet": {
                  "description": "The dash style of the stem.",
                  "samples": [
                    {
                      "name": "Box plot styling",
                      "value": "highcharts/plotoptions/box-plot-styling/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Box plot in styled mode",
                      "value": "highcharts/css/boxplot/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["Highcharts.DashStyleValue"] },
                  "defaultvalue": "Solid",
                  "since": "8.1.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.boxplot.data.stemDashStyle",
                  "name": "stemDashStyle",
                  "line": 415,
                  "lineEnd": 428,
                  "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "whiskerDashStyle": {
                "doclet": {
                  "description": "The dash style of the whiskers.",
                  "samples": [
                    {
                      "name": "Box plot styling",
                      "value": "highcharts/plotoptions/box-plot-styling/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Box plot in styled mode",
                      "value": "highcharts/css/boxplot/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["Highcharts.DashStyleValue"] },
                  "defaultvalue": "Solid",
                  "since": "8.1.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.boxplot.data.whiskerDashStyle",
                  "name": "whiskerDashStyle",
                  "line": 429,
                  "lineEnd": 442,
                  "filename": "code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "boxDashStyle": {},
          "colorKey": {},
          "dragDrop": {},
          "fillColor": {},
          "lineWidth": {},
          "medianColor": {},
          "medianDashStyle": {},
          "medianWidth": {},
          "stemColor": {},
          "stemDashStyle": {},
          "stemWidth": {},
          "threshold": {},
          "tooltip": {},
          "whiskerColor": {},
          "whiskerDashStyle": {},
          "whiskerLength": {},
          "whiskerWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "bubble": {
        "doclet": {
          "description": "A `bubble` series. If the [type](#series.bubble.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `bubble` series are defined in\n   [plotOptions.bubble](plotOptions.bubble).\n3. Options for one single series are given in\n   [the series instance array](series.bubble).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        bubble: {\n            // shared options for all bubble series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'bubble'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.bubble.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === bubble) {\n    // code specific to the bubble series\n}\n```\n            ",
          "extends": "series,plotOptions.bubble",
          "exclude": ["dataParser", "dataURL", "legendSymbolColor", "stack"],
          "products": ["highcharts", "highstock"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "fullname": "series.bubble",
          "name": "bubble",
          "line": 635,
          "lineEnd": 644,
          "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `bubble` series type,\npoints can be given in the following ways:\n\n1. An array of arrays with 3 or 2 values. In this case, the values correspond\n   to `x,y,z`. If the first value is a string, it is applied as the name of\n   the point, and the `x` value is inferred. The `x` value can also be\n   omitted, in which case the inner arrays should be of length 2\\. Then the\n   `x` value is automatically calculated, either starting at 0 and\n   incremented by 1, or from `pointStart` and `pointInterval` given in the\n   series options.\n   ```js\n   data: [\n       [0, 1, 2],\n       [1, 5, 5],\n       [2, 0, 2]\n   ]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.bubble.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 1,\n       y: 1,\n       z: 1,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       y: 5,\n       z: 4,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(Array.<(number|string), number>|Array.<(number|string), number, number>|*)>"
                ]
              },
              "extends": "series.line.data",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.bubble.data",
              "name": "data",
              "line": 645,
              "lineEnd": 698,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "column": 0
            },
            "children": {
              "marker": {
                "doclet": {
                  "extends": "series.line.data.marker",
                  "exclude": ["enabledThreshold", "height", "radius", "width"],
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.bubble.data.marker",
                  "name": "marker",
                  "line": 699,
                  "lineEnd": 704,
                  "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
                  "column": 0
                },
                "children": {
                  "enabled": {},
                  "fillColor": {},
                  "lineColor": {},
                  "lineWidth": {},
                  "states": {},
                  "symbol": {}
                },
                "extended": 1
              },
              "z": {
                "doclet": {
                  "description": "The size value for each bubble. The bubbles' diameters are computed\nbased on the `z`, and controlled by series options like `minSize`,\n`maxSize`, `sizeBy`, `zMin` and `zMax`.",
                  "type": { "names": ["number", "null"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.bubble.data.z",
                  "name": "z",
                  "line": 705,
                  "lineEnd": 713,
                  "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "marker": {
            "doclet": {
              "exclude": [
                "enabled",
                "enabledThreshold",
                "height",
                "radius",
                "width"
              ],
              "extends": "plotOptions.bubble.marker"
            },
            "meta": {
              "fullname": "series.bubble.marker",
              "name": "marker",
              "line": 714,
              "lineEnd": 717,
              "filename": "code/es-modules/Series/Bubble/BubbleSeries.js",
              "column": 0
            },
            "children": {
              "fillOpacity": {},
              "lineColor": {},
              "lineWidth": {},
              "states": {},
              "symbol": {},
              "fillColor": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "animationLimit": {},
          "colorKey": {},
          "dataLabels": {},
          "displayNegative": {},
          "maxSize": {},
          "minSize": {},
          "negativeColor": {},
          "sizeBy": {},
          "sizeByAbsoluteValue": {},
          "softThreshold": {},
          "states": {},
          "tooltip": {},
          "turboThreshold": {},
          "zMax": {},
          "zMin": {},
          "zThreshold": {},
          "zoneAxis": {},
          "findNearestPointBy": {},
          "jitter": {},
          "lineWidth": {},
          "stickyTracking": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "stacking": {},
          "step": {},
          "threshold": {},
          "visible": {},
          "zones": {}
        },
        "extended": 1
      },
      "bullet": {
        "doclet": {
          "description": "A `bullet` series. If the [type](#series.bullet.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `bullet` series are defined in\n   [plotOptions.bullet](plotOptions.bullet).\n3. Options for one single series are given in\n   [the series instance array](series.bullet).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        bullet: {\n            // shared options for all bullet series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'bullet'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.bullet.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === bullet) {\n    // code specific to the bullet series\n}\n```\n            ",
          "extends": "series,plotOptions.bullet",
          "since": "6.0.0",
          "products": ["highcharts"],
          "exclude": [
            "dataParser",
            "dataURL",
            "marker",
            "boostThreshold",
            "boostBlending"
          ],
          "requires": ["module:modules/bullet"]
        },
        "meta": {
          "fullname": "series.bullet",
          "name": "bullet",
          "line": 94,
          "lineEnd": 105,
          "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `bullet` series type,\npoints can be given in the following ways:\n\n1. An array of arrays with 3 or 2 values. In this case, the values correspond\n   to `x,y,target`. If the first value is a string, it is applied as the name\n   of the point, and the `x` value is inferred. The `x` value can also be\n   omitted, in which case the inner arrays should be of length 2\\. Then the\n   `x` value is automatically calculated, either starting at 0 and\n   incremented by 1, or from `pointStart` and `pointInterval` given in the\n   series options.\n   ```js\n   data: [\n       [0, 40, 75],\n       [1, 50, 50],\n       [2, 60, 40]\n   ]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.bullet.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 0,\n       y: 40,\n       target: 75,\n       name: \"Point1\",\n       color: \"#00FF00\"\n   }, {\n        x: 1,\n       y: 60,\n       target: 40,\n       name: \"Point2\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "type": {
                "names": [
                  "Array.<(Array.<(number|string), number>|Array.<(number|string), number, number>|*)>"
                ]
              },
              "extends": "series.column.data",
              "since": "6.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.bullet.data",
              "name": "data",
              "line": 106,
              "lineEnd": 151,
              "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "target": {
                "doclet": {
                  "description": "The target value of a point.",
                  "type": { "names": ["number"] },
                  "since": "6.0.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.bullet.data.target",
                  "name": "target",
                  "line": 152,
                  "lineEnd": 159,
                  "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "targetOptions": {
                "doclet": {
                  "description": "Individual target options for each point.",
                  "extends": "plotOptions.bullet.targetOptions",
                  "products": ["highcharts"],
                  "since": "6.0.0"
                },
                "meta": {
                  "fullname": "series.bullet.data.targetOptions",
                  "name": "targetOptions",
                  "line": 160,
                  "lineEnd": 166,
                  "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "color": {},
                  "height": {},
                  "width": {}
                },
                "extended": 1
              },
              "borderColor": {},
              "borderWidth": {},
              "dashStyle": {},
              "pointWidth": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.bullet.states"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "series.bullet.states",
              "line": 0,
              "lineEnd": 0,
              "name": "states"
            },
            "children": {
              "hover": {
                "doclet": {
                  "products": ["highcharts"],
                  "exclude": ["halo", "lineWidth", "lineWidthPlus", "marker"],
                  "extends": "plotOptions.column.states.hover"
                },
                "meta": {
                  "fullname": "series.bullet.states.hover",
                  "name": "hover",
                  "line": 167,
                  "lineEnd": 171,
                  "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "borderColor": {},
                  "brightness": {},
                  "color": {},
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "select": {
                "doclet": {
                  "products": ["highcharts"],
                  "exclude": ["halo", "lineWidth", "lineWidthPlus", "marker"],
                  "extends": "plotOptions.column.states.select"
                },
                "meta": {
                  "fullname": "series.bullet.states.select",
                  "name": "select",
                  "line": 172,
                  "lineEnd": 176,
                  "filename": "code/es-modules/Series/Bullet/BulletSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "borderColor": {},
                  "color": {},
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "dragDrop": {},
          "targetOptions": {},
          "tooltip": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "stickyTracking": {},
          "threshold": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "column": {
        "doclet": {
          "description": "A `column` series. If the [type](#series.column.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `column` series are defined in\n   [plotOptions.column](plotOptions.column).\n3. Options for one single series are given in\n   [the series instance array](series.column).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        column: {\n            // shared options for all column series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'column'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.column.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === column) {\n    // code specific to the column series\n}\n```\n            ",
          "extends": "series,plotOptions.column",
          "exclude": [
            "connectNulls",
            "dataParser",
            "dataURL",
            "gapSize",
            "gapUnit",
            "linecap",
            "lineWidth",
            "marker",
            "connectEnds",
            "step"
          ],
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "series.column",
          "name": "column",
          "line": 361,
          "lineEnd": 370,
          "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `column` series type,\npoints can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. The `x` values will be automatically\n   calculated, either starting at 0 and incremented by 1, or from\n   `pointStart` and `pointInterval` given in the series options. If the axis\n   has categories, these will be used. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of arrays with 2 values. In this case, the values correspond to\n   `x,y`. If the first value is a string, it is applied as the name of the\n   point, and the `x` value is inferred.\n   ```js\n   data: [\n       [0, 6],\n       [1, 2],\n       [2, 6]\n   ]\n   ```\n\n3. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.column.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 1,\n       y: 9,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       y: 6,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(number|Array.<(number|string), (number|null)>|null|*)>"
                ]
              },
              "extends": "series.line.data",
              "exclude": ["marker"],
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.column.data",
              "name": "data",
              "line": 371,
              "lineEnd": 430,
              "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "borderColor": {
                "doclet": {
                  "description": "The color of the border surrounding the column or bar.\n\nIn styled mode, the border stroke can be set with the `.highcharts-point`\nrule.",
                  "samples": [
                    {
                      "name": "Dark gray border",
                      "value": "highcharts/plotoptions/column-bordercolor/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.column.data.borderColor",
                  "name": "borderColor",
                  "line": 431,
                  "lineEnd": 443,
                  "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "borderWidth": {
                "doclet": {
                  "description": "The width of the border surrounding the column or bar.\n\nIn styled mode, the stroke width can be set with the `.highcharts-point`\nrule.",
                  "samples": [
                    {
                      "name": "2px black border",
                      "value": "highcharts/plotoptions/column-borderwidth/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.column.data.borderWidth",
                  "name": "borderWidth",
                  "line": 444,
                  "lineEnd": 456,
                  "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dashStyle": {
                "doclet": {
                  "description": "A name for the dash style to use for the column or bar. Overrides\ndashStyle on the series.\n\nIn styled mode, the stroke dash-array can be set with the same classes as\nlisted under [data.color](#series.column.data.color).",
                  "see": ["[series.pointWidth](#plotOptions.column.dashStyle)"],
                  "type": { "names": ["Highcharts.DashStyleValue"] }
                },
                "meta": {
                  "fullname": "series.column.data.dashStyle",
                  "name": "dashStyle",
                  "line": 457,
                  "lineEnd": 468,
                  "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "pointWidth": {
                "doclet": {
                  "description": "A pixel value specifying a fixed width for the column or bar. Overrides\npointWidth on the series. The width effects the dimension that is not based\non the point value.",
                  "see": [
                    "[series.pointWidth](#plotOptions.column.pointWidth)"
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": "undefined",
                  "since": "7.0.0",
                  "products": ["highcharts", "highstock", "gantt"]
                },
                "meta": {
                  "fullname": "series.column.data.pointWidth",
                  "name": "pointWidth",
                  "line": 172,
                  "lineEnd": 183,
                  "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.column.states"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "series.column.states",
              "line": 0,
              "lineEnd": 0,
              "name": "states"
            },
            "children": {
              "hover": {
                "doclet": {
                  "exclude": ["halo", "lineWidth", "lineWidthPlus", "marker"],
                  "products": ["highcharts", "highstock"],
                  "extends": "plotOptions.column.states.hover"
                },
                "meta": {
                  "fullname": "series.column.states.hover",
                  "name": "hover",
                  "line": 479,
                  "lineEnd": 483,
                  "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "borderColor": {},
                  "brightness": {},
                  "color": {},
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "select": {
                "doclet": {
                  "exclude": ["halo", "lineWidth", "lineWidthPlus", "marker"],
                  "products": ["highcharts", "highstock"],
                  "extends": "plotOptions.column.states.select"
                },
                "meta": {
                  "fullname": "series.column.states.select",
                  "name": "select",
                  "line": 484,
                  "lineEnd": 488,
                  "filename": "code/es-modules/Series/Column/ColumnSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "borderColor": {},
                  "color": {},
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "dragDrop": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "columnpyramid": {
        "doclet": {
          "description": "A `columnpyramid` series. If the [type](#series.columnpyramid.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `columnpyramid` series are defined in\n   [plotOptions.columnpyramid](plotOptions.columnpyramid).\n3. Options for one single series are given in\n   [the series instance array](series.columnpyramid).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        columnpyramid: {\n            // shared options for all columnpyramid series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'columnpyramid'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.columnpyramid.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === columnpyramid) {\n    // code specific to the columnpyramid series\n}\n```\n            ",
          "extends": "series,plotOptions.columnpyramid",
          "exclude": [
            "connectEnds",
            "connectNulls",
            "dashStyle",
            "dataParser",
            "dataURL",
            "gapSize",
            "gapUnit",
            "linecap",
            "lineWidth",
            "marker",
            "step",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts", "highstock"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "fullname": "series.columnpyramid",
          "name": "columnpyramid",
          "line": 38,
          "lineEnd": 49,
          "filename": "code/es-modules/Series/ColumnPyramid/ColumnPyramidSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `columnpyramid` series type,\npoints can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. The `x` values will be automatically\n   calculated, either starting at 0 and incremented by 1, or from\n   `pointStart` and `pointInterval` given in the series options. If the axis\n   has categories, these will be used. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of arrays with 2 values. In this case, the values correspond to\n   `x,y`. If the first value is a string, it is applied as the name of the\n   point, and the `x` value is inferred.\n   ```js\n   data: [\n       [0, 6],\n       [1, 2],\n       [2, 6]\n   ]\n   ```\n\n3. An array of objects with named values. The objects are point configuration\n   objects as seen below. If the total number of data points exceeds the\n   series' [turboThreshold](#series.columnpyramid.turboThreshold), this\n   option is not available.\n   ```js\n   data: [{\n       x: 1,\n       y: 9,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       y: 6,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(number|Array.<(number|string), (number|null)>|null|*)>"
                ]
              },
              "extends": "series.line.data",
              "exclude": ["marker"],
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.columnpyramid.data",
              "name": "data",
              "line": 60,
              "lineEnd": 118,
              "filename": "code/es-modules/Series/ColumnPyramid/ColumnPyramidSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.columnpyramid.states"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "series.columnpyramid.states",
              "line": 0,
              "lineEnd": 0,
              "name": "states"
            },
            "children": {
              "hover": {
                "doclet": {
                  "exclude": ["halo", "lineWidth", "lineWidthPlus", "marker"],
                  "products": ["highcharts", "highstock"],
                  "extends": "plotOptions.column.states.hover"
                },
                "meta": {
                  "fullname": "series.columnpyramid.states.hover",
                  "name": "hover",
                  "line": 50,
                  "lineEnd": 54,
                  "filename": "code/es-modules/Series/ColumnPyramid/ColumnPyramidSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "borderColor": {},
                  "brightness": {},
                  "color": {},
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "select": {
                "doclet": {
                  "exclude": ["halo", "lineWidth", "lineWidthPlus", "marker"],
                  "products": ["highcharts", "highstock"],
                  "extends": "plotOptions.column.states.select"
                },
                "meta": {
                  "fullname": "series.columnpyramid.states.select",
                  "name": "select",
                  "line": 55,
                  "lineEnd": 59,
                  "filename": "code/es-modules/Series/ColumnPyramid/ColumnPyramidSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "borderColor": {},
                  "color": {},
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "borderColor": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "dragDrop": {},
          "groupPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "stickyTracking": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "cursor": {},
          "custom": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "columnrange": {
        "doclet": {
          "description": "A `columnrange` series. If the [type](#series.columnrange.type)\noption is not specified, it is inherited from\n[chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `columnrange` series are defined in\n   [plotOptions.columnrange](plotOptions.columnrange).\n3. Options for one single series are given in\n   [the series instance array](series.columnrange).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        columnrange: {\n            // shared options for all columnrange series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'columnrange'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.columnrange.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === columnrange) {\n    // code specific to the columnrange series\n}\n```\n            ",
          "extends": "series,plotOptions.columnrange",
          "exclude": ["dataParser", "dataURL", "stack", "stacking"],
          "products": ["highcharts", "highstock"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "fullname": "series.columnrange",
          "name": "columnrange",
          "line": 220,
          "lineEnd": 230,
          "filename": "code/es-modules/Series/ColumnRange/ColumnRangeSeries.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `columnrange` series\ntype, points can be given in the following ways:\n\n1. An array of arrays with 3 or 2 values. In this case, the values correspond\n   to `x,low,high`. If the first value is a string, it is applied as the name\n   of the point, and the `x` value is inferred. The `x` value can also be\n   omitted, in which case the inner arrays should be of length 2\\. Then the\n   `x` value is automatically calculated, either starting at 0 and\n   incremented by 1, or from `pointStart` and `pointInterval` given in the\n   series options.\n   ```js\n   data: [\n       [0, 4, 2],\n       [1, 2, 1],\n       [2, 9, 10]\n   ]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.columnrange.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 1,\n       low: 0,\n       high: 4,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       low: 5,\n       high: 3,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(Array.<(number|string), number>|Array.<(number|string), number, number>|*)>"
                ]
              },
              "extends": "series.arearange.data",
              "exclude": ["marker"],
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.columnrange.data",
              "name": "data",
              "line": 231,
              "lineEnd": 285,
              "filename": "code/es-modules/Series/ColumnRange/ColumnRangeSeries.js",
              "column": 0
            },
            "children": {
              "dataLabels": {
                "doclet": {
                  "extends": "series.columnrange.dataLabels",
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.columnrange.data.dataLabels",
                  "name": "dataLabels",
                  "line": 286,
                  "lineEnd": 290,
                  "filename": "code/es-modules/Series/ColumnRange/ColumnRangeSeries.js",
                  "column": 0
                },
                "children": {
                  "align": {},
                  "verticalAlign": {},
                  "xHigh": {},
                  "xLow": {},
                  "yHigh": {},
                  "yLow": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "backgroundColor": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "crop": {},
                  "defer": {},
                  "enabled": {},
                  "filter": {},
                  "format": {},
                  "formatter": {},
                  "inside": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "style": {},
                  "textPath": {},
                  "useHTML": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "high": {},
              "low": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {}
            },
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.columnrange.states"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "series.columnrange.states",
              "line": 0,
              "lineEnd": 0,
              "name": "states"
            },
            "children": {
              "hover": {
                "doclet": {
                  "exclude": ["halo", "lineWidth", "lineWidthPlus", "marker"],
                  "products": ["highcharts", "highstock"],
                  "extends": "plotOptions.columnrange.states.hover"
                },
                "meta": {
                  "fullname": "series.columnrange.states.hover",
                  "name": "hover",
                  "line": 291,
                  "lineEnd": 295,
                  "filename": "code/es-modules/Series/ColumnRange/ColumnRangeSeries.js",
                  "column": 0
                },
                "children": {
                  "borderColor": {},
                  "brightness": {},
                  "color": {},
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "select": {
                "doclet": {
                  "exclude": ["halo", "lineWidth", "lineWidthPlus", "marker"],
                  "products": ["highcharts", "highstock"],
                  "extends": "plotOptions.columnrange.states.select"
                },
                "meta": {
                  "fullname": "series.columnrange.states.select",
                  "name": "select",
                  "line": 296,
                  "lineEnd": 300,
                  "filename": "code/es-modules/Series/ColumnRange/ColumnRangeSeries.js",
                  "column": 0
                },
                "children": {
                  "borderColor": {},
                  "color": {},
                  "animation": {},
                  "enabled": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "borderRadius": {},
          "dataLabels": {},
          "dragDrop": {},
          "legendSymbol": {},
          "pointRange": {},
          "borderColor": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "depth": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointWidth": {},
          "stickyTracking": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "cylinder": {
        "doclet": {
          "description": "A `cylinder` series. If the [type](#series.cylinder.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `cylinder` series are defined in\n   [plotOptions.cylinder](plotOptions.cylinder).\n3. Options for one single series are given in\n   [the series instance array](series.cylinder).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        cylinder: {\n            // shared options for all cylinder series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'cylinder'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.cylinder.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === cylinder) {\n    // code specific to the cylinder series\n}\n```\n            ",
          "extends": "series,plotOptions.cylinder",
          "since": "7.0.0",
          "products": ["highcharts"],
          "exclude": [
            "allAreas",
            "boostThreshold",
            "colorAxis",
            "compare",
            "compareBase",
            "boostBlending"
          ],
          "requires": ["module:modules/cylinder"]
        },
        "meta": {
          "fullname": "series.cylinder",
          "name": "cylinder",
          "line": 36,
          "lineEnd": 47,
          "filename": "code/es-modules/Series/Cylinder/CylinderSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `cylinder` series type,\npoints can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. The `x` values will be automatically\n   calculated, either starting at 0 and incremented by 1, or from\n   `pointStart` and `pointInterval` given in the series options. If the axis\n   has categories, these will be used. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of arrays with 2 values. In this case, the values correspond to\n   `x,y`. If the first value is a string, it is applied as the name of the\n   point, and the `x` value is inferred.\n   ```js\n   data: [\n       [0, 0],\n       [1, 8],\n       [2, 9]\n   ]\n   ```\n\n3. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.cylinder.turboThreshold), this option is not\n   available.\n\n   ```js\n   data: [{\n       x: 1,\n       y: 2,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       y: 4,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(number|Array.<(number|string), (number|null)>|null|*)>"
                ]
              },
              "extends": "series.column.data",
              "products": ["highcharts", "highstock"],
              "since": "7.0.0"
            },
            "meta": {
              "fullname": "series.cylinder.data",
              "name": "data",
              "line": 48,
              "lineEnd": 107,
              "filename": "code/es-modules/Series/Cylinder/CylinderSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "borderColor": {},
              "borderWidth": {},
              "dashStyle": {},
              "pointWidth": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "dependencywheel": {
        "doclet": {
          "description": "A `dependencywheel` series. If the [type](#series.dependencywheel.type)\noption is not specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `dependencywheel` series are defined in\n   [plotOptions.dependencywheel](plotOptions.dependencywheel).\n3. Options for one single series are given in\n   [the series instance array](series.dependencywheel).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        dependencywheel: {\n            // shared options for all dependencywheel series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'dependencywheel'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.dependencywheel.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === dependencywheel) {\n    // code specific to the dependencywheel series\n}\n```\n            ",
          "extends": "series,plotOptions.dependencywheel",
          "exclude": ["dataSorting"],
          "products": ["highcharts"],
          "requires": [
            "module:modules/sankey",
            "module:modules/dependency-wheel"
          ]
        },
        "meta": {
          "fullname": "series.dependencywheel",
          "name": "dependencywheel",
          "line": 128,
          "lineEnd": 138,
          "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `dependencywheel` series\ntype, points can be given in the following way:\n\nAn array of objects with named values. The following snippet shows only a\nfew settings, see the complete options set below. If the total number of data\npoints exceeds the series' [turboThreshold](#series.area.turboThreshold),\nthis option is not available.\n\n ```js\n    data: [{\n        from: 'Category1',\n        to: 'Category2',\n        weight: 2\n    }, {\n        from: 'Category1',\n        to: 'Category3',\n        weight: 5\n    }]\n ```",
              "type": {
                "names": ["Array.<(Array.<string, string, number>|*)>"]
              },
              "extends": "series.sankey.data",
              "products": ["highcharts"],
              "exclude": ["outgoing", "dataLabels"]
            },
            "meta": {
              "fullname": "series.dependencywheel.data",
              "name": "data",
              "line": 150,
              "lineEnd": 176,
              "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "color": {},
              "from": {},
              "to": {},
              "weight": {},
              "accessibility": {},
              "className": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {}
            },
            "extended": 1
          },
          "nodes": {
            "doclet": {
              "description": "A collection of options for the individual nodes. The nodes in a dependency\ndiagram are auto-generated instances of `Highcharts.Point`, but options can\nbe applied here and linked by the `id`.",
              "extends": "series.sankey.nodes",
              "type": { "names": ["Array.<*>"] },
              "products": ["highcharts"],
              "exclude": ["offset"]
            },
            "meta": {
              "fullname": "series.dependencywheel.nodes",
              "name": "nodes",
              "line": 139,
              "lineEnd": 149,
              "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "dataLabels": {
                "doclet": {
                  "description": "Individual data label for each node. The options are the same as\nthe ones for [series.dependencywheel.dataLabels](#series.dependencywheel.dataLabels).",
                  "extends": "series.sankey.nodes.dataLabels"
                },
                "meta": {
                  "fullname": "series.dependencywheel.nodes.dataLabels",
                  "name": "dataLabels",
                  "line": 177,
                  "lineEnd": 182,
                  "filename": "code/es-modules/Series/DependencyWheel/DependencyWheelSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "backgroundColor": {},
                  "crop": {},
                  "enabled": {},
                  "format": {},
                  "formatter": {},
                  "inside": {},
                  "nodeFormat": {},
                  "nodeFormatter": {},
                  "align": {},
                  "verticalAlign": {},
                  "y": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "defer": {},
                  "filter": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "style": {},
                  "textPath": {},
                  "useHTML": {},
                  "x": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "color": {},
              "colorIndex": {},
              "column": {},
              "height": {},
              "id": {},
              "level": {},
              "name": {},
              "offsetHorizontal": {},
              "offsetVertical": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "borderRadius": {},
          "center": {},
          "curveFactor": {},
          "dataLabels": {},
          "size": {},
          "startAngle": {},
          "borderWidth": {},
          "colorByPoint": {},
          "inactiveOtherPoints": {},
          "levels": {},
          "linkColorMode": {},
          "linkOpacity": {},
          "minLinkWidth": {},
          "nodePadding": {},
          "nodeWidth": {},
          "opacity": {},
          "showInLegend": {},
          "states": {},
          "tooltip": {},
          "borderColor": {},
          "centerInCategory": {},
          "colors": {},
          "dataGrouping": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "onPoint": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "dumbbell": {
        "doclet": {
          "description": "The `dumbbell` series. If the [type](#series.dumbbell.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `dumbbell` series are defined in\n   [plotOptions.dumbbell](plotOptions.dumbbell).\n3. Options for one single series are given in\n   [the series instance array](series.dumbbell).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        dumbbell: {\n            // shared options for all dumbbell series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'dumbbell'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.dumbbell.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === dumbbell) {\n    // code specific to the dumbbell series\n}\n```\n            ",
          "extends": "series,plotOptions.dumbbell",
          "exclude": ["boostThreshold", "boostBlending"],
          "products": ["highcharts", "highstock"],
          "requires": ["module:highcharts-more", "module:modules/dumbbell"]
        },
        "meta": {
          "fullname": "series.dumbbell",
          "name": "dumbbell",
          "line": 97,
          "lineEnd": 107,
          "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `dumbbell` series\ntype, points can be given in the following ways:\n\n1. An array of arrays with 3 or 2 values. In this case, the values correspond\n   to `x,low,high`. If the first value is a string, it is applied as the name\n   of the point, and the `x` value is inferred. The `x` value can also be\n   omitted, in which case the inner arrays should be of length 2\\. Then the\n   `x` value is automatically calculated, either starting at 0 and\n   incremented by 1, or from `pointStart` and `pointInterval` given in the\n   series options.\n   ```js\n   data: [\n       [0, 4, 2],\n       [1, 2, 1],\n       [2, 9, 10]\n   ]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.dumbbell.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 1,\n       low: 0,\n       high: 4,\n       name: \"Point2\",\n       color: \"#00FF00\",\n       lowColor: \"#00FFFF\",\n       connectorWidth: 3,\n       connectorColor: \"#FF00FF\"\n   }, {\n       x: 1,\n       low: 5,\n       high: 3,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(Array.<(number|string), number>|Array.<(number|string), number, number>|*)>"
                ]
              },
              "extends": "series.arearange.data",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.dumbbell.data",
              "name": "data",
              "line": 108,
              "lineEnd": 164,
              "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "connectorColor": {
                "doclet": {
                  "description": "Color of the line that connects the dumbbell point's values.\nBy default it is the series' color.",
                  "type": { "names": ["string"] },
                  "since": "8.0.0",
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.dumbbell.data.connectorColor",
                  "name": "connectorColor",
                  "line": 197,
                  "lineEnd": 205,
                  "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "connectorWidth": {
                "doclet": {
                  "description": "Pixel width of the line that connects the dumbbell point's values.",
                  "type": { "names": ["number"] },
                  "since": "8.0.0",
                  "defaultvalue": "1",
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.dumbbell.data.connectorWidth",
                  "name": "connectorWidth",
                  "line": 206,
                  "lineEnd": 214,
                  "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "lowColor": {
                "doclet": {
                  "description": "Color of the start markers in a dumbbell graph. This option takes\npriority over the series color. To avoid this, set `lowColor` to\n`undefined`.",
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "since": "8.0.0",
                  "defaultvalue": "#333333",
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.dumbbell.data.lowColor",
                  "name": "lowColor",
                  "line": 215,
                  "lineEnd": 225,
                  "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dataLabels": {},
              "high": {},
              "low": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {}
            },
            "extended": 1
          },
          "lowColor": {
            "doclet": {
              "description": "Color of the start markers in a dumbbell graph. This option takes\npriority over the series color. To avoid this, set `lowColor` to\n`undefined`.",
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "since": "8.0.0",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.dumbbell.lowColor",
              "name": "lowColor",
              "line": 165,
              "lineEnd": 174,
              "filename": "code/es-modules/Series/Dumbbell/DumbbellSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "connectorColor": {},
          "connectorWidth": {},
          "crisp": {},
          "groupPadding": {},
          "legendSymbol": {},
          "lowMarker": {},
          "pointPadding": {},
          "pointRange": {},
          "states": {},
          "color": {},
          "colorKey": {},
          "dataLabels": {},
          "dragDrop": {},
          "fillColor": {},
          "shadow": {},
          "threshold": {},
          "tooltip": {},
          "lineColor": {},
          "negativeFillColor": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "connectEnds": {},
          "connectNulls": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "step": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "errorbar": {
        "doclet": {
          "description": "A `errorbar` series. If the [type](#series.errorbar.type) option\nis not specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `errorbar` series are defined in\n   [plotOptions.errorbar](plotOptions.errorbar).\n3. Options for one single series are given in\n   [the series instance array](series.errorbar).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        errorbar: {\n            // shared options for all errorbar series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'errorbar'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.errorbar.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === errorbar) {\n    // code specific to the errorbar series\n}\n```\n            ",
          "extends": "series,plotOptions.errorbar",
          "exclude": [
            "dataParser",
            "dataURL",
            "stack",
            "stacking",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "fullname": "series.errorbar",
          "name": "errorbar",
          "line": 75,
          "lineEnd": 85,
          "filename": "code/es-modules/Series/ErrorBar/ErrorBarSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `errorbar` series\ntype, points can be given in the following ways:\n\n1. An array of arrays with 3 or 2 values. In this case, the values correspond\n   to `x,low,high`. If the first value is a string, it is applied as the name\n   of the point, and the `x` value is inferred. The `x` value can also be\n   omitted, in which case the inner arrays should be of length 2\\. Then the\n   `x` value is automatically calculated, either starting at 0 and\n   incremented by 1, or from `pointStart` and `pointInterval` given in the\n   series options.\n   ```js\n   data: [\n       [0, 10, 2],\n       [1, 1, 8],\n       [2, 4, 5]\n   ]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.errorbar.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 1,\n       low: 0,\n       high: 0,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       low: 5,\n       high: 5,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(Array.<(number|string), number>|Array.<(number|string), number, number>|*)>"
                ]
              },
              "extends": "series.arearange.data",
              "exclude": ["dataLabels", "drilldown", "marker", "states"],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.errorbar.data",
              "name": "data",
              "line": 86,
              "lineEnd": 140,
              "filename": "code/es-modules/Series/ErrorBar/ErrorBarSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "high": {},
              "low": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "dragDrop": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "color": {},
          "dragDrop": {},
          "grouping": {},
          "linkedTo": {},
          "tooltip": {},
          "whiskerWidth": {},
          "boxDashStyle": {},
          "colorKey": {},
          "fillColor": {},
          "lineWidth": {},
          "medianColor": {},
          "medianDashStyle": {},
          "medianWidth": {},
          "stemColor": {},
          "stemDashStyle": {},
          "stemWidth": {},
          "threshold": {},
          "whiskerColor": {},
          "whiskerDashStyle": {},
          "whiskerLength": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "funnel": {
        "doclet": {
          "description": "A `funnel` series. If the [type](#series.funnel.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `funnel` series are defined in\n   [plotOptions.funnel](plotOptions.funnel).\n3. Options for one single series are given in\n   [the series instance array](series.funnel).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        funnel: {\n            // shared options for all funnel series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'funnel'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.funnel.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === funnel) {\n    // code specific to the funnel series\n}\n```\n            ",
          "extends": "series,plotOptions.funnel",
          "exclude": [
            "dataParser",
            "dataURL",
            "stack",
            "xAxis",
            "yAxis",
            "dataSorting",
            "boostBlending",
            "boostThreshold"
          ],
          "products": ["highcharts"],
          "requires": ["module:modules/funnel"]
        },
        "meta": {
          "fullname": "series.funnel",
          "name": "funnel",
          "line": 140,
          "lineEnd": 150,
          "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `funnel` series type,\npoints can be given in the following ways:\n\n1.  An array of numerical values. In this case, the numerical values\nwill be interpreted as `y` options. Example:\n\n ```js\n data: [0, 5, 3, 5]\n ```\n\n2.  An array of objects with named values. The following snippet shows only a\nfew settings, see the complete options set below. If the total number of data\npoints exceeds the series' [turboThreshold](#series.funnel.turboThreshold),\nthis option is not available.\n\n ```js\n    data: [{\n        y: 3,\n        name: \"Point2\",\n        color: \"#00FF00\"\n    }, {\n        y: 1,\n        name: \"Point1\",\n        color: \"#FF00FF\"\n    }]\n ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Array.<(number|null|*)>"] },
              "extends": "series.pie.data",
              "exclude": ["sliced"],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.funnel.data",
              "name": "data",
              "line": 151,
              "lineEnd": 195,
              "filename": "code/es-modules/Series/Funnel/FunnelSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "dataLabels": {},
              "legendIndex": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "animation": {},
          "borderRadius": {},
          "center": {},
          "dataLabels": {},
          "height": {},
          "neckHeight": {},
          "neckWidth": {},
          "reversed": {},
          "states": {},
          "width": {},
          "borderColor": {},
          "borderWidth": {},
          "clip": {},
          "color": {},
          "colors": {},
          "depth": {},
          "endAngle": {},
          "events": {},
          "fillColor": {},
          "ignoreHiddenPoint": {},
          "inactiveOtherPoints": {},
          "minSize": {},
          "point": {},
          "showInLegend": {},
          "slicedOffset": {},
          "startAngle": {},
          "stickyTracking": {},
          "thickness": {},
          "tooltip": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "className": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "includeInDataExport": {},
          "keys": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "onPoint": {},
          "opacity": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "visible": {}
        },
        "extended": 1
      },
      "funnel3d": {
        "doclet": {
          "description": "A `funnel3d` series. If the [type](#series.funnel3d.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `funnel3d` series are defined in\n   [plotOptions.funnel3d](plotOptions.funnel3d).\n3. Options for one single series are given in\n   [the series instance array](series.funnel3d).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        funnel3d: {\n            // shared options for all funnel3d series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'funnel3d'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.funnel3d.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === funnel3d) {\n    // code specific to the funnel3d series\n}\n```\n            ",
          "samples": [
            {
              "name": "Funnel3d demo",
              "value": "highcharts/demo/funnel3d/",
              "products": ["highcharts"]
            }
          ],
          "since": "7.1.0",
          "extends": "series,plotOptions.funnel3d",
          "exclude": [
            "allAreas",
            "boostThreshold",
            "colorAxis",
            "compare",
            "compareBase"
          ],
          "products": ["highcharts"],
          "requires": [
            "module:highcharts-3d",
            "module:modules/cylinder",
            "module:modules/funnel3d"
          ]
        },
        "meta": {
          "fullname": "series.funnel3d",
          "name": "funnel3d",
          "line": 99,
          "lineEnd": 114,
          "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `funnel3d` series\ntype, points can be given in the following ways:\n\n1.  An array of numerical values. In this case, the numerical values\nwill be interpreted as `y` options. The `x` values will be automatically\ncalculated, either starting at 0 and incremented by 1, or from `pointStart`\nand `pointInterval` given in the series options. If the axis has\ncategories, these will be used. Example:\n\n ```js\n data: [0, 5, 3, 5]\n ```\n\n2.  An array of objects with named values. The following snippet shows only a\nfew settings, see the complete options set below. If the total number of data\npoints exceeds the series' [turboThreshold](#series.funnel3d.turboThreshold),\nthis option is not available.\n\n ```js\n    data: [{\n        y: 2,\n        name: \"Point2\",\n        color: \"#00FF00\"\n    }, {\n        y: 4,\n        name: \"Point1\",\n        color: \"#FF00FF\"\n    }]\n ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Array.<(number|Array.<number>|*)>"] },
              "extends": "series.column.data",
              "products": ["highcharts"],
              "since": "7.1.0"
            },
            "meta": {
              "fullname": "series.funnel3d.data",
              "name": "data",
              "line": 115,
              "lineEnd": 161,
              "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "gradientForSides": {
                "doclet": {
                  "description": "By default sides fill is set to a gradient through this option being\nset to `true`. Set to `false` to get solid color for the sides.",
                  "type": { "names": ["boolean"] },
                  "products": ["highcharts"],
                  "since": "7.1.0"
                },
                "meta": {
                  "fullname": "series.funnel3d.data.gradientForSides",
                  "name": "gradientForSides",
                  "line": 162,
                  "lineEnd": 169,
                  "filename": "code/es-modules/Series/Funnel3D/Funnel3DSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "borderColor": {},
              "borderWidth": {},
              "dashStyle": {},
              "pointWidth": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "animation": {},
          "colorByPoint": {},
          "dataLabels": {},
          "edgeWidth": {},
          "gradientForSides": {},
          "height": {},
          "neckHeight": {},
          "neckWidth": {},
          "reversed": {},
          "showInLegend": {},
          "width": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "depth": {},
          "dragDrop": {},
          "edgeColor": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "gauge": {
        "doclet": {
          "description": "A `gauge` series. If the [type](#series.gauge.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `gauge` series are defined in\n   [plotOptions.gauge](plotOptions.gauge).\n3. Options for one single series are given in\n   [the series instance array](series.gauge).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        gauge: {\n            // shared options for all gauge series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'gauge'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.gauge.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === gauge) {\n    // code specific to the gauge series\n}\n```\n            ",
          "extends": "series,plotOptions.gauge",
          "exclude": [
            "animationLimit",
            "boostThreshold",
            "connectEnds",
            "connectNulls",
            "cropThreshold",
            "dashStyle",
            "dataParser",
            "dataURL",
            "findNearestPointBy",
            "getExtremesFromAll",
            "marker",
            "negativeColor",
            "pointPlacement",
            "shadow",
            "softThreshold",
            "stack",
            "stacking",
            "states",
            "step",
            "threshold",
            "turboThreshold",
            "zoneAxis",
            "zones",
            "dataSorting",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "fullname": "series.gauge",
          "name": "gauge",
          "line": 504,
          "lineEnd": 517,
          "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `gauge` series type,\npoints can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.gauge.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       y: 6,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       y: 8,\n       name: \"Point1\",\n      color: \"#FF00FF\"\n   }]\n   ```\n\nThe typical gauge only contains a single data value.",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Array.<(number|null|*)>"] },
              "extends": "series.line.data",
              "exclude": ["drilldown", "marker", "x"],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.gauge.data",
              "name": "data",
              "line": 518,
              "lineEnd": 557,
              "filename": "code/es-modules/Series/Gauge/GaugeSeries.js",
              "column": 0
            },
            "children": {
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "dataLabels": {},
          "dial": {},
          "overshoot": {},
          "pivot": {},
          "showInLegend": {},
          "tooltip": {},
          "wrap": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "stickyTracking": {},
          "visible": {}
        },
        "extended": 1
      },
      "heatmap": {
        "doclet": {
          "description": "A `heatmap` series. If the [type](#series.heatmap.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `heatmap` series are defined in\n   [plotOptions.heatmap](plotOptions.heatmap).\n3. Options for one single series are given in\n   [the series instance array](series.heatmap).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        heatmap: {\n            // shared options for all heatmap series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'heatmap'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.heatmap.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === heatmap) {\n    // code specific to the heatmap series\n}\n```\n            ",
          "productdesc": [
            {
              "value": "Requires `modules/heatmap`.",
              "products": ["highcharts"]
            }
          ],
          "extends": "series,plotOptions.heatmap",
          "exclude": [
            "cropThreshold",
            "dataParser",
            "dataURL",
            "dragDrop",
            "pointRange",
            "stack",
            ""
          ],
          "products": ["highcharts", "highmaps"]
        },
        "meta": {
          "fullname": "series.heatmap",
          "name": "heatmap",
          "line": 306,
          "lineEnd": 317,
          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `heatmap` series\ntype, points can be given in the following ways:\n\n1.  An array of arrays with 3 or 2 values. In this case, the values\ncorrespond to `x,y,value`. If the first value is a string, it is\napplied as the name of the point, and the `x` value is inferred.\nThe `x` value can also be omitted, in which case the inner arrays\nshould be of length 2\\. Then the `x` value is automatically calculated,\neither starting at 0 and incremented by 1, or from `pointStart`\nand `pointInterval` given in the series options.\n\n ```js\n    data: [\n        [0, 9, 7],\n        [1, 10, 4],\n        [2, 6, 3]\n    ]\n ```\n\n2.  An array of objects with named values. The following snippet shows only a\nfew settings, see the complete options set below. If the total number of data\npoints exceeds the series' [turboThreshold](#series.heatmap.turboThreshold),\nthis option is not available.\n\n ```js\n    data: [{\n        x: 1,\n        y: 3,\n        value: 10,\n        name: \"Point2\",\n        color: \"#00FF00\"\n    }, {\n        x: 1,\n        y: 7,\n        value: 10,\n        name: \"Point1\",\n        color: \"#FF00FF\"\n    }]\n ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Array.<(Array.<number>|*)>"] },
              "extends": "series.line.data",
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "series.heatmap.data",
              "name": "data",
              "line": 318,
              "lineEnd": 374,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "color": {
                "doclet": {
                  "description": "The color of the point. In heat maps the point color is rarely set\nexplicitly, as we use the color to denote the `value`. Options for\nthis are set in the [colorAxis](#colorAxis) configuration.",
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "products": ["highcharts", "highmaps"]
                },
                "meta": {
                  "fullname": "series.heatmap.data.color",
                  "name": "color",
                  "line": 375,
                  "lineEnd": 383,
                  "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "marker": {
                "doclet": {
                  "exclude": ["radius", "enabledThreshold"],
                  "products": ["highcharts", "highmaps"],
                  "since": "8.1",
                  "type": { "names": ["*"] },
                  "extends": "series.line.data.marker"
                },
                "meta": {
                  "fullname": "series.heatmap.data.marker",
                  "name": "marker",
                  "line": 417,
                  "lineEnd": 422,
                  "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "states": {
                    "doclet": {
                      "type": { "names": ["*"] },
                      "extends": "series.line.data.marker.states"
                    },
                    "meta": {
                      "column": 0,
                      "filename": "",
                      "fullname": "series.heatmap.data.marker.states",
                      "line": 0,
                      "lineEnd": 0,
                      "name": "states"
                    },
                    "children": {
                      "hover": {
                        "doclet": {
                          "exclude": ["radius", "radiusPlus"],
                          "products": ["highcharts", "highmaps"],
                          "type": { "names": ["*"] },
                          "extends": "plotOptions.series.marker.states.hover"
                        },
                        "meta": {
                          "fullname": "series.heatmap.data.marker.states.hover",
                          "name": "hover",
                          "line": 439,
                          "lineEnd": 443,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {
                          "height": {
                            "doclet": {
                              "description": "Set the marker's fixed height on hover state.",
                              "samples": [
                                {
                                  "name": "70px fixed marker's width and height on hover",
                                  "value": "maps/plotoptions/heatmap-marker-states-hover-width",
                                  "products": ["highcharts"]
                                }
                              ],
                              "type": { "names": ["number", "undefined"] },
                              "defaultvalue": "undefined",
                              "products": ["highcharts", "highmaps"]
                            },
                            "meta": {
                              "fullname": "series.heatmap.data.marker.states.hover.height",
                              "name": "height",
                              "line": 552,
                              "lineEnd": 562,
                              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                              "column": 0
                            },
                            "children": {},
                            "extended": 1
                          },
                          "heightPlus": {
                            "doclet": {
                              "description": "The number of pixels to increase the height of the\nhovered point.",
                              "samples": [
                                {
                                  "name": "One day",
                                  "value": "maps/plotoptions/heatmap-marker-states-hover-widthplus",
                                  "products": ["highcharts"]
                                }
                              ],
                              "type": { "names": ["number", "undefined"] },
                              "defaultvalue": "undefined",
                              "products": ["highcharts", "highstock"]
                            },
                            "meta": {
                              "fullname": "series.heatmap.data.marker.states.hover.heightPlus",
                              "name": "heightPlus",
                              "line": 575,
                              "lineEnd": 586,
                              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                              "column": 0
                            },
                            "children": {},
                            "extended": 1
                          },
                          "lineWidthPlus": {
                            "doclet": {
                              "description": "Set the marker's fixed width on hover state.",
                              "samples": [
                                {
                                  "name": "5 pixels wider lineWidth on hover",
                                  "value": "maps/plotoptions/heatmap-marker-states-hover-linewidthplus",
                                  "products": ["highcharts"]
                                }
                              ],
                              "type": { "names": ["number", "undefined"] },
                              "defaultvalue": "0",
                              "products": ["highcharts", "highmaps"]
                            },
                            "meta": {
                              "fullname": "series.heatmap.data.marker.states.hover.lineWidthPlus",
                              "name": "lineWidthPlus",
                              "line": 530,
                              "lineEnd": 540,
                              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                              "column": 0
                            },
                            "children": {},
                            "extended": 1
                          },
                          "width": {
                            "doclet": {
                              "description": "Set the marker's fixed width on hover state.",
                              "samples": [
                                {
                                  "name": "70px fixed marker's width and height on hover",
                                  "value": "maps/plotoptions/heatmap-marker-states-hover-width",
                                  "products": ["highcharts"]
                                }
                              ],
                              "type": { "names": ["number", "undefined"] },
                              "defaultvalue": "undefined",
                              "products": ["highcharts", "highmaps"]
                            },
                            "meta": {
                              "fullname": "series.heatmap.data.marker.states.hover.width",
                              "name": "width",
                              "line": 541,
                              "lineEnd": 551,
                              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                              "column": 0
                            },
                            "children": {},
                            "extended": 1
                          },
                          "widthPlus": {
                            "doclet": {
                              "description": "The number of pixels to increase the width of the\nhovered point.",
                              "samples": [
                                {
                                  "name": "One day",
                                  "value": "maps/plotoptions/heatmap-marker-states-hover-widthplus",
                                  "products": ["highcharts"]
                                }
                              ],
                              "type": { "names": ["number", "undefined"] },
                              "defaultvalue": "undefined",
                              "products": ["highcharts", "highstock"]
                            },
                            "meta": {
                              "fullname": "series.heatmap.data.marker.states.hover.widthPlus",
                              "name": "widthPlus",
                              "line": 563,
                              "lineEnd": 574,
                              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                              "column": 0
                            },
                            "children": {},
                            "extended": 1
                          },
                          "animation": {},
                          "enabled": {},
                          "fillColor": {},
                          "lineColor": {},
                          "lineWidth": {}
                        },
                        "extended": 1
                      },
                      "select": {
                        "doclet": {
                          "exclude": ["radius"],
                          "products": ["highcharts", "highmaps"],
                          "type": { "names": ["*"] },
                          "extends": "plotOptions.series.marker.states.select"
                        },
                        "meta": {
                          "fullname": "series.heatmap.data.marker.states.select",
                          "name": "select",
                          "line": 444,
                          "lineEnd": 448,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {
                          "height": {
                            "doclet": {
                              "description": "Set the marker's fixed height on select state.",
                              "samples": [
                                {
                                  "name": "70px fixed marker's width and height on hover",
                                  "value": "maps/plotoptions/heatmap-marker-states-hover-width",
                                  "products": ["highcharts"]
                                }
                              ],
                              "type": { "names": ["number", "undefined"] },
                              "defaultvalue": "undefined",
                              "products": ["highcharts", "highmaps"]
                            },
                            "meta": {
                              "fullname": "series.heatmap.data.marker.states.select.height",
                              "name": "height",
                              "line": 598,
                              "lineEnd": 608,
                              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                              "column": 0
                            },
                            "children": {},
                            "extended": 1
                          },
                          "heightPlus": {
                            "doclet": {
                              "description": "The number of pixels to increase the height of the\nhovered point.",
                              "samples": [
                                {
                                  "name": "One day",
                                  "value": "maps/plotoptions/heatmap-marker-states-hover-widthplus",
                                  "products": ["highcharts"]
                                }
                              ],
                              "type": { "names": ["number", "undefined"] },
                              "defaultvalue": "undefined",
                              "products": ["highcharts", "highstock"]
                            },
                            "meta": {
                              "fullname": "series.heatmap.data.marker.states.select.heightPlus",
                              "name": "heightPlus",
                              "line": 621,
                              "lineEnd": 632,
                              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                              "column": 0
                            },
                            "children": {},
                            "extended": 1
                          },
                          "width": {
                            "doclet": {
                              "description": "Set the marker's fixed width on select state.",
                              "samples": [
                                {
                                  "name": "70px fixed marker's width and height on hover",
                                  "value": "maps/plotoptions/heatmap-marker-states-hover-width",
                                  "products": ["highcharts"]
                                }
                              ],
                              "type": { "names": ["number", "undefined"] },
                              "defaultvalue": "undefined",
                              "products": ["highcharts", "highmaps"]
                            },
                            "meta": {
                              "fullname": "series.heatmap.data.marker.states.select.width",
                              "name": "width",
                              "line": 587,
                              "lineEnd": 597,
                              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                              "column": 0
                            },
                            "children": {},
                            "extended": 1
                          },
                          "widthPlus": {
                            "doclet": {
                              "description": "The number of pixels to increase the width of the\nhovered point.",
                              "samples": [
                                {
                                  "name": "One day",
                                  "value": "maps/plotoptions/heatmap-marker-states-hover-widthplus",
                                  "products": ["highcharts"]
                                }
                              ],
                              "type": { "names": ["number", "undefined"] },
                              "defaultvalue": "undefined",
                              "products": ["highcharts", "highstock"]
                            },
                            "meta": {
                              "fullname": "series.heatmap.data.marker.states.select.widthPlus",
                              "name": "widthPlus",
                              "line": 609,
                              "lineEnd": 620,
                              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                              "column": 0
                            },
                            "children": {},
                            "extended": 1
                          },
                          "enabled": {},
                          "fillColor": {},
                          "lineColor": {},
                          "lineWidth": {}
                        },
                        "extended": 1
                      },
                      "normal": {}
                    },
                    "extended": 1
                  },
                  "enabled": {},
                  "fillColor": {},
                  "height": {},
                  "lineColor": {},
                  "lineWidth": {},
                  "symbol": {},
                  "width": {}
                },
                "extended": 1
              },
              "pointPadding": {
                "doclet": {
                  "description": "Point padding for a single point.",
                  "samples": [
                    {
                      "name": "Point padding on tiles",
                      "value": "maps/plotoptions/tilemap-pointpadding"
                    }
                  ],
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highmaps"]
                },
                "meta": {
                  "fullname": "series.heatmap.data.pointPadding",
                  "name": "pointPadding",
                  "line": 407,
                  "lineEnd": 416,
                  "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "value": {
                "doclet": {
                  "description": "The value of the point, resulting in a color controlled by options\nas set in the [colorAxis](#colorAxis) configuration.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highmaps"]
                },
                "meta": {
                  "fullname": "series.heatmap.data.value",
                  "name": "value",
                  "line": 384,
                  "lineEnd": 391,
                  "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "x": {
                "doclet": {
                  "description": "The x value of the point. For datetime axes,\nthe X value is the timestamp in milliseconds since 1970.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highmaps"]
                },
                "meta": {
                  "fullname": "series.heatmap.data.x",
                  "name": "x",
                  "line": 392,
                  "lineEnd": 399,
                  "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "description": "The y value of the point.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highmaps"]
                },
                "meta": {
                  "fullname": "series.heatmap.data.y",
                  "name": "y",
                  "line": 400,
                  "lineEnd": 406,
                  "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {}
            },
            "extended": 1
          },
          "marker": {
            "doclet": {
              "exclude": ["radius", "enabledThreshold"],
              "products": ["highcharts", "highmaps"],
              "since": "8.1",
              "type": { "names": ["*"] },
              "extends": "plotOptions.heatmap.marker"
            },
            "meta": {
              "fullname": "series.heatmap.marker",
              "name": "marker",
              "line": 423,
              "lineEnd": 428,
              "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "states": {
                "doclet": {
                  "type": { "names": ["*"] },
                  "extends": "plotOptions.heatmap.marker.states"
                },
                "meta": {
                  "column": 0,
                  "filename": "",
                  "fullname": "series.heatmap.marker.states",
                  "line": 0,
                  "lineEnd": 0,
                  "name": "states"
                },
                "children": {
                  "hover": {
                    "doclet": {
                      "exclude": ["radius", "radiusPlus"],
                      "products": ["highcharts", "highmaps"],
                      "type": { "names": ["*"] },
                      "extends": "plotOptions.heatmap.marker.states.hover"
                    },
                    "meta": {
                      "fullname": "series.heatmap.marker.states.hover",
                      "name": "hover",
                      "line": 429,
                      "lineEnd": 433,
                      "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                      "column": 0
                    },
                    "children": {
                      "height": {
                        "doclet": {
                          "description": "Set the marker's fixed height on hover state.",
                          "samples": [
                            {
                              "name": "70px fixed marker's width and height on hover",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-width",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number", "undefined"] },
                          "defaultvalue": "undefined",
                          "products": ["highcharts", "highmaps"]
                        },
                        "meta": {
                          "fullname": "series.heatmap.marker.states.hover.height",
                          "name": "height",
                          "line": 471,
                          "lineEnd": 481,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "heightPlus": {
                        "doclet": {
                          "description": "The number of pixels to increase the height of the\nhovered point.",
                          "samples": [
                            {
                              "name": "One day",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-widthplus",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number", "undefined"] },
                          "defaultvalue": "undefined",
                          "products": ["highcharts", "highmaps"]
                        },
                        "meta": {
                          "fullname": "series.heatmap.marker.states.hover.heightPlus",
                          "name": "heightPlus",
                          "line": 494,
                          "lineEnd": 505,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "lineWidthPlus": {
                        "doclet": {
                          "description": "Set the marker's fixed width on hover state.",
                          "samples": [
                            {
                              "name": "5 pixels wider lineWidth on hover",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-linewidthplus",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number", "undefined"] },
                          "defaultvalue": "0",
                          "products": ["highcharts", "highmaps"]
                        },
                        "meta": {
                          "fullname": "series.heatmap.marker.states.hover.lineWidthPlus",
                          "name": "lineWidthPlus",
                          "line": 449,
                          "lineEnd": 459,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "width": {
                        "doclet": {
                          "description": "Set the marker's fixed width on hover state.",
                          "samples": [
                            {
                              "name": "70px fixed marker's width and height on hover",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-width",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number", "undefined"] },
                          "defaultvalue": "undefined",
                          "products": ["highcharts", "highmaps"]
                        },
                        "meta": {
                          "fullname": "series.heatmap.marker.states.hover.width",
                          "name": "width",
                          "line": 460,
                          "lineEnd": 470,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "widthPlus": {
                        "doclet": {
                          "description": "The number of pixels to increase the width of the\nhovered point.",
                          "samples": [
                            {
                              "name": "One day",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-widthplus",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number", "undefined"] },
                          "defaultvalue": "undefined",
                          "products": ["highcharts", "highmaps"]
                        },
                        "meta": {
                          "fullname": "series.heatmap.marker.states.hover.widthPlus",
                          "name": "widthPlus",
                          "line": 482,
                          "lineEnd": 493,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "animation": {},
                      "enabled": {},
                      "fillColor": {},
                      "lineColor": {},
                      "lineWidth": {}
                    },
                    "extended": 1
                  },
                  "select": {
                    "doclet": {
                      "exclude": ["radius"],
                      "products": ["highcharts", "highmaps"],
                      "type": { "names": ["*"] },
                      "extends": "plotOptions.heatmap.marker.states.select"
                    },
                    "meta": {
                      "fullname": "series.heatmap.marker.states.select",
                      "name": "select",
                      "line": 434,
                      "lineEnd": 438,
                      "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                      "column": 0
                    },
                    "children": {
                      "heightPlus": {
                        "doclet": {
                          "description": "The number of pixels to increase the height of the\nhovered point.",
                          "samples": [
                            {
                              "name": "One day",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-widthplus",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number", "undefined"] },
                          "defaultvalue": "undefined",
                          "products": ["highcharts", "highmaps"]
                        },
                        "meta": {
                          "fullname": "series.heatmap.marker.states.select.heightPlus",
                          "name": "heightPlus",
                          "line": 518,
                          "lineEnd": 529,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "widthPlus": {
                        "doclet": {
                          "description": "The number of pixels to increase the width of the\nhovered point.",
                          "samples": [
                            {
                              "name": "One day",
                              "value": "maps/plotoptions/heatmap-marker-states-hover-widthplus",
                              "products": ["highcharts"]
                            }
                          ],
                          "type": { "names": ["number", "undefined"] },
                          "defaultvalue": "undefined",
                          "products": ["highcharts", "highmaps"]
                        },
                        "meta": {
                          "fullname": "series.heatmap.marker.states.select.widthPlus",
                          "name": "widthPlus",
                          "line": 506,
                          "lineEnd": 517,
                          "filename": "code/es-modules/Series/Heatmap/HeatmapSeriesDefaults.js",
                          "column": 0
                        },
                        "children": {},
                        "extended": 1
                      },
                      "height": {},
                      "width": {},
                      "enabled": {},
                      "fillColor": {},
                      "lineColor": {},
                      "lineWidth": {}
                    },
                    "extended": 1
                  },
                  "normal": {}
                },
                "extended": 1
              },
              "lineColor": {},
              "symbol": {},
              "enabled": {},
              "fillColor": {},
              "height": {},
              "lineWidth": {},
              "width": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "animation": {},
          "borderRadius": {},
          "borderWidth": {},
          "clip": {},
          "color": {},
          "colorKey": {},
          "colsize": {},
          "dataLabels": {},
          "interpolation": {},
          "legendSymbol": {},
          "nullColor": {},
          "pointPadding": {},
          "rowsize": {},
          "states": {},
          "tooltip": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "colorAxis": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "histogram": {
        "doclet": {
          "description": "A `histogram` series. If the [type](#series.histogram.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `histogram` series are defined in\n   [plotOptions.histogram](plotOptions.histogram).\n3. Options for one single series are given in\n   [the series instance array](series.histogram).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        histogram: {\n            // shared options for all histogram series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'histogram'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.histogram.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === histogram) {\n    // code specific to the histogram series\n}\n```\n            ",
          "extends": "series,plotOptions.histogram",
          "exclude": [
            "data",
            "dataParser",
            "dataURL",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "since": "6.0.0",
          "requires": ["module:modules/histogram-bellcurve"]
        },
        "meta": {
          "fullname": "series.histogram",
          "name": "histogram",
          "line": 65,
          "lineEnd": 75,
          "filename": "code/es-modules/Series/Histogram/HistogramSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "baseSeries": {
            "doclet": {
              "description": "An integer identifying the index to use for the base series, or a string\nrepresenting the id of the series.",
              "type": { "names": ["number", "string"] },
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "series.histogram.baseSeries",
              "name": "baseSeries",
              "line": 76,
              "lineEnd": 82,
              "filename": "code/es-modules/Series/Histogram/HistogramSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "binWidth": {},
          "binsNumber": {},
          "groupPadding": {},
          "grouping": {},
          "pointPadding": {},
          "pointPlacement": {},
          "tooltip": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupZPadding": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointRange": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "item": {
        "doclet": {
          "description": "An `item` series. If the [type](#series.item.type) option is not specified,\nit is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `item` series are defined in\n   [plotOptions.item](plotOptions.item).\n3. Options for one single series are given in\n   [the series instance array](series.item).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        item: {\n            // shared options for all item series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'item'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.item.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === item) {\n    // code specific to the item series\n}\n```\n            ",
          "extends": "series,plotOptions.item",
          "exclude": [
            "dataParser",
            "dataURL",
            "stack",
            "xAxis",
            "yAxis",
            "dataSorting",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:modules/item-series"]
        },
        "meta": {
          "fullname": "series.item",
          "name": "item",
          "line": 109,
          "lineEnd": 119,
          "filename": "code/es-modules/Series/Item/ItemSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `item` series type,\npoints can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.item.turboThreshold),\n   this option is not available.\n   ```js\n   data: [{\n       y: 1,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       y: 7,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(number|Array.<string, (number|null)>|null|*)>"
                ]
              },
              "extends": "series.pie.data",
              "exclude": ["sliced"],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.item.data",
              "name": "data",
              "line": 120,
              "lineEnd": 163,
              "filename": "code/es-modules/Series/Item/ItemSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "dataLabels": {},
              "legendIndex": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "y": {}
            },
            "extended": 1
          },
          "events": {
            "doclet": {
              "exclude": ["legendItemClick"],
              "extends": "plotOptions.item.events"
            },
            "meta": {
              "fullname": "series.item.events",
              "name": "events",
              "line": 171,
              "lineEnd": 174,
              "filename": "code/es-modules/Series/Item/ItemSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "checkboxClick": {},
              "afterAnimate": {},
              "click": {},
              "hide": {},
              "mouseOut": {},
              "mouseOver": {},
              "show": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "crisp": {},
          "endAngle": {},
          "innerSize": {},
          "itemPadding": {},
          "layout": {},
          "marker": {},
          "rows": {},
          "showInLegend": {},
          "startAngle": {},
          "borderRadius": {},
          "center": {},
          "clip": {},
          "color": {},
          "colors": {},
          "dataLabels": {},
          "fillColor": {},
          "ignoreHiddenPoint": {},
          "inactiveOtherPoints": {},
          "minSize": {},
          "point": {},
          "size": {},
          "states": {},
          "stickyTracking": {},
          "thickness": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "includeInDataExport": {},
          "keys": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "onPoint": {},
          "opacity": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "visible": {}
        },
        "extended": 1
      },
      "line": {
        "doclet": {
          "description": "A `line` series. If the [type](#series.line.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `line` series are defined in\n   [plotOptions.line](plotOptions.line).\n3. Options for one single series are given in\n   [the series instance array](series.line).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        line: {\n            // shared options for all line series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'line'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.line.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === line) {\n    // code specific to the line series\n}\n```\n            ",
          "extends": "series,plotOptions.line",
          "exclude": ["dataParser", "dataURL"],
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "series.line",
          "name": "line",
          "line": 268,
          "lineEnd": 276,
          "filename": "code/es-modules/Series/Line/LineSeries.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `line` series type,\npoints can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. The `x` values will be automatically\n   calculated, either starting at 0 and incremented by 1, or from\n   `pointStart` and `pointInterval` given in the series options. If the axis\n   has categories, these will be used. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of arrays with 2 values. In this case, the values correspond to\n   `x,y`. If the first value is a string, it is applied as the name of the\n   point, and the `x` value is inferred.\n   ```js\n   data: [\n       [0, 1],\n       [1, 2],\n       [2, 8]\n   ]\n   ```\n\n3. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.line.turboThreshold),\n   this option is not available.\n   ```js\n   data: [{\n       x: 1,\n       y: 9,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       y: 6,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```\n\n**Note:** In TypeScript you have to extend `PointOptionsObject` with an\nadditional declaration to allow custom data types:\n```ts\ndeclare module `highcharts` {\n  interface PointOptionsObject {\n    custom: Record<string, (boolean|number|string)>;\n  }\n}\n```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "declare": "Highcharts.PointOptionsObject",
              "type": {
                "names": [
                  "Array.<(number|Array.<(number|string), (number|null)>|null|*)>"
                ]
              }
            },
            "meta": {
              "fullname": "series.line.data",
              "name": "data",
              "line": 277,
              "lineEnd": 344,
              "filename": "code/es-modules/Series/Line/LineSeries.js",
              "column": 0
            },
            "children": {
              "accessibility": {
                "doclet": {
                  "description": "Accessibility options for a data point.",
                  "declare": "Highcharts.PointAccessibilityOptionsObject",
                  "since": "7.1.0",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "series.line.data.accessibility",
                  "name": "accessibility",
                  "line": 732,
                  "lineEnd": 738,
                  "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                  "column": 0
                },
                "children": {
                  "description": {
                    "doclet": {
                      "description": "Provide a description of the data point, announced to screen readers.",
                      "type": { "names": ["string"] },
                      "since": "7.1.0"
                    },
                    "meta": {
                      "fullname": "series.line.data.accessibility.description",
                      "name": "description",
                      "line": 739,
                      "lineEnd": 745,
                      "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "enabled": {
                    "doclet": {
                      "description": "Set to false to disable accessibility functionality for a specific point.\nThe point will not be included in keyboard navigation, and will not be\nexposed to assistive technology.",
                      "type": { "names": ["boolean"] },
                      "since": "9.0.1"
                    },
                    "meta": {
                      "fullname": "series.line.data.accessibility.enabled",
                      "name": "enabled",
                      "line": 746,
                      "lineEnd": 754,
                      "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "className": {
                "doclet": {
                  "description": "An additional, individual class name for the data point's graphic\nrepresentation. Changes to a point's color will also be reflected in a\nchart's legend and tooltip.",
                  "samples": [
                    {
                      "name": "Series and point class name",
                      "value": "highcharts/css/point-series-classname",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "5.0.0",
                  "products": ["highcharts", "gantt"]
                },
                "meta": {
                  "fullname": "series.line.data.className",
                  "name": "className",
                  "line": 345,
                  "lineEnd": 357,
                  "filename": "code/es-modules/Series/Line/LineSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "color": {
                "doclet": {
                  "description": "Individual color for the point. By default the color is pulled from\nthe global `colors` array.\n\nIn styled mode, the `color` option doesn't take effect. Instead, use\n`colorIndex`.",
                  "samples": [
                    {
                      "name": "Mark the highest point",
                      "value": "highcharts/point/color/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "products": ["highcharts", "highstock", "gantt"]
                },
                "meta": {
                  "fullname": "series.line.data.color",
                  "name": "color",
                  "line": 358,
                  "lineEnd": 371,
                  "filename": "code/es-modules/Series/Line/LineSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "colorIndex": {
                "doclet": {
                  "description": "A specific color index to use for the point, so its graphic representations\nare given the class name `highcharts-color-{n}`. In styled mode this will\nchange the color of the graphic. In non-styled mode, the color is set by the\n`fill` attribute, so the change in class name won't have a visual effect by\ndefault.\n\nSince v11, CSS variables on the form `--highcharts-color-{n}` make changing\nthe color scheme very convenient.",
                  "samples": [
                    {
                      "name": "Series and point color index",
                      "value": "highcharts/css/colorindex/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "since": "5.0.0",
                  "products": ["highcharts", "gantt"]
                },
                "meta": {
                  "fullname": "series.line.data.colorIndex",
                  "name": "colorIndex",
                  "line": 372,
                  "lineEnd": 389,
                  "filename": "code/es-modules/Series/Line/LineSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "custom": {
                "doclet": {
                  "description": "A reserved subspace to store options and values for customized functionality.\nHere you can add additional data for your own event callbacks and formatter\ncallbacks.",
                  "samples": [
                    {
                      "name": "Point and series with custom data",
                      "value": "highcharts/point/custom/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["Highcharts.Dictionary.<*>"] }
                },
                "meta": {
                  "fullname": "series.line.data.custom",
                  "name": "custom",
                  "line": 390,
                  "lineEnd": 400,
                  "filename": "code/es-modules/Series/Line/LineSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dataLabels": {
                "doclet": {
                  "description": "Individual data label for each point. The options are the same as\nthe ones for [plotOptions.series.dataLabels](#plotOptions.series.dataLabels).",
                  "samples": [
                    {
                      "name": "Show a label for the last value",
                      "value": "highcharts/point/datalabels/"
                    }
                  ],
                  "type": { "names": ["*", "Array.<*>"] },
                  "declare": "Highcharts.DataLabelsOptions",
                  "extends": "plotOptions.line.dataLabels",
                  "products": ["highcharts", "highstock", "gantt"]
                },
                "meta": {
                  "fullname": "series.line.data.dataLabels",
                  "name": "dataLabels",
                  "line": 401,
                  "lineEnd": 414,
                  "filename": "code/es-modules/Series/Line/LineSeries.js",
                  "column": 0
                },
                "children": {
                  "align": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "backgroundColor": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "crop": {},
                  "defer": {},
                  "enabled": {},
                  "filter": {},
                  "format": {},
                  "formatter": {},
                  "inside": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "style": {},
                  "textPath": {},
                  "useHTML": {},
                  "verticalAlign": {},
                  "x": {},
                  "y": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "description": {
                "doclet": {
                  "description": "A description of the point to add to the screen reader information\nabout the point.",
                  "type": { "names": ["string"] },
                  "since": "5.0.0",
                  "requires": ["module:modules/accessibility"]
                },
                "meta": {
                  "fullname": "series.line.data.description",
                  "name": "description",
                  "line": 415,
                  "lineEnd": 423,
                  "filename": "code/es-modules/Series/Line/LineSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dragDrop": {
                "doclet": {
                  "description": "Point specific options for the draggable-points module. Overrides options\non `series.dragDrop`.",
                  "declare": "Highcharts.SeriesLineDataDragDropOptions",
                  "extends": "plotOptions.series.dragDrop",
                  "since": "6.2.0",
                  "requires": ["module:modules/draggable-points"]
                },
                "meta": {
                  "fullname": "series.line.data.dragDrop",
                  "name": "dragDrop",
                  "line": 222,
                  "lineEnd": 231,
                  "filename": "code/es-modules/Extensions/DraggablePoints/DragDropDefaults.js",
                  "column": 0
                },
                "children": {
                  "dragHandle": {},
                  "dragMaxX": {},
                  "dragMaxY": {},
                  "dragMinX": {},
                  "dragMinY": {},
                  "dragPrecisionX": {},
                  "dragPrecisionY": {},
                  "dragSensitivity": {},
                  "draggableX": {},
                  "draggableY": {},
                  "groupBy": {},
                  "guideBox": {},
                  "liveRedraw": {}
                },
                "extended": 1
              },
              "drilldown": {
                "doclet": {
                  "description": "The `id` of a series in the [drilldown.series](#drilldown.series) array to\nuse for a drilldown for this point.",
                  "samples": [
                    {
                      "name": "Basic drilldown",
                      "value": "highcharts/drilldown/basic/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "3.0.8",
                  "products": ["highcharts"],
                  "requires": ["module:modules/drilldown"]
                },
                "meta": {
                  "fullname": "series.line.data.drilldown",
                  "name": "drilldown",
                  "line": 294,
                  "lineEnd": 306,
                  "filename": "code/es-modules/Extensions/Drilldown/DrilldownDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "events": {
                "doclet": {
                  "description": "The individual point events.",
                  "extends": "plotOptions.series.point.events",
                  "products": ["highcharts", "highstock", "gantt"]
                },
                "meta": {
                  "fullname": "series.line.data.events",
                  "name": "events",
                  "line": 482,
                  "lineEnd": 488,
                  "filename": "code/es-modules/Series/Line/LineSeries.js",
                  "column": 0
                },
                "children": {
                  "click": {},
                  "drag": {},
                  "dragStart": {},
                  "drop": {},
                  "mouseOut": {},
                  "mouseOver": {},
                  "remove": {},
                  "select": {},
                  "unselect": {},
                  "update": {}
                },
                "extended": 1
              },
              "id": {
                "doclet": {
                  "description": "An id for the point. This can be used after render time to get a\npointer to the point object through `chart.get()`.",
                  "samples": [
                    {
                      "name": "Remove an id'd point",
                      "value": "highcharts/point/id/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "1.2.0",
                  "products": ["highcharts", "highstock", "gantt"]
                },
                "meta": {
                  "fullname": "series.line.data.id",
                  "name": "id",
                  "line": 424,
                  "lineEnd": 435,
                  "filename": "code/es-modules/Series/Line/LineSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "labelrank": {
                "doclet": {
                  "description": "The rank for this point's data label in case of collision. If two\ndata labels are about to overlap, only the one with the highest `labelrank`\nwill be drawn.",
                  "type": { "names": ["number"] }
                },
                "meta": {
                  "fullname": "series.line.data.labelrank",
                  "name": "labelrank",
                  "line": 436,
                  "lineEnd": 443,
                  "filename": "code/es-modules/Series/Line/LineSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "marker": {
                "doclet": {
                  "description": "Options for the point markers of line-like series.",
                  "declare": "Highcharts.PointMarkerOptionsObject",
                  "extends": "plotOptions.series.marker",
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.line.data.marker",
                  "name": "marker",
                  "line": 489,
                  "lineEnd": 496,
                  "filename": "code/es-modules/Series/Line/LineSeries.js",
                  "column": 0
                },
                "children": {
                  "enabled": {},
                  "enabledThreshold": {},
                  "fillColor": {},
                  "height": {},
                  "lineColor": {},
                  "lineWidth": {},
                  "radius": {},
                  "states": {},
                  "symbol": {},
                  "width": {}
                },
                "extended": 1
              },
              "name": {
                "doclet": {
                  "description": "The name of the point as shown in the legend, tooltip, dataLabels, etc.",
                  "see": ["[xAxis.uniqueNames](#xAxis.uniqueNames)"],
                  "samples": [
                    {
                      "name": "Point names",
                      "value": "highcharts/series/data-array-of-objects/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] }
                },
                "meta": {
                  "fullname": "series.line.data.name",
                  "name": "name",
                  "line": 444,
                  "lineEnd": 454,
                  "filename": "code/es-modules/Series/Line/LineSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "selected": {
                "doclet": {
                  "description": "Whether the data point is selected initially.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "false",
                  "products": ["highcharts", "highstock", "gantt"]
                },
                "meta": {
                  "fullname": "series.line.data.selected",
                  "name": "selected",
                  "line": 455,
                  "lineEnd": 462,
                  "filename": "code/es-modules/Series/Line/LineSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "x": {
                "doclet": {
                  "description": "The x value of the point.\n\nFor datetime axes, a number value is the timestamp in milliseconds since\n1970, while a date string is parsed according to the [current time zone]\n(https://api.highcharts.com/highcharts/time.timezone) of the\nchart. Date strings are supported since v12.",
                  "type": { "names": ["number", "string"] },
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.line.data.x",
                  "name": "x",
                  "line": 463,
                  "lineEnd": 474,
                  "filename": "code/es-modules/Series/Line/LineSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "description": "The y value of the point.",
                  "type": { "names": ["number", "null"] },
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.line.data.y",
                  "name": "y",
                  "line": 475,
                  "lineEnd": 481,
                  "filename": "code/es-modules/Series/Line/LineSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "states": {},
          "step": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "lollipop": {
        "doclet": {
          "description": "The `lollipop` series. If the [type](#series.lollipop.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `lollipop` series are defined in\n   [plotOptions.lollipop](plotOptions.lollipop).\n3. Options for one single series are given in\n   [the series instance array](series.lollipop).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        lollipop: {\n            // shared options for all lollipop series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'lollipop'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.lollipop.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === lollipop) {\n    // code specific to the lollipop series\n}\n```\n            ",
          "extends": "series,plotOptions.lollipop",
          "exclude": ["boostThreshold", "boostBlending"],
          "products": ["highcharts", "highstock"],
          "requires": [
            "module:highcharts-more",
            "module:modules/dumbbell",
            "module:modules/lollipop"
          ]
        },
        "meta": {
          "fullname": "series.lollipop",
          "name": "lollipop",
          "line": 156,
          "lineEnd": 167,
          "filename": "code/es-modules/Series/Lollipop/LollipopSeries.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `lollipop` series type,\npoints can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. The `x` values will be automatically\n   calculated, either starting at 0 and incremented by 1, or from\n   `pointStart` and `pointInterval` given in the series options. If the axis\n   has categories, these will be used. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of arrays with 2 values. In this case, the values correspond to\n   `x,y`. If the first value is a string, it is applied as the name of the\n   point, and the `x` value is inferred.\n   ```js\n   data: [\n       [0, 6],\n       [1, 2],\n       [2, 6]\n   ]\n   ```\n\n3. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.lollipop.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 1,\n       y: 9,\n       name: \"Point2\",\n       color: \"#00FF00\",\n       connectorWidth: 3,\n       connectorColor: \"#FF00FF\"\n   }, {\n       x: 1,\n       y: 6,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(number|Array.<(number|string), (number|null)>|null|*)>"
                ]
              },
              "extends": "series.dumbbell.data",
              "exclude": ["high", "low", "lowColor"],
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.lollipop.data",
              "name": "data",
              "line": 168,
              "lineEnd": 229,
              "filename": "code/es-modules/Series/Lollipop/LollipopSeries.js",
              "column": 0
            },
            "children": {
              "connectorColor": {},
              "connectorWidth": {},
              "dataLabels": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "dataLabels": {},
          "grouping": {},
          "pointRange": {},
          "connectorColor": {},
          "connectorWidth": {},
          "crisp": {},
          "groupPadding": {},
          "legendSymbol": {},
          "lowMarker": {},
          "pointPadding": {},
          "states": {},
          "color": {},
          "colorKey": {},
          "dragDrop": {},
          "shadow": {},
          "threshold": {},
          "tooltip": {},
          "lineColor": {},
          "negativeFillColor": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "connectEnds": {},
          "connectNulls": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "step": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "networkgraph": {
        "doclet": {
          "description": "A `networkgraph` series. If the [type](#series.networkgraph.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `networkgraph` series are defined in\n   [plotOptions.networkgraph](plotOptions.networkgraph).\n3. Options for one single series are given in\n   [the series instance array](series.networkgraph).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        networkgraph: {\n            // shared options for all networkgraph series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'networkgraph'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.networkgraph.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === networkgraph) {\n    // code specific to the networkgraph series\n}\n```\n            ",
          "extends": "series,plotOptions.networkgraph",
          "exclude": [
            "boostThreshold",
            "animation",
            "animationLimit",
            "connectEnds",
            "connectNulls",
            "cropThreshold",
            "dragDrop",
            "getExtremesFromAll",
            "label",
            "linecap",
            "negativeColor",
            "pointInterval",
            "pointIntervalUnit",
            "pointPlacement",
            "pointStart",
            "softThreshold",
            "stack",
            "stacking",
            "step",
            "threshold",
            "xAxis",
            "yAxis",
            "zoneAxis",
            "dataSorting",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:modules/networkgraph"]
        },
        "meta": {
          "fullname": "series.networkgraph",
          "name": "networkgraph",
          "line": 416,
          "lineEnd": 430,
          "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `networkgraph` series type,\npoints can be given in the following way:\n\nAn array of objects with named values. The following snippet shows only a\nfew settings, see the complete options set below. If the total number of\ndata points exceeds the series'\n[turboThreshold](#series.area.turboThreshold), this option is not available.\n\n ```js\n    data: [{\n        from: 'Category1',\n        to: 'Category2'\n    }, {\n        from: 'Category1',\n        to: 'Category3'\n    }]\n ```",
              "type": { "names": ["Array.<(Object|Array|number)>"] },
              "extends": "series.line.data",
              "exclude": ["drilldown", "marker", "x", "y", "dragDrop"],
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.networkgraph.data",
              "name": "data",
              "line": 431,
              "lineEnd": 465,
              "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "dataLabels": {
                "doclet": {
                  "type": {
                    "names": [
                      "Highcharts.SeriesNetworkgraphDataLabelsOptionsObject",
                      "Array.<Highcharts.SeriesNetworkgraphDataLabelsOptionsObject>"
                    ]
                  },
                  "products": ["highcharts"],
                  "extends": "series.line.data.dataLabels"
                },
                "meta": {
                  "fullname": "series.networkgraph.data.dataLabels",
                  "name": "dataLabels",
                  "line": 466,
                  "lineEnd": 470,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "align": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "backgroundColor": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "crop": {},
                  "defer": {},
                  "enabled": {},
                  "filter": {},
                  "format": {},
                  "formatter": {},
                  "inside": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "style": {},
                  "textPath": {},
                  "useHTML": {},
                  "verticalAlign": {},
                  "x": {},
                  "y": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "from": {
                "doclet": {
                  "description": "The node that the link runs from.",
                  "type": { "names": ["string"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.networkgraph.data.from",
                  "name": "from",
                  "line": 471,
                  "lineEnd": 477,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "to": {
                "doclet": {
                  "description": "The node that the link runs to.",
                  "type": { "names": ["string"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.networkgraph.data.to",
                  "name": "to",
                  "line": 478,
                  "lineEnd": 484,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {}
            },
            "extended": 1
          },
          "events": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.networkgraph.events"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "series.networkgraph.events",
              "line": 0,
              "lineEnd": 0,
              "name": "events"
            },
            "children": {
              "afterSimulation": {
                "doclet": {
                  "description": "Fires after the simulation is ended and the layout is stable.",
                  "type": {
                    "names": [
                      "Highcharts.NetworkgraphAfterSimulationCallbackFunction"
                    ]
                  },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.networkgraph.events.afterSimulation",
                  "name": "afterSimulation",
                  "line": 409,
                  "lineEnd": 415,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "afterAnimate": {},
              "checkboxClick": {},
              "click": {},
              "hide": {},
              "legendItemClick": {},
              "mouseOut": {},
              "mouseOver": {},
              "show": {}
            },
            "extended": 1
          },
          "nodes": {
            "doclet": {
              "description": "A collection of options for the individual nodes. The nodes in a\nnetworkgraph diagram are auto-generated instances of `Highcharts.Point`,\nbut options can be applied here and linked by the `id`.",
              "samples": [
                {
                  "name": "Networkgraph diagram with node options",
                  "value": "highcharts/series-networkgraph/data-options/"
                }
              ],
              "type": { "names": ["Array.<*>"] },
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.networkgraph.nodes",
              "name": "nodes",
              "line": 485,
              "lineEnd": 496,
              "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "color": {
                "doclet": {
                  "description": "The color of the auto generated node.",
                  "type": { "names": ["Highcharts.ColorString"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.networkgraph.nodes.color",
                  "name": "color",
                  "line": 505,
                  "lineEnd": 511,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "colorIndex": {
                "doclet": {
                  "description": "The color index of the auto generated node, especially for use in styled\nmode.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.networkgraph.nodes.colorIndex",
                  "name": "colorIndex",
                  "line": 512,
                  "lineEnd": 519,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dataLabels": {
                "doclet": {
                  "description": "Individual data label for each node. The options are the same as\nthe ones for [series.networkgraph.dataLabels](#series.networkgraph.dataLabels).",
                  "type": {
                    "names": [
                      "Highcharts.SeriesNetworkgraphDataLabelsOptionsObject",
                      "Array.<Highcharts.SeriesNetworkgraphDataLabelsOptionsObject>"
                    ]
                  }
                },
                "meta": {
                  "fullname": "series.networkgraph.nodes.dataLabels",
                  "name": "dataLabels",
                  "line": 555,
                  "lineEnd": 562,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "id": {
                "doclet": {
                  "description": "The id of the auto-generated node, referring to the `from` or `to` setting of\nthe link.",
                  "type": { "names": ["string"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.networkgraph.nodes.id",
                  "name": "id",
                  "line": 497,
                  "lineEnd": 504,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "marker": {
                "doclet": {
                  "description": "Options for the node markers.",
                  "extends": "plotOptions.networkgraph.marker"
                },
                "meta": {
                  "fullname": "series.networkgraph.nodes.marker",
                  "name": "marker",
                  "line": 549,
                  "lineEnd": 554,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "enabled": {},
                  "states": {},
                  "enabledThreshold": {},
                  "fillColor": {},
                  "height": {},
                  "lineColor": {},
                  "lineWidth": {},
                  "radius": {},
                  "symbol": {},
                  "width": {}
                },
                "extended": 1
              },
              "mass": {
                "doclet": {
                  "description": "Mass of the node. By default, each node has mass equal to it's marker radius\n. Mass is used to determine how two connected nodes should affect\neach other:\n\nAttractive force is multiplied by the ratio of two connected\nnodes; if a big node has weights twice as the small one, then the small one\nwill move towards the big one twice faster than the big one to the small one\n.",
                  "samples": [
                    {
                      "name": "Mass determined by marker.radius",
                      "value": "highcharts/series-networkgraph/ragdoll/"
                    }
                  ],
                  "type": { "names": ["number"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.networkgraph.nodes.mass",
                  "name": "mass",
                  "line": 532,
                  "lineEnd": 548,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "name": {
                "doclet": {
                  "description": "The name to display for the node in data labels and tooltips. Use this when\nthe name is different from the `id`. Where the id must be unique for each\nnode, this is not necessary for the name.",
                  "samples": [
                    {
                      "name": "Networkgraph diagram with node options",
                      "value": "highcharts/series-networkgraph/data-options/"
                    }
                  ],
                  "type": { "names": ["string"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.networkgraph.nodes.name",
                  "name": "name",
                  "line": 520,
                  "lineEnd": 531,
                  "filename": "code/es-modules/Series/Networkgraph/NetworkgraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "dataLabels": {},
          "draggable": {},
          "inactiveOtherPoints": {},
          "layoutAlgorithm": {},
          "link": {},
          "marker": {},
          "showInLegend": {},
          "states": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "findNearestPointBy": {},
          "includeInDataExport": {},
          "keys": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {},
          "zones": {}
        },
        "extended": 1
      },
      "organization": {
        "doclet": {
          "description": "An `organization` series. If the [type](#series.organization.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `organization` series are defined in\n   [plotOptions.organization](plotOptions.organization).\n3. Options for one single series are given in\n   [the series instance array](series.organization).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        organization: {\n            // shared options for all organization series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'organization'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.organization.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === organization) {\n    // code specific to the organization series\n}\n```\n            ",
          "extends": "series,plotOptions.organization",
          "exclude": ["dataSorting", "boostThreshold", "boostBlending"],
          "products": ["highcharts"],
          "requires": ["module:modules/sankey", "module:modules/organization"]
        },
        "meta": {
          "fullname": "series.organization",
          "name": "organization",
          "line": 321,
          "lineEnd": 331,
          "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `organization` series\ntype, points can be given in the following way:\n\nAn array of objects with named values. The following snippet shows only a\nfew settings, see the complete options set below. If the total number of data\npoints exceeds the series' [turboThreshold](#series.area.turboThreshold),\nthis option is not available.\n\n ```js\n    data: [{\n        from: 'Category1',\n        to: 'Category2',\n        weight: 2\n    }, {\n        from: 'Category1',\n        to: 'Category3',\n        weight: 5\n    }]\n ```",
              "type": { "names": ["Array.<*>"] },
              "extends": "series.sankey.data",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.organization.data",
              "name": "data",
              "line": 439,
              "lineEnd": 464,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "dataLabels": {
                "doclet": {
                  "type": {
                    "names": [
                      "Highcharts.SeriesOrganizationDataLabelsOptionsObject",
                      "Array.<Highcharts.SeriesOrganizationDataLabelsOptionsObject>"
                    ]
                  },
                  "products": ["highcharts"],
                  "extends": "series.sankey.data.dataLabels"
                },
                "meta": {
                  "fullname": "series.organization.data.dataLabels",
                  "name": "dataLabels",
                  "line": 332,
                  "lineEnd": 336,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "align": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "backgroundColor": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "crop": {},
                  "defer": {},
                  "enabled": {},
                  "filter": {},
                  "format": {},
                  "formatter": {},
                  "inside": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "style": {},
                  "textPath": {},
                  "useHTML": {},
                  "verticalAlign": {},
                  "x": {},
                  "y": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "color": {},
              "from": {},
              "outgoing": {},
              "to": {},
              "weight": {},
              "accessibility": {},
              "className": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {}
            },
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.organization.dataLabels"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "series.organization.dataLabels",
              "line": 0,
              "lineEnd": 0,
              "name": "dataLabels"
            },
            "children": {
              "linkFormat": {
                "doclet": {
                  "description": "The format string specifying what to show for *links* in the\norganization chart.\n\nBest to use with [`linkTextPath`](#series.organization.dataLabels.linkTextPath) enabled.",
                  "samples": [
                    {
                      "name": "Organization chart with link labels",
                      "value": "highcharts/series-organization/link-labels"
                    }
                  ],
                  "type": { "names": ["string"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.organization.dataLabels.linkFormat",
                  "name": "linkFormat",
                  "line": 377,
                  "lineEnd": 390,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "linkFormatter": {
                "doclet": {
                  "description": "Callback to format data labels for _links_ in the\norganization chart. The `linkFormat` option takes\nprecedence over the `linkFormatter`.",
                  "type": {
                    "names": ["OrganizationDataLabelsFormatterCallbackFunction"]
                  },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.organization.dataLabels.linkFormatter",
                  "name": "linkFormatter",
                  "line": 391,
                  "lineEnd": 400,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "linkTextPath": {
                "doclet": {
                  "description": "Options for a _link_ label text which should follow link\nconnection.",
                  "samples": [
                    {
                      "name": "Organization chart with link labels",
                      "value": "highcharts/series-organization/link-labels"
                    }
                  ],
                  "type": { "names": ["DataLabelTextPathOptions"] },
                  "products": ["highcharts"],
                  "extends": "plotOptions.organization.dataLabels.linkTextPath"
                },
                "meta": {
                  "fullname": "series.organization.dataLabels.linkTextPath",
                  "name": "linkTextPath",
                  "line": 401,
                  "lineEnd": 412,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "column": 0
                },
                "children": { "attributes": {} },
                "extended": 1
              },
              "nodeFormatter": {},
              "style": {},
              "useHTML": {},
              "backgroundColor": {},
              "crop": {},
              "enabled": {},
              "format": {},
              "formatter": {},
              "inside": {},
              "nodeFormat": {},
              "align": {},
              "verticalAlign": {},
              "y": {},
              "alignTo": {},
              "allowOverlap": {},
              "animation": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "defer": {},
              "filter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "textPath": {},
              "x": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "link": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.organization.link"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "series.organization.link",
              "line": 0,
              "lineEnd": 0,
              "name": "link"
            },
            "children": {
              "offset": {
                "doclet": {
                  "description": "Modifier of the shape of the curved link. Works best for values\nbetween 0 and 1, where 0 is a straight line, and 1 is a shape\nclose to the default one.",
                  "defaultvalue": "0.5",
                  "type": { "names": ["number"] },
                  "since": "10.3.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.organization.link.offset",
                  "name": "offset",
                  "line": 69,
                  "lineEnd": 79,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "color": {},
              "lineWidth": {},
              "radius": {},
              "type": {}
            },
            "extended": 1
          },
          "linkColor": {
            "doclet": {
              "description": "The color of the links between nodes. This option is moved to\n[link.color](#plotOptions.organization.link.color).",
              "type": { "names": ["Highcharts.ColorString"] },
              "deprecated": true
            },
            "meta": {
              "fullname": "series.organization.linkColor",
              "name": "linkColor",
              "line": 271,
              "lineEnd": 280,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "linkLineWidth": {
            "doclet": {
              "description": "The line width of the links connecting nodes, in pixels. This option\nis now deprecated and moved to the\n[link.radius](#plotOptions.organization.link.lineWidth).",
              "samples": [
                {
                  "name": "Square links",
                  "value": "highcharts/series-organization/link-options"
                }
              ],
              "deprecated": true
            },
            "meta": {
              "fullname": "series.organization.linkLineWidth",
              "name": "linkLineWidth",
              "line": 281,
              "lineEnd": 292,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "linkRadius": {
            "doclet": {
              "description": "Radius for the rounded corners of the links between nodes. This\noption is now deprecated, and moved to\n[link.radius](#plotOptions.organization.link.radius).",
              "samples": [
                {
                  "name": "Square links",
                  "value": "highcharts/series-organization/link-options"
                }
              ],
              "deprecated": true
            },
            "meta": {
              "fullname": "series.organization.linkRadius",
              "name": "linkRadius",
              "line": 52,
              "lineEnd": 62,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "nodes": {
            "doclet": {
              "description": "A collection of options for the individual nodes. The nodes in an org chart\nare auto-generated instances of `Highcharts.Point`, but options can be\napplied here and linked by the `id`.",
              "extends": "series.sankey.nodes",
              "type": { "names": ["Array.<*>"] },
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.organization.nodes",
              "name": "nodes",
              "line": 337,
              "lineEnd": 346,
              "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "dataLabels": {
                "doclet": {
                  "description": "Individual data label for each node. The options are the same as\nthe ones for [series.organization.dataLabels](#series.organization.dataLabels).",
                  "type": {
                    "names": [
                      "Highcharts.SeriesOrganizationDataLabelsOptionsObject",
                      "Array.<Highcharts.SeriesOrganizationDataLabelsOptionsObject>"
                    ]
                  },
                  "extends": "series.sankey.nodes.dataLabels"
                },
                "meta": {
                  "fullname": "series.organization.nodes.dataLabels",
                  "name": "dataLabels",
                  "line": 347,
                  "lineEnd": 354,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "backgroundColor": {},
                  "crop": {},
                  "enabled": {},
                  "format": {},
                  "formatter": {},
                  "inside": {},
                  "nodeFormat": {},
                  "nodeFormatter": {},
                  "align": {},
                  "verticalAlign": {},
                  "y": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "defer": {},
                  "filter": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "style": {},
                  "textPath": {},
                  "useHTML": {},
                  "x": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "description": {
                "doclet": {
                  "description": "The job description for the node card, will be inserted by the default\n`dataLabel.nodeFormatter`.",
                  "samples": [
                    {
                      "name": "Org chart with job descriptions",
                      "value": "highcharts/demo/organization-chart"
                    }
                  ],
                  "type": { "names": ["string"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.organization.nodes.description",
                  "name": "description",
                  "line": 355,
                  "lineEnd": 365,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "image": {
                "doclet": {
                  "description": "An image for the node card, will be inserted by the default\n`dataLabel.nodeFormatter`.",
                  "samples": [
                    {
                      "name": "Org chart with images",
                      "value": "highcharts/demo/organization-chart"
                    }
                  ],
                  "type": { "names": ["string"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.organization.nodes.image",
                  "name": "image",
                  "line": 366,
                  "lineEnd": 376,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "layout": {
                "doclet": {
                  "description": "Layout for the node's children. If `hanging`, this node's children will hang\nbelow their parent, allowing a tighter packing of nodes in the diagram.\n\nNote: Since version 10.0.0, the `hanging` layout is set by default for\nchildren of a parent using `hanging` layout.",
                  "samples": [
                    {
                      "name": "Hanging layout",
                      "value": "highcharts/demo/organization-chart"
                    }
                  ],
                  "type": {
                    "names": ["Highcharts.SeriesOrganizationNodesLayoutValue"]
                  },
                  "defaultvalue": "normal",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.organization.nodes.layout",
                  "name": "layout",
                  "line": 413,
                  "lineEnd": 427,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "title": {
                "doclet": {
                  "description": "The job title for the node card, will be inserted by the default\n`dataLabel.nodeFormatter`.",
                  "samples": [
                    {
                      "name": "Org chart with job titles",
                      "value": "highcharts/demo/organization-chart"
                    }
                  ],
                  "type": { "names": ["string"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.organization.nodes.title",
                  "name": "title",
                  "line": 428,
                  "lineEnd": 438,
                  "filename": "code/es-modules/Series/Organization/OrganizationSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "color": {},
              "colorIndex": {},
              "column": {},
              "height": {},
              "id": {},
              "level": {},
              "name": {},
              "offset": {},
              "offsetHorizontal": {},
              "offsetVertical": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "hangingIndent": {},
          "hangingIndentTranslation": {},
          "hangingSide": {},
          "minNodeLength": {},
          "nodeWidth": {},
          "tooltip": {},
          "colorByPoint": {},
          "inactiveOtherPoints": {},
          "levels": {},
          "linkColorMode": {},
          "linkOpacity": {},
          "minLinkWidth": {},
          "nodeAlignment": {},
          "nodeDistance": {},
          "nodePadding": {},
          "opacity": {},
          "showInLegend": {},
          "states": {},
          "centerInCategory": {},
          "colors": {},
          "dataGrouping": {},
          "stickyTracking": {},
          "accessibility": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "onPoint": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "packedbubble": {
        "doclet": {
          "description": "A `packedbubble` series. If the [type](#series.packedbubble.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `packedbubble` series are defined in\n   [plotOptions.packedbubble](plotOptions.packedbubble).\n3. Options for one single series are given in\n   [the series instance array](series.packedbubble).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        packedbubble: {\n            // shared options for all packedbubble series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'packedbubble'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.packedbubble.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === packedbubble) {\n    // code specific to the packedbubble series\n}\n```\n            ",
          "type": { "names": ["Object"] },
          "extends": "series,plotOptions.packedbubble",
          "exclude": [
            "cropThreshold",
            "dataParser",
            "dataSorting",
            "dataURL",
            "dragDrop",
            "stack",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "fullname": "series.packedbubble",
          "name": "packedbubble",
          "line": 336,
          "lineEnd": 347,
          "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `packedbubble` series type,\npoints can be given in the following ways:\n\n1.  An array of `values`.\n\n ```js\n    data: [5, 1, 20]\n ```\n\n2.  An array of objects with named values. The objects are point\nconfiguration objects as seen below. If the total number of data points\nexceeds the series' [turboThreshold](#series.packedbubble.turboThreshold),\nthis option is not available.\n\n ```js\n    data: [{\n        value: 1,\n        name: \"Point2\",\n        color: \"#00FF00\"\n    }, {\n        value: 5,\n        name: \"Point1\",\n        color: \"#FF00FF\"\n    }]\n ```",
              "type": { "names": ["Array.<(Object|Array)>"] },
              "extends": "series.line.data",
              "exclude": ["marker", "x", "y"],
              "samples": [
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.packedbubble.data",
              "name": "data",
              "line": 348,
              "lineEnd": 382,
              "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "dataLabels": {
                "doclet": {
                  "type": {
                    "names": [
                      "Highcharts.SeriesPackedBubbleDataLabelsOptionsObject",
                      "Array.<Highcharts.SeriesPackedBubbleDataLabelsOptionsObject>"
                    ]
                  },
                  "products": ["highcharts"],
                  "extends": "series.line.data.dataLabels"
                },
                "meta": {
                  "fullname": "series.packedbubble.data.dataLabels",
                  "name": "dataLabels",
                  "line": 383,
                  "lineEnd": 387,
                  "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "align": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "backgroundColor": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "crop": {},
                  "defer": {},
                  "enabled": {},
                  "filter": {},
                  "format": {},
                  "formatter": {},
                  "inside": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "style": {},
                  "textPath": {},
                  "useHTML": {},
                  "verticalAlign": {},
                  "x": {},
                  "y": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {}
            },
            "extended": 1
          },
          "marker": {
            "doclet": {
              "exclude": [
                "enabled",
                "enabledThreshold",
                "height",
                "radius",
                "width"
              ],
              "products": ["highcharts"],
              "extends": "plotOptions.packedbubble.marker"
            },
            "meta": {
              "fullname": "series.packedbubble.marker",
              "name": "marker",
              "line": 388,
              "lineEnd": 392,
              "filename": "code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "fillOpacity": {},
              "lineColor": {},
              "lineWidth": {},
              "states": {},
              "symbol": {},
              "fillColor": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "crisp": {},
          "dataLabels": {},
          "draggable": {},
          "layoutAlgorithm": {},
          "maxSize": {},
          "minSize": {},
          "parentNode": {},
          "sizeBy": {},
          "tooltip": {},
          "useSimulation": {},
          "zoneAxis": {},
          "animationLimit": {},
          "colorKey": {},
          "displayNegative": {},
          "negativeColor": {},
          "softThreshold": {},
          "states": {},
          "turboThreshold": {},
          "zThreshold": {},
          "findNearestPointBy": {},
          "lineWidth": {},
          "stickyTracking": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "stacking": {},
          "threshold": {},
          "visible": {},
          "zones": {}
        },
        "extended": 1
      },
      "pareto": {
        "doclet": {
          "description": "A `pareto` series. If the [type](#series.pareto.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `pareto` series are defined in\n   [plotOptions.pareto](plotOptions.pareto).\n3. Options for one single series are given in\n   [the series instance array](series.pareto).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        pareto: {\n            // shared options for all pareto series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'pareto'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.pareto.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === pareto) {\n    // code specific to the pareto series\n}\n```\n            ",
          "extends": "series,plotOptions.pareto",
          "since": "6.0.0",
          "products": ["highcharts"],
          "exclude": [
            "data",
            "dataParser",
            "dataURL",
            "boostThreshold",
            "boostBlending"
          ],
          "requires": ["module:modules/pareto"]
        },
        "meta": {
          "fullname": "series.pareto",
          "name": "pareto",
          "line": 44,
          "lineEnd": 54,
          "filename": "code/es-modules/Series/ParetoSeries/ParetoSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "baseSeries": {
            "doclet": {
              "description": "An integer identifying the index to use for the base series, or a string\nrepresenting the id of the series.",
              "type": { "names": ["number", "string"] },
              "defaultvalue": "undefined",
              "since": "6.0.0"
            },
            "meta": {
              "fullname": "series.pareto.baseSeries",
              "name": "baseSeries",
              "line": 55,
              "lineEnd": 62,
              "filename": "code/es-modules/Series/ParetoSeries/ParetoSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `pareto` series type,\npoints are calculated dynamically.",
              "type": { "names": ["Array.<(Array.<(number|string)>|*)>"] },
              "extends": "series.column.data",
              "since": "6.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.pareto.data",
              "name": "data",
              "line": 63,
              "lineEnd": 72,
              "filename": "code/es-modules/Series/ParetoSeries/ParetoSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "borderColor": {},
              "borderWidth": {},
              "dashStyle": {},
              "pointWidth": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "marker": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "states": {},
          "stickyTracking": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "pictorial": {
        "doclet": {
          "description": "A `pictorial` series. If the [type](#series.pictorial.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `pictorial` series are defined in\n   [plotOptions.pictorial](plotOptions.pictorial).\n3. Options for one single series are given in\n   [the series instance array](series.pictorial).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        pictorial: {\n            // shared options for all pictorial series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'pictorial'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.pictorial.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === pictorial) {\n    // code specific to the pictorial series\n}\n```\n            ",
          "extends": "series,plotOptions.pictorial",
          "since": "11.0.0",
          "products": ["highcharts"],
          "exclude": [
            "dataParser",
            "borderRadius",
            "boostBlending",
            "boostThreshold",
            "borderColor",
            "borderWidth",
            "centerInCategory",
            "connectEnds",
            "connectNulls",
            "crisp",
            "colorKey",
            "dataURL",
            "dataAsColumns",
            "depth",
            "dragDrop",
            "edgeColor",
            "edgeWidth",
            "linecap",
            "lineWidth",
            "marker",
            "dataSorting",
            "dashStyle",
            "onPoint",
            "relativeXValue",
            "shadow",
            "zoneAxis",
            "zones"
          ],
          "requires": ["module:modules/pictorial"]
        },
        "meta": {
          "fullname": "series.pictorial",
          "name": "pictorial",
          "line": 362,
          "lineEnd": 377,
          "filename": "code/es-modules/Series/Pictorial/PictorialSeries.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `pictorial` series type,\npoints can be given in the following ways:\n\n1. An array of arrays with 2 values. In this case, the values correspond\n   to `x,y`. If the first value is a string, it is applied as the name\n   of the point, and the `x` value is inferred. The `x` value can also be\n   omitted, in which case the inner arrays should be of length 2. Then the\n   `x` value is automatically calculated, either starting at 0 and\n   incremented by 1, or from `pointStart` and `pointInterval` given in the\n   series options.\n   ```js\n   data: [\n       [0, 40],\n       [1, 50],\n       [2, 60]\n   ]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.pictorial.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 0,\n       y: 40,\n       name: \"Point1\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       y: 60,\n       name: \"Point2\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "type": {
                "names": [
                  "Array.<(Array.<(number|string), number>|Array.<(number|string), number, number>|*)>"
                ]
              },
              "extends": "series.column.data",
              "samples": [
                {
                  "name": "Pictorial chart",
                  "value": "highcharts/demo/pictorial/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Pictorial stackShadow option",
                  "value": "highcharts/demo/pictorial-stackshadow/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Pictorial max option",
                  "value": "highcharts/series-pictorial/paths-max/",
                  "products": ["highcharts"]
                }
              ],
              "exclude": [
                "borderColor",
                "borderWidth",
                "dashStyle",
                "dragDrop"
              ],
              "since": "11.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.pictorial.data",
              "name": "data",
              "line": 378,
              "lineEnd": 430,
              "filename": "code/es-modules/Series/Pictorial/PictorialSeries.js",
              "column": 0
            },
            "children": {
              "pointWidth": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "paths": {
            "doclet": {
              "description": "The paths include options describing the series image. For further details on\npreparing the SVG image, please refer to the [pictorial\ndocumentation](https://www.highcharts.com/docs/chart-and-series-types/pictorial).",
              "declare": "Highcharts.SeriesPictorialPathsOptionsObject",
              "type": { "names": ["Array.<*>"] },
              "samples": [
                {
                  "name": "Pictorial chart",
                  "value": "highcharts/demo/pictorial/",
                  "products": ["highcharts"]
                }
              ],
              "since": "11.0.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.pictorial.paths",
              "name": "paths",
              "line": 431,
              "lineEnd": 445,
              "filename": "code/es-modules/Series/Pictorial/PictorialSeries.js",
              "column": 0
            },
            "children": {
              "definition": {
                "doclet": {
                  "description": "The definition defines a path to be drawn. It corresponds `d` SVG attribute.",
                  "type": { "names": ["string"] },
                  "samples": [
                    {
                      "name": "Pictorial chart",
                      "value": "highcharts/demo/pictorial/",
                      "products": ["highcharts"]
                    }
                  ],
                  "products": ["highcharts"],
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "series.pictorial.paths.definition",
                  "name": "definition",
                  "line": 446,
                  "lineEnd": 456,
                  "filename": "code/es-modules/Series/Pictorial/PictorialSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "max": {
                "doclet": {
                  "description": "The max option determines height of the image. It is the ratio of\n`yAxis.max` to the `paths.max`.",
                  "samples": [
                    {
                      "name": "Pictorial max option",
                      "value": "highcharts/series-pictorial/paths-max",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": "yAxis.max",
                  "products": ["highcharts"],
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "series.pictorial.paths.max",
                  "name": "max",
                  "line": 457,
                  "lineEnd": 468,
                  "filename": "code/es-modules/Series/Pictorial/PictorialSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "pie": {
        "doclet": {
          "description": "A `pie` series. If the [type](#series.pie.type) option is not specified,\nit is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `pie` series are defined in\n   [plotOptions.pie](plotOptions.pie).\n3. Options for one single series are given in\n   [the series instance array](series.pie).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        pie: {\n            // shared options for all pie series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'pie'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.pie.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === pie) {\n    // code specific to the pie series\n}\n```\n            ",
          "extends": "series,plotOptions.pie",
          "exclude": [
            "cropThreshold",
            "dataParser",
            "dataURL",
            "linkedTo",
            "stack",
            "xAxis",
            "yAxis",
            "dataSorting",
            "step",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts", "highmaps"]
        },
        "meta": {
          "fullname": "series.pie",
          "name": "pie",
          "line": 582,
          "lineEnd": 591,
          "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `pie` series type,\npoints can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.pie.turboThreshold),\n   this option is not available.\n   ```js\n   data: [{\n       y: 1,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       y: 7,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(number|Array.<string, (number|null)>|null|*)>"
                ]
              },
              "extends": "series.line.data",
              "exclude": ["marker", "x"],
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "series.pie.data",
              "name": "data",
              "line": 592,
              "lineEnd": 635,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "dataLabels": {
                "doclet": {
                  "type": {
                    "names": ["Highcharts.SeriesPieDataLabelsOptionsObject"]
                  },
                  "products": ["highcharts", "highmaps"],
                  "extends": "series.line.data.dataLabels"
                },
                "meta": {
                  "fullname": "series.pie.data.dataLabels",
                  "name": "dataLabels",
                  "line": 636,
                  "lineEnd": 640,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "align": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "backgroundColor": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "crop": {},
                  "defer": {},
                  "enabled": {},
                  "filter": {},
                  "format": {},
                  "formatter": {},
                  "inside": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "style": {},
                  "textPath": {},
                  "useHTML": {},
                  "verticalAlign": {},
                  "x": {},
                  "y": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "legendIndex": {
                "doclet": {
                  "description": "The sequential index of the data point in the legend.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highmaps"]
                },
                "meta": {
                  "fullname": "series.pie.data.legendIndex",
                  "name": "legendIndex",
                  "line": 164,
                  "lineEnd": 170,
                  "filename": "code/es-modules/Series/Item/ItemSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "sliced": {
                "doclet": {
                  "description": "Whether to display a slice offset from the center.",
                  "samples": [
                    {
                      "name": "One sliced point",
                      "value": "highcharts/point/sliced/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["boolean"] },
                  "products": ["highcharts", "highmaps"]
                },
                "meta": {
                  "fullname": "series.pie.data.sliced",
                  "name": "sliced",
                  "line": 648,
                  "lineEnd": 657,
                  "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "y": {}
            },
            "extended": 1
          },
          "dataLabels": {
            "doclet": {
              "extends": "plotOptions.pie.dataLabels",
              "exclude": [
                "align",
                "allowOverlap",
                "inside",
                "staggerLines",
                "step"
              ],
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "series.pie.dataLabels",
              "name": "dataLabels",
              "line": 658,
              "lineEnd": 663,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "alignTo": {},
              "connectorColor": {},
              "connectorPadding": {},
              "connectorShape": {},
              "connectorWidth": {},
              "crookDistance": {},
              "distance": {},
              "enabled": {},
              "format": {},
              "formatter": {},
              "softConnector": {},
              "style": {},
              "animation": {},
              "backgroundColor": {},
              "borderColor": {},
              "borderRadius": {},
              "borderWidth": {},
              "className": {},
              "color": {},
              "crop": {},
              "defer": {},
              "filter": {},
              "nullFormat": {},
              "nullFormatter": {},
              "overflow": {},
              "padding": {},
              "position": {},
              "rotation": {},
              "shadow": {},
              "shape": {},
              "textPath": {},
              "useHTML": {},
              "verticalAlign": {},
              "x": {},
              "y": {},
              "zIndex": {}
            },
            "extended": 1
          },
          "events": {
            "doclet": {
              "exclude": ["legendItemClick"],
              "products": ["highcharts", "highmaps"],
              "extends": "plotOptions.pie.events"
            },
            "meta": {
              "fullname": "series.pie.events",
              "name": "events",
              "line": 664,
              "lineEnd": 668,
              "filename": "code/es-modules/Series/Pie/PieSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "checkboxClick": {},
              "afterAnimate": {},
              "click": {},
              "hide": {},
              "mouseOut": {},
              "mouseOver": {},
              "show": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "center": {},
          "clip": {},
          "color": {},
          "colors": {},
          "depth": {},
          "endAngle": {},
          "fillColor": {},
          "ignoreHiddenPoint": {},
          "inactiveOtherPoints": {},
          "innerSize": {},
          "minSize": {},
          "point": {},
          "showInLegend": {},
          "size": {},
          "slicedOffset": {},
          "startAngle": {},
          "states": {},
          "stickyTracking": {},
          "thickness": {},
          "tooltip": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "includeInDataExport": {},
          "keys": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "onPoint": {},
          "opacity": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "visible": {}
        },
        "extended": 1
      },
      "polygon": {
        "doclet": {
          "description": "A `polygon` series. If the [type](#series.polygon.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `polygon` series are defined in\n   [plotOptions.polygon](plotOptions.polygon).\n3. Options for one single series are given in\n   [the series instance array](series.polygon).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        polygon: {\n            // shared options for all polygon series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'polygon'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.polygon.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === polygon) {\n    // code specific to the polygon series\n}\n```\n            ",
          "extends": "series,plotOptions.polygon",
          "exclude": [
            "dataParser",
            "dataURL",
            "stack",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts", "highstock"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "fullname": "series.polygon",
          "name": "polygon",
          "line": 51,
          "lineEnd": 60,
          "filename": "code/es-modules/Series/Polygon/PolygonSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `polygon` series\ntype, points can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. The `x` values will be automatically\n   calculated, either starting at 0 and incremented by 1, or from\n   `pointStart` and `pointInterval` given in the series options. If the axis\n   has categories, these will be used. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of arrays with 2 values. In this case, the values correspond to\n   `x,y`. If the first value is a string, it is applied as the name of the\n   point, and the `x` value is inferred.\n   ```js\n   data: [\n       [0, 10],\n       [1, 3],\n       [2, 1]\n   ]\n   ```\n\n3. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.polygon.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 1,\n       y: 1,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       y: 8,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(number|Array.<(number|string), (number|null)>|null|*)>"
                ]
              },
              "extends": "series.line.data",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.polygon.data",
              "name": "data",
              "line": 61,
              "lineEnd": 119,
              "filename": "code/es-modules/Series/Polygon/PolygonSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "marker": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "legendSymbol": {},
          "marker": {},
          "stickyTracking": {},
          "tooltip": {},
          "trackByArea": {},
          "findNearestPointBy": {},
          "lineWidth": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "stacking": {},
          "states": {},
          "step": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "pyramid": {
        "doclet": {
          "description": "A `pyramid` series. If the [type](#series.pyramid.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `pyramid` series are defined in\n   [plotOptions.pyramid](plotOptions.pyramid).\n3. Options for one single series are given in\n   [the series instance array](series.pyramid).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        pyramid: {\n            // shared options for all pyramid series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'pyramid'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.pyramid.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === pyramid) {\n    // code specific to the pyramid series\n}\n```\n            ",
          "extends": "series,plotOptions.pyramid",
          "exclude": [
            "dataParser",
            "dataURL",
            "stack",
            "xAxis",
            "yAxis",
            "dataSorting",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:modules/funnel"]
        },
        "meta": {
          "fullname": "series.pyramid",
          "name": "pyramid",
          "line": 41,
          "lineEnd": 51,
          "filename": "code/es-modules/Series/Pyramid/PyramidSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `pyramid` series\ntype, points can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.pyramid.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       y: 9,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       y: 6,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Array.<(number|null|*)>"] },
              "extends": "series.pie.data",
              "exclude": ["sliced"],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.pyramid.data",
              "name": "data",
              "line": 52,
              "lineEnd": 89,
              "filename": "code/es-modules/Series/Pyramid/PyramidSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "dataLabels": {},
              "legendIndex": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "animation": {},
          "borderRadius": {},
          "center": {},
          "dataLabels": {},
          "height": {},
          "neckHeight": {},
          "neckWidth": {},
          "reversed": {},
          "states": {},
          "width": {},
          "borderColor": {},
          "borderWidth": {},
          "clip": {},
          "color": {},
          "colors": {},
          "depth": {},
          "endAngle": {},
          "events": {},
          "fillColor": {},
          "ignoreHiddenPoint": {},
          "inactiveOtherPoints": {},
          "minSize": {},
          "point": {},
          "showInLegend": {},
          "slicedOffset": {},
          "startAngle": {},
          "stickyTracking": {},
          "thickness": {},
          "tooltip": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "className": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "includeInDataExport": {},
          "keys": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "onPoint": {},
          "opacity": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "visible": {}
        },
        "extended": 1
      },
      "pyramid3d": {
        "doclet": {
          "description": "A `pyramid3d` series. If the [type](#series.pyramid3d.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `pyramid3d` series are defined in\n   [plotOptions.pyramid3d](plotOptions.pyramid3d).\n3. Options for one single series are given in\n   [the series instance array](series.pyramid3d).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        pyramid3d: {\n            // shared options for all pyramid3d series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'pyramid3d'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.pyramid3d.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === pyramid3d) {\n    // code specific to the pyramid3d series\n}\n```\n            ",
          "since": "7.1.0",
          "extends": "series,plotOptions.pyramid3d",
          "exclude": [
            "allAreas",
            "boostThreshold",
            "colorAxis",
            "compare",
            "compareBase",
            "dataSorting"
          ],
          "products": ["highcharts"],
          "samples": [
            {
              "name": "Pyramid3d",
              "value": "highcharts/demo/pyramid3d/",
              "products": ["highcharts"]
            }
          ],
          "requires": ["module:modules/pyramid3d"]
        },
        "meta": {
          "fullname": "series.pyramid3d",
          "name": "pyramid3d",
          "line": 54,
          "lineEnd": 65,
          "filename": "code/es-modules/Series/Pyramid3D/Pyramid3DSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `pyramid3d` series\ntype, points can be given in the following ways:\n\n1.  An array of numerical values. In this case, the numerical values\nwill be interpreted as `y` options. The `x` values will be automatically\ncalculated, either starting at 0 and incremented by 1, or from `pointStart`\nand `pointInterval` given in the series options. If the axis has\ncategories, these will be used. Example:\n\n ```js\n data: [0, 5, 3, 5]\n ```\n\n2.  An array of objects with named values. The following snippet shows only a\nfew settings, see the complete options set below. If the total number of data\npoints exceeds the series'\n[turboThreshold](#series.pyramid3d.turboThreshold),\nthis option is not available.\n\n ```js\n    data: [{\n        y: 2,\n        name: \"Point2\",\n        color: \"#00FF00\"\n    }, {\n        y: 4,\n        name: \"Point1\",\n        color: \"#FF00FF\"\n    }]\n ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Array.<(number|Array.<number>|*)>"] },
              "extends": "series.funnel3d.data",
              "products": ["highcharts"],
              "since": "7.1.0"
            },
            "meta": {
              "fullname": "series.pyramid3d.data",
              "name": "data",
              "line": 66,
              "lineEnd": 113,
              "filename": "code/es-modules/Series/Pyramid3D/Pyramid3DSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "gradientForSides": {},
              "borderColor": {},
              "borderWidth": {},
              "dashStyle": {},
              "pointWidth": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "dataLabels": {},
          "neckHeight": {},
          "neckWidth": {},
          "reversed": {},
          "animation": {},
          "colorByPoint": {},
          "edgeWidth": {},
          "gradientForSides": {},
          "height": {},
          "showInLegend": {},
          "width": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "depth": {},
          "dragDrop": {},
          "edgeColor": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "sankey": {
        "doclet": {
          "description": "A `sankey` series. If the [type](#series.sankey.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `sankey` series are defined in\n   [plotOptions.sankey](plotOptions.sankey).\n3. Options for one single series are given in\n   [the series instance array](series.sankey).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        sankey: {\n            // shared options for all sankey series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'sankey'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.sankey.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === sankey) {\n    // code specific to the sankey series\n}\n```\n            ",
          "extends": "series,plotOptions.sankey",
          "exclude": [
            "animationLimit",
            "boostBlending",
            "boostThreshold",
            "borderColor",
            "borderRadius",
            "borderWidth",
            "crisp",
            "cropThreshold",
            "dataParser",
            "dataURL",
            "depth",
            "dragDrop",
            "edgeColor",
            "edgeWidth",
            "findNearestPointBy",
            "getExtremesFromAll",
            "grouping",
            "groupPadding",
            "groupZPadding",
            "label",
            "maxPointWidth",
            "negativeColor",
            "pointInterval",
            "pointIntervalUnit",
            "pointPadding",
            "pointPlacement",
            "pointRange",
            "pointStart",
            "pointWidth",
            "shadow",
            "softThreshold",
            "stacking",
            "threshold",
            "zoneAxis",
            "zones",
            "dataSorting"
          ],
          "products": ["highcharts"],
          "requires": ["module:modules/sankey"]
        },
        "meta": {
          "fullname": "series.sankey",
          "name": "sankey",
          "line": 346,
          "lineEnd": 362,
          "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `sankey` series type,\npoints can be given in the following way:\n\nAn array of objects with named values. The following snippet shows only a\nfew settings, see the complete options set below. If the total number of data\npoints exceeds the series' [turboThreshold](#series.area.turboThreshold),\nthis option is not available.\n\n ```js\n    data: [{\n        from: 'Category1',\n        to: 'Category2',\n        weight: 2\n    }, {\n        from: 'Category1',\n        to: 'Category3',\n        weight: 5\n    }]\n ```\n\n When you provide the data as tuples, the keys option has to be set as well.\n\n ```js\n    keys: ['from', 'to', 'weight'],\n    data: [\n        ['Category1', 'Category2', 2],\n        ['Category1', 'Category3', 5]\n    ]\n ```",
              "samples": [
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "declare": "Highcharts.SeriesSankeyPointOptionsObject",
              "type": {
                "names": ["Array.<*>", "Array.<Array.<(string|number)>>"]
              },
              "extends": "series.line.data",
              "exclude": ["dragDrop", "drilldown", "marker", "x", "y"],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.sankey.data",
              "name": "data",
              "line": 501,
              "lineEnd": 541,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "column": 0
            },
            "children": {
              "color": {
                "doclet": {
                  "description": "The color for the individual _link_. By default, the link color is the same\nas the node it extends from. The `series.fillOpacity` option also applies to\nthe points, so when setting a specific link color, consider setting the\n`fillOpacity` to 1.",
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sankey.data.color",
                  "name": "color",
                  "line": 542,
                  "lineEnd": 551,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dataLabels": {
                "doclet": {
                  "type": {
                    "names": [
                      "Highcharts.SeriesSankeyDataLabelsOptionsObject",
                      "Array.<Highcharts.SeriesSankeyDataLabelsOptionsObject>"
                    ]
                  },
                  "products": ["highcharts"],
                  "extends": "series.line.data.dataLabels"
                },
                "meta": {
                  "fullname": "series.sankey.data.dataLabels",
                  "name": "dataLabels",
                  "line": 552,
                  "lineEnd": 556,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "align": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "backgroundColor": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "crop": {},
                  "defer": {},
                  "enabled": {},
                  "filter": {},
                  "format": {},
                  "formatter": {},
                  "inside": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "style": {},
                  "textPath": {},
                  "useHTML": {},
                  "verticalAlign": {},
                  "x": {},
                  "y": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "from": {
                "doclet": {
                  "description": "The node that the link runs from.",
                  "type": { "names": ["string"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sankey.data.from",
                  "name": "from",
                  "line": 557,
                  "lineEnd": 563,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "outgoing": {
                "doclet": {
                  "description": "Whether the link goes out of the system.",
                  "samples": [
                    {
                      "name": "Sankey chart with outgoing links",
                      "value": "highcharts/plotoptions/sankey-outgoing"
                    }
                  ],
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "false",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sankey.data.outgoing",
                  "name": "outgoing",
                  "line": 571,
                  "lineEnd": 581,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "to": {
                "doclet": {
                  "description": "The node that the link runs to.",
                  "type": { "names": ["string"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sankey.data.to",
                  "name": "to",
                  "line": 564,
                  "lineEnd": 570,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "weight": {
                "doclet": {
                  "description": "The weight of the link.",
                  "type": { "names": ["number", "null"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sankey.data.weight",
                  "name": "weight",
                  "line": 582,
                  "lineEnd": 588,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {}
            },
            "extended": 1
          },
          "nodes": {
            "doclet": {
              "description": "A collection of options for the individual nodes. The nodes in a sankey\ndiagram are auto-generated instances of `Highcharts.Point`, but options can\nbe applied here and linked by the `id`.",
              "samples": [
                {
                  "name": "Sankey diagram with node options",
                  "value": "highcharts/css/sankey/"
                }
              ],
              "declare": "Highcharts.SeriesSankeyNodesOptionsObject",
              "type": { "names": ["Array.<*>"] },
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.sankey.nodes",
              "name": "nodes",
              "line": 363,
              "lineEnd": 375,
              "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
              "column": 0
            },
            "children": {
              "color": {
                "doclet": {
                  "description": "The color of the auto generated node.",
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sankey.nodes.color",
                  "name": "color",
                  "line": 384,
                  "lineEnd": 390,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "colorIndex": {
                "doclet": {
                  "description": "The color index of the auto generated node, especially for use in styled\nmode.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sankey.nodes.colorIndex",
                  "name": "colorIndex",
                  "line": 391,
                  "lineEnd": 398,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "column": {
                "doclet": {
                  "description": "An optional column index of where to place the node. The default behaviour is\nto place it next to the preceding node. Note that this option name is\ncounter intuitive in inverted charts, like for example an organization chart\nrendered top down. In this case the \"columns\" are horizontal.",
                  "samples": [
                    {
                      "name": "Specified node column",
                      "value": "highcharts/plotoptions/sankey-node-column/"
                    }
                  ],
                  "type": { "names": ["number"] },
                  "since": "6.0.5",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sankey.nodes.column",
                  "name": "column",
                  "line": 399,
                  "lineEnd": 412,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dataLabels": {
                "doclet": {
                  "description": "Individual data label for each node. The options are the same as\nthe ones for [series.sankey.dataLabels](#series.sankey.dataLabels).",
                  "extends": "plotOptions.sankey.dataLabels"
                },
                "meta": {
                  "fullname": "series.sankey.nodes.dataLabels",
                  "name": "dataLabels",
                  "line": 413,
                  "lineEnd": 419,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "backgroundColor": {},
                  "crop": {},
                  "enabled": {},
                  "format": {},
                  "formatter": {},
                  "inside": {},
                  "nodeFormat": {},
                  "nodeFormatter": {},
                  "align": {},
                  "verticalAlign": {},
                  "y": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "defer": {},
                  "filter": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "style": {},
                  "textPath": {},
                  "useHTML": {},
                  "x": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "height": {
                "doclet": {
                  "description": "The height of the node.",
                  "samples": [
                    {
                      "name": "Sankey diagram with height options",
                      "value": "highcharts/series-sankey/height/"
                    }
                  ],
                  "type": { "names": ["number"] },
                  "since": "11.3.0"
                },
                "meta": {
                  "fullname": "series.sankey.nodes.height",
                  "name": "height",
                  "line": 420,
                  "lineEnd": 429,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "id": {
                "doclet": {
                  "description": "The id of the auto-generated node, referring to the `from` or `to` setting of\nthe link.",
                  "type": { "names": ["string"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sankey.nodes.id",
                  "name": "id",
                  "line": 376,
                  "lineEnd": 383,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "level": {
                "doclet": {
                  "description": "An optional level index of where to place the node. The default behaviour is\nto place it next to the preceding node. Alias of `nodes.column`, but in\ninverted sankeys and org charts, the levels are laid out as rows.",
                  "type": { "names": ["number"] },
                  "since": "7.1.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sankey.nodes.level",
                  "name": "level",
                  "line": 430,
                  "lineEnd": 439,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "name": {
                "doclet": {
                  "description": "The name to display for the node in data labels and tooltips. Use this when\nthe name is different from the `id`. Where the id must be unique for each\nnode, this is not necessary for the name.",
                  "samples": [
                    {
                      "name": "Sankey diagram with node options",
                      "value": "highcharts/css/sankey/"
                    }
                  ],
                  "type": { "names": ["string"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sankey.nodes.name",
                  "name": "name",
                  "line": 440,
                  "lineEnd": 451,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "offset": {
                "doclet": {
                  "description": "This option is deprecated, use\n[offsetHorizontal](#series.sankey.nodes.offsetHorizontal) and\n[offsetVertical](#series.sankey.nodes.offsetVertical) instead.\n\nIn a horizontal layout, the vertical offset of a node in terms of weight.\nPositive values shift the node downwards, negative shift it upwards. In a\nvertical layout, like organization chart, the offset is horizontal.\n\nIf a percentage string is given, the node is offset by the percentage of the\nnode size plus `nodePadding`.",
                  "deprecated": true,
                  "type": { "names": ["number", "string"] },
                  "defaultvalue": "0",
                  "since": "6.0.5",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sankey.nodes.offset",
                  "name": "offset",
                  "line": 452,
                  "lineEnd": 470,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "offsetHorizontal": {
                "doclet": {
                  "description": "The horizontal offset of a node. Positive values shift the node right,\nnegative shift it left.\n\nIf a percentage string is given, the node is offset by the percentage of the\nnode size.",
                  "samples": [
                    {
                      "name": "Specified node offset",
                      "value": "highcharts/plotoptions/sankey-node-column/"
                    }
                  ],
                  "type": { "names": ["number", "string"] },
                  "since": "9.3.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sankey.nodes.offsetHorizontal",
                  "name": "offsetHorizontal",
                  "line": 471,
                  "lineEnd": 485,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "offsetVertical": {
                "doclet": {
                  "description": "The vertical offset of a node. Positive values shift the node down,\nnegative shift it up.\n\nIf a percentage string is given, the node is offset by the percentage of the\nnode size.",
                  "samples": [
                    {
                      "name": "Specified node offset",
                      "value": "highcharts/plotoptions/sankey-node-column/"
                    }
                  ],
                  "type": { "names": ["number", "string"] },
                  "since": "9.3.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sankey.nodes.offsetVertical",
                  "name": "offsetVertical",
                  "line": 486,
                  "lineEnd": 500,
                  "filename": "code/es-modules/Series/Sankey/SankeySeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "colorByPoint": {},
          "curveFactor": {},
          "dataLabels": {},
          "inactiveOtherPoints": {},
          "levels": {},
          "linkColorMode": {},
          "linkOpacity": {},
          "minLinkWidth": {},
          "nodeAlignment": {},
          "nodeDistance": {},
          "nodePadding": {},
          "nodeWidth": {},
          "opacity": {},
          "showInLegend": {},
          "states": {},
          "tooltip": {},
          "centerInCategory": {},
          "colors": {},
          "dataGrouping": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "includeInDataExport": {},
          "keys": {},
          "legendSymbol": {},
          "linkedTo": {},
          "onPoint": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "scatter": {
        "doclet": {
          "description": "A `scatter` series. If the [type](#series.scatter.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `scatter` series are defined in\n   [plotOptions.scatter](plotOptions.scatter).\n3. Options for one single series are given in\n   [the series instance array](series.scatter).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        scatter: {\n            // shared options for all scatter series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'scatter'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.scatter.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === scatter) {\n    // code specific to the scatter series\n}\n```\n            ",
          "extends": "series,plotOptions.scatter",
          "exclude": ["cropThreshold", "dataParser", "dataURL", "useOhlcData"],
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "series.scatter",
          "name": "scatter",
          "line": 117,
          "lineEnd": 125,
          "filename": "code/es-modules/Series/Scatter/ScatterSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `scatter` series\ntype, points can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. The `x` values will be automatically\n   calculated, either starting at 0 and incremented by 1, or from\n   `pointStart` and `pointInterval` given in the series options. If the axis\n   has categories, these will be used. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of arrays with 2 values. In this case, the values correspond to\n   `x,y`. If the first value is a string, it is applied as the name of the\n   point, and the `x` value is inferred.\n   ```js\n   data: [\n       [0, 0],\n       [1, 8],\n       [2, 9]\n   ]\n   ```\n\n3. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.scatter.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 1,\n       y: 2,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       y: 4,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(number|Array.<(number|string), (number|null)>|null|*)>"
                ]
              },
              "extends": "series.line.data",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.scatter.data",
              "name": "data",
              "line": 126,
              "lineEnd": 184,
              "filename": "code/es-modules/Series/Scatter/ScatterSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "marker": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "cluster": {},
          "findNearestPointBy": {},
          "jitter": {},
          "lineWidth": {},
          "marker": {},
          "stickyTracking": {},
          "tooltip": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "states": {},
          "step": {},
          "threshold": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "scatter3d": {
        "doclet": {
          "description": "A `scatter3d` series. If the [type](#series.scatter3d.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nscatter3d](#plotOptions.scatter3d).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `scatter3d` series are defined in\n   [plotOptions.scatter3d](plotOptions.scatter3d).\n3. Options for one single series are given in\n   [the series instance array](series.scatter3d).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        scatter3d: {\n            // shared options for all scatter3d series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'scatter3d'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.scatter3d.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === scatter3d) {\n    // code specific to the scatter3d series\n}\n```\n            ",
          "extends": "series,plotOptions.scatter3d",
          "exclude": ["boostThreshold", "boostBlending"],
          "products": ["highcharts"],
          "requires": ["module:highcharts-3d"]
        },
        "meta": {
          "fullname": "series.scatter3d",
          "name": "scatter3d",
          "line": 39,
          "lineEnd": 50,
          "filename": "code/es-modules/Series/Scatter3D/Scatter3DSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `scatter3d` series\ntype, points can be given in the following ways:\n\n1.  An array of arrays with 3 values. In this case, the values correspond\nto `x,y,z`. If the first value is a string, it is applied as the name\nof the point, and the `x` value is inferred.\n\n ```js\n    data: [\n        [0, 0, 1],\n        [1, 8, 7],\n        [2, 9, 2]\n    ]\n ```\n\n3.  An array of objects with named values. The following snippet shows only a\nfew settings, see the complete options set below. If the total number of data\npoints exceeds the series'\n[turboThreshold](#series.scatter3d.turboThreshold), this option is not\navailable.\n\n ```js\n    data: [{\n        x: 1,\n        y: 2,\n        z: 24,\n        name: \"Point2\",\n        color: \"#00FF00\"\n    }, {\n        x: 1,\n        y: 4,\n        z: 12,\n        name: \"Point1\",\n        color: \"#FF00FF\"\n    }]\n ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Array.<(Array.<number>|*)>"] },
              "extends": "series.scatter.data",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.scatter3d.data",
              "name": "data",
              "line": 51,
              "lineEnd": 104,
              "filename": "code/es-modules/Series/Scatter3D/Scatter3DSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "z": {
                "doclet": {
                  "description": "The z value for each data point.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.scatter3d.data.z",
                  "name": "z",
                  "line": 105,
                  "lineEnd": 111,
                  "filename": "code/es-modules/Series/Scatter3D/Scatter3DSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "marker": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "tooltip": {},
          "findNearestPointBy": {},
          "jitter": {},
          "lineWidth": {},
          "marker": {},
          "stickyTracking": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "states": {},
          "step": {},
          "threshold": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "solidgauge": {
        "doclet": {
          "description": "A `solidgauge` series. If the [type](#series.solidgauge.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `solidgauge` series are defined in\n   [plotOptions.solidgauge](plotOptions.solidgauge).\n3. Options for one single series are given in\n   [the series instance array](series.solidgauge).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        solidgauge: {\n            // shared options for all solidgauge series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'solidgauge'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.solidgauge.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === solidgauge) {\n    // code specific to the solidgauge series\n}\n```\n            ",
          "extends": "series,plotOptions.solidgauge",
          "exclude": [
            "animationLimit",
            "boostThreshold",
            "connectEnds",
            "connectNulls",
            "cropThreshold",
            "dashStyle",
            "dataParser",
            "dataURL",
            "dial",
            "findNearestPointBy",
            "getExtremesFromAll",
            "marker",
            "negativeColor",
            "pointPlacement",
            "pivot",
            "shadow",
            "softThreshold",
            "stack",
            "stacking",
            "states",
            "step",
            "threshold",
            "turboThreshold",
            "wrap",
            "zoneAxis",
            "zones",
            "dataSorting",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:modules/solid-gauge"]
        },
        "meta": {
          "fullname": "series.solidgauge",
          "name": "solidgauge",
          "line": 118,
          "lineEnd": 133,
          "filename": "code/es-modules/Series/SolidGauge/SolidGaugeSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `solidgauge` series\ntype, points can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.solidgauge.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       y: 5,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       y: 7,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```\n\nThe typical gauge only contains a single data value.",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Array.<(number|null|*)>"] },
              "extends": "series.gauge.data",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.solidgauge.data",
              "name": "data",
              "line": 134,
              "lineEnd": 172,
              "filename": "code/es-modules/Series/SolidGauge/SolidGaugeSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "innerRadius": {
                "doclet": {
                  "description": "The inner radius of an individual point in a solid gauge. Can be given only\nin percentage, either as a number or a string like `\"50%\"`.",
                  "samples": [
                    {
                      "name": "Individual radius and innerRadius",
                      "value": "highcharts/plotoptions/solidgauge-radius/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "4.1.6",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.solidgauge.data.innerRadius",
                  "name": "innerRadius",
                  "line": 173,
                  "lineEnd": 184,
                  "filename": "code/es-modules/Series/SolidGauge/SolidGaugeSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "radius": {
                "doclet": {
                  "description": "The outer radius of an individual point in a solid gauge. Can be\ngiven only in percentage, either as a number or a string like `\"100%\"`.",
                  "samples": [
                    {
                      "name": "Individual radius and innerRadius",
                      "value": "highcharts/plotoptions/solidgauge-radius/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "4.1.6",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.solidgauge.data.radius",
                  "name": "radius",
                  "line": 185,
                  "lineEnd": 196,
                  "filename": "code/es-modules/Series/SolidGauge/SolidGaugeSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "colorByPoint": {},
          "dataLabels": {},
          "innerRadius": {},
          "linecap": {},
          "overshoot": {},
          "radius": {},
          "rounded": {},
          "showInLegend": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "stickyTracking": {},
          "visible": {}
        },
        "extended": 1
      },
      "spline": {
        "doclet": {
          "description": "A `spline` series. If the [type](#series.spline.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `spline` series are defined in\n   [plotOptions.spline](plotOptions.spline).\n3. Options for one single series are given in\n   [the series instance array](series.spline).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        spline: {\n            // shared options for all spline series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'spline'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.spline.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === spline) {\n    // code specific to the spline series\n}\n```\n            ",
          "extends": "series,plotOptions.spline",
          "exclude": [
            "dataParser",
            "dataURL",
            "step",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "series.spline",
          "name": "spline",
          "line": 204,
          "lineEnd": 212,
          "filename": "code/es-modules/Series/Spline/SplineSeries.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `spline` series type,\npoints can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. The `x` values will be automatically\n   calculated, either starting at 0 and incremented by 1, or from\n   `pointStart` and `pointInterval` given in the series options. If the axis\n   has categories, these will be used. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of arrays with 2 values. In this case, the values correspond to\n   `x,y`. If the first value is a string, it is applied as the name of the\n   point, and the `x` value is inferred.\n   ```js\n   data: [\n       [0, 9],\n       [1, 2],\n       [2, 8]\n   ]\n   ```\n\n3. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.spline.turboThreshold),\n   this option is not available.\n   ```js\n   data: [{\n       x: 1,\n       y: 9,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       y: 0,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(number|Array.<(number|string), (number|null)>|null|*)>"
                ]
              },
              "extends": "series.line.data",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.spline.data",
              "name": "data",
              "line": 213,
              "lineEnd": 271,
              "filename": "code/es-modules/Series/Spline/SplineSeries.js",
              "column": 0
            },
            "children": {
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "marker": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "lineWidth": {},
          "linecap": {},
          "linkedTo": {},
          "marker": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "streamgraph": {
        "doclet": {
          "description": "A `streamgraph` series. If the [type](#series.streamgraph.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `streamgraph` series are defined in\n   [plotOptions.streamgraph](plotOptions.streamgraph).\n3. Options for one single series are given in\n   [the series instance array](series.streamgraph).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        streamgraph: {\n            // shared options for all streamgraph series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'streamgraph'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.streamgraph.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === streamgraph) {\n    // code specific to the streamgraph series\n}\n```\n            ",
          "extends": "series,plotOptions.streamgraph",
          "exclude": [
            "dataParser",
            "dataURL",
            "step",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts", "highstock"],
          "requires": ["module:modules/streamgraph"]
        },
        "meta": {
          "fullname": "series.streamgraph",
          "name": "streamgraph",
          "line": 57,
          "lineEnd": 66,
          "filename": "code/es-modules/Series/Streamgraph/StreamgraphSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "color": {
            "doclet": {
              "see": [
                "[fillColor](#series.streamgraph.fillColor)",
                "[fillOpacity](#series.streamgraph.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "series.streamgraph.color",
              "name": "color",
              "line": 67,
              "lineEnd": 72,
              "filename": "code/es-modules/Series/Streamgraph/StreamgraphSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `streamgraph` series type,\npoints can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. The `x` values will be automatically\n   calculated, either starting at 0 and incremented by 1, or from\n   `pointStart` and `pointInterval` given in the series options. If the axis\n   has categories, these will be used. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of arrays with 2 values. In this case, the values correspond to\n   `x,y`. If the first value is a string, it is applied as the name of the\n   point, and the `x` value is inferred.\n   ```js\n       data: [\n           [0, 9],\n           [1, 7],\n           [2, 6]\n       ]\n   ```\n\n3. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.area.turboThreshold),\n   this option is not available.\n   ```js\n       data: [{\n           x: 1,\n           y: 9,\n           name: \"Point2\",\n           color: \"#00FF00\"\n       }, {\n           x: 1,\n           y: 6,\n           name: \"Point1\",\n           color: \"#FF00FF\"\n       }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(number|Array.<(number|string), (number|null)>|null|*)>"
                ]
              },
              "extends": "series.line.data",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.streamgraph.data",
              "name": "data",
              "line": 73,
              "lineEnd": 131,
              "filename": "code/es-modules/Series/Streamgraph/StreamgraphSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "marker": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "fillColor": {
            "doclet": {
              "see": [
                "[color](#series.streamgraph.color)",
                "[fillOpacity](#series.streamgraph.fillOpacity)"
              ]
            },
            "meta": {
              "fullname": "series.streamgraph.fillColor",
              "name": "fillColor",
              "line": 132,
              "lineEnd": 137,
              "filename": "code/es-modules/Series/Streamgraph/StreamgraphSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "fillOpacity": {
            "doclet": {
              "see": [
                "[color](#series.streamgraph.color)",
                "[fillColor](#series.streamgraph.fillColor)"
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "1"
            },
            "meta": {
              "fullname": "series.streamgraph.fillOpacity",
              "name": "fillOpacity",
              "line": 138,
              "lineEnd": 145,
              "filename": "code/es-modules/Series/Streamgraph/StreamgraphSeriesDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "lineWidth": {},
          "marker": {},
          "stacking": {},
          "legendSymbol": {},
          "lineColor": {},
          "negativeFillColor": {},
          "threshold": {},
          "trackByArea": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "connectEnds": {},
          "connectNulls": {},
          "crisp": {},
          "cropThreshold": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "states": {},
          "stickyTracking": {},
          "tooltip": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "sunburst": {
        "doclet": {
          "description": "A `sunburst` series. If the [type](#series.sunburst.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `sunburst` series are defined in\n   [plotOptions.sunburst](plotOptions.sunburst).\n3. Options for one single series are given in\n   [the series instance array](series.sunburst).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        sunburst: {\n            // shared options for all sunburst series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'sunburst'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.sunburst.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === sunburst) {\n    // code specific to the sunburst series\n}\n```\n            ",
          "extends": "series,plotOptions.sunburst",
          "exclude": [
            "dataParser",
            "dataURL",
            "stack",
            "dataSorting",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:modules/sunburst"]
        },
        "meta": {
          "fullname": "series.sunburst",
          "name": "sunburst",
          "line": 294,
          "lineEnd": 304,
          "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "type": { "names": ["Array.<(number|null|*)>"] },
              "extends": "series.treemap.data",
              "exclude": ["x", "y"],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.sunburst.data",
              "name": "data",
              "line": 305,
              "lineEnd": 311,
              "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "dataLabels": {
                "doclet": {
                  "type": {
                    "names": [
                      "Highcharts.SeriesSunburstDataLabelsOptionsObject",
                      "Array.<Highcharts.SeriesSunburstDataLabelsOptionsObject>"
                    ]
                  },
                  "products": ["highcharts"],
                  "extends": "series.treemap.data.dataLabels"
                },
                "meta": {
                  "fullname": "series.sunburst.data.dataLabels",
                  "name": "dataLabels",
                  "line": 312,
                  "lineEnd": 316,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "align": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "backgroundColor": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "crop": {},
                  "defer": {},
                  "enabled": {},
                  "filter": {},
                  "format": {},
                  "formatter": {},
                  "inside": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "style": {},
                  "textPath": {},
                  "useHTML": {},
                  "verticalAlign": {},
                  "x": {},
                  "y": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "parent": {
                "doclet": {
                  "description": "Use this option to build a tree structure. The value should be the id of the\npoint which is the parent. If no points has a matching id, or this option is\nundefined, then the parent will be set to the root.",
                  "type": { "names": ["string"] },
                  "since": "6.0.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sunburst.data.parent",
                  "name": "parent",
                  "line": 326,
                  "lineEnd": 335,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "sliced": {
                "doclet": {
                  "description": "Whether to display a slice offset from the center. When a sunburst point is\nsliced, its children are also offset.",
                  "samples": [
                    {
                      "name": "Sliced sunburst",
                      "value": "highcharts/plotoptions/sunburst-sliced"
                    }
                  ],
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "false",
                  "since": "6.0.4",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sunburst.data.sliced",
                  "name": "sliced",
                  "line": 336,
                  "lineEnd": 348,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "value": {
                "doclet": {
                  "description": "The value of the point, resulting in a relative area of the point\nin the sunburst.",
                  "type": { "names": ["number", "null"] },
                  "since": "6.0.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.sunburst.data.value",
                  "name": "value",
                  "line": 317,
                  "lineEnd": 325,
                  "filename": "code/es-modules/Series/Sunburst/SunburstSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "colorValue": {},
              "color": {},
              "marker": {},
              "accessibility": {},
              "className": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "allowDrillToNode": {},
          "allowTraversingTree": {},
          "breadcrumbs": {},
          "center": {},
          "clip": {},
          "colorByPoint": {},
          "dataLabels": {},
          "levelIsConstant": {},
          "levelSize": {},
          "levels": {},
          "rootId": {},
          "slicedOffset": {},
          "traverseUpButton": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "color": {},
          "colors": {},
          "events": {},
          "fillColor": {},
          "inactiveOtherPoints": {},
          "point": {},
          "showInLegend": {},
          "size": {},
          "startAngle": {},
          "states": {},
          "stickyTracking": {},
          "thickness": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "includeInDataExport": {},
          "keys": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "onPoint": {},
          "opacity": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "visible": {}
        },
        "extended": 1
      },
      "tilemap": {
        "doclet": {
          "description": "A `tilemap` series. If the [type](#series.tilemap.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `tilemap` series are defined in\n   [plotOptions.tilemap](plotOptions.tilemap).\n3. Options for one single series are given in\n   [the series instance array](series.tilemap).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        tilemap: {\n            // shared options for all tilemap series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'tilemap'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.tilemap.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === tilemap) {\n    // code specific to the tilemap series\n}\n```\n            ",
          "extends": "series,plotOptions.tilemap",
          "exclude": [
            "allAreas",
            "dataParser",
            "dataURL",
            "joinBy",
            "mapData",
            "marker",
            "pointRange",
            "shadow",
            "stack",
            "dataSorting",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts", "highmaps"],
          "requires": ["module:modules/tilemap"]
        },
        "meta": {
          "fullname": "series.tilemap",
          "name": "tilemap",
          "line": 108,
          "lineEnd": 119,
          "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `tilemap` series\ntype, points can be given in the following ways:\n\n1. An array of arrays with 3 or 2 values. In this case, the values correspond\n   to `x,y,value`. If the first value is a string, it is applied as the name\n   of the point, and the `x` value is inferred. The `x` value can also be\n   omitted, in which case the inner arrays should be of length 2\\. Then the\n   `x` value is automatically calculated, either starting at 0 and\n   incremented by 1, or from `pointStart` and `pointInterval` given in the\n   series options.\n   ```js\n   data: [\n       [0, 9, 7],\n       [1, 10, 4],\n       [2, 6, 3]\n   ]\n   ```\n\n2. An array of objects with named values. The objects are point configuration\n   objects as seen below. If the total number of data points exceeds the\n   series' [turboThreshold](#series.tilemap.turboThreshold), this option is\n   not available.\n   ```js\n   data: [{\n       x: 1,\n       y: 3,\n       value: 10,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       y: 7,\n       value: 10,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```\n\nNote that for some [tileShapes](#plotOptions.tilemap.tileShape) the grid\ncoordinates are offset.",
              "samples": [
                {
                  "name": "Offset grid coordinates",
                  "value": "maps/series/tilemap-gridoffset"
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(Array.<(number|string), number>|Array.<(number|string), number, number>|*)>"
                ]
              },
              "extends": "series.heatmap.data",
              "exclude": ["marker"],
              "products": ["highcharts", "highmaps"]
            },
            "meta": {
              "fullname": "series.tilemap.data",
              "name": "data",
              "line": 120,
              "lineEnd": 178,
              "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "color": {
                "doclet": {
                  "description": "The color of the point. In tilemaps the point color is rarely set\nexplicitly, as we use the color to denote the `value`. Options for\nthis are set in the [colorAxis](#colorAxis) configuration.",
                  "type": {
                    "names": [
                      "Highcharts.ColorString",
                      "Highcharts.GradientColorObject",
                      "Highcharts.PatternObject"
                    ]
                  },
                  "products": ["highcharts", "highmaps"]
                },
                "meta": {
                  "fullname": "series.tilemap.data.color",
                  "name": "color",
                  "line": 179,
                  "lineEnd": 187,
                  "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "x": {
                "doclet": {
                  "description": "The x coordinate of the point.\n\nNote that for some [tileShapes](#plotOptions.tilemap.tileShape) the grid\ncoordinates are offset.",
                  "samples": [
                    {
                      "name": "Offset grid coordinates",
                      "value": "maps/series/tilemap-gridoffset"
                    }
                  ],
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highmaps"]
                },
                "meta": {
                  "fullname": "series.tilemap.data.x",
                  "name": "x",
                  "line": 188,
                  "lineEnd": 200,
                  "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "description": "The y coordinate of the point.\n\nNote that for some [tileShapes](#plotOptions.tilemap.tileShape) the grid\ncoordinates are offset.",
                  "samples": [
                    {
                      "name": "Offset grid coordinates",
                      "value": "maps/series/tilemap-gridoffset"
                    }
                  ],
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highmaps"]
                },
                "meta": {
                  "fullname": "series.tilemap.data.y",
                  "name": "y",
                  "line": 201,
                  "lineEnd": 213,
                  "filename": "code/es-modules/Series/Tilemap/TilemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "pointPadding": {},
              "value": {},
              "accessibility": {},
              "className": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "colsize": {},
          "pointPadding": {},
          "rowsize": {},
          "states": {},
          "tileShape": {},
          "animation": {},
          "borderRadius": {},
          "borderWidth": {},
          "clip": {},
          "color": {},
          "colorKey": {},
          "dataLabels": {},
          "interpolation": {},
          "legendSymbol": {},
          "nullColor": {},
          "tooltip": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "className": {},
          "colorAxis": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "timeline": {
        "doclet": {
          "description": "The `timeline` series. If the [type](#series.timeline.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `timeline` series are defined in\n   [plotOptions.timeline](plotOptions.timeline).\n3. Options for one single series are given in\n   [the series instance array](series.timeline).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        timeline: {\n            // shared options for all timeline series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'timeline'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.timeline.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === timeline) {\n    // code specific to the timeline series\n}\n```\n            ",
          "extends": "series,plotOptions.timeline",
          "exclude": [
            "animationLimit",
            "boostThreshold",
            "connectEnds",
            "connectNulls",
            "cropThreshold",
            "dashStyle",
            "dataParser",
            "dataURL",
            "findNearestPointBy",
            "getExtremesFromAll",
            "negativeColor",
            "pointInterval",
            "pointIntervalUnit",
            "pointPlacement",
            "pointStart",
            "softThreshold",
            "stacking",
            "stack",
            "step",
            "threshold",
            "turboThreshold",
            "zoneAxis",
            "zones",
            "dataSorting",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:modules/timeline"]
        },
        "meta": {
          "fullname": "series.timeline",
          "name": "timeline",
          "line": 180,
          "lineEnd": 194,
          "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `timeline` series type,\npoints can be given with three general parameters, `name`, `label`,\nand `description`:\n\nExample:\n\n```js\nseries: [{\n   type: 'timeline',\n   data: [{\n       name: 'Jan 2018',\n       label: 'Some event label',\n       description: 'Description to show in tooltip'\n   }]\n}]\n```\nIf all points additionally have the `x` values, and xAxis type is set to\n`datetime`, then events are laid out on a true time axis, where their\nplacement reflects the actual time between them.",
              "samples": [
                {
                  "name": "Alternate labels",
                  "value": "highcharts/series-timeline/alternate-labels",
                  "products": ["highcharts"]
                },
                {
                  "name": "Real time intervals",
                  "value": "highcharts/series-timeline/datetime-axis",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Array.<*>"] },
              "extends": "series.line.data",
              "exclude": ["marker", "y"],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.timeline.data",
              "name": "data",
              "line": 195,
              "lineEnd": 226,
              "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "description": {
                "doclet": {
                  "description": "The description of event. This description will be shown in tooltip.",
                  "type": { "names": ["string"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.timeline.data.description",
                  "name": "description",
                  "line": 241,
                  "lineEnd": 247,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "label": {
                "doclet": {
                  "description": "The label of event.",
                  "type": { "names": ["string"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.timeline.data.label",
                  "name": "label",
                  "line": 234,
                  "lineEnd": 240,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "name": {
                "doclet": {
                  "description": "The name of event.",
                  "type": { "names": ["string"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.timeline.data.name",
                  "name": "name",
                  "line": 227,
                  "lineEnd": 233,
                  "filename": "code/es-modules/Series/Timeline/TimelineSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "selected": {},
              "x": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "colorByPoint": {},
          "colorKey": {},
          "dataLabels": {},
          "ignoreHiddenPoint": {},
          "legendSymbol": {},
          "lineWidth": {},
          "marker": {},
          "showInLegend": {},
          "states": {},
          "stickyTracking": {},
          "tooltip": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "dragDrop": {},
          "enableMouseTracking": {},
          "events": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "visible": {}
        },
        "extended": 1
      },
      "treegraph": {
        "doclet": {
          "description": "A `treegraph` series. If the [type](#series.treegraph.type)\noption is not specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `treegraph` series are defined in\n   [plotOptions.treegraph](plotOptions.treegraph).\n3. Options for one single series are given in\n   [the series instance array](series.treegraph).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        treegraph: {\n            // shared options for all treegraph series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'treegraph'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.treegraph.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === treegraph) {\n    // code specific to the treegraph series\n}\n```\n            ",
          "extends": "series,plotOptions.treegraph",
          "exclude": [
            "allowDrillToNode",
            "boostBlending",
            "boostThreshold",
            "curveFactor",
            "centerInCategory",
            "connectEnds",
            "connectNulls",
            "colorAxis",
            "colorKey",
            "dataSorting",
            "dragDrop",
            "findNearestPointBy",
            "getExtremesFromAll",
            "layout",
            "nodePadding",
            "pointInterval",
            "pointIntervalUnit",
            "pointPlacement",
            "pointStart",
            "relativeXValue",
            "softThreshold",
            "stack",
            "stacking",
            "step",
            "traverseUpButton",
            "xAxis",
            "yAxis",
            "zoneAxis",
            "zones"
          ],
          "products": ["highcharts"],
          "requires": ["module:modules/treemap", "module:modules/treegraph"]
        },
        "meta": {
          "fullname": "series.treegraph",
          "name": "treegraph",
          "line": 465,
          "lineEnd": 480,
          "filename": "code/es-modules/Series/Treegraph/TreegraphSeries.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `treegraph` series type,\npoints can be given in the following ways:\n\n1. The array of arrays, with `keys` property, which defines how the fields in\n    array should be interpreted\n   ```js\n      keys: ['id', 'parent'],\n      data: [\n          ['Category1'],\n          ['Category1', 'Category2']\n      ]\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the\n   series' [turboThreshold](#series.area.turboThreshold),\n   this option is not available.\n   The data of the treegraph series needs to be formatted in such a way, that\n   there are no circular dependencies on the nodes\n\n ```js\n    data: [{\n        id: 'Category1'\n    }, {\n        id: 'Category1',\n        parent: 'Category2',\n    }]\n ```",
              "type": { "names": ["Array.<*>"] },
              "extends": "series.treemap.data",
              "products": ["highcharts"],
              "exclude": ["outgoing", "weight", "value"]
            },
            "meta": {
              "fullname": "series.treegraph.data",
              "name": "data",
              "line": 509,
              "lineEnd": 544,
              "filename": "code/es-modules/Series/Treegraph/TreegraphSeries.js",
              "column": 0
            },
            "children": {
              "collapseButton": {
                "doclet": {
                  "description": "Options used for button, which toggles the collapse status of the node."
                },
                "meta": {
                  "fullname": "series.treegraph.data.collapseButton",
                  "name": "collapseButton",
                  "line": 545,
                  "lineEnd": 550,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "collapsed": {
                "doclet": {
                  "description": "If point's children should be initially hidden",
                  "samples": [
                    {
                      "name": "Treegraph chart with initially hidden children",
                      "value": "highcharts/series-treegraph/level-options"
                    }
                  ],
                  "type": { "names": ["boolean"] }
                },
                "meta": {
                  "fullname": "series.treegraph.data.collapsed",
                  "name": "collapsed",
                  "line": 551,
                  "lineEnd": 559,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "dataLabels": {
                "doclet": {
                  "type": {
                    "names": [
                      "Highcharts.SeriesTreegraphDataLabelsOptionsObject",
                      "Array.<Highcharts.SeriesTreegraphDataLabelsOptionsObject>"
                    ]
                  },
                  "products": ["highcharts"],
                  "extends": "series.treemap.data.dataLabels"
                },
                "meta": {
                  "fullname": "series.treegraph.data.dataLabels",
                  "name": "dataLabels",
                  "line": 486,
                  "lineEnd": 490,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeries.js",
                  "column": 0
                },
                "children": {
                  "align": {},
                  "alignTo": {},
                  "allowOverlap": {},
                  "animation": {},
                  "backgroundColor": {},
                  "borderColor": {},
                  "borderRadius": {},
                  "borderWidth": {},
                  "className": {},
                  "color": {},
                  "crop": {},
                  "defer": {},
                  "enabled": {},
                  "filter": {},
                  "format": {},
                  "formatter": {},
                  "inside": {},
                  "nullFormat": {},
                  "nullFormatter": {},
                  "overflow": {},
                  "padding": {},
                  "position": {},
                  "rotation": {},
                  "shadow": {},
                  "shape": {},
                  "style": {},
                  "textPath": {},
                  "useHTML": {},
                  "verticalAlign": {},
                  "x": {},
                  "y": {},
                  "zIndex": {}
                },
                "extended": 1
              },
              "colorValue": {},
              "parent": {},
              "color": {},
              "marker": {},
              "accessibility": {},
              "className": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {}
            },
            "extended": 1
          },
          "levels": {
            "doclet": {
              "samples": [
                {
                  "name": "Treegraph chart with level options applied",
                  "value": "highcharts/series-treegraph/level-options"
                }
              ],
              "type": { "names": ["Array.<*>"] },
              "exclude": ["layoutStartingDirection", "layoutAlgorithm"],
              "extends": "plotOptions.treegraph.levels"
            },
            "meta": {
              "fullname": "series.treegraph.levels",
              "name": "levels",
              "line": 491,
              "lineEnd": 498,
              "filename": "code/es-modules/Series/Treegraph/TreegraphSeries.js",
              "column": 0
            },
            "children": {
              "collapsed": {
                "doclet": {
                  "description": "Set collapsed status for nodes level-wise.",
                  "type": { "names": ["boolean"] }
                },
                "meta": {
                  "fullname": "series.treegraph.levels.collapsed",
                  "name": "collapsed",
                  "line": 499,
                  "lineEnd": 503,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeries.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "marker": {
                "doclet": {
                  "description": "Set marker options for nodes at the level.",
                  "extends": "series.treegraph.marker"
                },
                "meta": {
                  "fullname": "series.treegraph.levels.marker",
                  "name": "marker",
                  "line": 504,
                  "lineEnd": 508,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeries.js",
                  "column": 0
                },
                "children": {
                  "fillColor": {},
                  "height": {},
                  "lineColor": {},
                  "lineWidth": {},
                  "radius": {},
                  "states": {},
                  "symbol": {},
                  "width": {}
                },
                "extended": 1
              },
              "borderColor": {},
              "borderDashStyle": {},
              "borderWidth": {},
              "color": {},
              "colorVariation": {},
              "dataLabels": {},
              "level": {}
            },
            "extended": 1
          },
          "link": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.treegraph.link"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "series.treegraph.link",
              "line": 0,
              "lineEnd": 0,
              "name": "link"
            },
            "children": {
              "curveFactor": {
                "doclet": {
                  "description": "Modifier of the shape of the curved link. Works best for\nvalues between 0 and 1, where 0 is a straight line, and 1 is\na shape close to the default one.",
                  "type": { "names": ["number"] },
                  "defaultvalue": "0.5",
                  "products": ["highcharts"],
                  "since": "10.3.0"
                },
                "meta": {
                  "fullname": "series.treegraph.link.curveFactor",
                  "name": "curveFactor",
                  "line": 69,
                  "lineEnd": 79,
                  "filename": "code/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "color": {},
              "cursor": {},
              "lineWidth": {},
              "radius": {},
              "type": {}
            },
            "extended": 1
          },
          "marker": {
            "doclet": {
              "extends": "plotOptions.series.marker",
              "exclude": ["enabled", "enabledThreshold"]
            },
            "meta": {
              "fullname": "series.treegraph.marker",
              "name": "marker",
              "line": 481,
              "lineEnd": 485,
              "filename": "code/es-modules/Series/Treegraph/TreegraphSeries.js",
              "column": 0
            },
            "children": {
              "fillColor": {},
              "height": {},
              "lineColor": {},
              "lineWidth": {},
              "radius": {},
              "states": {},
              "symbol": {},
              "width": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "collapseButton": {},
          "dataLabels": {},
          "fillSpace": {},
          "nodeDistance": {},
          "nodeWidth": {},
          "reversed": {},
          "tooltip": {},
          "animationLimit": {},
          "borderColor": {},
          "borderWidth": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "events": {},
          "legendSymbol": {},
          "opacity": {},
          "showInLegend": {},
          "states": {},
          "traverseToLeaf": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "linkedTo": {},
          "onPoint": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "treemap": {
        "doclet": {
          "description": "A `treemap` series. If the [type](#series.treemap.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `treemap` series are defined in\n   [plotOptions.treemap](plotOptions.treemap).\n3. Options for one single series are given in\n   [the series instance array](series.treemap).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        treemap: {\n            // shared options for all treemap series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'treemap'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.treemap.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === treemap) {\n    // code specific to the treemap series\n}\n```\n            ",
          "extends": "series,plotOptions.treemap",
          "exclude": ["dataParser", "dataURL", "stack", "dataSorting"],
          "products": ["highcharts"],
          "requires": ["module:modules/treemap"]
        },
        "meta": {
          "fullname": "series.treemap",
          "name": "treemap",
          "line": 600,
          "lineEnd": 609,
          "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `treemap` series\ntype, points can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `value` options. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.treemap.turboThreshold),\n   this option is not available.\n   ```js\n     data: [{\n       value: 9,\n       name: \"Point2\",\n       color: \"#00FF00\"\n     }, {\n       value: 6,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n     }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Array.<(number|null|*)>"] },
              "extends": "series.heatmap.data",
              "exclude": ["x", "y", "pointPadding"],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.treemap.data",
              "name": "data",
              "line": 610,
              "lineEnd": 647,
              "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "colorValue": {
                "doclet": {
                  "description": "Serves a purpose only if a `colorAxis` object is defined in the chart\noptions. This value will decide which color the point gets from the\nscale of the colorAxis.",
                  "type": { "names": ["number"] },
                  "since": "4.1.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.treemap.data.colorValue",
                  "name": "colorValue",
                  "line": 656,
                  "lineEnd": 665,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "parent": {
                "doclet": {
                  "description": "Only for treemap. Use this option to build a tree structure. The\nvalue should be the id of the point which is the parent. If no points\nhas a matching id, or this option is undefined, then the parent will\nbe set to the root.",
                  "samples": [
                    {
                      "name": "Point parent",
                      "value": "highcharts/point/parent/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Example where parent id is not matching",
                      "value": "highcharts/demo/treemap-with-levels/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "4.1.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.treemap.data.parent",
                  "name": "parent",
                  "line": 666,
                  "lineEnd": 681,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "value": {
                "doclet": {
                  "description": "The value of the point, resulting in a relative area of the point\nin the treemap.",
                  "type": { "names": ["number", "null"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.treemap.data.value",
                  "name": "value",
                  "line": 648,
                  "lineEnd": 655,
                  "filename": "code/es-modules/Series/Treemap/TreemapSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "color": {},
              "marker": {},
              "accessibility": {},
              "className": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "allowDrillToNode": {},
          "allowTraversingTree": {},
          "alternateStartingDirection": {},
          "animationLimit": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "breadcrumbs": {},
          "cluster": {},
          "colorByPoint": {},
          "colorKey": {},
          "colors": {},
          "cropThreshold": {},
          "dataLabels": {},
          "events": {},
          "ignoreHiddenPoint": {},
          "interactByLeaf": {},
          "layoutAlgorithm": {},
          "layoutStartingDirection": {},
          "legendSymbol": {},
          "levelIsConstant": {},
          "levels": {},
          "opacity": {},
          "showInLegend": {},
          "sortIndex": {},
          "states": {},
          "tooltip": {},
          "traverseToLeaf": {},
          "traverseUpButton": {},
          "findNearestPointBy": {},
          "lineWidth": {},
          "stickyTracking": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "boostBlending": {},
          "boostThreshold": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "step": {},
          "threshold": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "variablepie": {
        "doclet": {
          "description": "A `variablepie` series. If the [type](#series.variablepie.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `variablepie` series are defined in\n   [plotOptions.variablepie](plotOptions.variablepie).\n3. Options for one single series are given in\n   [the series instance array](series.variablepie).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        variablepie: {\n            // shared options for all variablepie series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'variablepie'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.variablepie.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === variablepie) {\n    // code specific to the variablepie series\n}\n```\n            ",
          "extends": "series,plotOptions.variablepie",
          "exclude": [
            "dataParser",
            "dataURL",
            "stack",
            "xAxis",
            "yAxis",
            "dataSorting",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:modules/variable-pie"]
        },
        "meta": {
          "fullname": "series.variablepie",
          "name": "variablepie",
          "line": 102,
          "lineEnd": 112,
          "filename": "code/es-modules/Series/VariablePie/VariablePieSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `variablepie` series type,\npoints can be given in the following ways:\n\n1. An array of arrays with 2 values. In this case, the numerical values will\n   be interpreted as `y, z` options. Example:\n   ```js\n   data: [\n       [40, 75],\n       [50, 50],\n       [60, 40]\n   ]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.variablepie.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       y: 1,\n       z: 4,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       y: 7,\n       z: 10,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": ["Array.<(Array.<(number|string), number>|*)>"]
              },
              "extends": "series.pie.data",
              "exclude": ["marker", "x"],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.variablepie.data",
              "name": "data",
              "line": 113,
              "lineEnd": 160,
              "filename": "code/es-modules/Series/VariablePie/VariablePieSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "dataLabels": {},
              "legendIndex": {},
              "sliced": {},
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "maxPointSize": {},
          "minPointSize": {},
          "sizeBy": {},
          "tooltip": {},
          "zMax": {},
          "zMin": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "center": {},
          "clip": {},
          "color": {},
          "colors": {},
          "dataLabels": {},
          "depth": {},
          "endAngle": {},
          "events": {},
          "fillColor": {},
          "ignoreHiddenPoint": {},
          "inactiveOtherPoints": {},
          "innerSize": {},
          "minSize": {},
          "point": {},
          "showInLegend": {},
          "size": {},
          "slicedOffset": {},
          "startAngle": {},
          "states": {},
          "stickyTracking": {},
          "thickness": {},
          "linecap": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "className": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "description": {},
          "enableMouseTracking": {},
          "includeInDataExport": {},
          "keys": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "onPoint": {},
          "opacity": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "visible": {}
        },
        "extended": 1
      },
      "variwide": {
        "doclet": {
          "description": "A `variwide` series. If the [type](#series.variwide.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `variwide` series are defined in\n   [plotOptions.variwide](plotOptions.variwide).\n3. Options for one single series are given in\n   [the series instance array](series.variwide).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        variwide: {\n            // shared options for all variwide series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'variwide'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.variwide.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === variwide) {\n    // code specific to the variwide series\n}\n```\n            ",
          "extends": "series,plotOptions.variwide",
          "exclude": ["boostThreshold", "boostBlending"],
          "products": ["highcharts"],
          "requires": ["module:modules/variwide"]
        },
        "meta": {
          "fullname": "series.variwide",
          "name": "variwide",
          "line": 49,
          "lineEnd": 58,
          "filename": "code/es-modules/Series/Variwide/VariwideSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `variwide` series type,\npoints can be given in the following ways:\n\n1. An array of arrays with 3 or 2 values. In this case, the values correspond\n   to `x,y,z`. If the first value is a string, it is applied as the name of\n   the point, and the `x` value is inferred. The `x` value can also be\n   omitted, in which case the inner arrays should be of length 2. Then the\n   `x` value is automatically calculated, either starting at 0 and\n   incremented by 1, or from `pointStart` and `pointInterval` given in the\n   series options.\n   ```js\n      data: [\n          [0, 1, 2],\n          [1, 5, 5],\n          [2, 0, 2]\n      ]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.variwide.turboThreshold), this option is not\n   available.\n   ```js\n      data: [{\n          x: 1,\n          y: 1,\n          z: 1,\n          name: \"Point2\",\n          color: \"#00FF00\"\n      }, {\n          x: 1,\n          y: 5,\n          z: 4,\n          name: \"Point1\",\n          color: \"#FF00FF\"\n      }]\n   ```",
              "samples": [
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(Array.<(number|string), number>|Array.<(number|string), number, number>|*)>"
                ]
              },
              "extends": "series.line.data",
              "exclude": ["marker"],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.variwide.data",
              "name": "data",
              "line": 59,
              "lineEnd": 113,
              "filename": "code/es-modules/Series/Variwide/VariwideSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "z": {
                "doclet": {
                  "description": "The relative width for each column. On a category axis, the widths are\ndistributed so they sum up to the X axis length. On linear and datetime axes,\nthe columns will be laid out from the X value and Z units along the axis.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.variwide.data.z",
                  "name": "z",
                  "line": 114,
                  "lineEnd": 122,
                  "filename": "code/es-modules/Series/Variwide/VariwideSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "groupPadding": {},
          "pointPadding": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "dragDrop": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointRange": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "vector": {
        "doclet": {
          "description": "A `vector` series. If the [type](#series.vector.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `vector` series are defined in\n   [plotOptions.vector](plotOptions.vector).\n3. Options for one single series are given in\n   [the series instance array](series.vector).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        vector: {\n            // shared options for all vector series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'vector'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.vector.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === vector) {\n    // code specific to the vector series\n}\n```\n            ",
          "extends": "series,plotOptions.vector",
          "exclude": [
            "dataParser",
            "dataURL",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts", "highstock"],
          "requires": ["module:modules/vector"]
        },
        "meta": {
          "fullname": "series.vector",
          "name": "vector",
          "line": 74,
          "lineEnd": 83,
          "filename": "code/es-modules/Series/Vector/VectorSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `vector` series type,\npoints can be given in the following ways:\n\n1. An array of arrays with 4 values. In this case, the values correspond to\n   to `x,y,length,direction`. If the first value is a string, it is applied\n   as the name of the point, and the `x` value is inferred.\n   ```js\n   data: [\n       [0, 0, 10, 90],\n       [0, 1, 5, 180],\n       [1, 1, 2, 270]\n   ]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.area.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 0,\n       y: 0,\n       name: \"Point2\",\n       length: 10,\n       direction: 90\n   }, {\n       x: 1,\n       y: 1,\n       name: \"Point1\",\n       direction: 270\n   }]\n   ```",
              "samples": [
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(Array.<(number|string), number, number, number>|*)>"
                ]
              },
              "extends": "series.line.data",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.vector.data",
              "name": "data",
              "line": 84,
              "lineEnd": 132,
              "filename": "code/es-modules/Series/Vector/VectorSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "direction": {
                "doclet": {
                  "description": "The vector direction in degrees, where 0 is north (pointing towards south).",
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.vector.data.direction",
                  "name": "direction",
                  "line": 141,
                  "lineEnd": 147,
                  "filename": "code/es-modules/Series/Vector/VectorSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "length": {
                "doclet": {
                  "description": "The length of the vector. The rendered length will relate to the\n`vectorLength` setting.",
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.vector.data.length",
                  "name": "length",
                  "line": 133,
                  "lineEnd": 140,
                  "filename": "code/es-modules/Series/Vector/VectorSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "marker": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "lineWidth": {},
          "marker": {},
          "rotationOrigin": {},
          "states": {},
          "tooltip": {},
          "vectorLength": {},
          "cluster": {},
          "findNearestPointBy": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dataLabels": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "threshold": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "venn": {
        "doclet": {
          "description": "A `venn` series. If the [type](#series.venn.type) option is\nnot specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `venn` series are defined in\n   [plotOptions.venn](plotOptions.venn).\n3. Options for one single series are given in\n   [the series instance array](series.venn).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        venn: {\n            // shared options for all venn series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'venn'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.venn.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === venn) {\n    // code specific to the venn series\n}\n```\n            ",
          "extends": "series,plotOptions.venn",
          "exclude": [
            "connectEnds",
            "connectNulls",
            "cropThreshold",
            "dataParser",
            "dataURL",
            "findNearestPointBy",
            "getExtremesFromAll",
            "label",
            "linecap",
            "lineWidth",
            "linkedTo",
            "marker",
            "negativeColor",
            "pointInterval",
            "pointIntervalUnit",
            "pointPlacement",
            "pointStart",
            "softThreshold",
            "stack",
            "stacking",
            "steps",
            "threshold",
            "xAxis",
            "yAxis",
            "zoneAxis",
            "zones",
            "dataSorting",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:modules/venn"]
        },
        "meta": {
          "fullname": "series.venn",
          "name": "venn",
          "line": 107,
          "lineEnd": 121,
          "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "type": { "names": ["Array.<*>"] },
              "extends": "series.scatter.data",
              "exclude": ["marker", "x", "y"],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.venn.data",
              "name": "data",
              "line": 122,
              "lineEnd": 128,
              "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "name": {
                "doclet": {
                  "description": "The name of the point. Used in data labels and tooltip. If name is not\ndefined then it will default to the joined values in\n[sets](#series.venn.sets).",
                  "samples": [
                    {
                      "name": "Venn diagram",
                      "value": "highcharts/demo/venn-diagram/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Euler diagram",
                      "value": "highcharts/demo/euler-diagram/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["string"] },
                  "since": "7.0.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.venn.data.name",
                  "name": "name",
                  "line": 129,
                  "lineEnd": 143,
                  "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "sets": {
                "doclet": {
                  "description": "The set or sets the options will be applied to. If a single entry is defined,\nthen it will create a new set. If more than one entry is defined, then it\nwill define the overlap between the sets in the array.",
                  "samples": [
                    {
                      "name": "Venn diagram",
                      "value": "highcharts/demo/venn-diagram/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Euler diagram",
                      "value": "highcharts/demo/euler-diagram/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["Array.<string>"] },
                  "since": "7.0.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.venn.data.sets",
                  "name": "sets",
                  "line": 158,
                  "lineEnd": 172,
                  "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "value": {
                "doclet": {
                  "description": "The value of the point, resulting in a relative area of the circle, or area\nof overlap between two sets in the venn or euler diagram.",
                  "samples": [
                    {
                      "name": "Venn diagram",
                      "value": "highcharts/demo/venn-diagram/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Euler diagram",
                      "value": "highcharts/demo/euler-diagram/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "since": "7.0.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.venn.data.value",
                  "name": "value",
                  "line": 144,
                  "lineEnd": 157,
                  "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "selected": {}
            },
            "extended": 1
          },
          "states": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "plotOptions.venn.states"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "series.venn.states",
              "line": 0,
              "lineEnd": 0,
              "name": "states"
            },
            "children": {
              "hover": {
                "doclet": {
                  "exclude": ["halo"],
                  "extends": "plotOptions.venn.states.hover"
                },
                "meta": {
                  "fullname": "series.venn.states.hover",
                  "name": "hover",
                  "line": 173,
                  "lineEnd": 176,
                  "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "borderColor": {},
                  "opacity": {},
                  "animation": {},
                  "enabled": {},
                  "lineWidth": {},
                  "lineWidthPlus": {},
                  "marker": {}
                },
                "extended": 1
              },
              "select": {
                "doclet": {
                  "exclude": ["halo"],
                  "extends": "plotOptions.venn.states.select"
                },
                "meta": {
                  "fullname": "series.venn.states.select",
                  "name": "select",
                  "line": 177,
                  "lineEnd": 180,
                  "filename": "code/es-modules/Series/Venn/VennSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "animation": {},
                  "borderColor": {},
                  "color": {},
                  "enabled": {},
                  "lineWidth": {},
                  "lineWidthPlus": {},
                  "marker": {}
                },
                "extended": 1
              },
              "inactive": {},
              "normal": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "borderColor": {},
          "borderDashStyle": {},
          "borderWidth": {},
          "brighten": {},
          "clip": {},
          "colorByPoint": {},
          "dataLabels": {},
          "inactiveOtherPoints": {},
          "legendSymbol": {},
          "opacity": {},
          "showInLegend": {},
          "tooltip": {},
          "cluster": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "includeInDataExport": {},
          "keys": {},
          "onPoint": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "step": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "waterfall": {
        "doclet": {
          "description": "A `waterfall` series. If the [type](#series.waterfall.type) option\nis not specified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `waterfall` series are defined in\n   [plotOptions.waterfall](plotOptions.waterfall).\n3. Options for one single series are given in\n   [the series instance array](series.waterfall).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        waterfall: {\n            // shared options for all waterfall series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'waterfall'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.waterfall.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === waterfall) {\n    // code specific to the waterfall series\n}\n```\n            ",
          "extends": "series,plotOptions.waterfall",
          "exclude": [
            "dataParser",
            "dataURL",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts"],
          "requires": ["module:highcharts-more"]
        },
        "meta": {
          "fullname": "series.waterfall",
          "name": "waterfall",
          "line": 104,
          "lineEnd": 113,
          "filename": "code/es-modules/Series/Waterfall/WaterfallSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `waterfall` series\ntype, points can be given in the following ways:\n\n1. An array of numerical values. In this case, the numerical values will be\n   interpreted as `y` options. The `x` values will be automatically\n   calculated, either starting at 0 and incremented by 1, or from\n   `pointStart` and `pointInterval` given in the series options. If the axis\n   has categories, these will be used. Example:\n   ```js\n   data: [0, 5, 3, 5]\n   ```\n\n2. An array of arrays with 2 values. In this case, the values correspond to\n   `x,y`. If the first value is a string, it is applied as the name of the\n   point, and the `x` value is inferred.\n   ```js\n   data: [\n       [0, 7],\n       [1, 8],\n       [2, 3]\n   ]\n   ```\n\n3. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.waterfall.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       x: 1,\n       y: 8,\n       name: \"Point2\",\n       color: \"#00FF00\"\n   }, {\n       x: 1,\n       y: 8,\n       name: \"Point1\",\n       color: \"#FF00FF\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Array.<(number|Array.<(number|string), (number|null)>|null|*)>"
                ]
              },
              "extends": "series.line.data",
              "exclude": ["marker"],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.waterfall.data",
              "name": "data",
              "line": 114,
              "lineEnd": 173,
              "filename": "code/es-modules/Series/Waterfall/WaterfallSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "isIntermediateSum": {
                "doclet": {
                  "description": "When this property is true, the points acts as a summary column for\nthe values added or subtracted since the last intermediate sum,\nor since the start of the series. The `y` value is ignored.",
                  "samples": [
                    {
                      "name": "Waterfall",
                      "value": "highcharts/demo/waterfall/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "false",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.waterfall.data.isIntermediateSum",
                  "name": "isIntermediateSum",
                  "line": 174,
                  "lineEnd": 186,
                  "filename": "code/es-modules/Series/Waterfall/WaterfallSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "isSum": {
                "doclet": {
                  "description": "When this property is true, the point display the total sum across\nthe entire series. The `y` value is ignored.",
                  "samples": [
                    {
                      "name": "Waterfall",
                      "value": "highcharts/demo/waterfall/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "false",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.waterfall.data.isSum",
                  "name": "isSum",
                  "line": 187,
                  "lineEnd": 198,
                  "filename": "code/es-modules/Series/Waterfall/WaterfallSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "borderColor": {},
          "color": {},
          "dashStyle": {},
          "lineColor": {},
          "lineWidth": {},
          "states": {},
          "upColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "cropThreshold": {},
          "dataGrouping": {},
          "dataLabels": {},
          "depth": {},
          "dragDrop": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "stickyTracking": {},
          "threshold": {},
          "tooltip": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "stacking": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "windbarb": {
        "doclet": {
          "description": "A `windbarb` series. If the [type](#series.windbarb.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `windbarb` series are defined in\n   [plotOptions.windbarb](plotOptions.windbarb).\n3. Options for one single series are given in\n   [the series instance array](series.windbarb).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        windbarb: {\n            // shared options for all windbarb series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'windbarb'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.windbarb.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === windbarb) {\n    // code specific to the windbarb series\n}\n```\n            ",
          "extends": "series,plotOptions.windbarb",
          "exclude": [
            "dataParser",
            "dataURL",
            "boostThreshold",
            "boostBlending"
          ],
          "products": ["highcharts", "highstock"],
          "requires": ["module:modules/windbarb"]
        },
        "meta": {
          "fullname": "series.windbarb",
          "name": "windbarb",
          "line": 124,
          "lineEnd": 133,
          "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `windbarb` series type,\npoints can be given in the following ways:\n\n1. An array of arrays with 3 values. In this case, the values correspond to\n   `x,value,direction`. If the first value is a string, it is applied as the\n   name of the point, and the `x` value is inferred.\n   ```js\n      data: [\n          [Date.UTC(2017, 0, 1, 0), 3.3, 90],\n          [Date.UTC(2017, 0, 1, 1), 12.1, 180],\n          [Date.UTC(2017, 0, 1, 2), 11.1, 270]\n      ]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.area.turboThreshold), this option is not\n   available.\n   ```js\n      data: [{\n          x: Date.UTC(2017, 0, 1, 0),\n          value: 12.1,\n          direction: 90\n      }, {\n          x: Date.UTC(2017, 0, 1, 1),\n          value: 11.1,\n          direction: 270\n      }]\n   ```",
              "samples": [
                {
                  "name": "Numerical values",
                  "value": "highcharts/chart/reflow-true/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of numeric x and y",
                  "value": "highcharts/series/data-array-of-arrays/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of datetime x and y",
                  "value": "highcharts/series/data-array-of-arrays-datetime/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Arrays of point.name and y",
                  "value": "highcharts/series/data-array-of-name-value/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": ["Array.<(Array.<(number|string), number, number>|*)>"]
              },
              "extends": "series.line.data",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "series.windbarb.data",
              "name": "data",
              "line": 134,
              "lineEnd": 181,
              "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "direction": {
                "doclet": {
                  "description": "The wind direction in degrees, where 0 is north (pointing towards south).",
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.windbarb.data.direction",
                  "name": "direction",
                  "line": 189,
                  "lineEnd": 195,
                  "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "value": {
                "doclet": {
                  "description": "The wind speed in meters per second.",
                  "type": { "names": ["number", "null"] },
                  "products": ["highcharts", "highstock"]
                },
                "meta": {
                  "fullname": "series.windbarb.data.value",
                  "name": "value",
                  "line": 182,
                  "lineEnd": 188,
                  "filename": "code/es-modules/Series/Windbarb/WindbarbSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "marker": {},
              "name": {},
              "selected": {},
              "x": {},
              "y": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "colorKey": {},
          "dataGrouping": {},
          "lineWidth": {},
          "onSeries": {},
          "states": {},
          "tooltip": {},
          "vectorLength": {},
          "xOffset": {},
          "yOffset": {},
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colorByPoint": {},
          "colors": {},
          "dataLabels": {},
          "depth": {},
          "edgeColor": {},
          "edgeWidth": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointRange": {},
          "pointWidth": {},
          "stickyTracking": {},
          "threshold": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "crisp": {},
          "cursor": {},
          "custom": {},
          "dataSorting": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "findNearestPointBy": {},
          "getExtremesFromAll": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "negativeColor": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "pointInterval": {},
          "pointIntervalUnit": {},
          "pointPlacement": {},
          "pointStart": {},
          "relativeXValue": {},
          "selected": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "softThreshold": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      },
      "wordcloud": {
        "doclet": {
          "description": "A `wordcloud` series. If the [type](#series.wordcloud.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `wordcloud` series are defined in\n   [plotOptions.wordcloud](plotOptions.wordcloud).\n3. Options for one single series are given in\n   [the series instance array](series.wordcloud).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        wordcloud: {\n            // shared options for all wordcloud series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'wordcloud'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.wordcloud.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === wordcloud) {\n    // code specific to the wordcloud series\n}\n```\n            ",
          "extends": "series,plotOptions.wordcloud",
          "exclude": ["dataSorting", "boostThreshold", "boostBlending"],
          "products": ["highcharts"],
          "requires": ["module:modules/wordcloud"]
        },
        "meta": {
          "fullname": "series.wordcloud",
          "name": "wordcloud",
          "line": 138,
          "lineEnd": 147,
          "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `wordcloud` series type,\npoints can be given in the following ways:\n\n1. An array of arrays with 2 values. In this case, the values correspond to\n   `name,weight`.\n   ```js\n   data: [\n       ['Lorem', 4],\n       ['Ipsum', 1]\n   ]\n   ```\n\n2. An array of objects with named values. The following snippet shows only a\n   few settings, see the complete options set below. If the total number of\n   data points exceeds the series'\n   [turboThreshold](#series.arearange.turboThreshold), this option is not\n   available.\n   ```js\n   data: [{\n       name: \"Lorem\",\n       weight: 4\n   }, {\n       name: \"Ipsum\",\n       weight: 1\n   }]\n   ```",
              "type": { "names": ["Array.<(Array.<string, number>|*)>"] },
              "extends": "series.line.data",
              "exclude": ["drilldown", "marker", "x", "y"],
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "series.wordcloud.data",
              "name": "data",
              "line": 148,
              "lineEnd": 181,
              "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "name": {
                "doclet": {
                  "description": "The name decides the text for a word.",
                  "type": { "names": ["string"] },
                  "since": "6.0.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.wordcloud.data.name",
                  "name": "name",
                  "line": 182,
                  "lineEnd": 189,
                  "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "weight": {
                "doclet": {
                  "description": "The weighting of a word. The weight decides the relative size of a word\ncompared to the rest of the collection.",
                  "type": { "names": ["number"] },
                  "since": "6.0.0",
                  "products": ["highcharts"]
                },
                "meta": {
                  "fullname": "series.wordcloud.data.weight",
                  "name": "weight",
                  "line": 190,
                  "lineEnd": 198,
                  "filename": "code/es-modules/Series/Wordcloud/WordcloudSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "selected": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "animation": {},
          "borderWidth": {},
          "colorByPoint": {},
          "maxFontSize": {},
          "minFontSize": {},
          "placementStrategy": {},
          "rotation": {},
          "showInLegend": {},
          "spiral": {},
          "style": {},
          "tooltip": {},
          "borderColor": {},
          "borderRadius": {},
          "centerInCategory": {},
          "colors": {},
          "edgeWidth": {},
          "states": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animationLimit": {},
          "className": {},
          "color": {},
          "colorIndex": {},
          "colorKey": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {}
        },
        "extended": 1
      },
      "xrange": {
        "doclet": {
          "description": "An `xrange` series. If the [type](#series.xrange.type) option is not\nspecified, it is inherited from [chart.type](#chart.type).\n\nConfiguration options for the series are given in three levels:\n1. Options for all series in a chart are defined in the\n   [plotOptions.series](plotOptions.series) object.\n2. Options for all `xrange` series are defined in\n   [plotOptions.xrange](plotOptions.xrange).\n3. Options for one single series are given in\n   [the series instance array](series.xrange).\n\n```\nHighcharts.chart('container', {\n    plotOptions: {\n        series: {\n            // general options for all series\n        },\n        xrange: {\n            // shared options for all xrange series\n        }\n    },\n    series: [{\n        // specific options for this series instance\n        type: 'xrange'\n    }]\n});\n```\n\n**TypeScript:**\n- the [type](series.xrange.type) option must always be set.\n- when accessing an array of series, the combined set of all series types is\n  represented by [Highcharts.SeriesOptionsType\n  ](/class-reference/Highcharts#.SeriesOptionsType). Narrowing down to the\n  specific type can be done by checking the `type` property.\n\n```\nif (chart.options.series?.[0]?.type === xrange) {\n    // code specific to the xrange series\n}\n```\n            ",
          "extends": "series,plotOptions.xrange",
          "exclude": [
            "boostThreshold",
            "crisp",
            "cropThreshold",
            "depth",
            "edgeColor",
            "edgeWidth",
            "findNearestPointBy",
            "getExtremesFromAll",
            "negativeColor",
            "pointInterval",
            "pointIntervalUnit",
            "pointPlacement",
            "pointRange",
            "pointStart",
            "softThreshold",
            "stacking",
            "threshold",
            "dataSorting",
            "boostBlending"
          ],
          "products": ["highcharts", "highstock", "gantt"],
          "requires": ["module:modules/xrange"]
        },
        "meta": {
          "fullname": "series.xrange",
          "name": "xrange",
          "line": 111,
          "lineEnd": 124,
          "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
          "column": 0
        },
        "children": {
          "data": {
            "doclet": {
              "description": "An array of data points for the series. For the `xrange` series type,\npoints can be given in the following ways:\n\n1. An array of objects with named values. The objects are point configuration\n   objects as seen below.\n   ```js\n   data: [{\n       x: Date.UTC(2017, 0, 1),\n       x2: Date.UTC(2017, 0, 3),\n       name: \"Test\",\n       y: 0,\n       color: \"#00FF00\"\n   }, {\n       x: Date.UTC(2017, 0, 4),\n       x2: Date.UTC(2017, 0, 5),\n       name: \"Deploy\",\n       y: 1,\n       color: \"#FF0000\"\n   }]\n   ```",
              "samples": [
                {
                  "name": "Config objects",
                  "value": "highcharts/series/data-array-of-objects/",
                  "products": ["highcharts"]
                }
              ],
              "declare": "Highcharts.XrangePointOptionsObject",
              "type": { "names": ["Array.<*>"] },
              "extends": "series.line.data",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "series.xrange.data",
              "name": "data",
              "line": 125,
              "lineEnd": 155,
              "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
              "column": 0
            },
            "children": {
              "partialFill": {
                "doclet": {
                  "description": "A partial fill for each point, typically used to visualize how much of\na task is performed. The partial fill object can be set either on series\nor point level.",
                  "samples": [
                    {
                      "name": "X-range with partial fill",
                      "value": "highcharts/demo/x-range",
                      "products": ["highcharts"]
                    }
                  ],
                  "declare": "Highcharts.XrangePointPartialFillOptionsObject",
                  "products": ["highcharts", "highstock", "gantt"],
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "series.xrange.data.partialFill",
                  "name": "partialFill",
                  "line": 186,
                  "lineEnd": 197,
                  "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
                  "column": 0
                },
                "children": {
                  "amount": {
                    "doclet": {
                      "description": "The amount of the X-range point to be filled. Values can be 0-1 and are\nconverted to percentages in the default data label formatter.",
                      "type": { "names": ["number"] },
                      "products": ["highcharts", "highstock", "gantt"]
                    },
                    "meta": {
                      "fullname": "series.xrange.data.partialFill.amount",
                      "name": "amount",
                      "line": 198,
                      "lineEnd": 205,
                      "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "fill": {
                    "doclet": {
                      "description": "The fill color to be used for partial fills. Defaults to a darker shade\nof the point color.",
                      "type": {
                        "names": [
                          "Highcharts.ColorString",
                          "Highcharts.GradientColorObject",
                          "Highcharts.PatternObject"
                        ]
                      },
                      "products": ["highcharts", "highstock", "gantt"]
                    },
                    "meta": {
                      "fullname": "series.xrange.data.partialFill.fill",
                      "name": "fill",
                      "line": 206,
                      "lineEnd": 213,
                      "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "extended": 1
              },
              "x": {
                "doclet": {
                  "description": "The starting X value of the range point.",
                  "samples": [
                    {
                      "name": "X-range",
                      "value": "highcharts/demo/x-range",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highstock", "gantt"]
                },
                "meta": {
                  "fullname": "series.xrange.data.x",
                  "name": "x",
                  "line": 156,
                  "lineEnd": 165,
                  "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "x2": {
                "doclet": {
                  "description": "The ending X value of the range point.",
                  "samples": [
                    {
                      "name": "X-range",
                      "value": "highcharts/demo/x-range",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highstock", "gantt"]
                },
                "meta": {
                  "fullname": "series.xrange.data.x2",
                  "name": "x2",
                  "line": 166,
                  "lineEnd": 175,
                  "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "description": "The Y value of the range point.",
                  "samples": [
                    {
                      "name": "X-range",
                      "value": "highcharts/demo/x-range",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "products": ["highcharts", "highstock", "gantt"]
                },
                "meta": {
                  "fullname": "series.xrange.data.y",
                  "name": "y",
                  "line": 176,
                  "lineEnd": 185,
                  "filename": "code/es-modules/Series/XRange/XRangeSeriesDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "accessibility": {},
              "className": {},
              "color": {},
              "colorIndex": {},
              "custom": {},
              "dataLabels": {},
              "description": {},
              "dragDrop": {},
              "drilldown": {},
              "events": {},
              "id": {},
              "labelrank": {},
              "marker": {},
              "name": {},
              "selected": {}
            },
            "extended": 1
          },
          "id": {},
          "index": {},
          "legendIndex": {},
          "stack": {},
          "xAxis": {},
          "yAxis": {},
          "zIndex": {},
          "borderRadius": {},
          "colorByPoint": {},
          "dataLabels": {},
          "dragDrop": {},
          "partialFill": {},
          "tooltip": {},
          "borderColor": {},
          "borderWidth": {},
          "centerInCategory": {},
          "colors": {},
          "dataGrouping": {},
          "groupPadding": {},
          "groupZPadding": {},
          "grouping": {},
          "maxPointWidth": {},
          "minPointLength": {},
          "pointPadding": {},
          "pointWidth": {},
          "states": {},
          "stickyTracking": {},
          "accessibility": {},
          "allowPointSelect": {},
          "animation": {},
          "animationLimit": {},
          "className": {},
          "clip": {},
          "color": {},
          "colorAxis": {},
          "colorIndex": {},
          "colorKey": {},
          "cursor": {},
          "custom": {},
          "dashStyle": {},
          "description": {},
          "enableMouseTracking": {},
          "events": {},
          "inactiveOtherPoints": {},
          "includeInDataExport": {},
          "keys": {},
          "label": {},
          "legendSymbol": {},
          "legendSymbolColor": {},
          "linkedTo": {},
          "onPoint": {},
          "opacity": {},
          "point": {},
          "pointDescriptionFormat": {},
          "pointDescriptionFormatter": {},
          "relativeXValue": {},
          "selected": {},
          "shadow": {},
          "showCheckbox": {},
          "showInLegend": {},
          "skipKeyboardNavigation": {},
          "sonification": {},
          "turboThreshold": {},
          "visible": {},
          "zoneAxis": {},
          "zones": {}
        },
        "extended": 1
      }
    },
    "extended": 1
  },
  "sonification": {
    "doclet": {
      "description": "Options for configuring sonification and audio charts. Requires the\n[sonification module](https://code.highcharts.com/modules/sonification.js)\nto be loaded.",
      "samples": [
        {
          "name": "All predefined instruments",
          "value": "highcharts/demo/all-instruments"
        },
        { "name": "Audio boxplots", "value": "highcharts/demo/audio-boxplot" },
        {
          "name": "Context tracks",
          "value": "highcharts/demo/plotline-context"
        },
        {
          "name": "Musical chart",
          "value": "highcharts/demo/sonification-music"
        }
      ],
      "since": "11.0.0",
      "requires": ["module:modules/sonification"],
      "type": { "names": ["*"] }
    },
    "meta": {
      "filename": "code/es-modules/Extensions/Sonification/Options.js",
      "name": "sonification",
      "fullname": "sonification",
      "line": 14,
      "lineEnd": 31,
      "column": 4
    },
    "children": {
      "afterSeriesWait": {
        "doclet": {
          "description": "The time to wait in milliseconds after each data series when playing\nthe series one after the other.",
          "samples": [
            {
              "name": "Notification after series",
              "value": "highcharts/sonification/chart-earcon"
            }
          ],
          "see": ["[order](#sonification.order)"],
          "since": "11.0.0",
          "type": { "names": ["number"] },
          "defaultvalue": 700
        },
        "meta": {
          "fullname": "sonification.afterSeriesWait",
          "name": "afterSeriesWait",
          "line": 220,
          "lineEnd": 228,
          "column": 8,
          "filename": "code/es-modules/Extensions/Sonification/Options.js",
          "default": 700
        },
        "children": {},
        "extended": 1
      },
      "defaultInstrumentOptions": {
        "doclet": {
          "description": "Default sonification options for all instrument tracks.\n\nIf specific options are also set on individual tracks or per\nseries, those will override these options.",
          "samples": [
            {
              "name": "Sonify points on click",
              "value": "highcharts/sonification/point-sonify"
            }
          ],
          "declare": "Highcharts.SonificationInstrumentOptions",
          "since": "11.0.0",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "sonification.defaultInstrumentOptions",
          "name": "defaultInstrumentOptions",
          "line": 319,
          "lineEnd": 329,
          "column": 8,
          "filename": "code/es-modules/Extensions/Sonification/Options.js"
        },
        "children": {
          "activeWhen": {
            "doclet": {
              "description": "Define a condition for when a track should be active and not.\n\nCan either be a function callback or a configuration object.\n\nIf a function is used, it should return a `boolean` for whether\nor not the track should be active. The function is called for\neach audio event, and receives a parameter object with `time`,\nand potentially `point` and `value` properties depending on the\ntrack. `point` is available if the audio event is related to a\ndata point. `value` is available if the track is used as a\ncontext track, and `valueInterval` is used.",
              "samples": [
                {
                  "name": "Mapping zones",
                  "value": "highcharts/sonification/mapping-zones"
                }
              ],
              "declare": "Highcharts.SonificationInstrumentActiveWhenOptions",
              "type": { "names": ["function", "*"] },
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.defaultInstrumentOptions.activeWhen",
              "name": "activeWhen",
              "line": 371,
              "lineEnd": 390,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {
              "crossingDown": {
                "doclet": {
                  "description": "Track is only active when `prop` was above, and is now at or\nbelow this value.\n\nIf both `crossingUp` and `crossingDown` are defined, the track\nis active if either condition is met.",
                  "type": { "names": ["number"] },
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.activeWhen.crossingDown",
                  "name": "crossingDown",
                  "line": 413,
                  "lineEnd": 422,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "crossingUp": {
                "doclet": {
                  "description": "Track is only active when `prop` was below, and is now at or\nabove this value.\n\nIf both `crossingUp` and `crossingDown` are defined, the track\nis active if either condition is met.",
                  "type": { "names": ["number"] },
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.activeWhen.crossingUp",
                  "name": "crossingUp",
                  "line": 403,
                  "lineEnd": 412,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "max": {
                "doclet": {
                  "description": "Track is only active when `prop` is below or at this value.",
                  "type": { "names": ["number"] },
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.activeWhen.max",
                  "name": "max",
                  "line": 397,
                  "lineEnd": 402,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "min": {
                "doclet": {
                  "description": "Track is only active when `prop` is above or at this value.",
                  "type": { "names": ["number"] },
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.activeWhen.min",
                  "name": "min",
                  "line": 391,
                  "lineEnd": 396,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "prop": {
                "doclet": {
                  "description": "The point property to compare, for example `y` or `x`.",
                  "type": { "names": ["string"] },
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.activeWhen.prop",
                  "name": "prop",
                  "line": 423,
                  "lineEnd": 428,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsSonificationDefaultInstrumentActiveWhenOptions",
            "extended": 1
          },
          "instrument": {
            "doclet": {
              "description": "Instrument to use for playing.\n\nCan either be a string referencing a synth preset, or it can be\na synth configuration object.",
              "samples": [
                {
                  "name": "Overview of available presets",
                  "value": "highcharts/demo/all-instruments"
                },
                {
                  "name": "Custom instrument",
                  "value": "highcharts/sonification/custom-instrument"
                }
              ],
              "type": {
                "names": ["string", "Highcharts.SynthPatchOptionsObject"]
              },
              "since": "11.0.0",
              "defaultvalue": "piano"
            },
            "meta": {
              "fullname": "sonification.defaultInstrumentOptions.instrument",
              "name": "instrument",
              "line": 339,
              "lineEnd": 348,
              "column": 12,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "default": "piano"
            },
            "children": {},
            "extended": 1
          },
          "mapping": {
            "doclet": {
              "description": "Mapping options for the audio parameters.\n\nAll parameters can be either:\n - A string, referencing a point property to map to.\n - A number, setting the value of the audio parameter directly.\n - A callback function, returning the value programmatically.\n - An object defining detailed configuration of the mapping.\n\nIf a function is used, it should return the desired value for\nthe audio parameter. The function is called for each audio event\nto be played, and receives a context object parameter with\n`time`, and potentially `point` and `value` depending on the\ntrack. `point` is available if the audio event is related to a\ndata point, and `value` is available if the track is used for a\ncontext track using `valueInterval`.",
              "samples": [
                {
                  "name": "Overview of common mapping parameters",
                  "value": "highcharts/sonification/mapping-overview"
                },
                {
                  "name": "Various types of mapping used",
                  "value": "highcharts/sonification/pitch-mapping"
                },
                {
                  "name": "Inverted mapping to property",
                  "value": "highcharts/sonification/polarity-invert"
                },
                {
                  "name": "Logarithmic mapping to property",
                  "value": "highcharts/sonification/log-mapping"
                }
              ],
              "declare": "Highcharts.SonificationInstrumentMappingOptions",
              "since": "11.0.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "sonification.defaultInstrumentOptions.mapping",
              "name": "mapping",
              "line": 443,
              "lineEnd": 470,
              "column": 12,
              "filename": "code/es-modules/Extensions/Sonification/Options.js"
            },
            "children": {
              "frequency": {
                "doclet": {
                  "description": "Frequency in Hertz of notes. Overrides pitch mapping if set.",
                  "declare": "Highcharts.SonificationInstrumentFrequencyOptions",
                  "extends": "sonification.defaultInstrumentOptions.mapping.time",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.mapping.frequency",
                  "name": "frequency",
                  "line": 480,
                  "lineEnd": 486,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {
                  "mapFunction": {},
                  "mapTo": {},
                  "max": {},
                  "min": {},
                  "value": {},
                  "within": {}
                },
                "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingFrequencyOptions",
                "extended": 1
              },
              "gapBetweenNotes": {
                "doclet": {
                  "description": "Gap in milliseconds between notes if pitch is mapped to an\narray of notes.\n\nCan be set to a fixed value, a prop to map to, a function,\nor a mapping object.",
                  "samples": [
                    {
                      "name": "Mapping to gap between notes",
                      "value": "maps/demo/audio-map"
                    }
                  ],
                  "extends": "sonification.defaultInstrumentOptions.mapping.time",
                  "defaultvalue": "100",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.mapping.gapBetweenNotes",
                  "name": "gapBetweenNotes",
                  "line": 718,
                  "lineEnd": 727,
                  "column": 16,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "default": 100
                },
                "children": {
                  "mapFunction": {},
                  "mapTo": {},
                  "max": {},
                  "min": {},
                  "value": {},
                  "within": {}
                },
                "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingGapBetweenNotesOptions",
                "extended": 1
              },
              "highpass": {
                "doclet": {
                  "description": "Mapping options for the highpass filter.\n\nA highpass filter lets high frequencies through, but stops\nlow frequencies, making the sound thinner.",
                  "declare": "Highcharts.SonificationInstrumentHighpassOptions",
                  "extends": "sonification.defaultInstrumentOptions.mapping.lowpass",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.mapping.highpass",
                  "name": "highpass",
                  "line": 549,
                  "lineEnd": 558,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": { "frequency": {}, "resonance": {} },
                "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingHighpassOptions",
                "extended": 1
              },
              "lowpass": {
                "doclet": {
                  "description": "Mapping options for the lowpass filter.\n\nA lowpass filter lets low frequencies through, but stops high\nfrequencies, making the sound more dull.",
                  "declare": "Highcharts.SonificationInstrumentLowpassOptions",
                  "since": "11.0.0",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.mapping.lowpass",
                  "name": "lowpass",
                  "line": 525,
                  "lineEnd": 533,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {
                  "frequency": {
                    "doclet": {
                      "description": "Map to filter frequency in Hertz from 1 to 20,000Hz.",
                      "declare": "Highcharts.SonificationInstrumentLowpassFrequencyOptions",
                      "extends": "sonification.defaultInstrumentOptions.mapping.time",
                      "since": "11.0.0"
                    },
                    "meta": {
                      "fullname": "sonification.defaultInstrumentOptions.mapping.lowpass.frequency",
                      "name": "frequency",
                      "line": 534,
                      "lineEnd": 540,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "column": 0
                    },
                    "children": {
                      "mapFunction": {},
                      "mapTo": {},
                      "max": {},
                      "min": {},
                      "value": {},
                      "within": {}
                    },
                    "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingLowpassFrequencyOptions",
                    "extended": 1
                  },
                  "resonance": {
                    "doclet": {
                      "description": "Map to filter resonance in dB. Can be negative to cause a\ndip, or positive to cause a bump.",
                      "declare": "Highcharts.SonificationInstrumentLowpassResonanceOptions",
                      "extends": "sonification.defaultInstrumentOptions.mapping.time",
                      "since": "11.0.0"
                    },
                    "meta": {
                      "fullname": "sonification.defaultInstrumentOptions.mapping.lowpass.resonance",
                      "name": "resonance",
                      "line": 541,
                      "lineEnd": 548,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "column": 0
                    },
                    "children": {
                      "mapFunction": {},
                      "mapTo": {},
                      "max": {},
                      "min": {},
                      "value": {},
                      "within": {}
                    },
                    "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingLowpassResonanceOptions",
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingLowpassOptions",
                "extended": 1
              },
              "noteDuration": {
                "doclet": {
                  "description": "Note duration determines for how long a note plays, in\nmilliseconds.\n\nIt only affects instruments that are able to play\ncontinuous sustained notes. Examples of these instruments\nfrom the presets include `flute`, `saxophone`, `trumpet`,\n`sawsynth`, `wobble`, `basic1`, `basic2`, `sine`,\n`sineGlide`, `triangle`, `square`, `sawtooth`, `noise`,\n`filteredNoise`, and `wind`.\n\nCan be set to a fixed value, a prop to map to, a function,\nor a mapping object.",
                  "extends": "sonification.defaultInstrumentOptions.mapping.time",
                  "defaultvalue": "200",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.mapping.noteDuration",
                  "name": "noteDuration",
                  "line": 659,
                  "lineEnd": 675,
                  "column": 16,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "default": 200
                },
                "children": {
                  "mapFunction": {},
                  "mapTo": {},
                  "max": {},
                  "min": {},
                  "value": {},
                  "within": {}
                },
                "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingNoteDurationOptions",
                "extended": 1
              },
              "pan": {
                "doclet": {
                  "description": "Pan refers to the stereo panning position of the sound.\nIt is defined from -1 (left) to 1 (right).\n\nBy default it is mapped to `x`, making the sound move from\nleft to right as the chart plays.\n\nCan be set to a fixed value, a prop to map to, a function,\nor a mapping object.",
                  "extends": "sonification.defaultInstrumentOptions.mapping.time",
                  "defaultvalue": "\"x\"",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.mapping.pan",
                  "name": "pan",
                  "line": 579,
                  "lineEnd": 590,
                  "column": 16,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "default": "x"
                },
                "children": {
                  "mapFunction": {},
                  "mapTo": {},
                  "max": {},
                  "min": {},
                  "value": {},
                  "within": {}
                },
                "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingPanOptions",
                "extended": 1
              },
              "pitch": {
                "doclet": {
                  "description": "Musical pitch refers to how high or low notes are played.\n\nBy default it is mapped to `y` so low `y` values are played\nwith a lower pitch, and high values are played with a higher\npitch.\n\nPitch mapping has a few extra features compared to other\naudio parameters.\n\nFirstly, it accepts not only number values, but also string\nvalues denoting note names. These are given in the form\n`<note><octave>`, for example `\"c6\"` or `\"F#2\"`.\n\nSecondly, it is possible to map pitch to an array of notes.\nIn this case, the `[gapBetweenNotes](#sonification.defaultInstrumentOptions.mapping.gapBetweenNotes)`\nmapping determines the delay between these notes.\n\nThirdly, it is possible to define a musical scale to follow\nwhen mapping.\n\nCan be set to a fixed value, an array, a prop to map to, a\nfunction, or a mapping object.",
                  "samples": [
                    {
                      "name": "Various types of mapping used",
                      "value": "highcharts/sonification/pitch-mapping"
                    },
                    {
                      "name": "Inverted mapping to property",
                      "value": "highcharts/sonification/polarity-invert"
                    },
                    {
                      "name": "Logarithmic mapping to property",
                      "value": "highcharts/sonification/log-mapping"
                    }
                  ],
                  "declare": "Highcharts.SonificationInstrumentPitchOptions",
                  "extends": "sonification.defaultInstrumentOptions.mapping.time",
                  "type": {
                    "names": [
                      "string",
                      "number",
                      "function",
                      "Array.<(string|number)>",
                      "*"
                    ]
                  },
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.mapping.pitch",
                  "name": "pitch",
                  "line": 677,
                  "lineEnd": 711,
                  "column": 16,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js"
                },
                "children": {
                  "mapTo": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "y"
                    },
                    "meta": {
                      "fullname": "sonification.defaultInstrumentOptions.mapping.pitch.mapTo",
                      "name": "mapTo",
                      "line": 713,
                      "lineEnd": 713,
                      "column": 20,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "default": "y"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "max": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "c6"
                    },
                    "meta": {
                      "fullname": "sonification.defaultInstrumentOptions.mapping.pitch.max",
                      "name": "max",
                      "line": 715,
                      "lineEnd": 715,
                      "column": 20,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "default": "c6"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "min": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "c2"
                    },
                    "meta": {
                      "fullname": "sonification.defaultInstrumentOptions.mapping.pitch.min",
                      "name": "min",
                      "line": 714,
                      "lineEnd": 714,
                      "column": 20,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "default": "c2"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "scale": {
                    "doclet": {
                      "description": "Map pitches to a musical scale. The scale is defined as an\narray of semitone offsets from the root note.",
                      "samples": [
                        {
                          "name": "Predefined scale presets",
                          "value": "highcharts/sonification/all-scales"
                        }
                      ],
                      "type": { "names": ["Array.<number>"] },
                      "since": "11.0.0"
                    },
                    "meta": {
                      "fullname": "sonification.defaultInstrumentOptions.mapping.pitch.scale",
                      "name": "scale",
                      "line": 718,
                      "lineEnd": 727,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "within": {
                    "doclet": {
                      "type": { "names": ["string"] },
                      "defaultvalue": "yAxis"
                    },
                    "meta": {
                      "fullname": "sonification.defaultInstrumentOptions.mapping.pitch.within",
                      "name": "within",
                      "line": 716,
                      "lineEnd": 716,
                      "column": 20,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "default": "yAxis"
                    },
                    "children": {},
                    "extended": 1
                  },
                  "mapFunction": {},
                  "value": {}
                },
                "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingPitchOptions",
                "extended": 1
              },
              "playDelay": {
                "doclet": {
                  "description": "Milliseconds to wait before playing, comes in addition to\nthe time determined by the `time` mapping.\n\nCan also be negative to play before the mapped time.",
                  "declare": "Highcharts.SonificationInstrumentPlayDelayOptions",
                  "extends": "sonification.defaultInstrumentOptions.mapping.time",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.mapping.playDelay",
                  "name": "playDelay",
                  "line": 487,
                  "lineEnd": 496,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {
                  "mapFunction": {},
                  "mapTo": {},
                  "max": {},
                  "min": {},
                  "value": {},
                  "within": {}
                },
                "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingPlayDelayOptions",
                "extended": 1
              },
              "time": {
                "doclet": {
                  "description": "Time mapping determines what time each point plays. It is\ndefined as an offset in milliseconds, where 0 means it\nplays immediately when the chart is sonified.\n\nBy default time is mapped to `x`, meaning points with the\nlowest `x` value plays first, and points with the highest\n`x` value plays last.\n\nCan be set to a fixed value, a prop to map to, a function,\nor a mapping object.",
                  "samples": [
                    {
                      "name": "Play points in order of Y value",
                      "value": "highcharts/sonification/point-play-time"
                    }
                  ],
                  "declare": "Highcharts.SonificationInstrumentTimeOptions",
                  "type": { "names": ["string", "number", "function", "*"] },
                  "defaultvalue": "\"x\"",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.mapping.time",
                  "name": "time",
                  "line": 472,
                  "lineEnd": 479,
                  "column": 16,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "default": "x"
                },
                "children": {
                  "mapFunction": {
                    "doclet": {
                      "description": "How to perform the mapping.",
                      "samples": [
                        {
                          "name": "Logarithmic mapping to property",
                          "value": "highcharts/sonification/log-mapping"
                        }
                      ],
                      "type": { "names": ["\"linear\"", "\"logarithmic\""] },
                      "since": "11.0.0"
                    },
                    "meta": {
                      "fullname": "sonification.defaultInstrumentOptions.mapping.time.mapFunction",
                      "name": "mapFunction",
                      "line": 625,
                      "lineEnd": 632,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "mapTo": {
                    "doclet": {
                      "description": "A point property to map the mapping parameter to.\n\nA negative sign `-` can be placed before the property name\nto make mapping inverted.",
                      "samples": [
                        {
                          "name": "Inverted mapping to property",
                          "value": "highcharts/sonification/polarity-invert"
                        }
                      ],
                      "type": { "names": ["string"] },
                      "since": "11.0.0"
                    },
                    "meta": {
                      "fullname": "sonification.defaultInstrumentOptions.mapping.time.mapTo",
                      "name": "mapTo",
                      "line": 579,
                      "lineEnd": 590,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "max": {
                    "doclet": {
                      "description": "The maximum value for the audio parameter. This is the\nhighest value the audio parameter will be mapped to.",
                      "type": { "names": ["number"] },
                      "since": "11.0.0"
                    },
                    "meta": {
                      "fullname": "sonification.defaultInstrumentOptions.mapping.time.max",
                      "name": "max",
                      "line": 598,
                      "lineEnd": 604,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "min": {
                    "doclet": {
                      "description": "The minimum value for the audio parameter. This is the\nlowest value the audio parameter will be mapped to.",
                      "type": { "names": ["number"] },
                      "since": "11.0.0"
                    },
                    "meta": {
                      "fullname": "sonification.defaultInstrumentOptions.mapping.time.min",
                      "name": "min",
                      "line": 591,
                      "lineEnd": 597,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "value": {
                    "doclet": {
                      "description": "A fixed value to use for the prop when mapping.\n\nFor example, if mapping to `y`, setting value to `4` will\nmap as if all points had a y value of 4.",
                      "samples": [
                        {
                          "name": "Map to fixed y value",
                          "value": "highcharts/demo/plotline-context"
                        }
                      ],
                      "type": { "names": ["number"] },
                      "since": "11.0.0"
                    },
                    "meta": {
                      "fullname": "sonification.defaultInstrumentOptions.mapping.time.value",
                      "name": "value",
                      "line": 633,
                      "lineEnd": 644,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "within": {
                    "doclet": {
                      "description": "What data values to map the parameter within.\n\nMapping within `\"series\"` will make the lowest value point\nin the series map to the min audio parameter value, and the\nhighest value will map to the max audio parameter.\n\nMapping within `\"chart\"` will make the lowest value point in\nthe whole chart map to the min audio parameter value, and\nthe highest value in the whole chart will map to the max\naudio parameter.\n\nYou can also map within the X or Y axis of each series.",
                      "samples": [
                        {
                          "name": "Mapping within demonstrated",
                          "value": "highcharts/sonification/mapping-within"
                        }
                      ],
                      "type": {
                        "names": [
                          "\"chart\"",
                          "\"series\"",
                          "\"xAxis\"",
                          "\"yAxis\""
                        ]
                      },
                      "since": "11.0.0"
                    },
                    "meta": {
                      "fullname": "sonification.defaultInstrumentOptions.mapping.time.within",
                      "name": "within",
                      "line": 605,
                      "lineEnd": 624,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingTimeOptions",
                "extended": 1
              },
              "tremolo": {
                "doclet": {
                  "description": "Mapping options for tremolo effects.\n\nTremolo is repeated changes of volume over time.",
                  "declare": "Highcharts.SonificationInstrumentTremoloOptions",
                  "since": "11.0.0",
                  "type": { "names": ["*"] }
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.mapping.tremolo",
                  "name": "tremolo",
                  "line": 497,
                  "lineEnd": 504,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {
                  "depth": {
                    "doclet": {
                      "description": "Map to tremolo depth, from 0 to 1.\n\nThis determines the intensity of the tremolo effect, how\nmuch the volume changes.",
                      "declare": "Highcharts.SonificationInstrumentTremoloDepthOptions",
                      "extends": "sonification.defaultInstrumentOptions.mapping.time",
                      "since": "11.0.0"
                    },
                    "meta": {
                      "fullname": "sonification.defaultInstrumentOptions.mapping.tremolo.depth",
                      "name": "depth",
                      "line": 505,
                      "lineEnd": 514,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "column": 0
                    },
                    "children": {
                      "mapFunction": {},
                      "mapTo": {},
                      "max": {},
                      "min": {},
                      "value": {},
                      "within": {}
                    },
                    "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingTremoloDepthOptions",
                    "extended": 1
                  },
                  "speed": {
                    "doclet": {
                      "description": "Map to tremolo speed, from 0 to 1.\n\nThis determines the speed of the tremolo effect, how fast\nthe volume changes.",
                      "declare": "Highcharts.SonificationInstrumentTremoloSpeedOptions",
                      "extends": "sonification.defaultInstrumentOptions.mapping.time",
                      "since": "11.0.0"
                    },
                    "meta": {
                      "fullname": "sonification.defaultInstrumentOptions.mapping.tremolo.speed",
                      "name": "speed",
                      "line": 515,
                      "lineEnd": 524,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "column": 0
                    },
                    "children": {
                      "mapFunction": {},
                      "mapTo": {},
                      "max": {},
                      "min": {},
                      "value": {},
                      "within": {}
                    },
                    "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingTremoloSpeedOptions",
                    "extended": 1
                  }
                },
                "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingTremoloOptions",
                "extended": 1
              },
              "volume": {
                "doclet": {
                  "description": "The volume of notes, from 0 to 1.",
                  "declare": "Highcharts.SonificationInstrumentVolumeOptions",
                  "extends": "sonification.defaultInstrumentOptions.mapping.time",
                  "defaultvalue": "1",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultInstrumentOptions.mapping.volume",
                  "name": "volume",
                  "line": 472,
                  "lineEnd": 479,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {
                  "mapFunction": {},
                  "mapTo": {},
                  "max": {},
                  "min": {},
                  "value": {},
                  "within": {}
                },
                "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingVolumeOptions",
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsSonificationDefaultInstrumentMappingOptions",
            "extended": 1
          },
          "midiName": {
            "doclet": {
              "description": "Name to use for a track when exporting to MIDI.\nBy default it uses the series name if the track is related to\na series.",
              "type": { "names": ["string"] },
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.defaultInstrumentOptions.midiName",
              "name": "midiName",
              "line": 356,
              "lineEnd": 363,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "pointGrouping": {
            "doclet": {
              "description": "Options for point grouping, specifically for instrument tracks.",
              "declare": "Highcharts.SonificationInstrumentPointGroupingOptions",
              "extends": "sonification.pointGrouping",
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.defaultInstrumentOptions.pointGrouping",
              "name": "pointGrouping",
              "line": 364,
              "lineEnd": 370,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {
              "algorithm": {},
              "enabled": {},
              "groupTimespan": {},
              "prop": {}
            },
            "flutterClassName": "HighchartsSonificationDefaultInstrumentPointGroupingOptions",
            "extended": 1
          },
          "roundToMusicalNotes": {
            "doclet": {
              "description": "Round pitch mapping to musical notes.\n\nIf `false`, will play the exact mapped note, even if it is out\nof tune compared to the musical notes as defined by 440Hz\nstandard tuning.",
              "since": "11.0.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "sonification.defaultInstrumentOptions.roundToMusicalNotes",
              "name": "roundToMusicalNotes",
              "line": 331,
              "lineEnd": 337,
              "column": 12,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "showPlayMarker": {
            "doclet": {
              "description": "Show play marker (tooltip and/or crosshair) for a track.",
              "type": { "names": ["boolean"] },
              "defaultvalue": "true",
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.defaultInstrumentOptions.showPlayMarker",
              "name": "showPlayMarker",
              "line": 349,
              "lineEnd": 355,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "type": {
            "doclet": {
              "description": "Type of track. Always `\"instrument\"` for instrument tracks, and\n`\"speech\"` for speech tracks.",
              "declare": "Highcharts.SonifcationTypeValue",
              "type": { "names": ["\"instrument\"", "\"speech\""] },
              "defaultvalue": "instrument",
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.defaultInstrumentOptions.type",
              "name": "type",
              "line": 339,
              "lineEnd": 348,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsSonificationDefaultInstrumentOptions",
        "extended": 1
      },
      "defaultSpeechOptions": {
        "doclet": {
          "description": "Default sonification options for all speech tracks.\n\nIf specific options are also set on individual tracks or per\nseries, those will override these options.",
          "samples": [
            {
              "name": "Speak values",
              "value": "highcharts/sonification/speak-values"
            }
          ],
          "declare": "Highcharts.SonificationSpeechOptions",
          "extends": "sonification.defaultInstrumentOptions",
          "exclude": ["roundToMusicalNotes", "midiName", "instrument"],
          "since": "11.0.0"
        },
        "meta": {
          "fullname": "sonification.defaultSpeechOptions",
          "name": "defaultSpeechOptions",
          "line": 744,
          "lineEnd": 756,
          "column": 8,
          "filename": "code/es-modules/Extensions/Sonification/Options.js"
        },
        "children": {
          "language": {
            "doclet": {
              "description": "The language to speak in for speech tracks, as an IETF BCP 47\nlanguage tag.",
              "samples": [
                {
                  "name": "French language speech",
                  "value": "maps/demo/audio-map"
                }
              ],
              "since": "11.0.0",
              "type": { "names": ["string"] },
              "defaultvalue": "en-US"
            },
            "meta": {
              "fullname": "sonification.defaultSpeechOptions.language",
              "name": "language",
              "line": 758,
              "lineEnd": 767,
              "column": 12,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "default": "en-US"
            },
            "children": {},
            "extended": 1
          },
          "mapping": {
            "doclet": {
              "description": "Mapping configuration for the speech/audio parameters.\n\nAll parameters except `text` can be either:\n - A string, referencing a point property to map to.\n - A number, setting the value of the speech parameter directly.\n - A callback function, returning the value programmatically.\n - An object defining detailed configuration of the mapping.\n\nIf a function is used, it should return the desired value for\nthe speech parameter. The function is called for each speech\nevent to be played, and receives a context object parameter with\n`time`, and potentially `point` and `value` depending on the\ntrack. `point` is available if the audio event is related to a\ndata point, and `value` is available if the track is used for a\ncontext track using `valueInterval`.",
              "declare": "Highcharts.SonificationSpeechMappingOptions",
              "extends": "sonification.defaultInstrumentOptions.mapping",
              "exclude": [
                "frequency",
                "gapBetweenNotes",
                "highpass",
                "lowpass",
                "tremolo",
                "noteDuration",
                "pan"
              ],
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.defaultSpeechOptions.mapping",
              "name": "mapping",
              "line": 788,
              "lineEnd": 810,
              "column": 12,
              "filename": "code/es-modules/Extensions/Sonification/Options.js"
            },
            "children": {
              "pitch": {
                "doclet": {
                  "description": "Speech pitch (how high/low the voice is) multiplier.",
                  "samples": [
                    {
                      "name": "Speak values",
                      "value": "highcharts/sonification/speak-values"
                    }
                  ],
                  "declare": "Highcharts.SonificationSpeechPitchOptions",
                  "extends": "sonification.defaultInstrumentOptions.mapping.time",
                  "exclude": ["scale"],
                  "type": { "names": ["string", "number", "function", "*"] },
                  "defaultvalue": "1",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultSpeechOptions.mapping.pitch",
                  "name": "pitch",
                  "line": 822,
                  "lineEnd": 833,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {
                  "mapTo": {
                    "doclet": {
                      "defaultvalue": "undefined",
                      "type": { "names": ["string"] }
                    },
                    "meta": {
                      "fullname": "sonification.defaultSpeechOptions.mapping.pitch.mapTo",
                      "name": "mapTo",
                      "line": 834,
                      "lineEnd": 837,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "max": {
                    "doclet": {
                      "defaultvalue": "undefined",
                      "type": { "names": ["string"] }
                    },
                    "meta": {
                      "fullname": "sonification.defaultSpeechOptions.mapping.pitch.max",
                      "name": "max",
                      "line": 842,
                      "lineEnd": 845,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "min": {
                    "doclet": {
                      "defaultvalue": "undefined",
                      "type": { "names": ["string"] }
                    },
                    "meta": {
                      "fullname": "sonification.defaultSpeechOptions.mapping.pitch.min",
                      "name": "min",
                      "line": 838,
                      "lineEnd": 841,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "within": {
                    "doclet": {
                      "defaultvalue": "undefined",
                      "type": { "names": ["string"] }
                    },
                    "meta": {
                      "fullname": "sonification.defaultSpeechOptions.mapping.pitch.within",
                      "name": "within",
                      "line": 846,
                      "lineEnd": 849,
                      "filename": "code/es-modules/Extensions/Sonification/Options.js",
                      "column": 0
                    },
                    "children": {},
                    "extended": 1
                  },
                  "mapFunction": {},
                  "value": {}
                },
                "flutterClassName": "HighchartsSonificationDefaultSpeechMappingPitchOptions",
                "extended": 1
              },
              "playDelay": {
                "doclet": {
                  "description": "Milliseconds to wait before playing, comes in addition to\nthe time determined by the `time` mapping.\n\nCan also be negative to play before the mapped time.",
                  "declare": "Highcharts.SonificationSpeechPlayDelayOptions",
                  "extends": "sonification.defaultInstrumentOptions.mapping.time",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultSpeechOptions.mapping.playDelay",
                  "name": "playDelay",
                  "line": 812,
                  "lineEnd": 821,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {
                  "mapFunction": {},
                  "mapTo": {},
                  "max": {},
                  "min": {},
                  "value": {},
                  "within": {}
                },
                "flutterClassName": "HighchartsSonificationDefaultSpeechMappingPlayDelayOptions",
                "extended": 1
              },
              "rate": {
                "doclet": {
                  "description": "Speech rate (speed) multiplier.",
                  "extends": "sonification.defaultInstrumentOptions.mapping.time",
                  "defaultvalue": "1.3",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultSpeechOptions.mapping.rate",
                  "name": "rate",
                  "line": 882,
                  "lineEnd": 886,
                  "column": 16,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "default": 1.3
                },
                "children": {
                  "mapFunction": {},
                  "mapTo": {},
                  "max": {},
                  "min": {},
                  "value": {},
                  "within": {}
                },
                "flutterClassName": "HighchartsSonificationDefaultSpeechMappingRateOptions",
                "extended": 1
              },
              "text": {
                "doclet": {
                  "description": "The text to announce for speech tracks. Can either be a\nformat string or a function.\n\nIf it is a function, it should return the format string to\nannounce. The function is called for each audio event, and\nreceives a parameter object with `time`, and potentially\n`point` and `value` properties depending on the track.\n`point` is available if the audio event is related to a data\npoint. `value` is available if the track is used as a\ncontext track, and `valueInterval` is used.\n\nIf it is a format string, in addition to normal string\ncontent, format values can be accessed using bracket\nnotation. For example `\"Value is {point.y}%\"`.\n\n`time`, `point` and `value` are available to the format\nstrings similarly to with functions. Nested properties can\nbe accessed with dot notation, for example\n`\"Density: {point.options.custom.density}\"`",
                  "samples": [
                    {
                      "name": "Speak values",
                      "value": "highcharts/sonification/speak-values"
                    }
                  ],
                  "type": { "names": ["string", "function"] },
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultSpeechOptions.mapping.text",
                  "name": "text",
                  "line": 850,
                  "lineEnd": 876,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "time": {
                "doclet": {
                  "extends": "sonification.defaultInstrumentOptions.mapping.time",
                  "defaultvalue": "\"x\""
                },
                "meta": {
                  "fullname": "sonification.defaultSpeechOptions.mapping.time",
                  "name": "time",
                  "line": 812,
                  "lineEnd": 821,
                  "column": 16,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "default": "x"
                },
                "children": {
                  "mapFunction": {},
                  "mapTo": {},
                  "max": {},
                  "min": {},
                  "value": {},
                  "within": {}
                },
                "flutterClassName": "HighchartsSonificationDefaultSpeechMappingTimeOptions",
                "extended": 1
              },
              "volume": {
                "doclet": {
                  "description": "Volume of the speech announcement.",
                  "extends": "sonification.defaultInstrumentOptions.mapping.volume",
                  "defaultvalue": "0.4",
                  "since": "11.0.0"
                },
                "meta": {
                  "fullname": "sonification.defaultSpeechOptions.mapping.volume",
                  "name": "volume",
                  "line": 888,
                  "lineEnd": 892,
                  "column": 16,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "default": 0.4
                },
                "children": {
                  "mapFunction": {},
                  "mapTo": {},
                  "max": {},
                  "min": {},
                  "value": {},
                  "within": {}
                },
                "flutterClassName": "HighchartsSonificationDefaultSpeechMappingVolumeOptions",
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsSonificationDefaultSpeechMappingOptions",
            "extended": 1
          },
          "pointGrouping": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "sonification.defaultInstrumentOptions.pointGrouping"
            },
            "meta": {
              "fullname": "sonification.defaultSpeechOptions.pointGrouping",
              "name": "pointGrouping",
              "line": 895,
              "lineEnd": 895,
              "column": 12,
              "filename": "code/es-modules/Extensions/Sonification/Options.js"
            },
            "children": {
              "algorithm": {
                "doclet": {
                  "type": { "names": ["string"] },
                  "defaultvalue": "last"
                },
                "meta": {
                  "fullname": "sonification.defaultSpeechOptions.pointGrouping.algorithm",
                  "name": "algorithm",
                  "line": 896,
                  "lineEnd": 896,
                  "column": 16,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "default": "last"
                },
                "children": {},
                "extended": 1
              },
              "enabled": {},
              "groupTimespan": {},
              "prop": {}
            },
            "flutterClassName": "HighchartsSonificationDefaultSpeechPointGroupingOptions",
            "extended": 1
          },
          "preferredVoice": {
            "doclet": {
              "description": "Name of the voice synthesis to prefer for speech tracks.\n\nIf not available, falls back to the default voice for the\nselected language.\n\nDifferent platforms provide different voices for web speech\nsynthesis.",
              "type": { "names": ["string"] },
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.defaultSpeechOptions.preferredVoice",
              "name": "preferredVoice",
              "line": 768,
              "lineEnd": 779,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "type": {
            "doclet": {
              "description": "Type of track. Always `\"instrument\"` for instrument tracks, and\n`\"speech\"` for speech tracks.",
              "declare": "Highcharts.SonifcationTypeValue",
              "type": { "names": ["\"instrument\"", "\"speech\""] },
              "defaultvalue": "speech",
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.defaultSpeechOptions.type",
              "name": "type",
              "line": 758,
              "lineEnd": 767,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "activeWhen": {},
          "showPlayMarker": {}
        },
        "flutterClassName": "HighchartsSonificationDefaultSpeechOptions",
        "extended": 1
      },
      "duration": {
        "doclet": {
          "description": "The total duration of the sonification, in milliseconds.",
          "since": "11.0.0",
          "type": { "names": ["number"] },
          "defaultvalue": 6000
        },
        "meta": {
          "fullname": "sonification.duration",
          "name": "duration",
          "line": 216,
          "lineEnd": 218,
          "column": 8,
          "filename": "code/es-modules/Extensions/Sonification/Options.js",
          "default": 6000
        },
        "children": {},
        "extended": 1
      },
      "enabled": {
        "doclet": {
          "description": "Enable sonification functionality for the chart.",
          "since": "11.0.0",
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "sonification.enabled",
          "name": "enabled",
          "line": 33,
          "lineEnd": 44,
          "column": 8,
          "filename": "code/es-modules/Extensions/Sonification/Options.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "events": {
        "doclet": {
          "description": "Set up event handlers for the sonification",
          "since": "11.0.0",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "sonification.events",
          "name": "events",
          "line": 116,
          "lineEnd": 120,
          "filename": "code/es-modules/Extensions/Sonification/Options.js",
          "column": 0
        },
        "children": {
          "afterUpdate": {
            "doclet": {
              "description": "Called after updating the sonification.\n\nA context object is passed to the function, with properties `chart`\nand `timeline`.",
              "type": { "names": ["function"] },
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.events.afterUpdate",
              "name": "afterUpdate",
              "line": 170,
              "lineEnd": 178,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "beforePlay": {
            "doclet": {
              "description": "Called immediately when a play is requested.\n\nA context object is passed to the function, with properties `chart`\nand `timeline`.",
              "type": { "names": ["function"] },
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.events.beforePlay",
              "name": "beforePlay",
              "line": 152,
              "lineEnd": 160,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "beforeUpdate": {
            "doclet": {
              "description": "Called before updating the sonification.\n\nA context object is passed to the function, with properties `chart`\nand `timeline`.",
              "type": { "names": ["function"] },
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.events.beforeUpdate",
              "name": "beforeUpdate",
              "line": 161,
              "lineEnd": 169,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "onBoundaryHit": {
            "doclet": {
              "description": "Called when attempting to play an adjacent point or series, and\nthere is none.\n\nBy default a percussive sound is played.\n\nA context object is passed to the function, with properties `chart`,\n`timeline`, and `attemptedNext`. `attemptedNext` is a boolean\nproperty that is `true` if the boundary hit was from trying to play\nthe next series/point, and `false` if it was from trying to play the\nprevious.",
              "type": { "names": ["function"] },
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.events.onBoundaryHit",
              "name": "onBoundaryHit",
              "line": 197,
              "lineEnd": 211,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "onEnd": {
            "doclet": {
              "description": "Called when play is completed.\n\nA context object is passed to the function, with properties `chart`,\n`timeline` and `pointsPlayed`. `pointsPlayed` is an array of `Point`\nobjects, referencing data points that were related to the audio\nevents played.",
              "type": { "names": ["function"] },
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.events.onEnd",
              "name": "onEnd",
              "line": 141,
              "lineEnd": 151,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "onPlay": {
            "doclet": {
              "description": "Called on play.\n\nA context object is passed to the function, with properties `chart`\nand `timeline`.",
              "type": { "names": ["function"] },
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.events.onPlay",
              "name": "onPlay",
              "line": 121,
              "lineEnd": 129,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "onSeriesEnd": {
            "doclet": {
              "description": "Called when finished playing a series.\n\nA context object is passed to the function, with properties `series`\nand `timeline`.",
              "type": { "names": ["function"] },
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.events.onSeriesEnd",
              "name": "onSeriesEnd",
              "line": 188,
              "lineEnd": 196,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "onSeriesStart": {
            "doclet": {
              "description": "Called on the beginning of playing a series.\n\nA context object is passed to the function, with properties `series`\nand `timeline`.",
              "type": { "names": ["function"] },
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.events.onSeriesStart",
              "name": "onSeriesStart",
              "line": 179,
              "lineEnd": 187,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "onStop": {
            "doclet": {
              "description": "Called on pause, cancel, or if play is completed.\n\nA context object is passed to the function, with properties `chart`,\n`timeline` and `pointsPlayed`. `pointsPlayed` is an array of `Point`\nobjects, referencing data points that were related to the audio\nevents played.",
              "type": { "names": ["function"] },
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.events.onStop",
              "name": "onStop",
              "line": 130,
              "lineEnd": 140,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsSonificationEventsOptions",
        "extended": 1
      },
      "globalContextTracks": {
        "doclet": {
          "description": "Context tracks to add globally, an array of either instrument\ntracks, speech tracks, or a mix.\n\nContext tracks are not tied to data points, but play at a set\ninterval - either based on time or on prop values.",
          "samples": [
            {
              "name": "Using contexts",
              "value": "highcharts/demo/plotline-context"
            }
          ],
          "declare": "Highcharts.SonificationContextTracksOptions",
          "extends": "sonification.globalTracks",
          "type": { "names": ["Array.<*>"] },
          "since": "11.0.0"
        },
        "meta": {
          "fullname": "sonification.globalContextTracks",
          "name": "globalContextTracks",
          "line": 59,
          "lineEnd": 73,
          "filename": "code/es-modules/Extensions/Sonification/Options.js",
          "column": 0
        },
        "children": {
          "timeInterval": {
            "doclet": {
              "description": "Set a context track to play periodically every `timeInterval`\nmilliseconds while the sonification is playing.",
              "samples": [
                {
                  "name": "Using contexts",
                  "value": "highcharts/demo/plotline-context"
                }
              ],
              "type": { "names": ["number"] },
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.globalContextTracks.timeInterval",
              "name": "timeInterval",
              "line": 74,
              "lineEnd": 83,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "valueInterval": {
            "doclet": {
              "description": "Set a context track to play periodically every `valueInterval`\nunits of a data property `valueProp` while the sonification is\nplaying.\n\nFor example, setting `valueProp` to `x` and `valueInterval` to 5\nwill play the context track for every 5th X value.\n\nThe context audio events will be mapped to time according to the\nprop value relative to the min/max values for that prop.",
              "samples": [
                {
                  "name": "Using contexts",
                  "value": "highcharts/demo/plotline-context"
                }
              ],
              "type": { "names": ["number"] },
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.globalContextTracks.valueInterval",
              "name": "valueInterval",
              "line": 84,
              "lineEnd": 100,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "valueMapFunction": {
            "doclet": {
              "description": "How to map context events to time when using the `valueInterval`\noption.",
              "type": { "names": ["\"linear\"", "\"logarithmic\""] },
              "defaultvalue": "\"linear\"",
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.globalContextTracks.valueMapFunction",
              "name": "valueMapFunction",
              "line": 108,
              "lineEnd": 115,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "valueProp": {
            "doclet": {
              "description": "The point property to play context for when using `valueInterval`.",
              "type": { "names": ["string"] },
              "defaultvalue": "\"x\"",
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "sonification.globalContextTracks.valueProp",
              "name": "valueProp",
              "line": 101,
              "lineEnd": 107,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "mapping": {},
          "activeWhen": {},
          "instrument": {},
          "midiName": {},
          "pointGrouping": {},
          "roundToMusicalNotes": {},
          "showPlayMarker": {},
          "type": {}
        },
        "flutterClassName": "HighchartsSonificationGlobalContextTracksOptions",
        "extended": 1
      },
      "globalTracks": {
        "doclet": {
          "description": "Global tracks to add to every series.\n\nDefined as an array of either instrument or speech tracks,\nor a combination.",
          "declare": "Highcharts.SonificationTracksOptions",
          "extends": "sonification.defaultInstrumentOptions",
          "type": { "names": ["Array.<*>"] },
          "since": "11.0.0"
        },
        "meta": {
          "fullname": "sonification.globalTracks",
          "name": "globalTracks",
          "line": 33,
          "lineEnd": 44,
          "filename": "code/es-modules/Extensions/Sonification/Options.js",
          "column": 0
        },
        "children": {
          "mapping": {
            "doclet": {
              "type": { "names": ["*"] },
              "extends": "sonification.defaultInstrumentOptions.mapping"
            },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "sonification.globalTracks.mapping",
              "line": 0,
              "lineEnd": 0,
              "name": "mapping"
            },
            "children": {
              "rate": {
                "doclet": {
                  "description": "Rate mapping for speech tracks.",
                  "declare": "Highcharts.SonificationTracksRateOptions",
                  "extends": "sonification.defaultSpeechOptions.mapping.rate"
                },
                "meta": {
                  "fullname": "sonification.globalTracks.mapping.rate",
                  "name": "rate",
                  "line": 45,
                  "lineEnd": 51,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {
                  "mapFunction": {},
                  "mapTo": {},
                  "max": {},
                  "min": {},
                  "value": {},
                  "within": {}
                },
                "flutterClassName": "HighchartsSonificationGlobalTracksMappingRateOptions",
                "extended": 1
              },
              "text": {
                "doclet": {
                  "description": "Text mapping for speech tracks.",
                  "declare": "Highcharts.SonificationTracksTextOptions",
                  "extends": "sonification.defaultSpeechOptions.mapping.text"
                },
                "meta": {
                  "fullname": "sonification.globalTracks.mapping.text",
                  "name": "text",
                  "line": 52,
                  "lineEnd": 58,
                  "filename": "code/es-modules/Extensions/Sonification/Options.js",
                  "column": 0
                },
                "children": {},
                "flutterClassName": "HighchartsSonificationGlobalTracksMappingTextOptions",
                "extended": 1
              },
              "frequency": {},
              "gapBetweenNotes": {},
              "highpass": {},
              "lowpass": {},
              "noteDuration": {},
              "pan": {},
              "pitch": {},
              "playDelay": {},
              "time": {},
              "tremolo": {},
              "volume": {}
            },
            "flutterClassName": "HighchartsSonificationGlobalTracksMappingOptions",
            "extended": 1
          },
          "activeWhen": {},
          "instrument": {},
          "midiName": {},
          "pointGrouping": {},
          "roundToMusicalNotes": {},
          "showPlayMarker": {},
          "type": {}
        },
        "flutterClassName": "HighchartsSonificationGlobalTracksOptions",
        "extended": 1
      },
      "masterVolume": {
        "doclet": {
          "description": "Overall/master volume for the sonification, from 0 to 1.",
          "since": "11.0.0",
          "type": { "names": ["number"] },
          "defaultvalue": 0.7
        },
        "meta": {
          "fullname": "sonification.masterVolume",
          "name": "masterVolume",
          "line": 236,
          "lineEnd": 238,
          "column": 8,
          "filename": "code/es-modules/Extensions/Sonification/Options.js",
          "default": 0.7
        },
        "children": {},
        "extended": 1
      },
      "order": {
        "doclet": {
          "description": "What order to play the data series in, either `sequential` where\nthe series play individually one after the other, or `simultaneous`\nwhere the series play all at once.",
          "samples": [
            {
              "name": "Simultaneous sonification",
              "value": "highcharts/sonification/chart-simultaneous"
            }
          ],
          "type": { "names": ["\"sequential\"", "\"simultaneous\""] },
          "since": "11.0.0",
          "defaultvalue": "sequential"
        },
        "meta": {
          "fullname": "sonification.order",
          "name": "order",
          "line": 240,
          "lineEnd": 249,
          "column": 8,
          "filename": "code/es-modules/Extensions/Sonification/Options.js",
          "default": "sequential"
        },
        "children": {},
        "extended": 1
      },
      "pointGrouping": {
        "doclet": {
          "description": "Options for grouping data points together when sonifying. This\nallows for the visual presentation to contain more points than what\nis being played. If not enabled, all visible / uncropped points are\nplayed.",
          "see": ["[series.cropThreshold](#plotOptions.series.cropThreshold)"],
          "since": "11.0.0",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "sonification.pointGrouping",
          "name": "pointGrouping",
          "line": 276,
          "lineEnd": 283,
          "column": 8,
          "filename": "code/es-modules/Extensions/Sonification/Options.js"
        },
        "children": {
          "algorithm": {
            "doclet": {
              "description": "The grouping algorithm, deciding which points to keep when\ngrouping a set of points together. By default `\"minmax\"` is\nused, which keeps both the minimum and maximum points.\n\nThe other algorithms will either keep the first point in the\ngroup (time wise), last point, middle point, or both the first\nand the last point.\n\nThe timing of the resulting point(s) is then adjusted to play\nevenly, regardless of its original position within the group.",
              "type": {
                "names": [
                  "\"minmax\"",
                  "\"first\"",
                  "\"last\"",
                  "\"middle\"",
                  "\"firstlast\""
                ]
              },
              "since": "11.0.0",
              "defaultvalue": "minmax"
            },
            "meta": {
              "fullname": "sonification.pointGrouping.algorithm",
              "name": "algorithm",
              "line": 294,
              "lineEnd": 307,
              "column": 12,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "default": "minmax"
            },
            "children": {},
            "extended": 1
          },
          "enabled": {
            "doclet": {
              "description": "Whether or not to group points",
              "since": "11.0.0",
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "sonification.pointGrouping.enabled",
              "name": "enabled",
              "line": 285,
              "lineEnd": 287,
              "column": 12,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "groupTimespan": {
            "doclet": {
              "description": "The size of each group in milliseconds. Audio events closer than\nthis are grouped together.",
              "since": "11.0.0",
              "type": { "names": ["number"] },
              "defaultvalue": 15
            },
            "meta": {
              "fullname": "sonification.pointGrouping.groupTimespan",
              "name": "groupTimespan",
              "line": 289,
              "lineEnd": 292,
              "column": 12,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "default": 15
            },
            "children": {},
            "extended": 1
          },
          "prop": {
            "doclet": {
              "description": "The data property for each point to compare when deciding which\npoints to keep in the group.\n\nBy default it is \"y\", which means that if the `\"minmax\"`\nalgorithm is used, the two points the group with the lowest and\nhighest `y` value will be kept, and the others not played.",
              "since": "11.0.0",
              "type": { "names": ["string"] },
              "defaultvalue": "y"
            },
            "meta": {
              "fullname": "sonification.pointGrouping.prop",
              "name": "prop",
              "line": 309,
              "lineEnd": 316,
              "column": 12,
              "filename": "code/es-modules/Extensions/Sonification/Options.js",
              "default": "y"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsSonificationPointGroupingOptions",
        "extended": 1
      },
      "showCrosshair": {
        "doclet": {
          "description": "Show X and Y axis crosshairs (if they exist) as the chart plays.\n\nNote that if multiple tracks that play at different times try to\nshow the crosshairs, it can be glitchy, so it is recommended in\nthose cases to turn this on/off for individual tracks using the\n[showPlayMarker](#plotOptions.series.sonification.tracks.showPlayMarker)\noption.",
          "see": [
            "[showTooltip](#sonification.showTooltip)",
            "[crosshair](#xAxis.crosshair)"
          ],
          "since": "11.0.0",
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "sonification.showCrosshair",
          "name": "showCrosshair",
          "line": 263,
          "lineEnd": 274,
          "column": 8,
          "filename": "code/es-modules/Extensions/Sonification/Options.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "showTooltip": {
        "doclet": {
          "description": "Show tooltip as the chart plays.\n\nNote that if multiple tracks that play at different times try to\nshow the tooltip, it can be glitchy, so it is recommended in\nthose cases to turn this on/off for individual tracks using the\n[showPlayMarker](#plotOptions.series.sonification.tracks.showPlayMarker)\noption.",
          "see": ["[showCrosshair](#sonification.showCrosshair)"],
          "since": "11.0.0",
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "sonification.showTooltip",
          "name": "showTooltip",
          "line": 251,
          "lineEnd": 261,
          "column": 8,
          "filename": "code/es-modules/Extensions/Sonification/Options.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "updateInterval": {
        "doclet": {
          "description": "How long to wait between each recomputation of the sonification, if\nthe chart updates rapidly. This avoids slowing down processes like\npanning. Given in milliseconds.",
          "since": "11.0.0",
          "type": { "names": ["number"] },
          "defaultvalue": 200
        },
        "meta": {
          "fullname": "sonification.updateInterval",
          "name": "updateInterval",
          "line": 230,
          "lineEnd": 234,
          "column": 8,
          "filename": "code/es-modules/Extensions/Sonification/Options.js",
          "default": 200
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsSonificationOptions",
    "extended": 1
  },
  "subtitle": {
    "doclet": {
      "description": "The chart's subtitle. This can be used both to display a subtitle below\nthe main title, and to display random text anywhere in the chart. The\nsubtitle can be updated after chart initialization through the\n`Chart.setTitle` method.",
      "samples": [
        {
          "name": "Default title alignment",
          "value": "highcharts/title/align-auto/",
          "products": ["highcharts"]
        },
        {
          "name": "Subtitle options demonstrated",
          "value": "maps/title/subtitle/",
          "products": ["highmaps"]
        }
      ],
      "type": { "names": ["*"] }
    },
    "meta": {
      "fullname": "subtitle",
      "name": "subtitle",
      "line": 641,
      "lineEnd": 651,
      "column": 4,
      "filename": "code/es-modules/Core/Defaults.js"
    },
    "children": {
      "floating": {
        "doclet": {
          "description": "When the subtitle is floating, the plot area will not move to make\nspace for it.",
          "samples": [
            {
              "name": "Floating title and subtitle",
              "value": "highcharts/subtitle/floating/",
              "products": ["highcharts"]
            },
            {
              "name": "Footnote floating at bottom right of plot area",
              "value": "stock/chart/subtitle-footnote",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "2.1.0"
        },
        "meta": {
          "fullname": "subtitle.floating",
          "name": "floating",
          "line": 653,
          "lineEnd": 666,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "style": {
        "doclet": {
          "description": "CSS styles for the title.\n\nIn styled mode, the subtitle style is given in the\n`.highcharts-subtitle` class.",
          "samples": [
            {
              "name": "Custom color and weight",
              "value": "highcharts/subtitle/style/",
              "products": ["highcharts"]
            },
            {
              "name": "Styled mode",
              "value": "highcharts/css/titles/",
              "products": ["highcharts"]
            },
            {
              "name": "Custom color and weight",
              "value": "stock/chart/subtitle-style",
              "products": ["highstock"]
            },
            {
              "name": "Styled mode",
              "value": "highcharts/css/titles/",
              "products": ["highstock"]
            },
            {
              "name": "Styled mode",
              "value": "highcharts/css/titles/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["Highcharts.CSSObject"] },
          "defaultvalue": "{\"color\": \"#666666\"}"
        },
        "meta": {
          "fullname": "subtitle.style",
          "name": "style",
          "line": 653,
          "lineEnd": 666,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {
          "color": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "#666666"
            },
            "meta": {
              "fullname": "subtitle.style.color",
              "name": "color",
              "line": 760,
              "lineEnd": 760,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "#666666"
            },
            "children": {},
            "extended": 1
          },
          "fontSize": {
            "doclet": {
              "type": { "names": ["number", "string"] },
              "defaultvalue": "0.8em"
            },
            "meta": {
              "fullname": "subtitle.style.fontSize",
              "name": "fontSize",
              "line": 761,
              "lineEnd": 763,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "0.8em"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsSubtitleStyleOptions",
        "extended": 1
      },
      "text": {
        "doclet": {
          "description": "The subtitle of the chart.",
          "samples": [
            {
              "name": "Custom subtitle",
              "value": "highcharts/subtitle/text/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Formatted and linked text.",
              "value": "highcharts/subtitle/text-formatted/",
              "products": ["highcharts", "highstock"]
            }
          ],
          "type": { "names": ["string"] },
          "defaultvalue": ""
        },
        "meta": {
          "fullname": "subtitle.text",
          "name": "text",
          "line": 766,
          "lineEnd": 773,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": ""
        },
        "children": {},
        "extended": 1
      },
      "useHTML": {
        "doclet": {
          "description": "Whether to\n[use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\nto render the text.",
          "type": { "names": ["boolean"] },
          "defaultvalue": "false"
        },
        "meta": {
          "fullname": "subtitle.useHTML",
          "name": "useHTML",
          "line": 688,
          "lineEnd": 696,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "verticalAlign": {
        "doclet": {
          "description": "The vertical alignment of the title. Can be one of `\"top\"`,\n`\"middle\"` and `\"bottom\"`. When middle, the subtitle behaves as\nfloating.",
          "samples": [
            {
              "name": "Footnote at the bottom right of plot area",
              "value": "highcharts/subtitle/verticalalign/",
              "products": ["highcharts"]
            },
            {
              "name": "Footnote at the bottom right of plot area",
              "value": "stock/chart/subtitle-footnote",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.VerticalAlignValue"] },
          "since": "2.1.0"
        },
        "meta": {
          "fullname": "subtitle.verticalAlign",
          "name": "verticalAlign",
          "line": 697,
          "lineEnd": 710,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "x": {
        "doclet": {
          "description": "The x position of the subtitle relative to the alignment within\n`chart.spacingLeft` and `chart.spacingRight`.",
          "samples": [
            {
              "name": "Footnote at right of plot area",
              "value": "highcharts/subtitle/align/",
              "products": ["highcharts"]
            },
            {
              "name": "Footnote at the bottom right of plot area",
              "value": "stock/chart/subtitle-footnote",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "0",
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "subtitle.x",
          "name": "x",
          "line": 711,
          "lineEnd": 724,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "y": {
        "doclet": {
          "description": "The y position of the subtitle relative to the alignment within\n`chart.spacingTop` and `chart.spacingBottom`. By default the subtitle\nis laid out below the title unless the title is floating.",
          "samples": [
            {
              "name": "Footnote at the bottom right of plot area",
              "value": "highcharts/subtitle/verticalalign/",
              "products": ["highcharts"]
            },
            {
              "name": "Footnote at the bottom right of plot area",
              "value": "stock/chart/subtitle-footnote",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "subtitle.y",
          "name": "y",
          "line": 725,
          "lineEnd": 738,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsSubtitleOptions",
    "extended": 1
  },
  "time": {
    "doclet": {
      "description": "Time options that can apply globally or to individual charts. These\nsettings affect how `datetime` axes are laid out, how tooltips are\nformatted, how series\n[pointIntervalUnit](#plotOptions.series.pointIntervalUnit) works and how\nthe Highcharts Stock range selector handles time.\n\nThe common use case is that all charts in the same Highcharts object\nshare the same time settings, in which case the global settings are set\nusing `setOptions`.\n\n```js\n// Apply time settings globally\nHighcharts.setOptions({\n    time: {\n        timezone: 'Europe/London'\n    }\n});\n// Apply time settings by instance\nconst chart = Highcharts.chart('container', {\n    time: {\n        timezone: 'America/New_York'\n    },\n    series: [{\n        data: [1, 4, 3, 5]\n    }]\n});\n\n// Use the Time object\nconsole.log(\n       'Current time in New York',\n       chart.time.dateFormat('%Y-%m-%d %H:%M:%S', Date.now())\n);\n```\n\nSince v6.0.5, the time options were moved from the `global` object to the\n`time` object, and time options can be set on each individual chart.",
      "samples": [
        {
          "name": "Set the timezone globally",
          "value": "highcharts/time/timezone/",
          "products": ["highcharts", "highstock"]
        },
        {
          "name": "Set the timezone per chart instance",
          "value": "highcharts/time/individual/",
          "products": ["highcharts"]
        },
        {
          "name": "Set the timezone per chart instance",
          "value": "stock/time/individual/",
          "products": ["highstock"]
        }
      ],
      "since": "6.0.5",
      "type": { "names": ["*"] }
    },
    "meta": {
      "fullname": "time",
      "name": "time",
      "line": 340,
      "lineEnd": 390,
      "column": 4,
      "filename": "code/es-modules/Core/Defaults.js"
    },
    "children": {
      "Date": {
        "doclet": {
          "description": "A custom `Date` class for advanced date handling. For example,\n[JDate](https://github.com/tahajahangir/jdate) can be hooked in to\nhandle Jalali dates.",
          "type": { "names": ["*"] },
          "since": "6.0.5",
          "products": ["highcharts", "highstock", "gantt"],
          "defaultvalue": "undefined"
        },
        "meta": {
          "fullname": "time.Date",
          "name": "Date",
          "line": 392,
          "lineEnd": 400,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "undefined"
        },
        "children": {},
        "extended": 1
      },
      "timezone": {
        "doclet": {
          "description": "A named time zone. Supported time zone names rely on the browser\nimplementations, as described in the [mdn\ndocs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#timezone).\nIf the given time zone is not recognized by the browser, Highcharts\nprovides a warning and falls back to returning a 0 offset,\ncorresponding to the UTC time zone.\n\nThe time zone affects axis scaling, tickmark placement and\ntime display in `Highcharts.dateFormat`.\n\nSetting `timezone` to `undefined` falls back to the default browser\ntimezone setting.\n\nUntil v11.2.0, this option depended on moment.js.",
          "samples": [
            {
              "name": "Europe/Oslo",
              "value": "highcharts/time/timezone/",
              "products": ["highcharts", "highstock"]
            }
          ],
          "type": { "names": ["string"] },
          "since": "6.0.5",
          "products": ["highcharts", "highstock", "gantt"],
          "defaultvalue": "UTC"
        },
        "meta": {
          "fullname": "time.timezone",
          "name": "timezone",
          "line": 402,
          "lineEnd": 423,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "UTC"
        },
        "children": {},
        "extended": 1
      },
      "timezoneOffset": {
        "doclet": {
          "description": "The timezone offset in minutes. Positive values are west, negative\nvalues are east of UTC, as in the ECMAScript\n[getTimezoneOffset](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset)\nmethod. Use this to display UTC based data in a predefined time zone.\n\nThis option is deprecated as of v11.4.1 and will be removed in a\nfuture release. Use the [time.timezone](#time.timezone) option\ninstead.",
          "see": ["[time.getTimezoneOffset](#time.getTimezoneOffset)"],
          "samples": [
            {
              "name": "Timezone offset",
              "value": "highcharts/time/timezoneoffset/",
              "products": ["highcharts", "highstock"]
            }
          ],
          "since": "6.0.5",
          "deprecated": "11.4.2",
          "products": ["highcharts", "highstock", "gantt"],
          "type": { "names": ["number"] },
          "defaultvalue": 0
        },
        "meta": {
          "fullname": "time.timezoneOffset",
          "name": "timezoneOffset",
          "line": 425,
          "lineEnd": 443,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": 0
        },
        "children": {},
        "extended": 1
      },
      "useUTC": {
        "doclet": {
          "description": "Whether to use UTC time for axis scaling, tickmark placement and\ntime display in `Highcharts.dateFormat`. Advantages of using UTC\nis that the time displays equally regardless of the user agent's\ntime zone settings. Local time can be used when the data is loaded\nin real time or when correct Daylight Saving Time transitions are\nrequired.\n\nSetting `useUTC` to true is equivalent to setting `time.timezone` to\n`\"UTC\"`. Setting `useUTC` to false is equivalent to setting\n`time.timezone` to `undefined`.",
          "see": ["[time.timezone](#timezone)"],
          "samples": [
            {
              "name": "True by default",
              "value": "highcharts/time/useutc-true/",
              "products": ["highcharts"]
            },
            {
              "name": "False",
              "value": "highcharts/time/useutc-false/",
              "products": ["highcharts"]
            }
          ],
          "deprecated": true,
          "since": "6.0.5",
          "type": { "names": ["string"] },
          "defaultvalue": "undefined"
        },
        "meta": {
          "fullname": "time.useUTC",
          "name": "useUTC",
          "line": 445,
          "lineEnd": 465,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "undefined"
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsTimeOptions",
    "extended": 1
  },
  "title": {
    "doclet": {
      "description": "The chart's main title.",
      "samples": [
        {
          "name": "Title options demonstrated",
          "value": "maps/title/title/",
          "products": ["highmaps"]
        },
        {
          "name": "Default title alignment",
          "value": "highcharts/title/align-auto/",
          "products": ["highcharts"]
        }
      ],
      "type": { "names": ["*"] }
    },
    "meta": {
      "fullname": "title",
      "name": "title",
      "line": 469,
      "lineEnd": 476,
      "column": 4,
      "filename": "code/es-modules/Core/Defaults.js"
    },
    "children": {
      "align": {
        "doclet": {
          "description": "The horizontal alignment of the title. Can be one of \"left\", \"center\"\nand \"right\".\n\nSince v12 it defaults to `undefined`, meaning the alignment is\ncomputed for best fit. If the text fits in one line, it aligned to\nthe center, but if it is wrapped into multiple lines, it is aligned\nto the left.",
          "samples": [
            {
              "name": "Default alignment, dynamic",
              "value": "highcharts/title/align-auto/",
              "products": ["highcharts"]
            },
            {
              "name": "Aligned to the plot area (x = 70px = margin left - spacing left)",
              "value": "highcharts/title/align/",
              "products": ["highcharts"]
            },
            {
              "name": "Aligned to the plot area (x = 50px = margin left - spacing left)",
              "value": "stock/chart/title-align/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.AlignValue"] },
          "defaultvalue": "undefined",
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "title.align",
          "name": "align",
          "line": 586,
          "lineEnd": 608,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "floating": {
        "doclet": {
          "description": "When the title is floating, the plot area will not move to make space\nfor it.",
          "samples": [
            {
              "name": "False by default",
              "value": "highcharts/chart/zoomtype-none/",
              "products": ["highcharts"]
            },
            {
              "name": "True - title on top of the plot area",
              "value": "highcharts/title/floating/",
              "products": ["highcharts"]
            },
            {
              "name": "True - title on top of the plot area",
              "value": "stock/chart/title-floating/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "2.1.0"
        },
        "meta": {
          "fullname": "title.floating",
          "name": "floating",
          "line": 478,
          "lineEnd": 493,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "margin": {
        "doclet": {
          "description": "The margin between the title and the plot area, or if a subtitle\nis present, the margin between the subtitle and the plot area.",
          "samples": [
            {
              "name": "A chart title margin of 50",
              "value": "highcharts/title/margin-50/",
              "products": ["highcharts"]
            },
            {
              "name": "The same margin applied with a subtitle",
              "value": "highcharts/title/margin-subtitle/",
              "products": ["highcharts"]
            },
            {
              "name": "A chart title margin of 50",
              "value": "stock/chart/title-margin/",
              "products": ["highstock"]
            }
          ],
          "since": "2.1.0",
          "type": { "names": ["number"] },
          "defaultvalue": 15
        },
        "meta": {
          "fullname": "title.margin",
          "name": "margin",
          "line": 586,
          "lineEnd": 608,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": 15
        },
        "children": {},
        "extended": 1
      },
      "minScale": {
        "doclet": {
          "description": "When the title is too wide to fit in the chart, the default behavior\nis to scale it down to fit, or apply word wrap if it is scaled down\nto `minScale` and still doesn't fit.\n\nThe default value reflects the scale, when using default font sizes,\nwhen the title font size matches that of the subtitle. The title\nstill stands out as it is bold by default.\n\nSet `minScale` to 1 to avoid downscaling.",
          "samples": [
            {
              "name": "Downscaling demonstrated",
              "value": "highcharts/title/align-auto/",
              "products": ["highcharts"]
            }
          ],
          "since": "12.0.0",
          "type": { "names": ["number"] },
          "defaultvalue": 0.67
        },
        "meta": {
          "fullname": "title.minScale",
          "name": "minScale",
          "line": 623,
          "lineEnd": 638,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": 0.67
        },
        "children": {},
        "extended": 1
      },
      "style": {
        "doclet": {
          "description": "CSS styles for the title. Use this for font styling, but use `align`,\n`x` and `y` for text alignment.\n\nNote that the default [title.minScale](#title.minScale) option also\naffects the rendered font size. In order to keep the font size fixed\nregardless of title length, set `minScale` to 1.\n\nIn styled mode, the title style is given in the `.highcharts-title`\nclass.",
          "samples": [
            {
              "name": "Custom color and weight",
              "value": "highcharts/title/style/",
              "products": ["highcharts"]
            },
            {
              "name": "Custom color and weight",
              "value": "stock/chart/title-style/",
              "products": ["highstock"]
            },
            { "name": "Styled mode", "value": "highcharts/css/titles/" }
          ],
          "type": { "names": ["Highcharts.CSSObject"] },
          "defaultByProduct": {
            "highcharts": "{ \"color\": \"#333333\", \"fontSize\": \"18px\" }",
            "highmaps": "{ \"color\": \"#333333\", \"fontSize\": \"18px\" }",
            "highstock": "{ \"color\": \"#333333\", \"fontSize\": \"16px\" }"
          }
        },
        "meta": {
          "fullname": "title.style",
          "name": "style",
          "line": 478,
          "lineEnd": 493,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {
          "color": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "#333333"
            },
            "meta": {
              "fullname": "title.style.color",
              "name": "color",
              "line": 570,
              "lineEnd": 570,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "#333333"
            },
            "children": {},
            "extended": 1
          },
          "fontWeight": {
            "doclet": {
              "type": { "names": ["string"] },
              "defaultvalue": "bold"
            },
            "meta": {
              "fullname": "title.style.fontWeight",
              "name": "fontWeight",
              "line": 571,
              "lineEnd": 571,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "bold"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsTitleStyleOptions",
        "extended": 1
      },
      "text": {
        "doclet": {
          "description": "The title of the chart. To disable the title, set the `text` to\n`undefined`.",
          "samples": [
            {
              "name": "Custom title",
              "value": "highcharts/title/text/",
              "products": ["highcharts"]
            },
            {
              "name": "Custom title",
              "value": "stock/chart/title-text/",
              "products": ["highstock"]
            }
          ],
          "defaultByProduct": {
            "highcharts": "Chart title",
            "highmaps": "Chart title",
            "highstock": "undefined"
          },
          "type": { "names": ["string"] },
          "defaultvalue": "Chart title"
        },
        "meta": {
          "fullname": "title.text",
          "name": "text",
          "line": 573,
          "lineEnd": 584,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "Chart title"
        },
        "children": {},
        "extended": 1
      },
      "useHTML": {
        "doclet": {
          "description": "Whether to\n[use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\nto render the text.",
          "type": { "names": ["boolean"] },
          "defaultvalue": "false"
        },
        "meta": {
          "fullname": "title.useHTML",
          "name": "useHTML",
          "line": 494,
          "lineEnd": 502,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "verticalAlign": {
        "doclet": {
          "description": "The vertical alignment of the title. Can be one of `\"top\"`,\n`\"middle\"` and `\"bottom\"`. When a value is given, the title behaves\nas if [floating](#title.floating) were `true`.",
          "samples": [
            {
              "name": "Chart title in bottom right corner",
              "value": "highcharts/title/verticalalign/",
              "products": ["highcharts"]
            },
            {
              "name": "Chart title in bottom right corner",
              "value": "stock/chart/title-verticalalign/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.VerticalAlignValue"] },
          "since": "2.1.0"
        },
        "meta": {
          "fullname": "title.verticalAlign",
          "name": "verticalAlign",
          "line": 503,
          "lineEnd": 516,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "x": {
        "doclet": {
          "description": "The x position of the title relative to the alignment within\n`chart.spacingLeft` and `chart.spacingRight`.",
          "samples": [
            {
              "name": "Aligned to the plot area (x = 70px = margin left - spacing left)",
              "value": "highcharts/title/align/",
              "products": ["highcharts"]
            },
            {
              "name": "Aligned to the plot area (x = 50px = margin left - spacing left)",
              "value": "stock/chart/title-align/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "0",
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "title.x",
          "name": "x",
          "line": 517,
          "lineEnd": 532,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "y": {
        "doclet": {
          "description": "The y position of the title relative to the alignment within\n[chart.spacingTop](#chart.spacingTop) and [chart.spacingBottom](#chart.spacingBottom). By default it depends on the font size.",
          "samples": [
            {
              "name": "Title inside the plot area",
              "value": "highcharts/title/y/",
              "products": ["highcharts"]
            },
            {
              "name": "Chart title in bottom right corner",
              "value": "stock/chart/title-verticalalign/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "title.y",
          "name": "y",
          "line": 533,
          "lineEnd": 546,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsTitleOptions",
    "extended": 1
  },
  "tooltip": {
    "doclet": {
      "description": "Options for the tooltip that appears when the user hovers over a\nseries or point.",
      "declare": "Highcharts.TooltipOptions",
      "type": { "names": ["*"] }
    },
    "meta": {
      "fullname": "tooltip",
      "name": "tooltip",
      "line": 1808,
      "lineEnd": 1813,
      "column": 4,
      "filename": "code/es-modules/Core/Defaults.js"
    },
    "children": {
      "animation": {
        "doclet": {
          "description": "Enable or disable animation of the tooltip.",
          "type": {
            "names": ["boolean", "Partial.<Highcharts.AnimationOptionsObject>"]
          },
          "since": "2.3.0"
        },
        "meta": {
          "fullname": "tooltip.animation",
          "name": "animation",
          "line": 2187,
          "lineEnd": 2192,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {
          "duration": {
            "doclet": { "type": { "names": ["number"] }, "defaultvalue": 300 },
            "meta": {
              "fullname": "tooltip.animation.duration",
              "name": "duration",
              "line": 2194,
              "lineEnd": 2194,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": 300
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsTooltipAnimationOptions",
        "extended": 1
      },
      "backgroundColor": {
        "doclet": {
          "description": "The background color or gradient for the tooltip.\n\nIn styled mode, the stroke width is set in the\n`.highcharts-tooltip-box` class.",
          "samples": [
            {
              "name": "Yellowish background",
              "value": "highcharts/tooltip/backgroundcolor-solid/",
              "products": ["highcharts"]
            },
            {
              "name": "Gradient",
              "value": "highcharts/tooltip/backgroundcolor-gradient/",
              "products": ["highcharts"]
            },
            {
              "name": "Tooltip in styled mode",
              "value": "highcharts/css/tooltip-border-background/",
              "products": ["highcharts"]
            },
            {
              "name": "Custom tooltip",
              "value": "stock/tooltip/general/",
              "products": ["highstock"]
            },
            {
              "name": "Tooltip in styled mode",
              "value": "highcharts/css/tooltip-border-background/",
              "products": ["highstock"]
            },
            {
              "name": "Background and border demo",
              "value": "maps/tooltip/background-border/",
              "products": ["highmaps"]
            },
            {
              "name": "Tooltip in styled mode",
              "value": "highcharts/css/tooltip-border-background/",
              "products": ["highmaps"]
            }
          ],
          "type": {
            "names": [
              "Highcharts.ColorString",
              "Highcharts.GradientColorObject",
              "Highcharts.PatternObject"
            ]
          },
          "defaultvalue": "#ffffff"
        },
        "meta": {
          "fullname": "tooltip.backgroundColor",
          "name": "backgroundColor",
          "line": 2400,
          "lineEnd": 2422,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "#ffffff"
        },
        "children": {},
        "extended": 1
      },
      "borderColor": {
        "doclet": {
          "description": "The color of the tooltip border. When `undefined`, the border takes\nthe color of the corresponding series or point.\n\nNote that the [borderWidth](#tooltip.borderWidth) is usually 0 by\ndefault, so the border color may not be visible until a border width\nis set.",
          "samples": [
            {
              "name": "Follow series by default",
              "value": "highcharts/tooltip/bordercolor-default/",
              "products": ["highcharts"]
            },
            {
              "name": "Black border",
              "value": "highcharts/tooltip/bordercolor-black/",
              "products": ["highcharts"]
            },
            {
              "name": "Styled tooltip",
              "value": "stock/tooltip/general/",
              "products": ["highstock"]
            },
            {
              "name": "Background and border demo",
              "value": "maps/tooltip/background-border/",
              "products": ["highmaps"]
            }
          ],
          "type": {
            "names": [
              "Highcharts.ColorString",
              "Highcharts.GradientColorObject",
              "Highcharts.PatternObject"
            ]
          }
        },
        "meta": {
          "fullname": "tooltip.borderColor",
          "name": "borderColor",
          "line": 1815,
          "lineEnd": 1833,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "borderRadius": {
        "doclet": {
          "description": "The radius of the rounded border corners.",
          "samples": [
            {
              "name": "Default border radius",
              "value": "highcharts/tooltip/bordercolor-default/",
              "products": ["highcharts"]
            },
            {
              "name": "Square borders",
              "value": "highcharts/tooltip/borderradius-0/",
              "products": ["highcharts"]
            },
            {
              "name": "Background and border demo",
              "value": "maps/tooltip/background-border/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": 3
        },
        "meta": {
          "fullname": "tooltip.borderRadius",
          "name": "borderRadius",
          "line": 2198,
          "lineEnd": 2207,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": 3
        },
        "children": {},
        "extended": 1
      },
      "borderWidth": {
        "doclet": {
          "description": "The pixel width of the tooltip border. Defaults to 0 for single\ntooltips and 1 for split tooltips.\n\nIn styled mode, the stroke width is set in the\n`.highcharts-tooltip-box` class.",
          "samples": [
            {
              "name": "2 pixels",
              "value": "highcharts/tooltip/bordercolor-default/",
              "products": ["highcharts"]
            },
            {
              "name": "No border (shadow only)",
              "value": "highcharts/tooltip/borderwidth/",
              "products": ["highcharts"]
            },
            {
              "name": "Tooltip in styled mode",
              "value": "highcharts/css/tooltip-border-background/",
              "products": ["highcharts"]
            },
            {
              "name": "Custom tooltip",
              "value": "stock/tooltip/general/",
              "products": ["highstock"]
            },
            {
              "name": "Tooltip in styled mode",
              "value": "highcharts/css/tooltip-border-background/",
              "products": ["highstock"]
            },
            {
              "name": "Background and border demo",
              "value": "maps/tooltip/background-border/",
              "products": ["highmaps"]
            },
            {
              "name": "Tooltip in styled mode",
              "value": "highcharts/css/tooltip-border-background/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": null
        },
        "meta": {
          "fullname": "tooltip.borderWidth",
          "name": "borderWidth",
          "line": 2424,
          "lineEnd": 2447,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "undefined"
        },
        "children": {},
        "extended": 1
      },
      "className": {
        "doclet": {
          "description": "A CSS class name to apply to the tooltip's container div,\nallowing unique CSS styling for each chart.",
          "type": { "names": ["string"] }
        },
        "meta": {
          "fullname": "tooltip.className",
          "name": "className",
          "line": 1834,
          "lineEnd": 1840,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "clusterFormat": {
        "doclet": {
          "description": "The HTML of the grouped point's nodes in the tooltip. Works only for\nTreemap series grouping and analogously to\n[pointFormat](#tooltip.pointFormat).\n\nThe grouped nodes point tooltip can be also formatted using\n`tooltip.formatter` callback function and `point.isGroupNode` flag.",
          "samples": [
            {
              "name": "Format tooltip for cluster points.",
              "value": "highcharts/marker-clusters/grid"
            },
            {
              "name": "Format tooltip for clusters using tooltip.formatter",
              "value": "maps/marker-clusters/europe/"
            }
          ],
          "type": { "names": ["string"] },
          "defaultvalue": "'+ {point.groupedPointsAmount} more...'"
        },
        "meta": {
          "fullname": "tooltip.clusterFormat",
          "name": "clusterFormat",
          "line": 307,
          "lineEnd": 324,
          "filename": "code/es-modules/Extensions/MarkerClusters/MarkerClusterDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "crosshairs": {
        "doclet": {
          "description": "Since 4.1, the crosshair definitions are moved to the Axis object\nin order for a better separation from the tooltip. See\n[xAxis.crosshair](#xAxis.crosshair).",
          "samples": [
            {
              "name": "Enable a crosshair for the x value",
              "value": "highcharts/tooltip/crosshairs-x/",
              "products": ["highcharts"]
            }
          ],
          "deprecated": true,
          "type": { "names": ["*"] },
          "defaultvalue": "true"
        },
        "meta": {
          "fullname": "tooltip.crosshairs",
          "name": "crosshairs",
          "line": 1841,
          "lineEnd": 1854,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "dateTimeLabelFormats": {
        "doclet": {
          "description": "For series on datetime axes, the date format in the tooltip's\nheader will by default be guessed based on the closest data points.\nThis member gives the default string representations used for\neach unit. For an overview of the string or object configuration, see\n[dateFormat](/class-reference/Highcharts.Time#dateFormat).",
          "see": ["[xAxis.dateTimeLabelFormats](#xAxis.dateTimeLabelFormats)"],
          "type": {
            "names": [
              "Highcharts.Dictionary.<(string|Highcharts.DateTimeFormatOptions)>"
            ]
          },
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "tooltip.dateTimeLabelFormats",
          "name": "dateTimeLabelFormats",
          "line": 2209,
          "lineEnd": 2220,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {
          "day": {
            "doclet": {
              "internal": true,
              "type": { "names": ["string"] },
              "defaultvalue": "%[AebY]"
            },
            "meta": {
              "fullname": "tooltip.dateTimeLabelFormats.day",
              "name": "day",
              "line": 2230,
              "lineEnd": 2230,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "%[AebY]"
            },
            "children": {},
            "extended": 1
          },
          "hour": {
            "doclet": {
              "internal": true,
              "type": { "names": ["string"] },
              "defaultvalue": "%[AebHM]"
            },
            "meta": {
              "fullname": "tooltip.dateTimeLabelFormats.hour",
              "name": "hour",
              "line": 2228,
              "lineEnd": 2228,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "%[AebHM]"
            },
            "children": {},
            "extended": 1
          },
          "millisecond": {
            "doclet": {
              "internal": true,
              "type": { "names": ["string"] },
              "defaultvalue": "%[AebHMSL]"
            },
            "meta": {
              "fullname": "tooltip.dateTimeLabelFormats.millisecond",
              "name": "millisecond",
              "line": 2222,
              "lineEnd": 2222,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "%[AebHMSL]"
            },
            "children": {},
            "extended": 1
          },
          "minute": {
            "doclet": {
              "internal": true,
              "type": { "names": ["string"] },
              "defaultvalue": "%[AebHM]"
            },
            "meta": {
              "fullname": "tooltip.dateTimeLabelFormats.minute",
              "name": "minute",
              "line": 2226,
              "lineEnd": 2226,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "%[AebHM]"
            },
            "children": {},
            "extended": 1
          },
          "month": {
            "doclet": {
              "internal": true,
              "type": { "names": ["string"] },
              "defaultvalue": "%[BY]"
            },
            "meta": {
              "fullname": "tooltip.dateTimeLabelFormats.month",
              "name": "month",
              "line": 2234,
              "lineEnd": 2234,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "%[BY]"
            },
            "children": {},
            "extended": 1
          },
          "second": {
            "doclet": {
              "internal": true,
              "type": { "names": ["string"] },
              "defaultvalue": "%[AebHMS]"
            },
            "meta": {
              "fullname": "tooltip.dateTimeLabelFormats.second",
              "name": "second",
              "line": 2224,
              "lineEnd": 2224,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "%[AebHMS]"
            },
            "children": {},
            "extended": 1
          },
          "week": {
            "doclet": {
              "internal": true,
              "type": { "names": ["string"] },
              "defaultvalue": "Week from %[AebY]"
            },
            "meta": {
              "fullname": "tooltip.dateTimeLabelFormats.week",
              "name": "week",
              "line": 2232,
              "lineEnd": 2232,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "Week from %[AebY]"
            },
            "children": {},
            "extended": 1
          },
          "year": {
            "doclet": {
              "internal": true,
              "type": { "names": ["string"] },
              "defaultvalue": "%Y"
            },
            "meta": {
              "fullname": "tooltip.dateTimeLabelFormats.year",
              "name": "year",
              "line": 2236,
              "lineEnd": 2236,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "%Y"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsTooltipDateTimeLabelFormatsOptions",
        "extended": 1
      },
      "distance": {
        "doclet": {
          "description": "Distance from point to tooltip in pixels.",
          "type": { "names": ["number"] },
          "defaultvalue": "16"
        },
        "meta": {
          "fullname": "tooltip.distance",
          "name": "distance",
          "line": 1855,
          "lineEnd": 1861,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "enabled": {
        "doclet": {
          "description": "Enable or disable the tooltip.",
          "samples": [
            {
              "name": "Disabled",
              "value": "highcharts/tooltip/enabled/",
              "products": ["highcharts"]
            },
            {
              "name": "Disable tooltip and show values on chart instead",
              "value": "highcharts/plotoptions/series-point-events-mouseover/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "tooltip.enabled",
          "name": "enabled",
          "line": 1815,
          "lineEnd": 1833,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "followPointer": {
        "doclet": {
          "description": "Whether the tooltip should follow the mouse as it moves across\ncolumns, pie slices and other point types with an extent.\nBy default it behaves this way for pie, polygon, map, sankey\nand wordcloud series by override in the `plotOptions`\nfor those series types.\n\nDoes not apply if [split](#tooltip.split) is `true`.\n\nFor touch moves to behave the same way, [followTouchMove](#tooltip.followTouchMove) must be `true` also.",
          "samples": [
            {
              "name": "Tooltip follow pointer comparison",
              "value": "highcharts/tooltip/followpointer/"
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultByProduct": {
            "highcharts": false,
            "highstock": false,
            "highmaps": true
          },
          "since": "3.0.0"
        },
        "meta": {
          "fullname": "tooltip.followPointer",
          "name": "followPointer",
          "line": 1862,
          "lineEnd": 1883,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "followTouchMove": {
        "doclet": {
          "description": "Whether the tooltip should update as the finger moves on a touch\ndevice. If this is `true` and [chart.panning](#chart.panning) is\nset,`followTouchMove` will take over one-finger touches, so the user\nneeds to use two fingers for zooming and panning.\n\nNote the difference to [followPointer](#tooltip.followPointer) that\nonly defines the _position_ of the tooltip. If `followPointer` is\nfalse in for example a column series, the tooltip will show above or\nbelow the column, but as `followTouchMove` is true, the tooltip will\njump from column to column as the user swipes across the plot area.",
          "type": { "names": ["boolean"] },
          "defaultByProduct": {
            "highcharts": true,
            "highstock": true,
            "highmaps": false
          },
          "since": "3.0.1"
        },
        "meta": {
          "fullname": "tooltip.followTouchMove",
          "name": "followTouchMove",
          "line": 1884,
          "lineEnd": 1902,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "footerFormat": {
        "doclet": {
          "description": "A string to append to the tooltip format.",
          "samples": [
            {
              "name": "A table for value alignment",
              "value": "highcharts/tooltip/footerformat/",
              "products": ["highcharts"]
            },
            {
              "name": "Format demo",
              "value": "maps/tooltip/format/",
              "products": ["highmaps"]
            }
          ],
          "since": "2.2.0",
          "type": { "names": ["string"] },
          "defaultvalue": ""
        },
        "meta": {
          "fullname": "tooltip.footerFormat",
          "name": "footerFormat",
          "line": 2239,
          "lineEnd": 2248,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": ""
        },
        "children": {},
        "extended": 1
      },
      "format": {
        "doclet": {
          "description": "A [format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\nfor the whole shared tooltip. When format strings are a requirement,\nit is usually more convenient to use `headerFormat`, `pointFormat`\nand `footerFormat`, but the `format` option allows combining them\ninto one setting.\n\nThe context of the format string is the same as that of the\n`tooltip.formatter` callback.",
          "samples": [
            {
              "name": "Format for shared tooltip",
              "value": "highcharts/tooltip/format-shared/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["string"] },
          "defaultvalue": "undefined",
          "since": "11.1.0"
        },
        "meta": {
          "fullname": "tooltip.format",
          "name": "format",
          "line": 1903,
          "lineEnd": 1920,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "formatter": {
        "doclet": {
          "description": "Callback function to format the text of the tooltip from scratch. In\ncase of single or [shared](#tooltip.shared) tooltips, a string should\nbe returned. In case of [split](#tooltip.split) tooltips, it should\nreturn an array where the first item is the header, and subsequent\nitems are mapped to the points. Return `false` to disable tooltip for\na specific point on series.\n\nA subset of HTML is supported. Unless `useHTML` is true, the HTML of\nthe tooltip is parsed and converted to SVG, therefore this isn't a\ncomplete HTML renderer. The following HTML tags are supported: `b`,\n`br`, `em`, `i`, `span`, `strong`. Spans can be styled with a `style`\nattribute, but only text-related CSS, that is shared with SVG, is\nhandled.\n\nThe context of the formatter (since v12) is the\n[Point](https://api.highcharts.com/class-reference/Highcharts.Point)\ninstance. If the tooltip is shared or split, an array `this.points`\ncontains all points of the hovered x-value.\n\nCommon properties from the Point to use in the formatter include:\n\n- **Point.percentage**:\n  Stacked series and pies only. The point's percentage of the total.\n\n- **Point.points**:\n  In a shared or split tooltip, this is an array containing all the\n  hovered points.\n\n- **this.series**:\n  The series object. The series name is available through\n  `this.series.name`.\n\n- **this.total**:\n  The total value at this point's x value in a stacked series, or the\n  sum of all slices in a pie series.\n\n- **this.x**:\n  The x value.\n\n- **this.y**:\n  The y value.",
          "samples": [
            {
              "name": "Simple string formatting",
              "value": "highcharts/tooltip/formatter-simple/",
              "products": ["highcharts"]
            },
            {
              "name": "Formatting with shared tooltip",
              "value": "highcharts/tooltip/formatter-shared/",
              "products": ["highcharts"]
            },
            {
              "name": "Formatting with split tooltip",
              "value": "highcharts/tooltip/formatter-split/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Extending default formatter",
              "value": "highcharts/tooltip/formatter-conditional-default/"
            },
            {
              "name": "Formatting with shared tooltip",
              "value": "stock/tooltip/formatter/",
              "products": ["highstock"]
            },
            {
              "name": "String formatting",
              "value": "maps/tooltip/formatter/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["Highcharts.TooltipFormatterCallbackFunction"] }
        },
        "meta": {
          "fullname": "tooltip.formatter",
          "name": "formatter",
          "line": 1921,
          "lineEnd": 1979,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "headerFormat": {
        "doclet": {
          "description": "The HTML of the tooltip header line. The context is the\n[Point class](https://api.highcharts.com/class-reference/Highcharts.Point).\nVariables are enclosed in curly brackets. Examples of common\nvariables to include are `x`, `y`, `series.name` and `series.color`\nand other properties on the same form. The `point.key` variable\ncontains the category name, x value or datetime string depending on\nthe type of axis. For datetime axes, the `point.key` date format can\nbe set using `tooltip.xDateFormat`.",
          "samples": [
            {
              "name": "An HTML table in the tooltip",
              "value": "highcharts/tooltip/footerformat/",
              "products": ["highcharts"]
            },
            {
              "name": "An HTML table in the tooltip",
              "value": "highcharts/tooltip/footerformat/",
              "products": ["highstock"]
            },
            {
              "name": "Format demo",
              "value": "maps/tooltip/format/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["string"] }
        },
        "meta": {
          "fullname": "tooltip.headerFormat",
          "name": "headerFormat",
          "line": 2344,
          "lineEnd": 2363,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "headerShape": {
        "doclet": {
          "description": "The name of a symbol to use for the border around the tooltip\nheader. Applies only when [tooltip.split](#tooltip.split) is\nenabled.\n\nCustom callbacks for symbol path generation can also be added to\n`Highcharts.SVGRenderer.prototype.symbols` the same way as for\n[series.marker.symbol](plotOptions.line.marker.symbol).",
          "see": ["[tooltip.shape](#tooltip.shape)"],
          "samples": [
            {
              "name": "Different shapes for header and split boxes",
              "value": "stock/tooltip/split-positioner/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.TooltipShapeValue"] },
          "values": "[\"callout\", \"rect\"]",
          "since": "7.0.0",
          "defaultvalue": "callout"
        },
        "meta": {
          "fullname": "tooltip.headerShape",
          "name": "headerShape",
          "line": 2250,
          "lineEnd": 2267,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "callout"
        },
        "children": {},
        "extended": 1
      },
      "hideDelay": {
        "doclet": {
          "description": "The number of milliseconds to wait until the tooltip is hidden when\nmouse out from a point or chart.",
          "since": "3.0.0",
          "type": { "names": ["number"] },
          "defaultvalue": 500
        },
        "meta": {
          "fullname": "tooltip.hideDelay",
          "name": "hideDelay",
          "line": 2269,
          "lineEnd": 2274,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": 500
        },
        "children": {},
        "extended": 1
      },
      "nullFormat": {
        "doclet": {
          "description": "The HTML of the null point's line in the tooltip. Works analogously\nto [pointFormat](#tooltip.pointFormat).",
          "samples": [
            {
              "name": "Format data label and tooltip for null point.",
              "value": "highcharts/plotoptions/series-nullformat",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["string"] }
        },
        "meta": {
          "fullname": "tooltip.nullFormat",
          "name": "nullFormat",
          "line": 2365,
          "lineEnd": 2374,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "nullFormatter": {
        "doclet": {
          "description": "Callback function to format the text of the tooltip for\nvisible null points.\nWorks analogously to [formatter](#tooltip.formatter).",
          "samples": [
            {
              "name": "Format data label and tooltip for null point.",
              "value": "highcharts/plotoptions/series-nullformat"
            }
          ],
          "type": { "names": ["Highcharts.TooltipFormatterCallbackFunction"] }
        },
        "meta": {
          "fullname": "tooltip.nullFormatter",
          "name": "nullFormatter",
          "line": 1980,
          "lineEnd": 1990,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "outside": {
        "doclet": {
          "description": "Whether to allow the tooltip to render outside the chart's SVG\nelement box. By default (`false`), the tooltip is rendered within the\nchart's SVG element, which results in the tooltip being aligned\ninside the chart area. For small charts, this may result in clipping\nor overlapping. When `true`, a separate SVG element is created and\noverlaid on the page, allowing the tooltip to be aligned inside the\npage itself. Beware that with this option active, CSS classes on the\nchart's target container, with classnames matching the pattern\n'highcharts-*', will be set on the tooltip as well. This is done to\nsupport theming for tooltips with this option.\n\nDefaults to `true` if `chart.scrollablePlotArea` is activated,\notherwise `false`.",
          "samples": [
            {
              "name": "Small charts with tooltips outside",
              "value": "highcharts/tooltip/outside"
            }
          ],
          "type": { "names": ["boolean", "undefined"] },
          "defaultvalue": "undefined",
          "since": "6.1.1"
        },
        "meta": {
          "fullname": "tooltip.outside",
          "name": "outside",
          "line": 1991,
          "lineEnd": 2013,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "padding": {
        "doclet": {
          "description": "Padding inside the tooltip, in pixels.",
          "since": "5.0.0",
          "type": { "names": ["number"] },
          "defaultvalue": 8
        },
        "meta": {
          "fullname": "tooltip.padding",
          "name": "padding",
          "line": 2276,
          "lineEnd": 2280,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": 8
        },
        "children": {},
        "extended": 1
      },
      "pointFormat": {
        "doclet": {
          "description": "The HTML of the point's line in the tooltip. The context is the\n[Point class](https://api.highcharts.com/class-reference/Highcharts.Point).\nVariables are enclosed in curly brackets. Examples of common\nvariables to include are `x`, `y`, `series.name` and `series.color`\nand other properties on the same form. Furthermore, `y` can be\nextended by the `tooltip.valuePrefix` and `tooltip.valueSuffix`\nvariables. This can also be overridden for each series, which makes\nit a good hook for displaying units.\n\nIn styled mode, the dot is colored by a class name rather than the\npoint color.",
          "samples": [
            {
              "name": "A different point format with value suffix",
              "value": "highcharts/tooltip/pointformat/",
              "products": ["highcharts"]
            },
            {
              "name": "Show extra information about points in the tooltip",
              "value": "highcharts/tooltip/pointformat-extra-information/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Format demo",
              "value": "maps/tooltip/format/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["string"] },
          "since": "2.2.0"
        },
        "meta": {
          "fullname": "tooltip.pointFormat",
          "name": "pointFormat",
          "line": 2375,
          "lineEnd": 2398,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "pointFormatter": {
        "doclet": {
          "description": "A callback function for formatting the HTML output for a single point\nin the tooltip. Like the `pointFormat` string, but with more\nflexibility.",
          "type": {
            "names": ["Highcharts.FormatterCallbackFunction.<Highcharts.Point>"]
          },
          "since": "4.1.0",
          "context": "Highcharts.Point"
        },
        "meta": {
          "fullname": "tooltip.pointFormatter",
          "name": "pointFormatter",
          "line": 2014,
          "lineEnd": 2023,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "positioner": {
        "doclet": {
          "description": "A callback function to place the tooltip in a custom position. The\ncallback receives three parameters: `labelWidth`, `labelHeight` and\n`point`, where point contains values for `plotX` and `plotY` telling\nwhere the reference point is in the plot area. Add `chart.plotLeft`\nand `chart.plotTop` to get the full coordinates.\n\nTo find the actual hovered `Point` instance, use\n`this.chart.hoverPoint`. For shared or split tooltips, all the hover\npoints are available in `this.chart.hoverPoints`.\n\nSince v7, when [tooltip.split](#tooltip.split) option is enabled,\npositioner is called for each of the boxes separately, including\nxAxis header. xAxis header is not a point, instead `point` argument\ncontains info: `{ plotX: Number, plotY: Number, isHeader: Boolean }`\n\nThe return should be an object containing x and y values, for example\n`{ x: 100, y: 100 }`.",
          "samples": [
            {
              "name": "A fixed tooltip position",
              "value": "highcharts/tooltip/positioner/",
              "products": ["highcharts"]
            },
            {
              "name": "A fixed tooltip position on top of the chart",
              "value": "stock/tooltip/positioner/",
              "products": ["highstock"]
            },
            {
              "name": "A fixed tooltip position",
              "value": "maps/tooltip/positioner/",
              "products": ["highmaps"]
            },
            {
              "name": "Split tooltip with fixed positions",
              "value": "stock/tooltip/split-positioner/",
              "products": ["highstock"]
            },
            {
              "name": "Scrollable plot area combined with tooltip positioner",
              "value": "stock/tooltip/positioner-scrollable-plotarea/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.TooltipPositionerCallbackFunction"] },
          "since": "2.2.4"
        },
        "meta": {
          "fullname": "tooltip.positioner",
          "name": "positioner",
          "line": 2024,
          "lineEnd": 2057,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "shadow": {
        "doclet": {
          "description": "Whether to apply a drop shadow to the tooltip.",
          "samples": [
            {
              "name": "True by default",
              "value": "highcharts/tooltip/bordercolor-default/",
              "products": ["highcharts"]
            },
            {
              "name": "False",
              "value": "highcharts/tooltip/shadow/",
              "products": ["highcharts"]
            },
            {
              "name": "Fixed tooltip position, border and shadow disabled",
              "value": "maps/tooltip/positioner/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["boolean", "Highcharts.ShadowOptionsObject"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "tooltip.shadow",
          "name": "shadow",
          "line": 2449,
          "lineEnd": 2460,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "shape": {
        "doclet": {
          "description": "The name of a symbol to use for the border around the tooltip. Can\nbe one of: `\"callout\"`, `\"circle\"` or `\"rect\"`. When\n[tooltip.split](#tooltip.split)\noption is enabled, shape is applied to all boxes except header, which\nis controlled by\n[tooltip.headerShape](#tooltip.headerShape).\n\nCustom callbacks for symbol path generation can also be added to\n`Highcharts.SVGRenderer.prototype.symbols` the same way as for\n[series.marker.symbol](plotOptions.line.marker.symbol).",
          "type": { "names": ["Highcharts.TooltipShapeValue"] },
          "since": "4.0.0",
          "defaultvalue": "callout"
        },
        "meta": {
          "fullname": "tooltip.shape",
          "name": "shape",
          "line": 2282,
          "lineEnd": 2296,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": "callout"
        },
        "children": {},
        "extended": 1
      },
      "shared": {
        "doclet": {
          "description": "Shows information in the tooltip for all points with the same X\nvalue. When the tooltip is shared, the entire plot area will capture\nmouse movement or touch events. Tooltip texts for series types with\nordered data (not pie, scatter, flags etc) will be shown in a single\nbubble. This is recommended for single series charts and for\ntablet/mobile optimized charts.\n\nSee also [tooltip.split](#tooltip.split), that is better suited for\ncharts with many series, especially line-type series. The\n`tooltip.split` option takes precedence over `tooltip.shared`.",
          "samples": [
            {
              "name": "False by default",
              "value": "highcharts/tooltip/shared-false/",
              "products": ["highcharts"]
            },
            {
              "name": "True",
              "value": "highcharts/tooltip/shared-true/",
              "products": ["highcharts"]
            },
            {
              "name": "True with x axis crosshair",
              "value": "highcharts/tooltip/shared-x-crosshair/",
              "products": ["highcharts"]
            },
            {
              "name": "True with mixed series types",
              "value": "highcharts/tooltip/shared-true-mixed-types/",
              "products": ["highcharts"]
            }
          ],
          "since": "2.1.0",
          "products": ["highcharts", "highstock"],
          "type": { "names": ["boolean"] },
          "defaultvalue": false
        },
        "meta": {
          "fullname": "tooltip.shared",
          "name": "shared",
          "line": 2298,
          "lineEnd": 2321,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": false
        },
        "children": {},
        "extended": 1
      },
      "snap": {
        "doclet": {
          "description": "Proximity snap for graphs or single points. It defaults to 10 for\nmouse-powered devices and 25 for touch devices.\n\nNote that in most cases the whole plot area captures the mouse\nmovement, and in these cases `tooltip.snap` doesn't make sense. This\napplies when [stickyTracking](#plotOptions.series.stickyTracking)\nis `true` (default) and when the tooltip is [shared](#tooltip.shared)\nor [split](#tooltip.split).",
          "samples": [
            {
              "name": "10 px by default",
              "value": "highcharts/tooltip/bordercolor-default/",
              "products": ["highcharts"]
            },
            {
              "name": "50 px on graph",
              "value": "highcharts/tooltip/snap-50/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "10/25",
          "since": "1.2.0",
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "tooltip.snap",
          "name": "snap",
          "line": 2323,
          "lineEnd": 2342,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {},
        "extended": 1
      },
      "split": {
        "doclet": {
          "description": "Shows tooltip for all points with the same X value. Splits the\ntooltip into one label per series, with the header close to the axis.\nThis is recommended over [shared](#tooltip.shared)\ntooltips for charts with multiple line series, generally making them\neasier to read. This option takes precedence over `tooltip.shared`.\n\nNot supported for [polar](#chart.polar) and [inverted](#chart.inverted) charts.",
          "productdesc": [
            {
              "value": "In Highcharts Stock, tooltips are split\nby default since v6.0.0. Stock charts typically contain\nmulti-dimension points and multiple panes, making split tooltips\nthe preferred layout over\nthe previous `shared` tooltip.",
              "products": ["highstock"]
            }
          ],
          "samples": [
            { "name": "Split tooltip", "value": "highcharts/tooltip/split/" },
            {
              "name": "Split tooltip and custom formatter callback",
              "value": "highcharts/tooltip/formatter-split/",
              "products": ["highcharts", "highstock"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultByProduct": { "highcharts": false, "highstock": true },
          "since": "5.0.0",
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "tooltip.split",
          "name": "split",
          "line": 2058,
          "lineEnd": 2084,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "stickOnContact": {
        "doclet": {
          "description": "Prevents the tooltip from switching or closing when touched or\npointed.",
          "samples": [
            {
              "name": "Tooltip sticks on pointer contact",
              "value": "highcharts/tooltip/stickoncontact/"
            }
          ],
          "type": { "names": ["boolean"] },
          "since": "8.0.1",
          "defaultvalue": false
        },
        "meta": {
          "fullname": "tooltip.stickOnContact",
          "name": "stickOnContact",
          "line": 2462,
          "lineEnd": 2470,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": false
        },
        "children": {},
        "extended": 1
      },
      "style": {
        "doclet": {
          "description": "CSS styles for the tooltip. The tooltip can also be styled through\nthe CSS class `.highcharts-tooltip`.\n\nNote that the default `pointerEvents` style makes the tooltip ignore\nmouse events, so in order to use clickable tooltips, this value must\nbe set to `auto`.",
          "samples": [
            {
              "name": "Greater padding, bold text",
              "value": "highcharts/tooltip/style/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Highcharts.CSSObject"] }
        },
        "meta": {
          "fullname": "tooltip.style",
          "name": "style",
          "line": 2472,
          "lineEnd": 2484,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js"
        },
        "children": {
          "color": {
            "doclet": {
              "internal": true,
              "type": { "names": ["string"] },
              "defaultvalue": "#333333"
            },
            "meta": {
              "fullname": "tooltip.style.color",
              "name": "color",
              "line": 2486,
              "lineEnd": 2486,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "#333333"
            },
            "children": {},
            "extended": 1
          },
          "cursor": {
            "doclet": {
              "internal": true,
              "type": { "names": ["string"] },
              "defaultvalue": "default"
            },
            "meta": {
              "fullname": "tooltip.style.cursor",
              "name": "cursor",
              "line": 2488,
              "lineEnd": 2488,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "default"
            },
            "children": {},
            "extended": 1
          },
          "fontSize": {
            "doclet": {
              "type": { "names": ["number", "string"] },
              "defaultvalue": "0.8em"
            },
            "meta": {
              "fullname": "tooltip.style.fontSize",
              "name": "fontSize",
              "line": 2490,
              "lineEnd": 2492,
              "column": 12,
              "filename": "code/es-modules/Core/Defaults.js",
              "default": "0.8em"
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsTooltipStyleOptions",
        "extended": 1
      },
      "useHTML": {
        "doclet": {
          "description": "Use HTML to render the contents of the tooltip instead of SVG. Using\nHTML allows advanced formatting like tables and images in the\ntooltip. It is also recommended for rtl languages as it works around\nrtl bugs in early Firefox.",
          "samples": [
            {
              "name": "A table for value alignment",
              "value": "highcharts/tooltip/footerformat/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Full HTML tooltip",
              "value": "highcharts/tooltip/fullhtml/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Pure HTML tooltip",
              "value": "maps/tooltip/usehtml/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "2.2.0"
        },
        "meta": {
          "fullname": "tooltip.useHTML",
          "name": "useHTML",
          "line": 2495,
          "lineEnd": 2509,
          "column": 8,
          "filename": "code/es-modules/Core/Defaults.js",
          "default": false
        },
        "children": {},
        "extended": 1
      },
      "valueDecimals": {
        "doclet": {
          "description": "How many decimals to show in each series' y value. This is\noverridable in each series' tooltip options object. The default is to\npreserve all decimals.",
          "samples": [
            {
              "name": "Set decimals, prefix and suffix for the value",
              "value": "highcharts/tooltip/valuedecimals/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Set decimals, prefix and suffix for the value",
              "value": "maps/tooltip/valuedecimals/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["number", "undefined"] },
          "since": "2.2.0"
        },
        "meta": {
          "fullname": "tooltip.valueDecimals",
          "name": "valueDecimals",
          "line": 2114,
          "lineEnd": 2127,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "valuePrefix": {
        "doclet": {
          "description": "A string to prepend to each series' y value. Overridable in each\nseries' tooltip options object.",
          "samples": [
            {
              "name": "Set decimals, prefix and suffix for the value",
              "value": "highcharts/tooltip/valuedecimals/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Set decimals, prefix and suffix for the value",
              "value": "maps/tooltip/valuedecimals/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["string"] },
          "since": "2.2.0"
        },
        "meta": {
          "fullname": "tooltip.valuePrefix",
          "name": "valuePrefix",
          "line": 2128,
          "lineEnd": 2140,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "valueSuffix": {
        "doclet": {
          "description": "A string to append to each series' y value. Overridable in each\nseries' tooltip options object.",
          "samples": [
            {
              "name": "Set decimals, prefix and suffix for the value",
              "value": "highcharts/tooltip/valuedecimals/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Set decimals, prefix and suffix for the value",
              "value": "maps/tooltip/valuedecimals/",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["string"] },
          "since": "2.2.0"
        },
        "meta": {
          "fullname": "tooltip.valueSuffix",
          "name": "valueSuffix",
          "line": 2141,
          "lineEnd": 2153,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "xDateFormat": {
        "doclet": {
          "description": "The format for the date in the tooltip header if the X axis is a\ndatetime axis. The default is a best guess based on the smallest\ndistance between points in the chart.",
          "samples": [
            {
              "name": "A different format",
              "value": "highcharts/tooltip/xdateformat/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["string", "Highcharts.DateTimeFormatOptions"] },
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "tooltip.xDateFormat",
          "name": "xDateFormat",
          "line": 2154,
          "lineEnd": 2165,
          "filename": "code/es-modules/Core/Defaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsTooltipOptions",
    "extended": 1
  },
  "xAxis": {
    "doclet": {
      "description": "The X axis or category axis. Normally this is the horizontal axis,\nthough if the chart is inverted this is the vertical axis. In case of\nmultiple axes, the xAxis node is an array of configuration objects.\n\nSee the [Axis class](/class-reference/Highcharts.Axis) for programmatic\naccess to the axis.",
      "productdesc": [
        {
          "value": "In Highmaps, the axis is hidden, but it is used behind the scenes to\ncontrol features like zooming and panning. Zooming is in effect the same\nas setting the extremes of one of the exes.",
          "products": ["highmaps"]
        }
      ],
      "type": { "names": ["*", "Array.<*>"] }
    },
    "meta": {
      "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
      "name": "xAxis",
      "fullname": "xAxis",
      "line": 18,
      "lineEnd": 22,
      "column": 4
    },
    "children": {
      "accessibility": {
        "doclet": {
          "description": "Accessibility options for an axis. Requires the accessibility module.",
          "declare": "Highcharts.AxisAccessibilityOptionsObject",
          "since": "7.1.0",
          "requires": ["module:modules/accessibility"],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "xAxis.accessibility",
          "name": "accessibility",
          "line": 848,
          "lineEnd": 855,
          "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
          "column": 0
        },
        "children": {
          "description": {
            "doclet": {
              "description": "Description for an axis to expose to screen reader users.",
              "type": { "names": ["string"] },
              "since": "7.1.0"
            },
            "meta": {
              "fullname": "xAxis.accessibility.description",
              "name": "description",
              "line": 866,
              "lineEnd": 872,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "enabled": {
            "doclet": {
              "description": "Enable axis accessibility features, including axis information in the\nscreen reader information region. If this is disabled on the xAxis, the\nx values are not exposed to screen readers for the individual data points\nby default.",
              "type": { "names": ["boolean"] },
              "since": "7.1.0"
            },
            "meta": {
              "fullname": "xAxis.accessibility.enabled",
              "name": "enabled",
              "line": 856,
              "lineEnd": 865,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "rangeDescription": {
            "doclet": {
              "description": "Range description for an axis. Overrides the default range description.\nSet to empty to disable range description for this axis.",
              "type": { "names": ["string"] },
              "since": "7.1.0"
            },
            "meta": {
              "fullname": "xAxis.accessibility.rangeDescription",
              "name": "rangeDescription",
              "line": 873,
              "lineEnd": 880,
              "filename": "code/es-modules/Accessibility/Options/A11yDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsXAxisAccessibilityOptions",
        "extended": 1
      },
      "alignTicks": {
        "doclet": {
          "description": "When using multiple axis, the ticks of two or more opposite axes\nwill automatically be aligned by adding ticks to the axis or axes\nwith the least ticks, as if `tickAmount` were specified.\n\nThis can be prevented by setting `alignTicks` to false. If the grid\nlines look messy, it's a good idea to hide them for the secondary\naxis by setting `gridLineWidth` to 0.\n\nIf `startOnTick` or `endOnTick` in an Axis options are set to false,\nthen the `alignTicks ` will be disabled for the Axis.\n\nDisabled for logarithmic axes.",
          "products": ["highcharts", "highstock", "gantt"],
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "xAxis.alignTicks",
          "name": "alignTicks",
          "line": 40,
          "lineEnd": 55,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "allowDecimals": {
        "doclet": {
          "description": "Whether to allow decimals in this axis' ticks. When counting\nintegers, like persons or hits on a web page, decimals should\nbe avoided in the labels. By default, decimals are allowed on small\nscale axes.",
          "see": ["[minTickInterval](#xAxis.minTickInterval)"],
          "samples": [
            {
              "name": "True by default",
              "value": "highcharts/yaxis/allowdecimals-true/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "False",
              "value": "highcharts/yaxis/allowdecimals-false/",
              "products": ["highcharts", "highstock"]
            }
          ],
          "type": { "names": ["boolean", "undefined"] },
          "defaultvalue": "undefined",
          "since": "2.0.0"
        },
        "meta": {
          "fullname": "xAxis.allowDecimals",
          "name": "allowDecimals",
          "line": 57,
          "lineEnd": 73,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": "undefined"
        },
        "children": {},
        "extended": 1
      },
      "alternateGridColor": {
        "doclet": {
          "description": "When using an alternate grid color, a band is painted across the\nplot area between every other grid line.",
          "samples": [
            {
              "name": "Alternate grid color on the Y axis",
              "value": "highcharts/yaxis/alternategridcolor/",
              "products": ["highcharts"]
            },
            {
              "name": "Alternate grid color on the Y axis",
              "value": "stock/xaxis/alternategridcolor/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.ColorType"] }
        },
        "meta": {
          "fullname": "xAxis.alternateGridColor",
          "name": "alternateGridColor",
          "line": 75,
          "lineEnd": 86,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "angle": {
        "doclet": {
          "description": "In a polar chart, this is the angle of the Y axis in degrees, where\n0 is up and 90 is right. The angle determines the position of the\naxis line and the labels, though the coordinate system is unaffected.\nSince v8.0.0 this option is also applicable for X axis (inverted\npolar).",
          "samples": [
            {
              "name": "Custom X axis' angle on inverted polar chart",
              "value": "highcharts/xaxis/angle/",
              "products": ["highcharts"]
            },
            {
              "name": "Dual axis polar chart",
              "value": "highcharts/yaxis/angle/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "0",
          "since": "4.2.7",
          "products": ["highcharts"]
        },
        "meta": {
          "fullname": "xAxis.angle",
          "name": "angle",
          "line": 64,
          "lineEnd": 81,
          "filename": "code/es-modules/Core/Axis/RadialAxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "breaks": {
        "doclet": {
          "description": "An array defining breaks in the axis, the sections defined will be\nleft out and all the points shifted closer to each other.",
          "productdesc": [
            {
              "value": "Requires that the broken-axis.js module is loaded.",
              "products": ["highcharts"]
            }
          ],
          "samples": [
            {
              "name": "Simple break",
              "value": "highcharts/axisbreak/break-simple/",
              "products": ["highcharts"]
            },
            {
              "name": "Advanced with callback",
              "value": "highcharts/axisbreak/break-visualized/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Break on nights and weekends",
              "value": "stock/demo/intraday-breaks/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Array.<*>"] },
          "since": "4.1.0",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "xAxis.breaks",
          "name": "breaks",
          "line": 87,
          "lineEnd": 105,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {
          "breakSize": {
            "doclet": {
              "description": "A number indicating how much space should be left between the start\nand the end of the break. The break size is given in axis units,\nso for instance on a `datetime` axis, a break size of 3600000 would\nindicate the equivalent of an hour.",
              "type": { "names": ["number"] },
              "defaultvalue": "0",
              "since": "4.1.0",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "xAxis.breaks.breakSize",
              "name": "breakSize",
              "line": 106,
              "lineEnd": 117,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "from": {
            "doclet": {
              "description": "The axis value where the break starts. On datetime axes, this may be\na date string.",
              "type": { "names": ["number", "string"] },
              "since": "4.1.0",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "xAxis.breaks.from",
              "name": "from",
              "line": 118,
              "lineEnd": 126,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "repeat": {
            "doclet": {
              "description": "Defines an interval after which the break appears again. By default\nthe breaks do not repeat.",
              "type": { "names": ["number"] },
              "defaultvalue": "0",
              "since": "4.1.0",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "xAxis.breaks.repeat",
              "name": "repeat",
              "line": 127,
              "lineEnd": 136,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "to": {
            "doclet": {
              "description": "The axis value where the break ends. On datetime axes, this may be\na date string.",
              "type": { "names": ["number", "string"] },
              "since": "4.1.0",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "xAxis.breaks.to",
              "name": "to",
              "line": 137,
              "lineEnd": 145,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsXAxisBreaksOptions",
        "extended": 1
      },
      "categories": {
        "doclet": {
          "description": "If categories are present for the xAxis, names are used instead of\nnumbers for that axis.\n\nSince Highcharts 3.0, categories can also\nbe extracted by giving each point a [name](#series.data) and setting\naxis [type](#xAxis.type) to `category`. However, if you have multiple\nseries, best practice remains defining the `categories` array.\n\nExample: `categories: ['Apples', 'Bananas', 'Oranges']`",
          "samples": [
            {
              "name": "With",
              "value": "highcharts/demo/line-labels/",
              "products": ["highcharts"]
            },
            {
              "name": "Without",
              "value": "highcharts/xaxis/categories/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Array.<string>"] },
          "products": ["highcharts", "gantt"]
        },
        "meta": {
          "fullname": "xAxis.categories",
          "name": "categories",
          "line": 146,
          "lineEnd": 165,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "ceiling": {
        "doclet": {
          "description": "The highest allowed value for automatically computed axis extremes.",
          "see": ["[floor](#xAxis.floor)"],
          "samples": [
            {
              "name": "Floor and ceiling",
              "value": "highcharts/yaxis/floor-ceiling/",
              "products": ["highcharts", "highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "4.0.0",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "xAxis.ceiling",
          "name": "ceiling",
          "line": 166,
          "lineEnd": 178,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "className": {
        "doclet": {
          "description": "A class name that opens for styling the axis by CSS, especially in\nHighcharts styled mode. The class name is applied to group elements\nfor the grid, axis elements and labels.",
          "samples": [
            {
              "name": "Multiple axes with separate styling",
              "value": "highcharts/css/axis/",
              "products": ["highcharts", "highstock", "highmaps"]
            }
          ],
          "type": { "names": ["string"] },
          "since": "5.0.0"
        },
        "meta": {
          "fullname": "xAxis.className",
          "name": "className",
          "line": 179,
          "lineEnd": 190,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "crosshair": {
        "doclet": {
          "description": "Configure a crosshair that follows either the mouse pointer or the\nhovered point.\n\nIn styled mode, the crosshairs are styled in the\n`.highcharts-crosshair`, `.highcharts-crosshair-thin` or\n`.highcharts-xaxis-category` classes.",
          "productdesc": [
            {
              "value": "In Highcharts stock, by default, the crosshair is enabled on the\nX axis and disabled on the Y axis.",
              "products": ["highstock"]
            }
          ],
          "samples": [
            {
              "name": "Crosshair on both axes",
              "value": "highcharts/xaxis/crosshair-both/",
              "products": ["highcharts"]
            },
            {
              "name": "Crosshair on both axes, with y axis label",
              "value": "stock/xaxis/crosshairs-xy/",
              "products": ["highstock"]
            },
            {
              "name": "Crosshair on both axes",
              "value": "highcharts/xaxis/crosshair-both/",
              "products": ["highmaps"]
            }
          ],
          "declare": "Highcharts.AxisCrosshairOptions",
          "type": { "names": ["boolean", "*"] },
          "defaultvalue": "false",
          "since": "4.1.0"
        },
        "meta": {
          "fullname": "xAxis.crosshair",
          "name": "crosshair",
          "line": 191,
          "lineEnd": 215,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {
          "className": {
            "doclet": {
              "description": "A class name for the crosshair, especially as a hook for styling.",
              "type": { "names": ["string"] },
              "since": "5.0.0"
            },
            "meta": {
              "fullname": "xAxis.crosshair.className",
              "name": "className",
              "line": 229,
              "lineEnd": 235,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "color": {
            "doclet": {
              "description": "The color of the crosshair. Defaults to `#cccccc` for numeric and\ndatetime axes, and `rgba(204,214,235,0.25)` for category axes, where\nthe crosshair by default highlights the whole category.",
              "samples": [
                {
                  "name": "Customized crosshairs",
                  "value": "highcharts/xaxis/crosshair-customized/",
                  "products": ["highcharts", "highstock", "highmaps"]
                }
              ],
              "type": { "names": ["Highcharts.ColorType"] },
              "defaultvalue": "#cccccc",
              "since": "4.1.0"
            },
            "meta": {
              "fullname": "xAxis.crosshair.color",
              "name": "color",
              "line": 236,
              "lineEnd": 248,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "dashStyle": {
            "doclet": {
              "description": "The dash style for the crosshair. See\n[plotOptions.series.dashStyle](#plotOptions.series.dashStyle)\nfor possible values.",
              "samples": [
                {
                  "name": "Dotted crosshair",
                  "value": "highcharts/xaxis/crosshair-dotted/",
                  "products": ["highcharts", "highmaps"]
                },
                {
                  "name": "Dashed X axis crosshair",
                  "value": "stock/xaxis/crosshair-dashed/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["Highcharts.DashStyleValue"] },
              "defaultvalue": "Solid",
              "since": "4.1.0"
            },
            "meta": {
              "fullname": "xAxis.crosshair.dashStyle",
              "name": "dashStyle",
              "line": 249,
              "lineEnd": 263,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "snap": {
            "doclet": {
              "description": "Whether the crosshair should snap to the point or follow the pointer\nindependent of points.",
              "samples": [
                {
                  "name": "True by default",
                  "value": "highcharts/xaxis/crosshair-snap-false/",
                  "products": ["highcharts", "highstock"]
                },
                {
                  "name": "Snap is false",
                  "value": "maps/demo/latlon-advanced/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "true",
              "since": "4.1.0"
            },
            "meta": {
              "fullname": "xAxis.crosshair.snap",
              "name": "snap",
              "line": 381,
              "lineEnd": 394,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "width": {
            "doclet": {
              "description": "The pixel width of the crosshair. Defaults to 1 for numeric or\ndatetime axes, and for one category width for category axes.",
              "samples": [
                {
                  "name": "Customized crosshairs",
                  "value": "highcharts/xaxis/crosshair-customized/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Customized crosshairs",
                  "value": "highcharts/xaxis/crosshair-customized/",
                  "products": ["highstock"]
                },
                {
                  "name": "Customized crosshairs",
                  "value": "highcharts/xaxis/crosshair-customized/",
                  "products": ["highmaps"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "1",
              "since": "4.1.0"
            },
            "meta": {
              "fullname": "xAxis.crosshair.width",
              "name": "width",
              "line": 395,
              "lineEnd": 410,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "zIndex": {
            "doclet": {
              "description": "The Z index of the crosshair. Higher Z indices allow drawing the\ncrosshair on top of the series or behind the grid lines.",
              "type": { "names": ["number"] },
              "defaultvalue": "2",
              "since": "4.1.0"
            },
            "meta": {
              "fullname": "xAxis.crosshair.zIndex",
              "name": "zIndex",
              "line": 411,
              "lineEnd": 419,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsXAxisCrosshairOptions",
        "extended": 1
      },
      "crossing": {
        "doclet": {
          "description": "The value on a perpendicular axis where this axis should cross. This\nis typically used on mathematical plots where the axes cross at 0.\nWhen `crossing` is set, space will not be reserved at the sides of\nthe chart for axis labels and title, so those may be clipped. In this\ncase it is better to place the axes without the `crossing` option.",
          "type": { "names": ["number"] },
          "samples": [
            {
              "name": "Function plot with axes crossing at 0",
              "value": "highcharts/xaxis/crossing"
            }
          ],
          "since": "11.0.1"
        },
        "meta": {
          "fullname": "xAxis.crossing",
          "name": "crossing",
          "line": 216,
          "lineEnd": 228,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "dateTimeLabelFormats": {
        "doclet": {
          "description": "For a datetime axis, the scale will automatically adjust to the\nappropriate unit. This member gives the default string\nrepresentations used for each unit. For intermediate values,\ndifferent units may be used, for example the `day` unit can be used\non midnight and `hour` unit be used for intermediate values on the\nsame axis.\n\nFor an overview of the string or object configuration, see\n[dateFormat](/class-reference/Highcharts.Time#dateFormat).\n\nDefaults to:\n```js\n{\n    millisecond: '%[HMSL]',\n    second: '%[HMS]',\n    minute: '%[HM]',\n    hour: '%[HM]',\n    day: '%[eb]',\n    week: '%[eb]',\n    month: '%[bY]',\n    year: '%Y'\n}\n```",
          "samples": [
            {
              "name": "Gantt chart with custom axis date format.",
              "value": "gantt/grid-axis/date-time-label-formats",
              "products": ["gantt"]
            }
          ],
          "declare": "Highcharts.AxisDateTimeLabelFormatsOptions",
          "products": ["highcharts", "highstock", "gantt"],
          "productdesc": [
            {
              "value": "For grid axes (like in Gantt charts),\nit is possible to declare as a list to provide different\nformats depending on available space.\n\nDefaults to:\n```js\n{\n    hour: { list: ['%H:%M', '%H'] },\n    day: { list: ['%A, %e. %B', '%a, %e. %b', '%E'] },\n    week: { list: ['Week %W', 'W%W'] },\n    month: { list: ['%B', '%b', '%o'] }\n}\n```",
              "products": ["gantt"]
            }
          ],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "xAxis.dateTimeLabelFormats",
          "name": "dateTimeLabelFormats",
          "line": 440,
          "lineEnd": 474,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
        },
        "children": {
          "day": {
            "doclet": {
              "declare": "Highcharts.AxisDateTimeLabelFormatsOptionsObject",
              "type": { "names": ["string", "*"] }
            },
            "meta": {
              "fullname": "xAxis.dateTimeLabelFormats.day",
              "name": "day",
              "line": 544,
              "lineEnd": 547,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
            },
            "children": {
              "list": {
                "doclet": {
                  "type": {
                    "names": [
                      "Array.<(string|Highcharts.DateTimeFormatOptions)>"
                    ]
                  },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.day.list",
                  "name": "list",
                  "line": 549,
                  "lineEnd": 553,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "main": {
                "doclet": {
                  "type": {
                    "names": ["string", "Highcharts.DateTimeFormatOptions"]
                  }
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.day.main",
                  "name": "main",
                  "line": 554,
                  "lineEnd": 557,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsXAxisDateTimeLabelFormatsDayOptions",
            "extended": 1
          },
          "hour": {
            "doclet": {
              "declare": "Highcharts.AxisDateTimeLabelFormatsOptionsObject",
              "type": { "names": ["string", "*"] }
            },
            "meta": {
              "fullname": "xAxis.dateTimeLabelFormats.hour",
              "name": "hour",
              "line": 527,
              "lineEnd": 530,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
            },
            "children": {
              "list": {
                "doclet": {
                  "type": {
                    "names": [
                      "Array.<(string|Highcharts.DateTimeFormatOptions)>"
                    ]
                  },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.hour.list",
                  "name": "list",
                  "line": 532,
                  "lineEnd": 536,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "main": {
                "doclet": {
                  "type": {
                    "names": ["string", "Highcharts.DateTimeFormatOptions"]
                  }
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.hour.main",
                  "name": "main",
                  "line": 537,
                  "lineEnd": 540,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "range": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.hour.range",
                  "name": "range",
                  "line": 542,
                  "lineEnd": 542,
                  "column": 16,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsXAxisDateTimeLabelFormatsHourOptions",
            "extended": 1
          },
          "millisecond": {
            "doclet": {
              "declare": "Highcharts.AxisDateTimeLabelFormatsOptionsObject",
              "type": { "names": ["string", "*"] }
            },
            "meta": {
              "fullname": "xAxis.dateTimeLabelFormats.millisecond",
              "name": "millisecond",
              "line": 476,
              "lineEnd": 479,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
            },
            "children": {
              "list": {
                "doclet": {
                  "type": {
                    "names": [
                      "Array.<(string|Highcharts.DateTimeFormatOptions)>"
                    ]
                  },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.millisecond.list",
                  "name": "list",
                  "line": 481,
                  "lineEnd": 485,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "main": {
                "doclet": {
                  "type": {
                    "names": ["string", "Highcharts.DateTimeFormatOptions"]
                  }
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.millisecond.main",
                  "name": "main",
                  "line": 486,
                  "lineEnd": 489,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "range": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.millisecond.range",
                  "name": "range",
                  "line": 491,
                  "lineEnd": 491,
                  "column": 16,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsXAxisDateTimeLabelFormatsMillisecondOptions",
            "extended": 1
          },
          "minute": {
            "doclet": {
              "declare": "Highcharts.AxisDateTimeLabelFormatsOptionsObject",
              "type": { "names": ["string", "*"] }
            },
            "meta": {
              "fullname": "xAxis.dateTimeLabelFormats.minute",
              "name": "minute",
              "line": 510,
              "lineEnd": 513,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
            },
            "children": {
              "list": {
                "doclet": {
                  "type": {
                    "names": [
                      "Array.<(string|Highcharts.DateTimeFormatOptions)>"
                    ]
                  },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.minute.list",
                  "name": "list",
                  "line": 515,
                  "lineEnd": 519,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "main": {
                "doclet": {
                  "type": {
                    "names": ["string", "Highcharts.DateTimeFormatOptions"]
                  }
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.minute.main",
                  "name": "main",
                  "line": 520,
                  "lineEnd": 523,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "range": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.minute.range",
                  "name": "range",
                  "line": 525,
                  "lineEnd": 525,
                  "column": 16,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsXAxisDateTimeLabelFormatsMinuteOptions",
            "extended": 1
          },
          "month": {
            "doclet": {
              "declare": "Highcharts.AxisDateTimeLabelFormatsOptionsObject",
              "type": { "names": ["string", "*"] }
            },
            "meta": {
              "fullname": "xAxis.dateTimeLabelFormats.month",
              "name": "month",
              "line": 576,
              "lineEnd": 579,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
            },
            "children": {
              "list": {
                "doclet": {
                  "type": {
                    "names": [
                      "Array.<(string|Highcharts.DateTimeFormatOptions)>"
                    ]
                  },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.month.list",
                  "name": "list",
                  "line": 581,
                  "lineEnd": 585,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "main": {
                "doclet": {
                  "type": {
                    "names": ["string", "Highcharts.DateTimeFormatOptions"]
                  }
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.month.main",
                  "name": "main",
                  "line": 586,
                  "lineEnd": 589,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsXAxisDateTimeLabelFormatsMonthOptions",
            "extended": 1
          },
          "second": {
            "doclet": {
              "declare": "Highcharts.AxisDateTimeLabelFormatsOptionsObject",
              "type": { "names": ["string", "*"] }
            },
            "meta": {
              "fullname": "xAxis.dateTimeLabelFormats.second",
              "name": "second",
              "line": 493,
              "lineEnd": 496,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
            },
            "children": {
              "list": {
                "doclet": {
                  "type": {
                    "names": [
                      "Array.<(string|Highcharts.DateTimeFormatOptions)>"
                    ]
                  },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.second.list",
                  "name": "list",
                  "line": 498,
                  "lineEnd": 502,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "main": {
                "doclet": {
                  "type": {
                    "names": ["string", "Highcharts.DateTimeFormatOptions"]
                  }
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.second.main",
                  "name": "main",
                  "line": 503,
                  "lineEnd": 506,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "range": {
                "doclet": {
                  "type": { "names": ["boolean"] },
                  "defaultvalue": false
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.second.range",
                  "name": "range",
                  "line": 508,
                  "lineEnd": 508,
                  "column": 16,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "default": false
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsXAxisDateTimeLabelFormatsSecondOptions",
            "extended": 1
          },
          "week": {
            "doclet": {
              "declare": "Highcharts.AxisDateTimeLabelFormatsOptionsObject",
              "type": { "names": ["string", "*"] }
            },
            "meta": {
              "fullname": "xAxis.dateTimeLabelFormats.week",
              "name": "week",
              "line": 560,
              "lineEnd": 563,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
            },
            "children": {
              "list": {
                "doclet": {
                  "type": {
                    "names": [
                      "Array.<(string|Highcharts.DateTimeFormatOptions)>"
                    ]
                  },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.week.list",
                  "name": "list",
                  "line": 565,
                  "lineEnd": 569,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "main": {
                "doclet": {
                  "type": {
                    "names": ["string", "Highcharts.DateTimeFormatOptions"]
                  }
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.week.main",
                  "name": "main",
                  "line": 570,
                  "lineEnd": 573,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsXAxisDateTimeLabelFormatsWeekOptions",
            "extended": 1
          },
          "year": {
            "doclet": {
              "declare": "Highcharts.AxisDateTimeLabelFormatsOptionsObject",
              "type": { "names": ["string", "*"] }
            },
            "meta": {
              "fullname": "xAxis.dateTimeLabelFormats.year",
              "name": "year",
              "line": 592,
              "lineEnd": 595,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
            },
            "children": {
              "list": {
                "doclet": {
                  "type": {
                    "names": [
                      "Array.<(string|Highcharts.DateTimeFormatOptions)>"
                    ]
                  },
                  "defaultvalue": "undefined"
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.year.list",
                  "name": "list",
                  "line": 597,
                  "lineEnd": 601,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "main": {
                "doclet": {
                  "type": {
                    "names": ["string", "Highcharts.DateTimeFormatOptions"]
                  }
                },
                "meta": {
                  "fullname": "xAxis.dateTimeLabelFormats.year.main",
                  "name": "main",
                  "line": 602,
                  "lineEnd": 605,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsXAxisDateTimeLabelFormatsYearOptions",
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsXAxisDateTimeLabelFormatsOptions",
        "extended": 1
      },
      "endOnTick": {
        "doclet": {
          "description": "Whether to force the axis to end on a tick. Use this option with\nthe `maxPadding` option to control the axis end.",
          "productdesc": [
            {
              "value": "In Highcharts Stock, `endOnTick` is always `false` when the navigator\nis enabled, to prevent jumpy scrolling. With disabled navigator\nenabling `endOnTick` may lead to extending the xAxis to show the last\ntick, therefore range selector buttons may not have an active state\nif the axis gets extended.",
              "products": ["highstock"]
            }
          ],
          "samples": [
            {
              "name": "True by default",
              "value": "highcharts/yaxis/endontick/",
              "products": ["highcharts"]
            },
            {
              "name": "False",
              "value": "highcharts/yaxis/endontick-false/",
              "products": ["highcharts"]
            },
            {
              "name": "True by default",
              "value": "stock/demo/basic-line/",
              "products": ["highstock"]
            },
            {
              "name": "False",
              "value": "stock/xaxis/endontick/",
              "products": ["highstock"]
            }
          ],
          "since": "1.2.0",
          "type": { "names": ["boolean"] },
          "defaultvalue": false
        },
        "meta": {
          "fullname": "xAxis.endOnTick",
          "name": "endOnTick",
          "line": 609,
          "lineEnd": 630,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": false
        },
        "children": {},
        "extended": 1
      },
      "events": {
        "doclet": {
          "description": "Event handlers for the axis.",
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "xAxis.events",
          "name": "events",
          "line": 632,
          "lineEnd": 637,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {
          "afterBreaks": {
            "doclet": {
              "description": "An event fired after the breaks have rendered.",
              "see": ["[breaks](#xAxis.breaks)"],
              "samples": [
                {
                  "name": "AfterBreak Event",
                  "value": "highcharts/axisbreak/break-event/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.AxisEventCallbackFunction"] },
              "since": "4.1.0",
              "products": ["highcharts", "gantt"]
            },
            "meta": {
              "fullname": "xAxis.events.afterBreaks",
              "name": "afterBreaks",
              "line": 638,
              "lineEnd": 650,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "afterSetExtremes": {
            "doclet": {
              "description": "As opposed to the `setExtremes` event, this event fires after the\nfinal min and max values are computed and corrected for `minRange`.\n\nFires when the minimum and maximum is set for the axis, either by\ncalling the `.setExtremes()` method or by selecting an area in the\nchart. One parameter, `event`, is passed to the function, containing\ncommon event information.\n\nThe new user set minimum and maximum values can be found by\n`event.min` and `event.max`. These reflect the axis minimum and\nmaximum in axis values. The actual data extremes are found in\n`event.dataMin` and `event.dataMax`.",
              "type": {
                "names": ["Highcharts.AxisSetExtremesEventCallbackFunction"]
              },
              "since": "2.3.0",
              "context": "Highcharts.Axis"
            },
            "meta": {
              "fullname": "xAxis.events.afterSetExtremes",
              "name": "afterSetExtremes",
              "line": 651,
              "lineEnd": 669,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "pointBreak": {
            "doclet": {
              "description": "An event fired when a break from this axis occurs on a point.",
              "see": ["[breaks](#xAxis.breaks)"],
              "samples": [
                {
                  "name": "Visualization of a Break",
                  "value": "highcharts/axisbreak/break-visualized/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": ["Highcharts.AxisPointBreakEventCallbackFunction"]
              },
              "since": "4.1.0",
              "products": ["highcharts", "gantt"],
              "context": "Highcharts.Axis"
            },
            "meta": {
              "fullname": "xAxis.events.pointBreak",
              "name": "pointBreak",
              "line": 670,
              "lineEnd": 683,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "pointBreakOut": {
            "doclet": {
              "description": "An event fired when a point is outside a break after zoom.",
              "type": {
                "names": ["Highcharts.AxisPointBreakEventCallbackFunction"]
              },
              "products": ["highcharts", "highstock", "gantt"],
              "context": "Highcharts.Axis"
            },
            "meta": {
              "fullname": "xAxis.events.pointBreakOut",
              "name": "pointBreakOut",
              "line": 692,
              "lineEnd": 699,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "pointInBreak": {
            "doclet": {
              "description": "An event fired when a point falls inside a break from this axis.",
              "type": {
                "names": ["Highcharts.AxisPointBreakEventCallbackFunction"]
              },
              "products": ["highcharts", "highstock", "gantt"],
              "context": "Highcharts.Axis"
            },
            "meta": {
              "fullname": "xAxis.events.pointInBreak",
              "name": "pointInBreak",
              "line": 684,
              "lineEnd": 691,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "setExtremes": {
            "doclet": {
              "description": "Fires when the minimum and maximum is set for the axis, either by\ncalling the `.setExtremes()` method or by selecting an area in the\nchart. One parameter, `event`, is passed to the function,\ncontaining common event information.\n\nThe new user set minimum and maximum values can be found by\n`event.min` and `event.max`. These reflect the axis minimum and\nmaximum in data values. When an axis is zoomed all the way out from\nthe \"Reset zoom\" button, `event.min` and `event.max` are null, and\nthe new extremes are set based on `this.dataMin` and `this.dataMax`.",
              "samples": [
                {
                  "name": "Log new extremes on x axis",
                  "value": "stock/xaxis/events-setextremes/",
                  "products": ["highstock"]
                }
              ],
              "type": {
                "names": ["Highcharts.AxisSetExtremesEventCallbackFunction"]
              },
              "since": "1.2.0",
              "context": "Highcharts.Axis"
            },
            "meta": {
              "fullname": "xAxis.events.setExtremes",
              "name": "setExtremes",
              "line": 700,
              "lineEnd": 719,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsXAxisEventsOptions",
        "extended": 1
      },
      "floor": {
        "doclet": {
          "description": "The lowest allowed value for automatically computed axis extremes.",
          "see": ["[ceiling](#yAxis.ceiling)"],
          "samples": [
            {
              "name": "Floor and ceiling",
              "value": "highcharts/yaxis/floor-ceiling/",
              "products": ["highcharts"]
            },
            {
              "name": "Prevent negative stock price on Y axis",
              "value": "stock/demo/lazy-loading/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "4.0.0",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "xAxis.floor",
          "name": "floor",
          "line": 720,
          "lineEnd": 734,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "gridLineColor": {
        "doclet": {
          "description": "Color of the grid lines extending the ticks across the plot area.\n\nIn styled mode, the stroke is given in the `.highcharts-grid-line`\nclass.",
          "productdesc": [
            {
              "value": "In Highmaps, the grid lines are hidden by default.",
              "products": ["highmaps"]
            }
          ],
          "samples": [
            {
              "name": "Green lines",
              "value": "highcharts/yaxis/gridlinecolor/",
              "products": ["highcharts"]
            },
            {
              "name": "Styled mode",
              "value": "highcharts/css/axis-grid/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Green lines",
              "value": "stock/xaxis/gridlinecolor/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.ColorType"] },
          "defaultvalue": "#e6e6e6"
        },
        "meta": {
          "fullname": "xAxis.gridLineColor",
          "name": "gridLineColor",
          "line": 2144,
          "lineEnd": 2162,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": "#e6e6e6"
        },
        "children": {},
        "extended": 1
      },
      "gridLineDashStyle": {
        "doclet": {
          "description": "The dash or dot style of the grid lines. For possible values, see\n[this demonstration](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-dashstyle-all/).",
          "samples": [
            {
              "name": "Long dashes",
              "value": "highcharts/yaxis/gridlinedashstyle/",
              "products": ["highcharts"]
            },
            {
              "name": "Long dashes",
              "value": "stock/xaxis/gridlinedashstyle/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.DashStyleValue"] },
          "since": "1.2.0",
          "defaultvalue": "Solid"
        },
        "meta": {
          "fullname": "xAxis.gridLineDashStyle",
          "name": "gridLineDashStyle",
          "line": 632,
          "lineEnd": 637,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": "Solid"
        },
        "children": {},
        "extended": 1
      },
      "gridLineInterpolation": {
        "doclet": {
          "description": "Polar charts only. Whether the grid lines should draw as a polygon\nwith straight lines between categories, or as circles. Can be either\n`circle` or `polygon`. Since v8.0.0 this option is also applicable\nfor X axis (inverted polar).",
          "samples": [
            {
              "name": "Polygon grid lines",
              "value": "highcharts/demo/polar-spider/",
              "products": ["highcharts"]
            },
            {
              "name": "Circle and polygon on inverted polar",
              "value": "highcharts/xaxis/gridlineinterpolation/",
              "products": ["highcharts"]
            },
            {
              "name": "Circle and polygon",
              "value": "highcharts/yaxis/gridlineinterpolation/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["\"circle\"", "\"polygon\""] },
          "products": ["highcharts"]
        },
        "meta": {
          "fullname": "xAxis.gridLineInterpolation",
          "name": "gridLineInterpolation",
          "line": 82,
          "lineEnd": 99,
          "filename": "code/es-modules/Core/Axis/RadialAxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "gridLineWidth": {
        "doclet": {
          "description": "The width of the grid lines extending the ticks across the plot area.\nDefaults to 1 on the Y axis and 0 on the X axis, except for 3d\ncharts.\n\nIn styled mode, the stroke width is given in the\n`.highcharts-grid-line` class.",
          "samples": [
            {
              "name": "2px lines",
              "value": "highcharts/yaxis/gridlinewidth/",
              "products": ["highcharts"]
            },
            {
              "name": "Styled mode",
              "value": "highcharts/css/axis-grid/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "2px lines",
              "value": "stock/xaxis/gridlinewidth/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] }
        },
        "meta": {
          "fullname": "xAxis.gridLineWidth",
          "name": "gridLineWidth",
          "line": 2164,
          "lineEnd": 2181,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "gridZIndex": {
        "doclet": {
          "description": "The Z index of the grid lines.",
          "samples": [
            {
              "name": "A Z index of 4 renders the grid above the graph",
              "value": "highcharts/xaxis/gridzindex/",
              "products": ["highcharts", "highstock"]
            }
          ],
          "products": ["highcharts", "highstock", "gantt"],
          "see": [
            "[axis.zIndex](#xAxis.zIndex)",
            "[axis.labels.zIndex](#xAxis.labels.zIndex)"
          ],
          "type": { "names": ["number"] },
          "defaultvalue": 1
        },
        "meta": {
          "fullname": "xAxis.gridZIndex",
          "name": "gridZIndex",
          "line": 748,
          "lineEnd": 758,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 1
        },
        "children": {},
        "extended": 1
      },
      "height": {
        "doclet": {
          "description": "The height as the vertical axis. If it's a number, it is\ninterpreted as pixels.\n\nSince Highcharts 2: If it's a percentage string, it is interpreted\nas percentages of the total plot height.",
          "samples": [
            {
              "name": "Different axis position properties",
              "value": "highcharts/xaxis/axis-position-properties",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number", "string"] },
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "xAxis.height",
          "name": "height",
          "line": 2183,
          "lineEnd": 2196,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "id": {
        "doclet": {
          "description": "An id for the axis. This can be used after render time to get\na pointer to the axis object through `chart.get()`.",
          "samples": [
            {
              "name": "Get the object",
              "value": "highcharts/xaxis/id/",
              "products": ["highcharts"]
            },
            {
              "name": "Get the object",
              "value": "stock/xaxis/id/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["string"] },
          "since": "1.2.0"
        },
        "meta": {
          "fullname": "xAxis.id",
          "name": "id",
          "line": 760,
          "lineEnd": 772,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "labels": {
        "doclet": {
          "description": "The axis labels show the number or category for each tick.\n\nSince v8.0.0: Labels are animated in categorized x-axis with\nupdating data if `tickInterval` and `step` is set to 1.",
          "productdesc": [
            {
              "value": "X and Y axis labels are by default disabled in Highmaps, but the\nfunctionality is inherited from Highcharts and used on `colorAxis`,\nand can be enabled on X and Y axes too.",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "xAxis.labels",
          "name": "labels",
          "line": 760,
          "lineEnd": 772,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
        },
        "children": {
          "align": {
            "doclet": {
              "description": "What part of the string the given position is anchored to.\nIf `left`, the left side of the string is at the axis position.\nCan be one of `\"left\"`, `\"center\"` or `\"right\"`. Defaults to\nan intelligent guess based on which side of the chart the axis\nis on and the rotation of the label.",
              "see": ["[reserveSpace](#xAxis.labels.reserveSpace)"],
              "samples": [
                {
                  "name": "Left",
                  "value": "highcharts/xaxis/labels-align-left/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Right",
                  "value": "highcharts/xaxis/labels-align-right/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Left-aligned labels on a vertical category axis",
                  "value": "highcharts/xaxis/labels-reservespace-true/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.AlignValue"] }
            },
            "meta": {
              "fullname": "xAxis.labels.align",
              "name": "align",
              "line": 785,
              "lineEnd": 803,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "allowOverlap": {
            "doclet": {
              "description": "Whether to allow the axis labels to overlap. When false,\noverlapping labels are hidden.",
              "samples": [
                {
                  "name": "X axis labels overlap enabled",
                  "value": "highcharts/xaxis/labels-allowoverlap-true/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": "false"
            },
            "meta": {
              "fullname": "xAxis.labels.allowOverlap",
              "name": "allowOverlap",
              "line": 804,
              "lineEnd": 814,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "autoRotation": {
            "doclet": {
              "description": "For horizontal axes, the allowed degrees of label rotation\nto prevent overlapping labels. If there is enough space,\nlabels are not rotated. As the chart gets narrower, it\nwill start rotating the labels -45 degrees, then remove\nevery second label and try again with rotations 0 and -45 etc.\nSet it to `undefined` to disable rotation, which will\ncause the labels to word-wrap if possible. Defaults to `[-45]``\non bottom and top axes, `undefined` on left and right axes.",
              "samples": [
                {
                  "name": "Default auto rotation of 0 or -45",
                  "value": "highcharts/xaxis/labels-autorotation-default/",
                  "products": ["highcharts", "highstock"]
                },
                {
                  "name": "Custom graded auto rotation",
                  "value": "highcharts/xaxis/labels-autorotation-0-90/",
                  "products": ["highcharts", "highstock"]
                }
              ],
              "type": { "names": ["Array.<number>"] },
              "defaultvalue": "undefined",
              "since": "4.1.0",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "xAxis.labels.autoRotation",
              "name": "autoRotation",
              "line": 815,
              "lineEnd": 835,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "autoRotationLimit": {
            "doclet": {
              "description": "When each category width is more than this many pixels, we don't\napply auto rotation. Instead, we lay out the axis label with word\nwrap. A lower limit makes sense when the label contains multiple\nshort words that don't extend the available horizontal space for\neach label.",
              "samples": [
                {
                  "name": "Lower limit",
                  "value": "highcharts/xaxis/labels-autorotationlimit/",
                  "products": ["highcharts"]
                }
              ],
              "since": "4.1.5",
              "products": ["highcharts", "gantt"],
              "type": { "names": ["number"] },
              "defaultvalue": 80
            },
            "meta": {
              "fullname": "xAxis.labels.autoRotationLimit",
              "name": "autoRotationLimit",
              "line": 785,
              "lineEnd": 803,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": 80
            },
            "children": {},
            "extended": 1
          },
          "distance": {
            "doclet": {
              "description": "The label's pixel distance from the perimeter of the plot area.\nOn cartesian charts, this is overridden if the `labels.y` setting\nis set.",
              "samples": [
                {
                  "name": "Polar chart, labels centered under the arc",
                  "value": "highcharts/yaxis/labels-distance/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "products": ["highcharts", "gantt"],
              "defaultvalue": 15
            },
            "meta": {
              "fullname": "xAxis.labels.distance",
              "name": "distance",
              "line": 850,
              "lineEnd": 860,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": 15
            },
            "children": {},
            "extended": 1
          },
          "enabled": {
            "doclet": {
              "description": "Enable or disable the axis labels.",
              "samples": [
                {
                  "name": "X axis labels disabled",
                  "value": "highcharts/xaxis/labels-enabled/",
                  "products": ["highcharts"]
                },
                {
                  "name": "X axis labels disabled",
                  "value": "stock/xaxis/labels-enabled/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["boolean"] },
              "defaultvalue": true
            },
            "meta": {
              "fullname": "xAxis.labels.enabled",
              "name": "enabled",
              "line": 862,
              "lineEnd": 870,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "format": {
            "doclet": {
              "description": "A format string for the axis label. The context is available as\nformat string variables. For example, you can use `{text}` to\ninsert the default formatted text. The recommended way of adding\nunits for the label is using `text`, for example `{text} km`.\n\nTo add custom numeric or datetime formatting, use `{value}` with\nformatting, for example `{value:.1f}` or `{value:%Y-%m-%d}`.\n\nSee\n[format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\nfor more examples of formatting.\n\nThe default value is not specified due to the dynamic\nnature of the default implementation.",
              "samples": [
                {
                  "name": "Add units to Y axis label",
                  "value": "highcharts/yaxis/labels-format/",
                  "products": ["highcharts", "highstock"]
                },
                {
                  "name": "Linked category names",
                  "value": "highcharts/xaxis/labels-format-linked/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Custom number format",
                  "value": "highcharts/xaxis/labels-format-custom/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["string"] },
              "since": "3.0.0"
            },
            "meta": {
              "fullname": "xAxis.labels.format",
              "name": "format",
              "line": 872,
              "lineEnd": 898,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "formatter": {
            "doclet": {
              "description": "Callback JavaScript function to format the label. The value\nis given by `this.value`. Additional properties for `this` are\n`axis`, `chart`, `isFirst`, `isLast` and `text` which holds the\nvalue of the default formatter.\n\nDefaults to a built in function returning a formatted string\ndepending on whether the axis is `category`, `datetime`,\n`numeric` or other.",
              "samples": [
                {
                  "name": "Linked category names",
                  "value": "highcharts/xaxis/labels-formatter-linked/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Modified numeric labels",
                  "value": "highcharts/xaxis/labels-formatter-extended/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Added units on Y axis",
                  "value": "stock/xaxis/labels-formatter/",
                  "products": ["highstock"]
                }
              ],
              "type": {
                "names": ["Highcharts.AxisLabelsFormatterCallbackFunction"]
              }
            },
            "meta": {
              "fullname": "xAxis.labels.formatter",
              "name": "formatter",
              "line": 899,
              "lineEnd": 918,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "maxStaggerLines": {
            "doclet": {
              "description": "Horizontal axis only. When `staggerLines` is not set,\n`maxStaggerLines` defines how many lines the axis is allowed to\nadd to automatically avoid overlapping X labels. Set to `1` to\ndisable overlap detection.",
              "deprecated": true,
              "type": { "names": ["number"] },
              "defaultvalue": "5",
              "since": "1.3.3"
            },
            "meta": {
              "fullname": "xAxis.labels.maxStaggerLines",
              "name": "maxStaggerLines",
              "line": 931,
              "lineEnd": 942,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "overflow": {
            "doclet": {
              "description": "How to handle overflowing labels on horizontal axis. If set to\n`\"allow\"`, it will not be aligned at all. By default it\n`\"justify\"` labels inside the chart area. If there is room to\nmove it, it will be aligned to the edge, else it will be removed.",
              "since": "2.2.5",
              "values": "[\"allow\", \"justify\"]",
              "type": { "names": ["string"] },
              "defaultvalue": "justify"
            },
            "meta": {
              "fullname": "xAxis.labels.overflow",
              "name": "overflow",
              "line": 931,
              "lineEnd": 942,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": "justify"
            },
            "children": {},
            "extended": 1
          },
          "padding": {
            "doclet": {
              "description": "The pixel padding for axis labels, to ensure white space between\nthem. Defaults to 4 for horizontal axes, 1 for vertical.",
              "type": { "names": ["number"] },
              "defaultvalue": "undefined",
              "products": ["highcharts", "gantt"]
            },
            "meta": {
              "fullname": "xAxis.labels.padding",
              "name": "padding",
              "line": 953,
              "lineEnd": 961,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "position3d": {
            "doclet": {
              "description": "Defines how the labels are be repositioned according to the 3D\nchart orientation.\n\n- `'offset'`: Maintain a fixed horizontal/vertical distance from\n  the tick marks, despite the chart orientation. This is the\n  backwards compatible behavior, and causes skewing of X and Z\n  axes.\n\n- `'chart'`: Preserve 3D position relative to the chart. This\n  looks nice, but hard to read if the text isn't forward-facing.\n\n- `'flap'`: Rotated text along the axis to compensate for the\n  chart orientation. This tries to maintain text as legible as\n  possible on all orientations.\n\n- `'ortho'`: Rotated text along the axis direction so that the\n  labels are orthogonal to the axis. This is very similar to\n  `'flap'`, but prevents skewing the labels (X and Y scaling are\n  still present).",
              "samples": [
                {
                  "name": "Skewed labels",
                  "value": "highcharts/3d/skewed-labels/"
                }
              ],
              "since": "5.0.15",
              "values": "['offset', 'chart', 'flap', 'ortho']",
              "products": ["highcharts"],
              "requires": ["module:highcharts-3d"],
              "type": { "names": ["string"] },
              "defaultvalue": "offset"
            },
            "meta": {
              "fullname": "xAxis.labels.position3d",
              "name": "position3d",
              "line": 23,
              "lineEnd": 51,
              "column": 8,
              "filename": "code/es-modules/Core/Axis/Axis3DDefaults.js",
              "default": "offset"
            },
            "children": {},
            "extended": 1
          },
          "reserveSpace": {
            "doclet": {
              "description": "Whether to reserve space for the labels. By default, space is\nreserved for the labels in these cases:\n\n* On all horizontal axes.\n* On vertical axes if `label.align` is `right` on a left-side\naxis or `left` on a right-side axis.\n* On vertical axes if `label.align` is `center`.\n\nThis can be turned off when for example the labels are rendered\ninside the plot area instead of outside.",
              "see": ["[labels.align](#xAxis.labels.align)"],
              "samples": [
                {
                  "name": "No reserved space, labels inside plot",
                  "value": "highcharts/xaxis/labels-reservespace/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Left-aligned labels on a vertical category axis",
                  "value": "highcharts/xaxis/labels-reservespace-true/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["boolean"] },
              "since": "4.1.10",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "xAxis.labels.reserveSpace",
              "name": "reserveSpace",
              "line": 962,
              "lineEnd": 985,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "rotation": {
            "doclet": {
              "description": "Rotation of the labels in degrees. When `undefined`, the\n`autoRotation` option takes precedence.",
              "samples": [
                {
                  "name": "X axis labels rotated 90°",
                  "value": "highcharts/xaxis/labels-rotation/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "0"
            },
            "meta": {
              "fullname": "xAxis.labels.rotation",
              "name": "rotation",
              "line": 987,
              "lineEnd": 997,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "skew3d": {
            "doclet": {
              "description": "If enabled, the axis labels will skewed to follow the\nperspective.\n\nThis will fix overlapping labels and titles, but texts become\nless legible due to the distortion.\n\nThe final appearance depends heavily on `labels.position3d`.",
              "samples": [
                {
                  "name": "Skewed labels",
                  "value": "highcharts/3d/skewed-labels/"
                }
              ],
              "since": "5.0.15",
              "products": ["highcharts"],
              "requires": ["module:highcharts-3d"],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "xAxis.labels.skew3d",
              "name": "skew3d",
              "line": 53,
              "lineEnd": 68,
              "column": 8,
              "filename": "code/es-modules/Core/Axis/Axis3DDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "staggerLines": {
            "doclet": {
              "description": "Horizontal axes only. The number of lines to spread the labels\nover to make room or tighter labels. 0 disables staggering.",
              "samples": [
                {
                  "name": "Show labels over two lines",
                  "value": "highcharts/xaxis/labels-staggerlines/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Show labels over two lines",
                  "value": "stock/xaxis/labels-staggerlines/",
                  "products": ["highstock"]
                }
              ],
              "since": "2.1.0",
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "xAxis.labels.staggerLines",
              "name": "staggerLines",
              "line": 999,
              "lineEnd": 1009,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "step": {
            "doclet": {
              "description": "To show only every _n_'th label on the axis, set the step to _n_.\nSetting the step to 2 shows every other label.\n\nBy default, when 0, the step is calculated automatically to avoid\noverlap. To prevent this, set it to 1\\. This usually only\nhappens on a category axis, and is often a sign that you have\nchosen the wrong axis type.\n\nRead more at\n[Axis docs](https://www.highcharts.com/docs/chart-concepts/axes)\n=> What axis should I use?",
              "samples": [
                {
                  "name": "Showing only every other axis label on a categorized x-axis",
                  "value": "highcharts/xaxis/labels-step/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Auto steps on a category axis",
                  "value": "highcharts/xaxis/labels-step-auto/",
                  "products": ["highcharts"]
                }
              ],
              "since": "2.1.0",
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "xAxis.labels.step",
              "name": "step",
              "line": 1011,
              "lineEnd": 1031,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "style": {
            "doclet": {
              "description": "CSS styles for the label. Use `lineClamp` to control wrapping of\ncategory labels. Use `textOverflow: 'none'` to prevent ellipsis\n(dots).\n\nIn styled mode, the labels are styled with the\n`.highcharts-axis-labels` class.",
              "samples": [
                {
                  "name": "Red X axis labels",
                  "value": "highcharts/xaxis/labels-style/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.CSSObject"] }
            },
            "meta": {
              "fullname": "xAxis.labels.style",
              "name": "style",
              "line": 1062,
              "lineEnd": 1074,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
            },
            "children": {
              "color": {
                "doclet": {
                  "internal": true,
                  "type": { "names": ["string"] },
                  "defaultvalue": "#333333"
                },
                "meta": {
                  "fullname": "xAxis.labels.style.color",
                  "name": "color",
                  "line": 1076,
                  "lineEnd": 1076,
                  "column": 16,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "default": "#333333"
                },
                "children": {},
                "extended": 1
              },
              "cursor": {
                "doclet": {
                  "internal": true,
                  "type": { "names": ["string"] },
                  "defaultvalue": "default"
                },
                "meta": {
                  "fullname": "xAxis.labels.style.cursor",
                  "name": "cursor",
                  "line": 1078,
                  "lineEnd": 1078,
                  "column": 16,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "default": "default"
                },
                "children": {},
                "extended": 1
              },
              "fontSize": {
                "doclet": {
                  "type": { "names": ["number", "string"] },
                  "defaultvalue": "0.8em"
                },
                "meta": {
                  "fullname": "xAxis.labels.style.fontSize",
                  "name": "fontSize",
                  "line": 1080,
                  "lineEnd": 1082,
                  "column": 16,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "default": "0.8em"
                },
                "children": {},
                "extended": 1
              },
              "textOverflow": {
                "doclet": {
                  "internal": true,
                  "type": { "names": ["string"] },
                  "defaultvalue": "ellipsis"
                },
                "meta": {
                  "fullname": "xAxis.labels.style.textOverflow",
                  "name": "textOverflow",
                  "line": 1084,
                  "lineEnd": 1084,
                  "column": 16,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "default": "ellipsis"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsXAxisLabelsStyleOptions",
            "extended": 1
          },
          "useHTML": {
            "doclet": {
              "description": "Whether to [use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\nto render the labels.",
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "xAxis.labels.useHTML",
              "name": "useHTML",
              "line": 1033,
              "lineEnd": 1036,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "x": {
            "doclet": {
              "description": "The x position offset of all labels relative to the tick\npositions on the axis. Overrides the `labels.distance` option.",
              "type": { "names": ["number"] }
            },
            "meta": {
              "fullname": "xAxis.labels.x",
              "name": "x",
              "line": 1038,
              "lineEnd": 1044,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "y": {
            "doclet": {
              "description": "The y position offset of all labels relative to the tick\npositions on the axis. Overrides the `labels.distance` option.",
              "samples": [
                {
                  "name": "X axis labels placed on grid lines",
                  "value": "highcharts/xaxis/labels-x/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] }
            },
            "meta": {
              "fullname": "xAxis.labels.y",
              "name": "y",
              "line": 1045,
              "lineEnd": 1054,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "zIndex": {
            "doclet": {
              "description": "The Z index for the axis labels.",
              "see": [
                "[axis.zIndex](#xAxis.zIndex)",
                "[axis.gridZIndex](#xAxis.gridZIndex)"
              ],
              "type": { "names": ["number"] },
              "defaultvalue": 7
            },
            "meta": {
              "fullname": "xAxis.labels.zIndex",
              "name": "zIndex",
              "line": 1038,
              "lineEnd": 1044,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": 7
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsXAxisLabelsOptions",
        "extended": 1
      },
      "left": {
        "doclet": {
          "description": "The left position as the horizontal axis. If it's a number, it is\ninterpreted as pixel position relative to the chart.\n\nSince Highcharts v5.0.13: If it's a percentage string, it is\ninterpreted as percentages of the plot width, offset from plot area\nleft.",
          "samples": [
            {
              "name": "Different axis position properties",
              "value": "highcharts/xaxis/axis-position-properties",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number", "string"] },
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "xAxis.left",
          "name": "left",
          "line": 1088,
          "lineEnd": 1102,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "lineColor": {
        "doclet": {
          "description": "The color of the line marking the axis itself.\n\nIn styled mode, the line stroke is given in the\n`.highcharts-axis-line` or `.highcharts-xaxis-line` class.",
          "samples": [
            {
              "name": "A red line on Y axis",
              "value": "highcharts/yaxis/linecolor/",
              "products": ["highcharts"]
            },
            {
              "name": "Axes in styled mode",
              "value": "highcharts/css/axis/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "A red line on X axis",
              "value": "stock/xaxis/linecolor/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.ColorType"] },
          "defaultvalue": "#333333"
        },
        "meta": {
          "fullname": "xAxis.lineColor",
          "name": "lineColor",
          "line": 2111,
          "lineEnd": 2125,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": "#333333"
        },
        "children": {},
        "extended": 1
      },
      "lineWidth": {
        "doclet": {
          "description": "The width of the line marking the axis itself.\n\nIn styled mode, the stroke width is given in the\n`.highcharts-axis-line` or `.highcharts-xaxis-line` class.",
          "samples": [
            {
              "name": "A 1px line on Y axis",
              "value": "highcharts/yaxis/linecolor/",
              "products": ["highcharts"]
            },
            {
              "name": "Axes in styled mode",
              "value": "highcharts/css/axis/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "A 2px line on X axis",
              "value": "stock/xaxis/linewidth/",
              "products": ["highstock"]
            }
          ],
          "defaultByProduct": {
            "highcharts": 1,
            "highstock": 1,
            "highmaps": 0
          },
          "type": { "names": ["number"] },
          "defaultvalue": 1
        },
        "meta": {
          "fullname": "xAxis.lineWidth",
          "name": "lineWidth",
          "line": 2127,
          "lineEnd": 2142,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 1
        },
        "children": {},
        "extended": 1
      },
      "linkedTo": {
        "doclet": {
          "description": "Index of another axis that this axis is linked to. When an axis is\nlinked to a master axis, it will take the same extremes as\nthe master, but as assigned by min or max or by setExtremes.\nIt can be used to show additional info, or to ease reading the\nchart by duplicating the scales.",
          "samples": [
            {
              "name": "Different string formats of the same date",
              "value": "highcharts/xaxis/linkedto/",
              "products": ["highcharts"]
            },
            {
              "name": "Y values on both sides",
              "value": "highcharts/yaxis/linkedto/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "2.0.2",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "xAxis.linkedTo",
          "name": "linkedTo",
          "line": 1117,
          "lineEnd": 1133,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "margin": {
        "doclet": {
          "description": "If there are multiple axes on the same side of the chart, the pixel\nmargin between the axes. Defaults to 0 on vertical axes, 15 on\nhorizontal axes.",
          "type": { "names": ["number"] },
          "since": "7.0.3"
        },
        "meta": {
          "fullname": "xAxis.margin",
          "name": "margin",
          "line": 1989,
          "lineEnd": 1997,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "max": {
        "doclet": {
          "description": "The maximum value of the axis. If `undefined`, the max value is\nautomatically calculated.\n\nIf a datetime string is passed, it is parsed into epoch time\naccording to the time zone given in [time.timezone](#time.timezone).\n\nIf the [endOnTick](#yAxis.endOnTick) option is true, the `max` value\nmight be rounded up.\n\nIf a [tickAmount](#yAxis.tickAmount) is set, the axis may be extended\nbeyond the set max in order to reach the given number of ticks. The\nsame may happen in a chart with multiple axes, determined by [chart.\nalignTicks](#chart), where a `tickAmount` is applied internally.",
          "samples": [
            {
              "name": "Y axis max of 200",
              "value": "highcharts/yaxis/max-200/",
              "products": ["highcharts"]
            },
            {
              "name": "Y axis max on logarithmic axis",
              "value": "highcharts/yaxis/max-logarithmic/",
              "products": ["highcharts"]
            },
            {
              "name": "Fixed min and max on X axis",
              "value": "stock/xaxis/min-max/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number", "string", "null"] }
        },
        "meta": {
          "fullname": "xAxis.max",
          "name": "max",
          "line": 1134,
          "lineEnd": 1158,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "maxPadding": {
        "doclet": {
          "description": "Padding of the max value relative to the length of the axis. A\npadding of 0.05 will make a 100px axis 5px longer. This is useful\nwhen you don't want the highest data value to appear on the edge\nof the plot area. When the axis' `max` option is set or a max extreme\nis set using `axis.setExtremes()`, the maxPadding will be ignored.",
          "productdesc": [
            {
              "value": "For an [ordinal](#xAxis.ordinal) axis, `minPadding` and `maxPadding`\nare ignored. Use [overscroll](#xAxis.overscroll) instead.",
              "products": ["highstock"]
            }
          ],
          "samples": [
            {
              "name": "Max padding of 0.25 on y axis",
              "value": "highcharts/yaxis/maxpadding/",
              "products": ["highcharts"]
            },
            {
              "name": "Greater min- and maxPadding",
              "value": "stock/xaxis/minpadding-maxpadding/",
              "products": ["highstock"]
            },
            {
              "name": "Add some padding",
              "value": "maps/chart/plotbackgroundcolor-gradient/",
              "products": ["highmaps"]
            }
          ],
          "defaultByProduct": {
            "highcharts": 0.01,
            "highstock": 0,
            "highmaps": 0
          },
          "since": "1.2.0",
          "type": { "names": ["number"] },
          "defaultvalue": 0.01
        },
        "meta": {
          "fullname": "xAxis.maxPadding",
          "name": "maxPadding",
          "line": 1088,
          "lineEnd": 1102,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 0.01
        },
        "children": {},
        "extended": 1
      },
      "maxZoom": {
        "doclet": {
          "description": "Deprecated. Use `minRange` instead.",
          "deprecated": true,
          "type": { "names": ["number"] },
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "xAxis.maxZoom",
          "name": "maxZoom",
          "line": 1182,
          "lineEnd": 1189,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "min": {
        "doclet": {
          "description": "The minimum value of the axis. If `undefined`, the min value is\nautomatically calculated.\n\nIf a datetime string is passed, it is parsed into epoch time\naccording to the time zone given in [time.timezone](#time.timezone).\n\nIf the [startOnTick](#yAxis.startOnTick) option is true (default),\nthe `min` value might be rounded down.\n\nThe automatically calculated minimum value is also affected by\n[floor](#yAxis.floor), [softMin](#yAxis.softMin),\n[minPadding](#yAxis.minPadding), [minRange](#yAxis.minRange)\nas well as [series.threshold](#plotOptions.series.threshold)\nand [series.softThreshold](#plotOptions.series.softThreshold).",
          "samples": [
            {
              "name": "-50 with startOnTick to false",
              "value": "highcharts/yaxis/min-startontick-false/",
              "products": ["highcharts"]
            },
            {
              "name": "-50 with startOnTick true by default",
              "value": "highcharts/yaxis/min-startontick-true/",
              "products": ["highcharts"]
            },
            {
              "name": "Set min and max on X axis",
              "value": "stock/xaxis/min-max/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number", "string", "null"] }
        },
        "meta": {
          "fullname": "xAxis.min",
          "name": "min",
          "line": 1190,
          "lineEnd": 1215,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "minPadding": {
        "doclet": {
          "description": "Padding of the min value relative to the length of the axis. A\npadding of 0.05 will make a 100px axis 5px longer. This is useful\nwhen you don't want the lowest data value to appear on the edge\nof the plot area. When the axis' `min` option is set or a min extreme\nis set using `axis.setExtremes()`, the minPadding will be ignored.",
          "productdesc": [
            {
              "value": "For an [ordinal](#xAxis.ordinal) axis, `minPadding` and `maxPadding`\nare ignored. Use [overscroll](#xAxis.overscroll) instead.",
              "products": ["highstock"]
            }
          ],
          "samples": [
            {
              "name": "Min padding of 0.2",
              "value": "highcharts/yaxis/minpadding/",
              "products": ["highcharts"]
            },
            {
              "name": "Greater min- and maxPadding",
              "value": "stock/xaxis/minpadding-maxpadding/",
              "products": ["highstock"]
            },
            {
              "name": "Add some padding",
              "value": "maps/chart/plotbackgroundcolor-gradient/",
              "products": ["highmaps"]
            }
          ],
          "defaultByProduct": {
            "highcharts": 0.01,
            "highstock": 0,
            "highmaps": 0
          },
          "since": "1.2.0",
          "products": ["highcharts", "highstock", "gantt"],
          "type": { "names": ["number"] },
          "defaultvalue": 0.01
        },
        "meta": {
          "fullname": "xAxis.minPadding",
          "name": "minPadding",
          "line": 1314,
          "lineEnd": 1325,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 0.01
        },
        "children": {},
        "extended": 1
      },
      "minRange": {
        "doclet": {
          "description": "The minimum range to display on this axis. The entire axis will not\nbe allowed to span over a smaller interval than this. For example,\nfor a datetime axis the main unit is milliseconds. If minRange is\nset to 3600000, you can't zoom in more than to one hour.\n\nThe default minRange for the x axis is five times the smallest\ninterval between any of the data points.\n\nOn a logarithmic axis, the unit for the minimum range is the power.\nSo a minRange of 1 means that the axis can be zoomed to 10-100,\n100-1000, 1000-10000 etc.\n\n**Note**: The `minPadding`, `maxPadding`, `startOnTick` and\n`endOnTick` settings also affect how the extremes of the axis\nare computed.",
          "samples": [
            {
              "name": "Minimum range of 5",
              "value": "highcharts/xaxis/minrange/",
              "products": ["highcharts"]
            },
            {
              "name": "Max zoom of 6 months overrides user selections",
              "value": "stock/xaxis/minrange/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] }
        },
        "meta": {
          "fullname": "xAxis.minRange",
          "name": "minRange",
          "line": 1350,
          "lineEnd": 1374,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "minTickInterval": {
        "doclet": {
          "description": "The minimum tick interval allowed in axis values. For example on\nzooming in on an axis with daily data, this can be used to prevent\nthe axis from showing hours. Defaults to the closest distance between\ntwo points on the axis.",
          "type": { "names": ["number"] },
          "since": "2.3.0"
        },
        "meta": {
          "fullname": "xAxis.minTickInterval",
          "name": "minTickInterval",
          "line": 1375,
          "lineEnd": 1384,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "minorGridLineColor": {
        "doclet": {
          "description": "Color of the minor, secondary grid lines.\n\nIn styled mode, the stroke width is given in the\n`.highcharts-minor-grid-line` class.",
          "samples": [
            {
              "name": "Bright grey lines from Y axis",
              "value": "highcharts/yaxis/minorgridlinecolor/",
              "products": ["highcharts"]
            },
            {
              "name": "Styled mode",
              "value": "highcharts/css/axis-grid/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Bright grey lines from Y axis",
              "value": "stock/xaxis/minorgridlinecolor/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.ColorType"] },
          "defaultvalue": "#f2f2f2"
        },
        "meta": {
          "fullname": "xAxis.minorGridLineColor",
          "name": "minorGridLineColor",
          "line": 2068,
          "lineEnd": 2083,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": "#f2f2f2"
        },
        "children": {},
        "extended": 1
      },
      "minorGridLineDashStyle": {
        "doclet": {
          "description": "The dash or dot style of the minor grid lines. For possible values,\nsee [this demonstration](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-dashstyle-all/).",
          "samples": [
            {
              "name": "Long dashes on minor grid lines",
              "value": "highcharts/yaxis/minorgridlinedashstyle/",
              "products": ["highcharts"]
            },
            {
              "name": "Long dashes on minor grid lines",
              "value": "stock/xaxis/minorgridlinedashstyle/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.DashStyleValue"] },
          "since": "1.2.0",
          "defaultvalue": "Solid"
        },
        "meta": {
          "fullname": "xAxis.minorGridLineDashStyle",
          "name": "minorGridLineDashStyle",
          "line": 1182,
          "lineEnd": 1189,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": "Solid"
        },
        "children": {},
        "extended": 1
      },
      "minorGridLineWidth": {
        "doclet": {
          "description": "Width of the minor, secondary grid lines.\n\nIn styled mode, the stroke width is given in the\n`.highcharts-grid-line` class.",
          "samples": [
            {
              "name": "2px lines from Y axis",
              "value": "highcharts/yaxis/minorgridlinewidth/",
              "products": ["highcharts"]
            },
            {
              "name": "Styled mode",
              "value": "highcharts/css/axis-grid/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "2px lines from Y axis",
              "value": "stock/xaxis/minorgridlinewidth/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": 1
        },
        "meta": {
          "fullname": "xAxis.minorGridLineWidth",
          "name": "minorGridLineWidth",
          "line": 2085,
          "lineEnd": 2097,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 1
        },
        "children": {},
        "extended": 1
      },
      "minorTickColor": {
        "doclet": {
          "description": "Color for the minor tick marks.",
          "samples": [
            {
              "name": "Black tick marks on Y axis",
              "value": "highcharts/yaxis/minortickcolor/",
              "products": ["highcharts"]
            },
            {
              "name": "Black tick marks on Y axis",
              "value": "stock/xaxis/minorticks/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.ColorType"] },
          "defaultvalue": "#999999"
        },
        "meta": {
          "fullname": "xAxis.minorTickColor",
          "name": "minorTickColor",
          "line": 2099,
          "lineEnd": 2109,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": "#999999"
        },
        "children": {},
        "extended": 1
      },
      "minorTickInterval": {
        "doclet": {
          "description": "Specific tick interval in axis units for the minor ticks. On a linear\naxis, if `\"auto\"`, the minor tick interval is calculated as a fifth\nof the tickInterval. If `undefined`, minor ticks are not shown.\n\nOn logarithmic axes, the unit is the power of the value. For example,\nsetting the minorTickInterval to 1 puts one tick on each of 0.1, 1,\n10, 100 etc. Setting the minorTickInterval to 0.1 produces 9 ticks\nbetween 1 and 10, 10 and 100 etc.\n\nIf user settings dictate minor ticks to become too dense, they don't\nmake sense, and will be ignored to prevent performance problems.",
          "samples": [
            {
              "name": "Undefined by default",
              "value": "highcharts/yaxis/minortickinterval-null/",
              "products": ["highcharts"]
            },
            {
              "name": "5 units",
              "value": "highcharts/yaxis/minortickinterval-5/",
              "products": ["highcharts"]
            },
            {
              "name": "\"auto\"",
              "value": "highcharts/yaxis/minortickinterval-log-auto/",
              "products": ["highcharts"]
            },
            {
              "name": "0.1",
              "value": "highcharts/yaxis/minortickinterval-log/",
              "products": ["highcharts"]
            },
            {
              "name": "Null by default",
              "value": "stock/demo/basic-line/",
              "products": ["highstock"]
            },
            {
              "name": "\"auto\"",
              "value": "stock/xaxis/minortickinterval-auto/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number", "'auto'"] }
        },
        "meta": {
          "fullname": "xAxis.minorTickInterval",
          "name": "minorTickInterval",
          "line": 1229,
          "lineEnd": 1253,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "minorTickLength": {
        "doclet": {
          "description": "The pixel length of the minor tick marks.",
          "samples": [
            {
              "name": "10px on Y axis",
              "value": "highcharts/yaxis/minorticklength/",
              "products": ["highcharts"]
            },
            {
              "name": "10px on Y axis",
              "value": "stock/xaxis/minorticks/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": 2
        },
        "meta": {
          "fullname": "xAxis.minorTickLength",
          "name": "minorTickLength",
          "line": 1229,
          "lineEnd": 1253,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 2
        },
        "children": {},
        "extended": 1
      },
      "minorTickPosition": {
        "doclet": {
          "description": "The position of the minor tick marks relative to the axis line.\n Can be one of `inside` and `outside`.",
          "samples": [
            {
              "name": "Outside by default",
              "value": "highcharts/yaxis/minortickposition-outside/",
              "products": ["highcharts"]
            },
            {
              "name": "Inside",
              "value": "highcharts/yaxis/minortickposition-inside/",
              "products": ["highcharts"]
            },
            {
              "name": "Inside",
              "value": "stock/xaxis/minorticks/",
              "products": ["highstock"]
            }
          ],
          "values": "[\"inside\", \"outside\"]",
          "type": { "names": ["string"] },
          "defaultvalue": "outside"
        },
        "meta": {
          "fullname": "xAxis.minorTickPosition",
          "name": "minorTickPosition",
          "line": 1263,
          "lineEnd": 1275,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": "outside"
        },
        "children": {},
        "extended": 1
      },
      "minorTickWidth": {
        "doclet": {
          "description": "The pixel width of the minor tick mark.",
          "samples": [
            {
              "name": "3px width",
              "value": "highcharts/yaxis/minortickwidth/",
              "products": ["highcharts"]
            },
            {
              "name": "1px width",
              "value": "stock/xaxis/minorticks/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "0"
        },
        "meta": {
          "fullname": "xAxis.minorTickWidth",
          "name": "minorTickWidth",
          "line": 1314,
          "lineEnd": 1325,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "minorTicks": {
        "doclet": {
          "description": "Enable or disable minor ticks. The interval between the minor ticks\ncan be controlled either by the\n[minorTicksPerMajor](#xAxis.minorTicksPerMajor) setting, or as an\nabsolute [minorTickInterval](#xAxis.minorTickInterval) value.\n\nOn a logarithmic axis, minor ticks are laid out based on a best\nguess, attempting to enter an approximate number of minor ticks\nbetween each major tick based on\n[minorTicksPerMajor](#xAxis.minorTicksPerMajor).\n\nPrior to v6.0.0, ticks were enabled in auto layout by setting\n`minorTickInterval` to `\"auto\"`.",
          "productdesc": [
            {
              "value": "On axes using\n[categories](#xAxis.categories), minor ticks are not supported.",
              "products": ["highcharts"]
            }
          ],
          "samples": [
            {
              "name": "Enabled on linear Y axis",
              "value": "highcharts/yaxis/minorticks-true/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "false",
          "since": "6.0.0"
        },
        "meta": {
          "fullname": "xAxis.minorTicks",
          "name": "minorTicks",
          "line": 1277,
          "lineEnd": 1301,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "minorTicksPerMajor": {
        "doclet": {
          "description": "The number of minor ticks per major tick. Works for `linear`,\n`logarithmic` and `datetime` axes.",
          "samples": [
            {
              "name": "2 minor ticks per major tick on Y axis",
              "value": "highcharts/yaxis/minortickspermajor/",
              "products": ["highcharts"]
            }
          ],
          "since": "11.0.0",
          "type": { "names": ["number"] },
          "defaultvalue": 5
        },
        "meta": {
          "fullname": "xAxis.minorTicksPerMajor",
          "name": "minorTicksPerMajor",
          "line": 1277,
          "lineEnd": 1301,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 5
        },
        "children": {},
        "extended": 1
      },
      "offset": {
        "doclet": {
          "description": "The distance in pixels from the plot area to the axis line.\nA positive offset moves the axis with it's line, labels and ticks\naway from the plot area. This is typically used when two or more\naxes are displayed on the same side of the plot. With multiple\naxes the offset is dynamically adjusted to avoid collision, this\ncan be overridden by setting offset explicitly.",
          "samples": [
            {
              "name": "Y axis offset of 70",
              "value": "highcharts/yaxis/offset/",
              "products": ["highcharts"]
            },
            {
              "name": "Axes positioned in the center of the plot",
              "value": "highcharts/yaxis/offset-centered/",
              "products": ["highcharts"]
            },
            {
              "name": "Y axis offset by 70 px",
              "value": "stock/xaxis/offset/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": null
        },
        "meta": {
          "fullname": "xAxis.offset",
          "name": "offset",
          "line": 1350,
          "lineEnd": 1374,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": "undefined"
        },
        "children": {},
        "extended": 1
      },
      "opposite": {
        "doclet": {
          "description": "Whether to display the axis on the opposite side of the normal. The\nnormal is on the left side for vertical axes and bottom for\nhorizontal, so the opposite sides will be right and top respectively.\nThis is typically used with dual or multiple axes.",
          "samples": [
            {
              "name": "Secondary Y axis opposite",
              "value": "highcharts/yaxis/opposite/",
              "products": ["highcharts"]
            },
            {
              "name": "Y axis on left side",
              "value": "stock/xaxis/opposite/",
              "products": ["highstock"]
            }
          ],
          "defaultByProduct": {
            "highcharts": "false",
            "highstock": "false",
            "highmaps": "false",
            "gantt": "true"
          },
          "type": { "names": ["Boolean"] }
        },
        "meta": {
          "fullname": "xAxis.opposite",
          "name": "opposite",
          "line": 1403,
          "lineEnd": 1418,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "pane": {
        "doclet": {
          "description": "Refers to the index in the [panes](#panes) array. Used for circular\ngauges and polar charts. When the option is not set then first pane\nwill be used.",
          "samples": [
            {
              "name": "Two gauges with different center",
              "value": "highcharts/demo/gauge-vu-meter"
            }
          ],
          "type": { "names": ["number"] },
          "products": ["highcharts"]
        },
        "meta": {
          "fullname": "xAxis.pane",
          "name": "pane",
          "line": 1474,
          "lineEnd": 1485,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "panningEnabled": {
        "doclet": {
          "description": "Whether to pan axis. If `chart.panning` is enabled, the option\nallows to disable panning on an individual axis.",
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "xAxis.panningEnabled",
          "name": "panningEnabled",
          "line": 75,
          "lineEnd": 86,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "plotBands": {
        "doclet": {
          "description": "An array of colored bands stretching across the plot area marking an\ninterval on the axis.\n\nIn styled mode, the plot bands are styled by the `.highcharts-plot-band`\nclass in addition to the `className` option.",
          "productdesc": [
            {
              "value": "In a gauge, a plot band on the Y axis (value axis) will stretch along the\nperimeter of the gauge.",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Array.<*>"] },
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "xAxis.plotBands",
          "name": "plotBands",
          "line": 320,
          "lineEnd": 334,
          "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
          "column": 0
        },
        "children": {
          "borderColor": {
            "doclet": {
              "description": "Border color for the plot band. Also requires `borderWidth` to be set.",
              "type": { "names": ["Highcharts.ColorString"] }
            },
            "meta": {
              "fullname": "xAxis.plotBands.borderColor",
              "name": "borderColor",
              "line": 344,
              "lineEnd": 349,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "borderRadius": {
            "doclet": {
              "description": "Border radius for the plot band. Applies only to gauges. Can be a pixel\nvalue or a percentage, for example `50%`.",
              "type": { "names": ["number", "string"] },
              "since": "11.4.2",
              "samples": [
                {
                  "name": "Angular gauge with rounded plot bands",
                  "value": "highcharts/xaxis/plotbands-gauge-borderradius",
                  "products": ["highcharts"]
                }
              ]
            },
            "meta": {
              "fullname": "xAxis.plotBands.borderRadius",
              "name": "borderRadius",
              "line": 350,
              "lineEnd": 359,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "borderWidth": {
            "doclet": {
              "description": "Border width for the plot band. Also requires `borderColor` to be set.",
              "type": { "names": ["number"] },
              "defaultvalue": "0"
            },
            "meta": {
              "fullname": "xAxis.plotBands.borderWidth",
              "name": "borderWidth",
              "line": 360,
              "lineEnd": 366,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "className": {
            "doclet": {
              "description": "A custom class name, in addition to the default `highcharts-plot-band`,\nto apply to each individual band.",
              "type": { "names": ["string"] },
              "since": "5.0.0"
            },
            "meta": {
              "fullname": "xAxis.plotBands.className",
              "name": "className",
              "line": 367,
              "lineEnd": 374,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "color": {
            "doclet": {
              "description": "The color of the plot band.",
              "samples": [
                {
                  "name": "Color band",
                  "value": "highcharts/xaxis/plotbands-color/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Plot band on Y axis",
                  "value": "stock/xaxis/plotbands/",
                  "products": ["highstock"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "defaultvalue": "#e6e9ff"
            },
            "meta": {
              "fullname": "xAxis.plotBands.color",
              "name": "color",
              "line": 375,
              "lineEnd": 386,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "events": {
            "doclet": {
              "description": "An object defining mouse events for the plot band. Supported properties\nare `click`, `mouseover`, `mouseout`, `mousemove`.",
              "samples": [
                {
                  "name": "Mouse events demonstrated",
                  "value": "highcharts/xaxis/plotbands-events/",
                  "products": ["highcharts"]
                }
              ],
              "since": "1.2.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "xAxis.plotBands.events",
              "name": "events",
              "line": 387,
              "lineEnd": 396,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {
              "click": {
                "doclet": {
                  "description": "Click event on a plot band.",
                  "type": {
                    "names": [
                      "Highcharts.EventCallbackFunction.<Highcharts.PlotLineOrBand>"
                    ]
                  },
                  "since": "1.2.0"
                },
                "meta": {
                  "fullname": "xAxis.plotBands.events.click",
                  "name": "click",
                  "line": 397,
                  "lineEnd": 402,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "mousemove": {
                "doclet": {
                  "description": "Mouse move event on a plot band.",
                  "type": {
                    "names": [
                      "Highcharts.EventCallbackFunction.<Highcharts.PlotLineOrBand>"
                    ]
                  },
                  "since": "1.2.0"
                },
                "meta": {
                  "fullname": "xAxis.plotBands.events.mousemove",
                  "name": "mousemove",
                  "line": 403,
                  "lineEnd": 408,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "mouseout": {
                "doclet": {
                  "description": "Mouse out event on the corner of a plot band.",
                  "type": {
                    "names": [
                      "Highcharts.EventCallbackFunction.<Highcharts.PlotLineOrBand>"
                    ]
                  },
                  "since": "1.2.0"
                },
                "meta": {
                  "fullname": "xAxis.plotBands.events.mouseout",
                  "name": "mouseout",
                  "line": 409,
                  "lineEnd": 414,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "mouseover": {
                "doclet": {
                  "description": "Mouse over event on a plot band.",
                  "type": {
                    "names": [
                      "Highcharts.EventCallbackFunction.<Highcharts.PlotLineOrBand>"
                    ]
                  },
                  "since": "1.2.0"
                },
                "meta": {
                  "fullname": "xAxis.plotBands.events.mouseover",
                  "name": "mouseover",
                  "line": 415,
                  "lineEnd": 420,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsXAxisPlotBandsEventsOptions",
            "extended": 1
          },
          "from": {
            "doclet": {
              "description": "The start position of the plot band in axis units.\n\nOn datetime axes, the value can be given as a timestamp or a date string.",
              "samples": [
                {
                  "name": "Datetime axis",
                  "value": "highcharts/xaxis/plotbands-color/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Categorized axis",
                  "value": "highcharts/xaxis/plotbands-from/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Plot band on Y axis",
                  "value": "stock/xaxis/plotbands/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["number", "string"] }
            },
            "meta": {
              "fullname": "xAxis.plotBands.from",
              "name": "from",
              "line": 421,
              "lineEnd": 435,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "id": {
            "doclet": {
              "description": "An id used for identifying the plot band in Axis.removePlotBand.",
              "samples": [
                {
                  "name": "Remove plot band by id",
                  "value": "highcharts/xaxis/plotbands-id/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Remove plot band by id",
                  "value": "highcharts/xaxis/plotbands-id/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["string"] }
            },
            "meta": {
              "fullname": "xAxis.plotBands.id",
              "name": "id",
              "line": 436,
              "lineEnd": 446,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "label": {
            "doclet": {
              "description": "Text labels for the plot bands",
              "products": ["highcharts", "highstock", "gantt"],
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "xAxis.plotBands.label",
              "name": "label",
              "line": 479,
              "lineEnd": 484,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {
              "align": {
                "doclet": {
                  "description": "Horizontal alignment of the label. Can be one of \"left\", \"center\" or\n\"right\".",
                  "samples": [
                    {
                      "name": "Aligned to the right",
                      "value": "highcharts/xaxis/plotbands-label-align/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Plot band with labels",
                      "value": "stock/xaxis/plotbands-label/",
                      "products": ["highstock"]
                    }
                  ],
                  "type": { "names": ["Highcharts.AlignValue"] },
                  "defaultvalue": "center",
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotBands.label.align",
                  "name": "align",
                  "line": 485,
                  "lineEnd": 498,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "allowOverlap": {
                "doclet": {
                  "description": "Whether or not the label can be hidden if it overlaps with another label.",
                  "samples": [
                    {
                      "name": "A Plotband label overlapping another",
                      "value": "highcharts/xaxis/plotbands-label-allowoverlap/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "undefined",
                  "since": "11.4.8"
                },
                "meta": {
                  "fullname": "xAxis.plotBands.label.allowOverlap",
                  "name": "allowOverlap",
                  "line": 499,
                  "lineEnd": 509,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "inside": {
                "doclet": {
                  "description": "Wether or not the text of the label can exceed the width of the label.",
                  "type": { "names": ["boolean"] },
                  "products": ["highcharts", "highstock", "gantt"],
                  "samples": [
                    {
                      "name": "Displaying text with text-wrapping/ellipsis, or the full text.",
                      "value": "highcharts/xaxis/plotbands-label-textwidth/",
                      "products": ["highcharts"]
                    }
                  ],
                  "defaultvalue": "true",
                  "since": "11.4.6"
                },
                "meta": {
                  "fullname": "xAxis.plotBands.label.inside",
                  "name": "inside",
                  "line": 510,
                  "lineEnd": 521,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "rotation": {
                "doclet": {
                  "description": "Rotation of the text label in degrees .",
                  "samples": [
                    {
                      "name": "Vertical text",
                      "value": "highcharts/xaxis/plotbands-label-rotation/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "defaultvalue": "0",
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotBands.label.rotation",
                  "name": "rotation",
                  "line": 522,
                  "lineEnd": 532,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "style": {
                "doclet": {
                  "description": "CSS styles for the text label.\n\nIn styled mode, the labels are styled by the\n`.highcharts-plot-band-label` class.",
                  "samples": [
                    {
                      "name": "Blue and bold label",
                      "value": "highcharts/xaxis/plotbands-label-style/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["Highcharts.CSSObject"] },
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotBands.label.style",
                  "name": "style",
                  "line": 533,
                  "lineEnd": 545,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "text": {
                "doclet": {
                  "description": "The string text itself. A subset of HTML is supported.",
                  "type": { "names": ["string"] },
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotBands.label.text",
                  "name": "text",
                  "line": 546,
                  "lineEnd": 552,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "textAlign": {
                "doclet": {
                  "description": "The text alignment for the label. While `align` determines where the\ntexts anchor point is placed within the plot band, `textAlign` determines\nhow the text is aligned against its anchor point. Possible values are\n\"left\", \"center\" and \"right\". Defaults to the same as the `align` option.",
                  "samples": [
                    {
                      "name": "Vertical text in center position but text-aligned left",
                      "value": "highcharts/xaxis/plotbands-label-rotation/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["Highcharts.AlignValue"] },
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotBands.label.textAlign",
                  "name": "textAlign",
                  "line": 553,
                  "lineEnd": 565,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "useHTML": {
                "doclet": {
                  "description": "Whether to [use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\nto render the labels.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "false",
                  "since": "3.0.3"
                },
                "meta": {
                  "fullname": "xAxis.plotBands.label.useHTML",
                  "name": "useHTML",
                  "line": 566,
                  "lineEnd": 574,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "description": "Vertical alignment of the label relative to the plot band. Can be one of\n\"top\", \"middle\" or \"bottom\".",
                  "samples": [
                    {
                      "name": "Vertically centered label",
                      "value": "highcharts/xaxis/plotbands-label-verticalalign/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Plot band with labels",
                      "value": "stock/xaxis/plotbands-label/",
                      "products": ["highstock"]
                    }
                  ],
                  "type": { "names": ["Highcharts.VerticalAlignValue"] },
                  "defaultvalue": "top",
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotBands.label.verticalAlign",
                  "name": "verticalAlign",
                  "line": 575,
                  "lineEnd": 588,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "x": {
                "doclet": {
                  "description": "Horizontal position relative the alignment. Default varies by\norientation.",
                  "samples": [
                    {
                      "name": "Aligned 10px from the right edge",
                      "value": "highcharts/xaxis/plotbands-label-align/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Plot band with labels",
                      "value": "stock/xaxis/plotbands-label/",
                      "products": ["highstock"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotBands.label.x",
                  "name": "x",
                  "line": 589,
                  "lineEnd": 601,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "description": "Vertical position of the text baseline relative to the alignment. Default\nvaries by orientation.",
                  "samples": [
                    {
                      "name": "Label on x axis",
                      "value": "highcharts/xaxis/plotbands-label-y/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Plot band with labels",
                      "value": "stock/xaxis/plotbands-label/",
                      "products": ["highstock"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotBands.label.y",
                  "name": "y",
                  "line": 602,
                  "lineEnd": 614,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsXAxisPlotBandsLabelOptions",
            "extended": 1
          },
          "to": {
            "doclet": {
              "description": "The end position of the plot band in axis units.\n\nOn datetime axes, the value can be given as a timestamp or a date string.",
              "samples": [
                {
                  "name": "Datetime axis",
                  "value": "highcharts/xaxis/plotbands-color/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Categorized axis",
                  "value": "highcharts/xaxis/plotbands-from/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Plot band on Y axis",
                  "value": "stock/xaxis/plotbands/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["number", "string"] }
            },
            "meta": {
              "fullname": "xAxis.plotBands.to",
              "name": "to",
              "line": 447,
              "lineEnd": 461,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "zIndex": {
            "doclet": {
              "description": "The z index of the plot band within the chart, relative to other\nelements. Using the same z index as another element may give\nunpredictable results, as the last rendered element will be on top.\nValues from 0 to 20 make sense.",
              "samples": [
                {
                  "name": "Behind plot lines by default",
                  "value": "highcharts/xaxis/plotbands-color/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Above plot lines",
                  "value": "highcharts/xaxis/plotbands-zindex/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Above plot lines and series",
                  "value": "highcharts/xaxis/plotbands-zindex-above-series/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "1.2.0"
            },
            "meta": {
              "fullname": "xAxis.plotBands.zIndex",
              "name": "zIndex",
              "line": 462,
              "lineEnd": 478,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsXAxisPlotBandsOptions",
        "extended": 1
      },
      "plotLines": {
        "doclet": {
          "description": "An array of lines stretching across the plot area, marking a specific\nvalue on one of the axes.\n\nIn styled mode, the plot lines are styled by the\n`.highcharts-plot-line` class in addition to the `className` option.",
          "type": { "names": ["Array.<*>"] },
          "products": ["highcharts", "highstock", "gantt"],
          "samples": [
            {
              "name": "Basic plot line",
              "value": "highcharts/xaxis/plotlines-color/",
              "products": ["highcharts"]
            },
            {
              "name": "Solid gauge plot line",
              "value": "highcharts/series-solidgauge/labels-auto-aligned/",
              "products": ["highcharts"]
            }
          ]
        },
        "meta": {
          "fullname": "xAxis.plotLines",
          "name": "plotLines",
          "line": 615,
          "lineEnd": 629,
          "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
          "column": 0
        },
        "children": {
          "className": {
            "doclet": {
              "description": "A custom class name, in addition to the default `highcharts-plot-line`,\nto apply to each individual line.",
              "type": { "names": ["string"] },
              "since": "5.0.0"
            },
            "meta": {
              "fullname": "xAxis.plotLines.className",
              "name": "className",
              "line": 642,
              "lineEnd": 649,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "color": {
            "doclet": {
              "description": "The color of the line.",
              "samples": [
                {
                  "name": "A red line from X axis",
                  "value": "highcharts/xaxis/plotlines-color/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Plot line on Y axis",
                  "value": "stock/xaxis/plotlines/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["Highcharts.ColorString"] },
              "defaultvalue": "#999999"
            },
            "meta": {
              "fullname": "xAxis.plotLines.color",
              "name": "color",
              "line": 650,
              "lineEnd": 661,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "dashStyle": {
            "doclet": {
              "description": "The dashing or dot style for the plot line. For possible values see\n[this overview](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-dashstyle-all/).",
              "samples": [
                {
                  "name": "Dash and dot pattern",
                  "value": "highcharts/xaxis/plotlines-dashstyle/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Plot line on Y axis",
                  "value": "stock/xaxis/plotlines/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["Highcharts.DashStyleValue"] },
              "defaultvalue": "Solid",
              "since": "1.2.0"
            },
            "meta": {
              "fullname": "xAxis.plotLines.dashStyle",
              "name": "dashStyle",
              "line": 662,
              "lineEnd": 675,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "events": {
            "doclet": {
              "description": "An object defining mouse events for the plot line. Supported\nproperties are `click`, `mouseover`, `mouseout`, `mousemove`.",
              "samples": [
                {
                  "name": "Mouse events demonstrated",
                  "value": "highcharts/xaxis/plotlines-events/",
                  "products": ["highcharts"]
                }
              ],
              "since": "1.2.0",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "xAxis.plotLines.events",
              "name": "events",
              "line": 676,
              "lineEnd": 685,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {
              "click": {
                "doclet": {
                  "description": "Click event on a plot band.",
                  "type": {
                    "names": [
                      "Highcharts.EventCallbackFunction.<Highcharts.PlotLineOrBand>"
                    ]
                  },
                  "since": "1.2.0"
                },
                "meta": {
                  "fullname": "xAxis.plotLines.events.click",
                  "name": "click",
                  "line": 686,
                  "lineEnd": 691,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "mousemove": {
                "doclet": {
                  "description": "Mouse move event on a plot band.",
                  "type": {
                    "names": [
                      "Highcharts.EventCallbackFunction.<Highcharts.PlotLineOrBand>"
                    ]
                  },
                  "since": "1.2.0"
                },
                "meta": {
                  "fullname": "xAxis.plotLines.events.mousemove",
                  "name": "mousemove",
                  "line": 692,
                  "lineEnd": 697,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "mouseout": {
                "doclet": {
                  "description": "Mouse out event on the corner of a plot band.",
                  "type": {
                    "names": [
                      "Highcharts.EventCallbackFunction.<Highcharts.PlotLineOrBand>"
                    ]
                  },
                  "since": "1.2.0"
                },
                "meta": {
                  "fullname": "xAxis.plotLines.events.mouseout",
                  "name": "mouseout",
                  "line": 698,
                  "lineEnd": 703,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "mouseover": {
                "doclet": {
                  "description": "Mouse over event on a plot band.",
                  "type": {
                    "names": [
                      "Highcharts.EventCallbackFunction.<Highcharts.PlotLineOrBand>"
                    ]
                  },
                  "since": "1.2.0"
                },
                "meta": {
                  "fullname": "xAxis.plotLines.events.mouseover",
                  "name": "mouseover",
                  "line": 704,
                  "lineEnd": 709,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsXAxisPlotLinesEventsOptions",
            "extended": 1
          },
          "id": {
            "doclet": {
              "description": "An id used for identifying the plot line in Axis.removePlotLine.",
              "samples": [
                {
                  "name": "Remove plot line by id",
                  "value": "highcharts/xaxis/plotlines-id/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["string"] }
            },
            "meta": {
              "fullname": "xAxis.plotLines.id",
              "name": "id",
              "line": 710,
              "lineEnd": 718,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "label": {
            "doclet": {
              "description": "Text labels for the plot bands",
              "type": { "names": ["*"] }
            },
            "meta": {
              "fullname": "xAxis.plotLines.label",
              "name": "label",
              "line": 758,
              "lineEnd": 762,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {
              "align": {
                "doclet": {
                  "description": "Horizontal alignment of the label. Can be one of \"left\", \"center\" or\n\"right\".",
                  "samples": [
                    {
                      "name": "Aligned to the right",
                      "value": "highcharts/xaxis/plotlines-label-align-right/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Plot line on Y axis",
                      "value": "stock/xaxis/plotlines/",
                      "products": ["highstock"]
                    }
                  ],
                  "type": { "names": ["Highcharts.AlignValue"] },
                  "defaultvalue": "left",
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotLines.label.align",
                  "name": "align",
                  "line": 763,
                  "lineEnd": 776,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "formatter": {
                "doclet": {
                  "description": "Callback JavaScript function to format the label. Useful properties like\nthe value of plot line or the range of plot band (`from` & `to`\nproperties) can be found in `this.options` object.",
                  "samples": [
                    {
                      "name": "Label formatters for plot line and plot band.",
                      "value": "highcharts/xaxis/plotlines-plotbands-label-formatter",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": {
                    "names": [
                      "Highcharts.FormatterCallbackFunction.<Highcharts.PlotLineOrBand>"
                    ]
                  }
                },
                "meta": {
                  "fullname": "xAxis.plotLines.label.formatter",
                  "name": "formatter",
                  "line": 785,
                  "lineEnd": 794,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "rotation": {
                "doclet": {
                  "description": "Rotation of the text label in degrees. Defaults to 0 for horizontal plot\nlines and 90 for vertical lines.",
                  "samples": [
                    {
                      "name": "Slanted text",
                      "value": "highcharts/xaxis/plotlines-label-verticalalign-middle/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotLines.label.rotation",
                  "name": "rotation",
                  "line": 795,
                  "lineEnd": 805,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "style": {
                "doclet": {
                  "description": "CSS styles for the text label.\n\nIn styled mode, the labels are styled by the\n`.highcharts-plot-line-label` class.",
                  "samples": [
                    {
                      "name": "Blue and bold label",
                      "value": "highcharts/xaxis/plotlines-label-style/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["Highcharts.CSSObject"] },
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotLines.label.style",
                  "name": "style",
                  "line": 806,
                  "lineEnd": 818,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "text": {
                "doclet": {
                  "description": "The text itself. A subset of HTML is supported.",
                  "type": { "names": ["string"] },
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotLines.label.text",
                  "name": "text",
                  "line": 819,
                  "lineEnd": 825,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "textAlign": {
                "doclet": {
                  "description": "The text alignment for the label. While `align` determines where the\ntexts anchor point is placed within the plot band, `textAlign` determines\nhow the text is aligned against its anchor point. Possible values are\n\"left\", \"center\" and \"right\". Defaults to the same as the `align` option.",
                  "samples": [
                    {
                      "name": "Text label in bottom position",
                      "value": "highcharts/xaxis/plotlines-label-textalign/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["Highcharts.AlignValue"] },
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotLines.label.textAlign",
                  "name": "textAlign",
                  "line": 826,
                  "lineEnd": 838,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "useHTML": {
                "doclet": {
                  "description": "Whether to [use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\nto render the labels.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "false",
                  "since": "3.0.3"
                },
                "meta": {
                  "fullname": "xAxis.plotLines.label.useHTML",
                  "name": "useHTML",
                  "line": 839,
                  "lineEnd": 847,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "verticalAlign": {
                "doclet": {
                  "description": "Vertical alignment of the label relative to the plot line. Can be\none of \"top\", \"middle\" or \"bottom\".",
                  "samples": [
                    {
                      "name": "Vertically centered label",
                      "value": "highcharts/xaxis/plotlines-label-verticalalign-middle/",
                      "products": ["highcharts"]
                    }
                  ],
                  "type": { "names": ["Highcharts.VerticalAlignValue"] },
                  "defaultByProduct": {
                    "highcharts": "top",
                    "highstock": "top"
                  },
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotLines.label.verticalAlign",
                  "name": "verticalAlign",
                  "line": 848,
                  "lineEnd": 860,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "x": {
                "doclet": {
                  "description": "Horizontal position relative the alignment. Default varies by\norientation.",
                  "samples": [
                    {
                      "name": "Aligned 10px from the right edge",
                      "value": "highcharts/xaxis/plotlines-label-align-right/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Plot line on Y axis",
                      "value": "stock/xaxis/plotlines/",
                      "products": ["highstock"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotLines.label.x",
                  "name": "x",
                  "line": 861,
                  "lineEnd": 873,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              },
              "y": {
                "doclet": {
                  "description": "Vertical position of the text baseline relative to the alignment. Default\nvaries by orientation.",
                  "samples": [
                    {
                      "name": "Label below the plot line",
                      "value": "highcharts/xaxis/plotlines-label-y/",
                      "products": ["highcharts"]
                    },
                    {
                      "name": "Plot line on Y axis",
                      "value": "stock/xaxis/plotlines/",
                      "products": ["highstock"]
                    }
                  ],
                  "type": { "names": ["number"] },
                  "since": "2.1.0"
                },
                "meta": {
                  "fullname": "xAxis.plotLines.label.y",
                  "name": "y",
                  "line": 874,
                  "lineEnd": 886,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsXAxisPlotLinesLabelOptions",
            "extended": 1
          },
          "labels": {
            "doclet": { "type": { "names": ["*"] } },
            "meta": {
              "column": 0,
              "filename": "",
              "fullname": "xAxis.plotLines.labels",
              "line": 0,
              "lineEnd": 0,
              "name": "labels"
            },
            "children": {
              "clip": {
                "doclet": {
                  "description": "Whether to hide labels that are outside the plot area.",
                  "type": { "names": ["boolean"] },
                  "defaultvalue": "false",
                  "since": "10.3.3"
                },
                "meta": {
                  "fullname": "xAxis.plotLines.labels.clip",
                  "name": "clip",
                  "line": 777,
                  "lineEnd": 784,
                  "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsXAxisPlotLinesLabelsOptions",
            "extended": 1
          },
          "value": {
            "doclet": {
              "description": "The position of the line in axis units.\n\nOn datetime axes, the value can be given as a timestamp or a date string.",
              "samples": [
                {
                  "name": "Between two categories on X axis",
                  "value": "highcharts/xaxis/plotlines-color/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Plot line on Y axis",
                  "value": "stock/xaxis/plotlines/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["number", "string"] }
            },
            "meta": {
              "fullname": "xAxis.plotLines.value",
              "name": "value",
              "line": 719,
              "lineEnd": 731,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "width": {
            "doclet": {
              "description": "The width or thickness of the plot line.",
              "samples": [
                {
                  "name": "2px wide line from X axis",
                  "value": "highcharts/xaxis/plotlines-color/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Plot line on Y axis",
                  "value": "stock/xaxis/plotlines/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "2"
            },
            "meta": {
              "fullname": "xAxis.plotLines.width",
              "name": "width",
              "line": 732,
              "lineEnd": 743,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "zIndex": {
            "doclet": {
              "description": "The z index of the plot line within the chart.",
              "samples": [
                {
                  "name": "Behind plot lines by default",
                  "value": "highcharts/xaxis/plotlines-zindex-behind/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Above plot lines",
                  "value": "highcharts/xaxis/plotlines-zindex-above/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Above plot lines and series",
                  "value": "highcharts/xaxis/plotlines-zindex-above-all/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "1.2.0"
            },
            "meta": {
              "fullname": "xAxis.plotLines.zIndex",
              "name": "zIndex",
              "line": 744,
              "lineEnd": 757,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsXAxisPlotLinesOptions",
        "extended": 1
      },
      "reversed": {
        "doclet": {
          "description": "Whether to reverse the axis so that the highest number is closest\nto the origin. If the chart is inverted, the x axis is reversed by\ndefault.",
          "samples": [
            {
              "name": "Reversed Y axis",
              "value": "highcharts/yaxis/reversed/",
              "products": ["highcharts"]
            },
            {
              "name": "Reversed Y axis",
              "value": "stock/xaxis/reversed/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "undefined"
        },
        "meta": {
          "fullname": "xAxis.reversed",
          "name": "reversed",
          "line": 1498,
          "lineEnd": 1511,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "reversedStacks": {
        "doclet": {
          "description": "This option determines how stacks should be ordered within a group.\nFor example reversed xAxis also reverses stacks, so first series\ncomes last in a group. To keep order like for non-reversed xAxis\nenable this option.",
          "samples": [
            {
              "name": "Reversed stacks comparison",
              "value": "highcharts/xaxis/reversedstacks/",
              "products": ["highcharts"]
            },
            {
              "name": "Reversed stacks comparison",
              "value": "highcharts/xaxis/reversedstacks/",
              "products": ["highstock"]
            }
          ],
          "since": "6.1.1",
          "products": ["highcharts", "highstock"],
          "type": { "names": ["boolean"] },
          "defaultvalue": false
        },
        "meta": {
          "fullname": "xAxis.reversedStacks",
          "name": "reversedStacks",
          "line": 1513,
          "lineEnd": 1526,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": false
        },
        "children": {},
        "extended": 1
      },
      "showEmpty": {
        "doclet": {
          "description": "Whether to show the axis line and title when the axis has no data.",
          "samples": [
            {
              "name": "When clicking the legend to hide series, one axis preserves line and title, the other doesn't",
              "value": "highcharts/yaxis/showempty/",
              "products": ["highcharts"]
            },
            {
              "name": "When clicking the legend to hide series, one axis preserves line and title, the other doesn't",
              "value": "highcharts/yaxis/showempty/",
              "products": ["highstock"]
            }
          ],
          "since": "1.1.0",
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "xAxis.showEmpty",
          "name": "showEmpty",
          "line": 1528,
          "lineEnd": 1544,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "showFirstLabel": {
        "doclet": {
          "description": "Whether to show the first tick label.",
          "samples": [
            {
              "name": "Set to false on X axis",
              "value": "highcharts/xaxis/showfirstlabel-false/",
              "products": ["highcharts"]
            },
            {
              "name": "Labels below plot lines on Y axis",
              "value": "stock/xaxis/showfirstlabel/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "xAxis.showFirstLabel",
          "name": "showFirstLabel",
          "line": 1558,
          "lineEnd": 1565,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "showLastLabel": {
        "doclet": {
          "description": "Whether to show the last tick label. Defaults to `true` on cartesian\ncharts, and `false` on polar charts.",
          "samples": [
            {
              "name": "Set to true on X axis",
              "value": "highcharts/xaxis/showlastlabel-true/",
              "products": ["highcharts"]
            },
            {
              "name": "Labels below plot lines on Y axis",
              "value": "stock/xaxis/showfirstlabel/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "undefined",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "xAxis.showLastLabel",
          "name": "showLastLabel",
          "line": 1567,
          "lineEnd": 1579,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "softMax": {
        "doclet": {
          "description": "A soft maximum for the axis. If the series data maximum is less than\nthis, the axis will stay at this maximum, but if the series data\nmaximum is higher, the axis will flex to show all data.",
          "samples": [
            {
              "name": "Soft min and max",
              "value": "highcharts/yaxis/softmin-softmax/"
            }
          ],
          "type": { "names": ["number"] },
          "since": "5.0.1",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "xAxis.softMax",
          "name": "softMax",
          "line": 1581,
          "lineEnd": 1593,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "softMin": {
        "doclet": {
          "description": "A soft minimum for the axis. If the series data minimum is greater\nthan this, the axis will stay at this minimum, but if the series\ndata minimum is lower, the axis will flex to show all data.",
          "samples": [
            {
              "name": "Soft min and max",
              "value": "highcharts/yaxis/softmin-softmax/"
            }
          ],
          "type": { "names": ["number"] },
          "since": "5.0.1",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "xAxis.softMin",
          "name": "softMin",
          "line": 1594,
          "lineEnd": 1606,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "startOfWeek": {
        "doclet": {
          "description": "For datetime axes, this decides where to put the tick between weeks.\n 0 = Sunday, 1 = Monday.",
          "samples": [
            {
              "name": "Monday by default",
              "value": "highcharts/xaxis/startofweek-monday/",
              "products": ["highcharts"]
            },
            {
              "name": "Sunday",
              "value": "highcharts/xaxis/startofweek-sunday/",
              "products": ["highcharts"]
            },
            {
              "name": "Monday by default",
              "value": "stock/xaxis/startofweek-1",
              "products": ["highstock"]
            },
            {
              "name": "Sunday",
              "value": "stock/xaxis/startofweek-0",
              "products": ["highstock"]
            }
          ],
          "products": ["highcharts", "highstock", "gantt"],
          "type": { "names": ["number"] },
          "defaultvalue": 1
        },
        "meta": {
          "fullname": "xAxis.startOfWeek",
          "name": "startOfWeek",
          "line": 1581,
          "lineEnd": 1593,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 1
        },
        "children": {},
        "extended": 1
      },
      "startOnTick": {
        "doclet": {
          "description": "Whether to force the axis to start on a tick. Use this option with\nthe `minPadding` option to control the axis start.",
          "productdesc": [
            {
              "value": "In Highcharts Stock, `startOnTick` is always `false` when\nthe navigator is enabled, to prevent jumpy scrolling.",
              "products": ["highstock"]
            }
          ],
          "samples": [
            {
              "name": "False by default",
              "value": "highcharts/xaxis/startontick-false/",
              "products": ["highcharts"]
            },
            {
              "name": "True",
              "value": "highcharts/xaxis/startontick-true/",
              "products": ["highcharts"]
            }
          ],
          "since": "1.2.0",
          "type": { "names": ["boolean"] },
          "defaultvalue": false
        },
        "meta": {
          "fullname": "xAxis.startOnTick",
          "name": "startOnTick",
          "line": 1623,
          "lineEnd": 1637,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": false
        },
        "children": {},
        "extended": 1
      },
      "tickAmount": {
        "doclet": {
          "description": "The amount of ticks to draw on the axis. This opens up for aligning\nthe ticks of multiple charts or panes within a chart. This option\noverrides the `tickPixelInterval` option.\n\nThis option only has an effect on linear axes. Datetime, logarithmic\nor category axes are not affected.",
          "samples": [
            {
              "name": "8 ticks on Y axis",
              "value": "highcharts/yaxis/tickamount/",
              "products": ["highcharts"]
            },
            {
              "name": "8 ticks on Y axis",
              "value": "highcharts/yaxis/tickamount/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "since": "4.1.0",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "xAxis.tickAmount",
          "name": "tickAmount",
          "line": 1639,
          "lineEnd": 1656,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "tickColor": {
        "doclet": {
          "description": "Color for the main tick marks.\n\nIn styled mode, the stroke is given in the `.highcharts-tick`\nclass.",
          "samples": [
            {
              "name": "Red ticks on X axis",
              "value": "highcharts/xaxis/tickcolor/",
              "products": ["highcharts"]
            },
            {
              "name": "Styled mode",
              "value": "highcharts/css/axis-grid/",
              "products": ["highcharts", "highstock"]
            },
            {
              "name": "Formatted ticks on X axis",
              "value": "stock/xaxis/ticks/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.ColorType"] },
          "defaultvalue": "#333333"
        },
        "meta": {
          "fullname": "xAxis.tickColor",
          "name": "tickColor",
          "line": 2183,
          "lineEnd": 2196,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": "#333333"
        },
        "children": {},
        "extended": 1
      },
      "tickInterval": {
        "doclet": {
          "description": "The interval of the tick marks in axis units. When `undefined`, the\ntick interval is computed to approximately follow the\n[tickPixelInterval](#xAxis.tickPixelInterval) on linear and datetime\naxes. On categorized axes, a `undefined` tickInterval will default to\n1, one category. Note that datetime axes are based on milliseconds,\nso for example an interval of one day is expressed as\n`24 * 3600 * 1000`.\n\nOn logarithmic axes, the tickInterval is based on powers, so a\ntickInterval of 1 means one tick on each of 0.1, 1, 10, 100 etc. A\ntickInterval of 2 means a tick of 0.1, 10, 1000 etc. A tickInterval\nof 0.2 puts a tick on 0.1, 0.2, 0.4, 0.6, 0.8, 1, 2, 4, 6, 8, 10, 20,\n40 etc.\n\n\nIf the tickInterval is too dense for labels to be drawn, Highcharts\nmay remove ticks.\n\nIf the chart has multiple axes, the [alignTicks](#chart.alignTicks)\noption may interfere with the `tickInterval` setting.",
          "see": [
            "[tickPixelInterval](#xAxis.tickPixelInterval)",
            "[tickPositions](#xAxis.tickPositions)",
            "[tickPositioner](#xAxis.tickPositioner)"
          ],
          "samples": [
            {
              "name": "Tick interval of 5 on a linear axis",
              "value": "highcharts/xaxis/tickinterval-5/",
              "products": ["highcharts"]
            },
            {
              "name": "Tick interval of 0.01 on Y axis",
              "value": "stock/xaxis/tickinterval/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] }
        },
        "meta": {
          "fullname": "xAxis.tickInterval",
          "name": "tickInterval",
          "line": 1657,
          "lineEnd": 1690,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "tickLength": {
        "doclet": {
          "description": "The pixel length of the main tick marks.",
          "samples": [
            {
              "name": "20 px tick length on the X axis",
              "value": "highcharts/xaxis/ticklength/",
              "products": ["highcharts"]
            },
            {
              "name": "Formatted ticks on X axis",
              "value": "stock/xaxis/ticks/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": 10
        },
        "meta": {
          "fullname": "xAxis.tickLength",
          "name": "tickLength",
          "line": 1639,
          "lineEnd": 1656,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 10
        },
        "children": {},
        "extended": 1
      },
      "tickPixelInterval": {
        "doclet": {
          "description": "If tickInterval is `null` this option sets the approximate pixel\ninterval of the tick marks. Not applicable to categorized axis.\n\nThe tick interval is also influenced by the [minTickInterval](#xAxis.minTickInterval) option, that, by default prevents ticks from\nbeing denser than the data points.",
          "see": [
            "[tickInterval](#xAxis.tickInterval)",
            "[tickPositioner](#xAxis.tickPositioner)",
            "[tickPositions](#xAxis.tickPositions)"
          ],
          "samples": [
            {
              "name": "50 px on X axis",
              "value": "highcharts/xaxis/tickpixelinterval-50/",
              "products": ["highcharts"]
            },
            {
              "name": "200 px on X axis",
              "value": "stock/xaxis/tickpixelinterval/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": 100
        },
        "meta": {
          "fullname": "xAxis.tickPixelInterval",
          "name": "tickPixelInterval",
          "line": 1700,
          "lineEnd": 1716,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 100
        },
        "children": {},
        "extended": 1
      },
      "tickPosition": {
        "doclet": {
          "description": "The position of the major tick marks relative to the axis line.\nCan be one of `inside` and `outside`.",
          "samples": [
            {
              "name": "\"outside\" by default",
              "value": "highcharts/xaxis/tickposition-outside/",
              "products": ["highcharts"]
            },
            {
              "name": "\"inside\"",
              "value": "highcharts/xaxis/tickposition-inside/",
              "products": ["highcharts"]
            },
            {
              "name": "Formatted ticks on X axis",
              "value": "stock/xaxis/ticks/",
              "products": ["highstock"]
            }
          ],
          "values": "[\"inside\", \"outside\"]",
          "type": { "names": ["string"] },
          "defaultvalue": "outside"
        },
        "meta": {
          "fullname": "xAxis.tickPosition",
          "name": "tickPosition",
          "line": 1734,
          "lineEnd": 1746,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": "outside"
        },
        "children": {},
        "extended": 1
      },
      "tickPositioner": {
        "doclet": {
          "description": "A callback function returning array defining where the ticks are\nlaid out on the axis. This overrides the default behaviour of\n[tickPixelInterval](#xAxis.tickPixelInterval) and [tickInterval](#xAxis.tickInterval). The automatic tick positions are accessible\nthrough `this.tickPositions` and can be modified by the callback.",
          "see": ["[tickPositions](#xAxis.tickPositions)"],
          "samples": [
            {
              "name": "Demo of tickPositions and tickPositioner",
              "value": "highcharts/xaxis/tickpositions-tickpositioner/",
              "products": ["highcharts"]
            },
            {
              "name": "Demo of tickPositions and tickPositioner",
              "value": "highcharts/xaxis/tickpositions-tickpositioner/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Highcharts.AxisTickPositionerCallbackFunction"] }
        },
        "meta": {
          "fullname": "xAxis.tickPositioner",
          "name": "tickPositioner",
          "line": 1748,
          "lineEnd": 1764,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "tickPositions": {
        "doclet": {
          "description": "An array defining where the ticks are laid out on the axis. This\noverrides the default behaviour of [tickPixelInterval](#xAxis.tickPixelInterval) and [tickInterval](#xAxis.tickInterval).",
          "see": ["[tickPositioner](#xAxis.tickPositioner)"],
          "samples": [
            {
              "name": "Demo of tickPositions and tickPositioner",
              "value": "highcharts/xaxis/tickpositions-tickpositioner/",
              "products": ["highcharts"]
            },
            {
              "name": "Demo of tickPositions and tickPositioner",
              "value": "highcharts/xaxis/tickpositions-tickpositioner/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["Array.<number>"] }
        },
        "meta": {
          "fullname": "xAxis.tickPositions",
          "name": "tickPositions",
          "line": 1765,
          "lineEnd": 1779,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "tickWidth": {
        "doclet": {
          "description": "The pixel width of the major tick marks. Defaults to 0 on category\naxes, otherwise 1.\n\nIn styled mode, the stroke width is given in the `.highcharts-tick`\nclass, but in order for the element to be generated on category axes,\nthe option must be explicitly set to 1.",
          "samples": [
            {
              "name": "10 px width",
              "value": "highcharts/xaxis/tickwidth/",
              "products": ["highcharts"]
            },
            {
              "name": "Styled mode",
              "value": "highcharts/css/axis-grid/",
              "products": ["highcharts"]
            },
            {
              "name": "Formatted ticks on X axis",
              "value": "stock/xaxis/ticks/",
              "products": ["highstock"]
            },
            {
              "name": "Styled mode",
              "value": "highcharts/css/axis-grid/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["undefined", "number"] },
          "defaultByProduct": { "highstock": 1, "highmaps": 0 }
        },
        "meta": {
          "fullname": "xAxis.tickWidth",
          "name": "tickWidth",
          "line": 1780,
          "lineEnd": 1801,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "tickmarkPlacement": {
        "doclet": {
          "description": "For categorized axes only. If `on` the tick mark is placed in the\ncenter of the category, if `between` the tick mark is placed between\ncategories. The default is `between` if the `tickInterval` is 1, else\n`on`. In order to render tick marks on a category axis it is necessary\nto provide a [tickWidth](#xAxis.tickWidth).",
          "samples": [
            {
              "name": "\"between\" by default",
              "value": "highcharts/xaxis/tickmarkplacement-between/",
              "products": ["highcharts"]
            },
            {
              "name": "\"on\"",
              "value": "highcharts/xaxis/tickmarkplacement-on/",
              "products": ["highcharts"]
            }
          ],
          "products": ["highcharts", "gantt"],
          "values": "[\"on\", \"between\"]",
          "type": { "names": ["string"] },
          "defaultvalue": "between"
        },
        "meta": {
          "fullname": "xAxis.tickmarkPlacement",
          "name": "tickmarkPlacement",
          "line": 1718,
          "lineEnd": 1732,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": "between"
        },
        "children": {},
        "extended": 1
      },
      "title": {
        "doclet": {
          "description": "The axis title, showing next to the axis line.",
          "productdesc": [
            {
              "value": "In Highmaps, the axis is hidden by default, but adding an axis title\nis still possible. X axis and Y axis titles will appear at the bottom\nand left by default.",
              "products": ["highmaps"]
            }
          ],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "xAxis.title",
          "name": "title",
          "line": 1748,
          "lineEnd": 1764,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
        },
        "children": {
          "align": {
            "doclet": {
              "description": "Alignment of the title relative to the axis values. Possible\nvalues are \"low\", \"middle\" or \"high\".",
              "samples": [
                {
                  "name": "\"low\"",
                  "value": "highcharts/xaxis/title-align-low/",
                  "products": ["highcharts"]
                },
                {
                  "name": "\"middle\" by default",
                  "value": "highcharts/xaxis/title-align-center/",
                  "products": ["highcharts"]
                },
                {
                  "name": "\"high\"",
                  "value": "highcharts/xaxis/title-align-high/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Place the Y axis title on top of the axis",
                  "value": "highcharts/yaxis/title-offset/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Aligned to \"high\" value",
                  "value": "stock/xaxis/title-align/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["Highcharts.AxisTitleAlignValue"] },
              "defaultvalue": "middle"
            },
            "meta": {
              "fullname": "xAxis.title.align",
              "name": "align",
              "line": 1811,
              "lineEnd": 1827,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": "middle"
            },
            "children": {},
            "extended": 1
          },
          "enabled": {
            "doclet": {
              "description": "Deprecated. Set the `text` to `undefined` to disable the title.",
              "deprecated": true,
              "type": { "names": ["boolean"] },
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "xAxis.title.enabled",
              "name": "enabled",
              "line": 1829,
              "lineEnd": 1836,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "margin": {
            "doclet": {
              "description": "The pixel distance between the axis labels or line and the title.\nDefaults to 0 for horizontal axes, 10 for vertical",
              "samples": [
                {
                  "name": "Y axis title margin of 60",
                  "value": "highcharts/xaxis/title-margin/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] }
            },
            "meta": {
              "fullname": "xAxis.title.margin",
              "name": "margin",
              "line": 1837,
              "lineEnd": 1846,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "offset": {
            "doclet": {
              "description": "The distance of the axis title from the axis line. By default,\nthis distance is computed from the offset width of the labels,\nthe labels' distance from the axis and the title's margin.\nHowever when the offset option is set, it overrides all this.",
              "samples": [
                {
                  "name": "Place the axis title on top of the axis",
                  "value": "highcharts/yaxis/title-offset/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Place the axis title on top of the Y axis",
                  "value": "highcharts/yaxis/title-offset/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "2.2.0"
            },
            "meta": {
              "fullname": "xAxis.title.offset",
              "name": "offset",
              "line": 1847,
              "lineEnd": 1861,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "position3d": {
            "doclet": {
              "description": "Defines how the title is repositioned according to the 3D chart\norientation.\n\n- `'offset'`: Maintain a fixed horizontal/vertical distance from\n  the tick marks, despite the chart orientation. This is the\n  backwards compatible behavior, and causes skewing of X and Z\n  axes.\n\n- `'chart'`: Preserve 3D position relative to the chart. This\n  looks nice, but hard to read if the text isn't forward-facing.\n\n- `'flap'`: Rotated text along the axis to compensate for the\n  chart orientation. This tries to maintain text as legible as\n  possible on all orientations.\n\n- `'ortho'`: Rotated text along the axis direction so that the\n  labels are orthogonal to the axis. This is very similar to\n  `'flap'`, but prevents skewing the labels (X and Y scaling are\n  still present).\n\n- `undefined`: Will use the config from `labels.position3d`",
              "samples": [
                {
                  "name": "Skewed labels",
                  "value": "highcharts/3d/skewed-labels/"
                }
              ],
              "type": {
                "names": [
                  "\"offset\"",
                  "\"chart\"",
                  "\"flap\"",
                  "\"ortho\"",
                  "null"
                ]
              },
              "since": "5.0.15",
              "products": ["highcharts"],
              "requires": ["module:highcharts-3d"],
              "defaultvalue": null
            },
            "meta": {
              "fullname": "xAxis.title.position3d",
              "name": "position3d",
              "line": 72,
              "lineEnd": 102,
              "column": 8,
              "filename": "code/es-modules/Core/Axis/Axis3DDefaults.js",
              "default": null
            },
            "children": {},
            "extended": 1
          },
          "reserveSpace": {
            "doclet": {
              "description": "Whether to reserve space for the title when laying out the axis.",
              "type": { "names": ["boolean"] },
              "defaultvalue": "true",
              "since": "5.0.11",
              "products": ["highcharts", "highstock", "gantt"]
            },
            "meta": {
              "fullname": "xAxis.title.reserveSpace",
              "name": "reserveSpace",
              "line": 1862,
              "lineEnd": 1870,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "rotation": {
            "doclet": {
              "description": "The rotation of the text in degrees. 0 is horizontal, 270 is\nvertical reading from bottom to top. Defaults to 0 for horizontal\naxes, 270 for left-side axes and 90 for right-side axes.",
              "samples": [
                {
                  "name": "Horizontal",
                  "value": "highcharts/yaxis/title-offset/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "undefined"
            },
            "meta": {
              "fullname": "xAxis.title.rotation",
              "name": "rotation",
              "line": 1871,
              "lineEnd": 1882,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "skew3d": {
            "doclet": {
              "description": "If enabled, the axis title will skewed to follow the perspective.\n\nThis will fix overlapping labels and titles, but texts become\nless legible due to the distortion.\n\nThe final appearance depends heavily on `title.position3d`.\n\nA `null` value will use the config from `labels.skew3d`.",
              "samples": [
                {
                  "name": "Skewed labels",
                  "value": "highcharts/3d/skewed-labels/"
                }
              ],
              "type": { "names": ["boolean", "null"] },
              "since": "5.0.15",
              "products": ["highcharts"],
              "requires": ["module:highcharts-3d"],
              "defaultvalue": null
            },
            "meta": {
              "fullname": "xAxis.title.skew3d",
              "name": "skew3d",
              "line": 104,
              "lineEnd": 121,
              "column": 8,
              "filename": "code/es-modules/Core/Axis/Axis3DDefaults.js",
              "default": null
            },
            "children": {},
            "extended": 1
          },
          "style": {
            "doclet": {
              "description": "CSS styles for the title. If the title text is longer than the\naxis length, it will wrap to multiple lines by default. This can\nbe customized by setting the `lineClamp` property, by setting a\nspecific `width` or by setting `whiteSpace: 'nowrap'`.\n\nIn styled mode, the stroke width is given in the\n`.highcharts-axis-title` class.",
              "samples": [
                {
                  "name": "Red",
                  "value": "highcharts/xaxis/title-style/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Styled mode",
                  "value": "highcharts/css/axis/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.CSSObject"] }
            },
            "meta": {
              "fullname": "xAxis.title.style",
              "name": "style",
              "line": 1939,
              "lineEnd": 1954,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
            },
            "children": {
              "color": {
                "doclet": {
                  "internal": true,
                  "type": { "names": ["string"] },
                  "defaultvalue": "#666666"
                },
                "meta": {
                  "fullname": "xAxis.title.style.color",
                  "name": "color",
                  "line": 1956,
                  "lineEnd": 1956,
                  "column": 16,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "default": "#666666"
                },
                "children": {},
                "extended": 1
              },
              "fontSize": {
                "doclet": {
                  "type": { "names": ["number", "string"] },
                  "defaultvalue": "0.8em"
                },
                "meta": {
                  "fullname": "xAxis.title.style.fontSize",
                  "name": "fontSize",
                  "line": 1958,
                  "lineEnd": 1960,
                  "column": 16,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "default": "0.8em"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsXAxisTitleStyleOptions",
            "extended": 1
          },
          "text": {
            "doclet": {
              "description": "The actual text of the axis title. It can contain basic HTML tags\nlike `b`, `i` and `span` with style.",
              "samples": [
                {
                  "name": "Custom HTML",
                  "value": "highcharts/xaxis/title-text/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Titles for both axes",
                  "value": "stock/xaxis/title-text/",
                  "products": ["highstock"]
                }
              ],
              "type": { "names": ["string", "null"] }
            },
            "meta": {
              "fullname": "xAxis.title.text",
              "name": "text",
              "line": 1883,
              "lineEnd": 1894,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "textAlign": {
            "doclet": {
              "description": "Alignment of the text, can be `\"left\"`, `\"right\"` or `\"center\"`.\nDefault alignment depends on the\n[title.align](xAxis.title.align):\n\nHorizontal axes:\n- for `align` = `\"low\"`, `textAlign` is set to `left`\n- for `align` = `\"middle\"`, `textAlign` is set to `center`\n- for `align` = `\"high\"`, `textAlign` is set to `right`\n\nVertical axes:\n- for `align` = `\"low\"` and `opposite` = `true`, `textAlign` is\n  set to `right`\n- for `align` = `\"low\"` and `opposite` = `false`, `textAlign` is\n  set to `left`\n- for `align` = `\"middle\"`, `textAlign` is set to `center`\n- for `align` = `\"high\"` and `opposite` = `true` `textAlign` is\n  set to `left`\n- for `align` = `\"high\"` and `opposite` = `false` `textAlign` is\n  set to `right`",
              "type": { "names": ["Highcharts.AlignValue"] }
            },
            "meta": {
              "fullname": "xAxis.title.textAlign",
              "name": "textAlign",
              "line": 1895,
              "lineEnd": 1918,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "useHTML": {
            "doclet": {
              "description": "Whether to [use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\nto render the axis title.",
              "products": ["highcharts", "highstock", "gantt"],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "xAxis.title.useHTML",
              "name": "useHTML",
              "line": 1829,
              "lineEnd": 1836,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "x": {
            "doclet": {
              "description": "Horizontal pixel offset of the title position.",
              "since": "4.1.6",
              "products": ["highcharts", "highstock", "gantt"],
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "xAxis.title.x",
              "name": "x",
              "line": 1926,
              "lineEnd": 1931,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          },
          "y": {
            "doclet": {
              "description": "Vertical pixel offset of the title position.",
              "products": ["highcharts", "highstock", "gantt"],
              "type": { "names": ["number"] },
              "defaultvalue": 0
            },
            "meta": {
              "fullname": "xAxis.title.y",
              "name": "y",
              "line": 1933,
              "lineEnd": 1937,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsXAxisTitleOptions",
        "extended": 1
      },
      "top": {
        "doclet": {
          "description": "The top position as the vertical axis. If it's a number, it is\ninterpreted as pixel position relative to the chart.\n\nSince Highcharts 2: If it's a percentage string, it is interpreted\nas percentages of the plot height, offset from plot area top.",
          "samples": [
            {
              "name": "Different axis position properties",
              "value": "highcharts/xaxis/axis-position-properties",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number", "string"] },
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "xAxis.top",
          "name": "top",
          "line": 1103,
          "lineEnd": 1116,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "type": {
        "doclet": {
          "description": "The type of axis. Can be one of `linear`, `logarithmic`, `datetime`\nor `category`. In a datetime axis, the numbers are given in\nmilliseconds, and tick marks are placed on appropriate values like\nfull hours or days. In a category axis, the\n[point names](#series.line.data.name) of the chart's series are used\nfor categories, if not a [categories](#xAxis.categories) array is\ndefined.",
          "samples": [
            {
              "name": "Linear",
              "value": "highcharts/xaxis/type-linear/",
              "products": ["highcharts"]
            },
            {
              "name": "Logarithmic",
              "value": "highcharts/yaxis/type-log/",
              "products": ["highcharts"]
            },
            {
              "name": "Logarithmic with minor grid lines",
              "value": "highcharts/yaxis/type-log-minorgrid/",
              "products": ["highcharts"]
            },
            {
              "name": "Logarithmic on two axes",
              "value": "highcharts/xaxis/type-log-both/",
              "products": ["highcharts"]
            },
            {
              "name": "Logarithmic with extension to emulate negative values",
              "value": "highcharts/yaxis/type-log-negative/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Highcharts.AxisTypeValue"] },
          "defaultvalue": "linear",
          "products": ["highcharts", "gantt"]
        },
        "meta": {
          "fullname": "xAxis.type",
          "name": "type",
          "line": 1964,
          "lineEnd": 1988,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "uniqueNames": {
        "doclet": {
          "description": "Applies only when the axis `type` is `category`. When `uniqueNames`\nis true, points are placed on the X axis according to their names.\nIf the same point name is repeated in the same or another series,\nthe point is placed on the same X position as other points of the\nsame name. When `uniqueNames` is false, the points are laid out in\nincreasing X positions regardless of their names, and the X axis\ncategory will take the name of the last point in each position.",
          "samples": [
            {
              "name": "True by default",
              "value": "highcharts/xaxis/uniquenames-true/",
              "products": ["highcharts"]
            },
            {
              "name": "False",
              "value": "highcharts/xaxis/uniquenames-false/",
              "products": ["highcharts"]
            }
          ],
          "since": "4.2.7",
          "products": ["highcharts", "gantt"],
          "type": { "names": ["boolean"] },
          "defaultvalue": "true"
        },
        "meta": {
          "fullname": "xAxis.uniqueNames",
          "name": "uniqueNames",
          "line": 1998,
          "lineEnd": 2017,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "units": {
        "doclet": {
          "description": "Datetime axis only. An array determining what time intervals the\nticks are allowed to fall on. Each array item is an array where the\nfirst value is the time unit and the second value another array of\nallowed multiples.\n\nDefaults to:\n```js\nunits: [[\n    'millisecond', // unit name\n    [1, 2, 5, 10, 20, 25, 50, 100, 200, 500] // allowed multiples\n], [\n    'second',\n    [1, 2, 5, 10, 15, 30]\n], [\n    'minute',\n    [1, 2, 5, 10, 15, 30]\n], [\n    'hour',\n    [1, 2, 3, 4, 6, 8, 12]\n], [\n    'day',\n    [1, 2]\n], [\n    'week',\n    [1, 2]\n], [\n    'month',\n    [1, 2, 3, 4, 6]\n], [\n    'year',\n    null\n]]\n```",
          "samples": [
            {
              "name": "Axis units demonstrated",
              "value": "highcharts/xaxis/units/",
              "products": ["highcharts"]
            }
          ],
          "type": {
            "names": ["Array.<Array.<string, (Array.<number>|null)>>"]
          },
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "xAxis.units",
          "name": "units",
          "line": 2018,
          "lineEnd": 2059,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "visible": {
        "doclet": {
          "description": "Whether axis, including axis title, line, ticks and labels, should\nbe visible.",
          "since": "4.1.9",
          "products": ["highcharts", "highstock", "gantt"],
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "xAxis.visible",
          "name": "visible",
          "line": 1964,
          "lineEnd": 1988,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "width": {
        "doclet": {
          "description": "The width as the horizontal axis. If it's a number, it is interpreted\nas pixels.\n\nSince Highcharts v5.0.13: If it's a percentage string, it is\ninterpreted as percentages of the total plot width.",
          "samples": [
            {
              "name": "Different axis position properties",
              "value": "highcharts/xaxis/axis-position-properties",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["number", "string"] },
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "xAxis.width",
          "name": "width",
          "line": 2197,
          "lineEnd": 2210,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "zIndex": {
        "doclet": {
          "description": "The Z index for the axis group.",
          "see": [
            "[axis.gridZIndex](#xAxis.gridZIndex)",
            "[axis.labels.zIndex](#xAxis.labels.zIndex)"
          ],
          "type": { "names": ["number"] },
          "defaultvalue": 2
        },
        "meta": {
          "fullname": "xAxis.zIndex",
          "name": "zIndex",
          "line": 425,
          "lineEnd": 430,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 2
        },
        "children": {},
        "extended": 1
      },
      "zoomEnabled": {
        "doclet": {
          "description": "Whether to zoom axis. If `chart.zoomType` is set, the option allows\nto disable zooming on an individual axis.",
          "samples": [
            {
              "name": "Zoom enabled is false",
              "value": "highcharts/xaxis/zoomenabled/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "xAxis.zoomEnabled",
          "name": "zoomEnabled",
          "line": 432,
          "lineEnd": 438,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      }
    },
    "flutterClassName": "HighchartsXAxisOptions",
    "extended": 1
  },
  "yAxis": {
    "doclet": {
      "description": "The Y axis or value axis. Normally this is the vertical axis,\nthough if the chart is inverted this is the horizontal axis.\nIn case of multiple axes, the yAxis node is an array of\nconfiguration objects.\n\nSee [the Axis object](/class-reference/Highcharts.Axis) for programmatic\naccess to the axis.",
      "type": { "names": ["*", "Array.<*>"] },
      "extends": "xAxis",
      "exclude": ["currentDateIndicator", "ordinal", "overscroll"]
    },
    "meta": {
      "filename": "code/es-modules/Core/Axis/TreeGrid/TreeGridAxis.js",
      "name": "yAxis",
      "fullname": "yAxis",
      "line": 451,
      "lineEnd": 459,
      "column": 16
    },
    "children": {
      "endOnTick": {
        "doclet": {
          "description": "Whether to force the axis to end on a tick. Use this option with\nthe `maxPadding` option to control the axis end.\n\nThis option is always disabled, when panning type is\neither `y` or `xy`.",
          "see": ["[type](#chart.panning.type)"],
          "samples": [
            {
              "name": "True by default",
              "value": "highcharts/yaxis/endontick/",
              "products": ["highcharts"]
            },
            {
              "name": "False",
              "value": "highcharts/yaxis/endontick-false/",
              "products": ["highcharts"]
            },
            {
              "name": "True by default",
              "value": "stock/demo/basic-line/",
              "products": ["highstock"]
            },
            {
              "name": "False for Y axis",
              "value": "stock/xaxis/endontick/",
              "products": ["highstock"]
            }
          ],
          "since": "1.2.0",
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "yAxis.endOnTick",
          "name": "endOnTick",
          "line": 2362,
          "lineEnd": 2383,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "gridLineWidth": {
        "doclet": { "type": { "names": ["number"] }, "defaultvalue": 1 },
        "meta": {
          "fullname": "yAxis.gridLineWidth",
          "name": "gridLineWidth",
          "line": 3041,
          "lineEnd": 3041,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 1
        },
        "children": {},
        "extended": 1
      },
      "height": {
        "doclet": {
          "description": "The height of the Y axis. If it's a number, it is interpreted as\npixels.\n\nSince Highcharts 2: If it's a percentage string, it is interpreted as\npercentages of the total plot height.",
          "see": ["[yAxis.top](#yAxis.top)"],
          "samples": [
            {
              "name": "Percentage height panes",
              "value": "stock/demo/candlestick-and-volume/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number", "string"] },
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "yAxis.height",
          "name": "height",
          "line": 2287,
          "lineEnd": 2302,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "labels": {
        "doclet": { "extends": "xAxis.labels" },
        "meta": {
          "filename": "code/es-modules/Core/Axis/TreeGrid/TreeGridAxis.js",
          "name": "labels",
          "fullname": "yAxis.labels",
          "line": 451,
          "lineEnd": 459,
          "column": 16
        },
        "children": {
          "align": {
            "doclet": {
              "description": "What part of the string the given position is anchored to. Can\nbe one of `\"left\"`, `\"center\"` or `\"right\"`. The exact position\nalso depends on the `labels.x` setting.\n\nAngular gauges and solid gauges defaults to `\"center\"`.\nSolid gauges with two labels have additional option `\"auto\"`\nfor automatic horizontal and vertical alignment.",
              "samples": [
                {
                  "name": "Left",
                  "value": "highcharts/yaxis/labels-align-left/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Solid gauge labels auto aligned",
                  "value": "highcharts/series-solidgauge/labels-auto-aligned/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.AlignValue"] },
              "defaultByProduct": { "highstock": "right" }
            },
            "meta": {
              "fullname": "yAxis.labels.align",
              "name": "align",
              "line": 2526,
              "lineEnd": 2543,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "distance": {
            "doclet": {
              "description": "The label's pixel distance from the perimeter of the plot area.\nOn cartesian charts, this is overridden if the `labels.y` setting\nis set.\n\nOn polar charts, if it's a percentage string, it is interpreted\nthe same as [series.radius](#plotOptions.gauge.radius), so the\nlabel can be aligned under the gauge's shape.",
              "samples": [
                {
                  "name": "Polar chart, labels centered under the arc",
                  "value": "highcharts/yaxis/labels-distance/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "string"] },
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "yAxis.labels.distance",
              "name": "distance",
              "line": 2496,
              "lineEnd": 2511,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "x": {
            "doclet": {
              "description": "The x position offset of all labels relative to the tick\npositions on the axis. Defaults to -15 for left axis, 15 for\nright axis.",
              "samples": [
                {
                  "name": "Y axis labels placed on grid lines",
                  "value": "highcharts/xaxis/labels-x/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": null
            },
            "meta": {
              "fullname": "yAxis.labels.x",
              "name": "x",
              "line": 2496,
              "lineEnd": 2511,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": "undefined"
            },
            "children": {},
            "extended": 1
          },
          "y": {
            "doclet": {
              "description": "The y position offset of all labels relative to the tick\npositions on the axis. For polar and radial axis consider the use\nof the [distance](#yAxis.labels.distance) option.",
              "samples": [
                {
                  "name": "Y axis labels placed on grid lines",
                  "value": "highcharts/xaxis/labels-x/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultByProduct": {
                "highcharts": 3,
                "highstock": -2,
                "highmaps": 3
              }
            },
            "meta": {
              "fullname": "yAxis.labels.y",
              "name": "y",
              "line": 2512,
              "lineEnd": 2525,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "allowOverlap": {},
          "autoRotation": {},
          "autoRotationLimit": {},
          "enabled": {},
          "format": {},
          "formatter": {},
          "maxStaggerLines": {},
          "overflow": {},
          "padding": {},
          "position3d": {},
          "reserveSpace": {},
          "rotation": {},
          "skew3d": {},
          "staggerLines": {},
          "step": {},
          "style": {},
          "useHTML": {},
          "zIndex": {}
        },
        "flutterClassName": "HighchartsYAxisLabelsOptions",
        "extended": 1
      },
      "lineWidth": {
        "doclet": { "type": { "names": ["number"] }, "defaultvalue": 0 },
        "meta": {
          "fullname": "yAxis.lineWidth",
          "name": "lineWidth",
          "line": 3042,
          "lineEnd": 3042,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 0
        },
        "children": {},
        "extended": 1
      },
      "max": {
        "doclet": {
          "samples": [
            {
              "name": "Y axis max of 200",
              "value": "highcharts/yaxis/max-200/",
              "products": ["highcharts"]
            },
            {
              "name": "Y axis max on logarithmic axis",
              "value": "highcharts/yaxis/max-logarithmic/",
              "products": ["highcharts"]
            },
            {
              "name": "Fixed min and max on Y axis",
              "value": "stock/yaxis/min-max/",
              "products": ["highstock"]
            }
          ]
        },
        "meta": {
          "fullname": "yAxis.max",
          "name": "max",
          "line": 2556,
          "lineEnd": 2565,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "maxColor": {
        "doclet": {
          "description": "Solid gauge only. Unless [stops](#yAxis.stops) are set, the color\nto represent the maximum value of the Y axis.",
          "samples": [
            {
              "name": "Min and max colors",
              "value": "highcharts/yaxis/mincolor-maxcolor/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Highcharts.ColorType"] },
          "defaultvalue": "#003399",
          "since": "4.0.0",
          "products": ["highcharts"]
        },
        "meta": {
          "fullname": "yAxis.maxColor",
          "name": "maxColor",
          "line": 2303,
          "lineEnd": 2315,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "maxPadding": {
        "doclet": {
          "description": "Padding of the max value relative to the length of the axis. A\npadding of 0.05 will make a 100px axis 5px longer. This is useful\nwhen you don't want the highest data value to appear on the edge\nof the plot area. When the axis' `max` option is set or a max extreme\nis set using `axis.setExtremes()`, the maxPadding will be ignored.\n\nAlso the `softThreshold` option takes precedence over `maxPadding`,\nso if the data is tangent to the threshold, `maxPadding` may not\napply unless `softThreshold` is set to false.",
          "samples": [
            {
              "name": "Max padding of 0.2",
              "value": "highcharts/yaxis/maxpadding-02/",
              "products": ["highcharts"]
            },
            {
              "name": "Greater min- and maxPadding",
              "value": "stock/xaxis/minpadding-maxpadding/",
              "products": ["highstock"]
            }
          ],
          "since": "1.2.0",
          "products": ["highcharts", "highstock", "gantt"],
          "type": { "names": ["number"] },
          "defaultvalue": 0.05
        },
        "meta": {
          "fullname": "yAxis.maxPadding",
          "name": "maxPadding",
          "line": 2417,
          "lineEnd": 2435,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 0.05
        },
        "children": {},
        "extended": 1
      },
      "min": {
        "doclet": {
          "samples": [
            {
              "name": "-50 with startOnTick to false",
              "value": "highcharts/yaxis/min-startontick-false/",
              "products": ["highcharts"]
            },
            {
              "name": "-50 with startOnTick true by default",
              "value": "highcharts/yaxis/min-startontick-true/",
              "products": ["highcharts"]
            },
            {
              "name": "Fixed min and max on Y axis",
              "value": "stock/yaxis/min-max/",
              "products": ["highstock"]
            }
          ]
        },
        "meta": {
          "fullname": "yAxis.min",
          "name": "min",
          "line": 2566,
          "lineEnd": 2575,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "minColor": {
        "doclet": {
          "description": "Solid gauge only. Unless [stops](#yAxis.stops) are set, the color\nto represent the minimum value of the Y axis.",
          "samples": [
            {
              "name": "Min and max color",
              "value": "highcharts/yaxis/mincolor-maxcolor/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["Highcharts.ColorType"] },
          "defaultvalue": "#e6ebf5",
          "since": "4.0.0",
          "products": ["highcharts"]
        },
        "meta": {
          "fullname": "yAxis.minColor",
          "name": "minColor",
          "line": 2316,
          "lineEnd": 2328,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "minPadding": {
        "doclet": {
          "description": "Padding of the min value relative to the length of the axis. A\npadding of 0.05 will make a 100px axis 5px longer. This is useful\nwhen you don't want the lowest data value to appear on the edge\nof the plot area. When the axis' `min` option is set or a max extreme\nis set using `axis.setExtremes()`, the maxPadding will be ignored.\n\nAlso the `softThreshold` option takes precedence over `minPadding`,\nso if the data is tangent to the threshold, `minPadding` may not\napply unless `softThreshold` is set to false.",
          "samples": [
            {
              "name": "Min padding of 0.2",
              "value": "highcharts/yaxis/minpadding/",
              "products": ["highcharts"]
            },
            {
              "name": "Greater min- and maxPadding",
              "value": "stock/xaxis/minpadding-maxpadding/",
              "products": ["highstock"]
            }
          ],
          "since": "1.2.0",
          "products": ["highcharts", "highstock", "gantt"],
          "type": { "names": ["number"] },
          "defaultvalue": 0.05
        },
        "meta": {
          "fullname": "yAxis.minPadding",
          "name": "minPadding",
          "line": 2437,
          "lineEnd": 2455,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 0.05
        },
        "children": {},
        "extended": 1
      },
      "opposite": {
        "doclet": {
          "productdesc": [
            {
              "value": "In Highcharts Stock 1.x, the Y axis was placed\non the left side by default.",
              "products": ["highstock"]
            }
          ],
          "samples": [
            {
              "name": "Secondary Y axis opposite",
              "value": "highcharts/yaxis/opposite/",
              "products": ["highcharts"]
            },
            {
              "name": "Y axis on left side",
              "value": "stock/xaxis/opposite/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultByProduct": { "highstock": true, "highcharts": false },
          "products": ["highstock", "highcharts", "gantt"]
        },
        "meta": {
          "fullname": "yAxis.opposite",
          "name": "opposite",
          "line": 2457,
          "lineEnd": 2472,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "plotBands": {
        "doclet": {
          "type": { "names": ["Array.<*>"] },
          "extends": "xAxis.plotBands"
        },
        "meta": {
          "fullname": "yAxis.plotBands",
          "name": "plotBands",
          "line": 887,
          "lineEnd": 891,
          "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
          "column": 0
        },
        "children": {
          "innerRadius": {
            "doclet": {
              "description": "In a gauge chart, this option determines the inner radius of the\nplot band that stretches along the perimeter. It can be given as\na percentage string, like `\"100%\"`, or as a pixel number, like `100`.\nBy default, the inner radius is controlled by the [thickness](#yAxis.plotBands.thickness) option.",
              "samples": [
                {
                  "name": "Gauge plot band",
                  "value": "highcharts/xaxis/plotbands-gauge",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "string"] },
              "since": "2.3.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "yAxis.plotBands.innerRadius",
              "name": "innerRadius",
              "line": 892,
              "lineEnd": 906,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "outerRadius": {
            "doclet": {
              "description": "In a gauge chart, this option determines the outer radius of the\nplot band that stretches along the perimeter. It can be given as\na percentage string, like `\"100%\"`, or as a pixel number, like `100`.",
              "samples": [
                {
                  "name": "Gauge plot band",
                  "value": "highcharts/xaxis/plotbands-gauge",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "string"] },
              "defaultvalue": "100%",
              "since": "2.3.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "yAxis.plotBands.outerRadius",
              "name": "outerRadius",
              "line": 907,
              "lineEnd": 920,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "thickness": {
            "doclet": {
              "description": "In a gauge chart, this option sets the width of the plot band\nstretching along the perimeter. It can be given as a percentage\nstring, like `\"10%\"`, or as a pixel number, like `10`. The default\nvalue 10 is the same as the default [tickLength](#yAxis.tickLength),\nthus making the plot band act as a background for the tick markers.",
              "samples": [
                {
                  "name": "Gauge plot band",
                  "value": "highcharts/xaxis/plotbands-gauge",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number", "string"] },
              "defaultvalue": "10",
              "since": "2.3.0",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "yAxis.plotBands.thickness",
              "name": "thickness",
              "line": 921,
              "lineEnd": 936,
              "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "borderColor": {},
          "borderRadius": {},
          "borderWidth": {},
          "className": {},
          "color": {},
          "events": {},
          "from": {},
          "id": {},
          "label": {},
          "to": {},
          "zIndex": {}
        },
        "flutterClassName": "HighchartsYAxisPlotBandsOptions",
        "extended": 1
      },
      "plotLines": {
        "doclet": {
          "type": { "names": ["Array.<*>"] },
          "extends": "xAxis.plotLines"
        },
        "meta": {
          "fullname": "yAxis.plotLines",
          "name": "plotLines",
          "line": 937,
          "lineEnd": 941,
          "filename": "code/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js",
          "column": 0
        },
        "children": {
          "className": {},
          "color": {},
          "dashStyle": {},
          "events": {},
          "id": {},
          "label": {},
          "labels": {},
          "value": {},
          "width": {},
          "zIndex": {}
        },
        "flutterClassName": "HighchartsYAxisPlotLinesOptions",
        "extended": 1
      },
      "reversed": {
        "doclet": {
          "description": "Whether to reverse the axis so that the highest number is closest\nto the origin.",
          "samples": [
            {
              "name": "Reversed Y axis",
              "value": "highcharts/yaxis/reversed/",
              "products": ["highcharts"]
            },
            {
              "name": "Reversed Y axis",
              "value": "stock/xaxis/reversed/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultByProduct": {
            "highcharts": false,
            "highstock": false,
            "highmaps": true,
            "gantt": true
          }
        },
        "meta": {
          "fullname": "yAxis.reversed",
          "name": "reversed",
          "line": 2329,
          "lineEnd": 2344,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "reversedStacks": {
        "doclet": {
          "description": "If `true`, the first series in a stack will be drawn on top in a\npositive, non-reversed Y axis. If `false`, the first series is in\nthe base of the stack.",
          "samples": [
            {
              "name": "Non-reversed stacks",
              "value": "highcharts/yaxis/reversedstacks-false/",
              "products": ["highcharts"]
            },
            {
              "name": "Non-reversed stacks",
              "value": "highcharts/yaxis/reversedstacks-false/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["boolean"] },
          "defaultvalue": "true",
          "since": "3.0.10",
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "yAxis.reversedStacks",
          "name": "reversedStacks",
          "line": 2345,
          "lineEnd": 2360,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "showLastLabel": {
        "doclet": {
          "description": "Whether to show the last tick label.",
          "productdesc": [
            {
              "value": "Defaults to `true` on cartesian charts, and `false` on polar charts.",
              "products": ["highcharts", "gantt"]
            },
            {
              "value": "Defaults to `true` for categorized yAxis and `false` for other types\nof yAxis.",
              "products": ["highstock"]
            }
          ],
          "defaultvalue": "undefined",
          "type": { "names": ["boolean"] }
        },
        "meta": {
          "fullname": "yAxis.showLastLabel",
          "name": "showLastLabel",
          "line": 2479,
          "lineEnd": 2490,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "softMax": {
        "doclet": {
          "description": "A soft maximum for the axis. If the series data maximum is less\nthan this, the axis will stay at this maximum, but if the series\ndata maximum is higher, the axis will flex to show all data.\n\n**Note**: The [series.softThreshold](#plotOptions.series.softThreshold) option takes precedence over this\noption.",
          "samples": [
            {
              "name": "Soft min and max",
              "value": "highcharts/yaxis/softmin-softmax/"
            }
          ],
          "type": { "names": ["number"] },
          "since": "5.0.1",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "yAxis.softMax",
          "name": "softMax",
          "line": 2667,
          "lineEnd": 2683,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "softMin": {
        "doclet": {
          "description": "A soft minimum for the axis. If the series data minimum is greater\nthan this, the axis will stay at this minimum, but if the series\ndata minimum is lower, the axis will flex to show all data.\n\n**Note**: The [series.softThreshold](#plotOptions.series.softThreshold) option takes precedence over this\noption.",
          "samples": [
            {
              "name": "Soft min and max",
              "value": "highcharts/yaxis/softmin-softmax/"
            }
          ],
          "type": { "names": ["number"] },
          "since": "5.0.1",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "yAxis.softMin",
          "name": "softMin",
          "line": 2684,
          "lineEnd": 2700,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "stackLabels": {
        "doclet": {
          "description": "The stack labels show the total value for each bar in a stacked\ncolumn or bar chart. The label will be placed on top of positive\ncolumns and below negative columns. In case of an inverted column\nchart or a bar chart the label is placed to the right of positive\nbars and to the left of negative bars.",
          "products": ["highcharts"],
          "type": { "names": ["*"] }
        },
        "meta": {
          "fullname": "yAxis.stackLabels",
          "name": "stackLabels",
          "line": 2859,
          "lineEnd": 2874,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
        },
        "children": {
          "align": {
            "doclet": {
              "description": "Defines the horizontal alignment of the stack total label. Can be one\nof `\"left\"`, `\"center\"` or `\"right\"`. The default value is calculated\nat runtime and depends on orientation and whether the stack is\npositive or negative.",
              "samples": [
                {
                  "name": "Aligned to the left",
                  "value": "highcharts/yaxis/stacklabels-align-left/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Aligned in center",
                  "value": "highcharts/yaxis/stacklabels-align-center/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Aligned to the right",
                  "value": "highcharts/yaxis/stacklabels-align-right/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.AlignValue"] },
              "since": "2.1.5",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "yAxis.stackLabels.align",
              "name": "align",
              "line": 2701,
              "lineEnd": 2718,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "allowOverlap": {
            "doclet": {
              "description": "Allow the stack labels to overlap.",
              "samples": [
                {
                  "name": "Default false",
                  "value": "highcharts/yaxis/stacklabels-allowoverlap-false/",
                  "products": ["highcharts"]
                }
              ],
              "since": "5.0.13",
              "products": ["highcharts"],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "yAxis.stackLabels.allowOverlap",
              "name": "allowOverlap",
              "line": 2903,
              "lineEnd": 2911,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "animation": {
            "doclet": {
              "description": "Enable or disable the initial animation when a series is\ndisplayed for the `stackLabels`. The animation can also be set as\na configuration object. Please note that this option only\napplies to the initial animation.\nFor other animations, see [chart.animation](#chart.animation)\nand the animation parameter under the API methods.\nThe following properties are supported:\n\n- `defer`: The animation delay time in milliseconds.",
              "samples": [
                {
                  "name": "Animation defer settings",
                  "value": "highcharts/plotoptions/animation-defer/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "boolean",
                  "Partial.<Highcharts.AnimationOptionsObject>"
                ]
              },
              "since": "8.2.0"
            },
            "meta": {
              "fullname": "yAxis.stackLabels.animation",
              "name": "animation",
              "line": 2885,
              "lineEnd": 2901,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {
              "defer": {
                "doclet": {
                  "description": "The animation delay time in milliseconds.\nSet to `0` renders stackLabel immediately.\nAs `undefined` inherits defer time from the [series.animation.defer](#plotOptions.series.animation.defer).",
                  "type": { "names": ["number"] },
                  "since": "8.2.0"
                },
                "meta": {
                  "fullname": "yAxis.stackLabels.animation.defer",
                  "name": "defer",
                  "line": 2903,
                  "lineEnd": 2911,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "column": 0
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsYAxisStackLabelsAnimationOptions",
            "extended": 1
          },
          "backgroundColor": {
            "doclet": {
              "description": "The background color or gradient for the stack label.",
              "samples": [
                {
                  "name": "Stack labels box options",
                  "value": "highcharts/yaxis/stacklabels-box/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.ColorType"] },
              "since": "8.1.0"
            },
            "meta": {
              "fullname": "yAxis.stackLabels.backgroundColor",
              "name": "backgroundColor",
              "line": 2922,
              "lineEnd": 2930,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "borderColor": {
            "doclet": {
              "description": "The border color for the stack label. Defaults to `undefined`.",
              "samples": [
                {
                  "name": "Stack labels box options",
                  "value": "highcharts/yaxis/stacklabels-box/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.ColorType"] },
              "since": "8.1.0"
            },
            "meta": {
              "fullname": "yAxis.stackLabels.borderColor",
              "name": "borderColor",
              "line": 2931,
              "lineEnd": 2939,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "borderRadius": {
            "doclet": {
              "description": "The border radius in pixels for the stack label.",
              "samples": [
                {
                  "name": "Stack labels box options",
                  "value": "highcharts/yaxis/stacklabels-box/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "0",
              "since": "8.1.0"
            },
            "meta": {
              "fullname": "yAxis.stackLabels.borderRadius",
              "name": "borderRadius",
              "line": 2940,
              "lineEnd": 2949,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "borderWidth": {
            "doclet": {
              "description": "The border width in pixels for the stack label.",
              "samples": [
                {
                  "name": "Stack labels box options",
                  "value": "highcharts/yaxis/stacklabels-box/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "0",
              "since": "8.1.0"
            },
            "meta": {
              "fullname": "yAxis.stackLabels.borderWidth",
              "name": "borderWidth",
              "line": 2950,
              "lineEnd": 2959,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "crop": {
            "doclet": {
              "description": "Whether to hide stack labels that are outside the plot area.\nBy default, the stack label is moved\ninside the plot area according to the\n[overflow](/highcharts/#yAxis/stackLabels/overflow)\noption.",
              "type": { "names": ["boolean"] },
              "since": "7.1.3",
              "defaultvalue": true
            },
            "meta": {
              "fullname": "yAxis.stackLabels.crop",
              "name": "crop",
              "line": 2972,
              "lineEnd": 2981,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": true
            },
            "children": {},
            "extended": 1
          },
          "enabled": {
            "doclet": {
              "description": "Enable or disable the stack total labels.",
              "samples": [
                {
                  "name": "Enabled stack total labels",
                  "value": "highcharts/yaxis/stacklabels-enabled/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Enabled stack labels in waterfall chart",
                  "value": "highcharts/yaxis/stacklabels-enabled-waterfall/",
                  "products": ["highcharts"]
                }
              ],
              "since": "2.1.5",
              "products": ["highcharts"],
              "type": { "names": ["boolean"] },
              "defaultvalue": false
            },
            "meta": {
              "fullname": "yAxis.stackLabels.enabled",
              "name": "enabled",
              "line": 2922,
              "lineEnd": 2930,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": false
            },
            "children": {},
            "extended": 1
          },
          "format": {
            "doclet": {
              "description": "A format string for the data label. Available variables are the same\nas for `formatter`.",
              "type": { "names": ["string"] },
              "defaultvalue": "{total}",
              "since": "3.0.2",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "yAxis.stackLabels.format",
              "name": "format",
              "line": 2719,
              "lineEnd": 2728,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "formatter": {
            "doclet": {
              "description": "Callback JavaScript function to format the label. The value is\ngiven by `this.total`.",
              "samples": [
                {
                  "name": "Added units to stack total value",
                  "value": "highcharts/yaxis/stacklabels-formatter/",
                  "products": ["highcharts"]
                }
              ],
              "type": {
                "names": [
                  "Highcharts.FormatterCallbackFunction.<Highcharts.StackItemObject>"
                ]
              },
              "since": "2.1.5",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "yAxis.stackLabels.formatter",
              "name": "formatter",
              "line": 2998,
              "lineEnd": 2998,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
            },
            "children": {},
            "extended": 1
          },
          "overflow": {
            "doclet": {
              "description": "How to handle stack total labels that flow outside the plot area.\nThe default is set to `\"justify\"`,\nwhich aligns them inside the plot area.\nFor columns and bars, this means it will be moved inside the bar.\nTo display stack labels outside the plot area,\nset `crop` to `false` and `overflow` to `\"allow\"`.",
              "samples": [
                {
                  "name": "Stack labels flows outside the plot area.",
                  "value": "highcharts/yaxis/stacklabels-overflow/"
                }
              ],
              "type": { "names": ["Highcharts.DataLabelsOverflowValue"] },
              "since": "7.1.3",
              "defaultvalue": "justify"
            },
            "meta": {
              "fullname": "yAxis.stackLabels.overflow",
              "name": "overflow",
              "line": 2983,
              "lineEnd": 2996,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": "justify"
            },
            "children": {},
            "extended": 1
          },
          "rotation": {
            "doclet": {
              "description": "Rotation of the labels in degrees.",
              "samples": [
                {
                  "name": "Labels rotated 45°",
                  "value": "highcharts/yaxis/stacklabels-rotation/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "0",
              "since": "2.1.5",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "yAxis.stackLabels.rotation",
              "name": "rotation",
              "line": 2729,
              "lineEnd": 2740,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "style": {
            "doclet": {
              "description": "CSS styles for the label.\n\nIn styled mode, the styles are set in the\n`.highcharts-stack-label` class.",
              "samples": [
                {
                  "name": "Red stack total labels",
                  "value": "highcharts/yaxis/stacklabels-style/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.CSSObject"] },
              "since": "2.1.5",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "yAxis.stackLabels.style",
              "name": "style",
              "line": 3015,
              "lineEnd": 3027,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
            },
            "children": {
              "color": {
                "doclet": {
                  "internal": true,
                  "type": { "names": ["string"] },
                  "defaultvalue": "#000000"
                },
                "meta": {
                  "fullname": "yAxis.stackLabels.style.color",
                  "name": "color",
                  "line": 3029,
                  "lineEnd": 3029,
                  "column": 16,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "default": "#000000"
                },
                "children": {},
                "extended": 1
              },
              "fontSize": {
                "doclet": {
                  "type": { "names": ["number", "string"] },
                  "defaultvalue": "0.7em"
                },
                "meta": {
                  "fullname": "yAxis.stackLabels.style.fontSize",
                  "name": "fontSize",
                  "line": 3031,
                  "lineEnd": 3033,
                  "column": 16,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "default": "0.7em"
                },
                "children": {},
                "extended": 1
              },
              "fontWeight": {
                "doclet": {
                  "internal": true,
                  "type": { "names": ["string"] },
                  "defaultvalue": "bold"
                },
                "meta": {
                  "fullname": "yAxis.stackLabels.style.fontWeight",
                  "name": "fontWeight",
                  "line": 3035,
                  "lineEnd": 3035,
                  "column": 16,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "default": "bold"
                },
                "children": {},
                "extended": 1
              },
              "textOutline": {
                "doclet": {
                  "internal": true,
                  "type": { "names": ["number"] },
                  "defaultvalue": null
                },
                "meta": {
                  "fullname": "yAxis.stackLabels.style.textOutline",
                  "name": "textOutline",
                  "line": 3037,
                  "lineEnd": 3037,
                  "column": 16,
                  "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
                  "default": "1px contrast"
                },
                "children": {},
                "extended": 1
              }
            },
            "flutterClassName": "HighchartsYAxisStackLabelsStyleOptions",
            "extended": 1
          },
          "textAlign": {
            "doclet": {
              "description": "The text alignment for the label. While `align` determines where the\ntexts anchor point is placed with regards to the stack, `textAlign`\ndetermines how the text is aligned against its anchor point. Possible\nvalues are `\"left\"`, `\"center\"` and `\"right\"`. The default value is\ncalculated at runtime and depends on orientation and whether the\nstack is positive or negative.",
              "samples": [
                {
                  "name": "Label in center position but text-aligned left",
                  "value": "highcharts/yaxis/stacklabels-textalign-left/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.AlignValue"] },
              "since": "2.1.5",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "yAxis.stackLabels.textAlign",
              "name": "textAlign",
              "line": 2741,
              "lineEnd": 2756,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "useHTML": {
            "doclet": {
              "description": "Whether to [use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\nto render the labels.",
              "type": { "names": ["boolean"] },
              "defaultvalue": "false",
              "since": "3.0.0",
              "products": ["highcharts", "highstock"]
            },
            "meta": {
              "fullname": "yAxis.stackLabels.useHTML",
              "name": "useHTML",
              "line": 2757,
              "lineEnd": 2766,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "verticalAlign": {
            "doclet": {
              "description": "Defines the vertical alignment of the stack total label. Can be one\nof `\"top\"`, `\"middle\"` or `\"bottom\"`. The default value is calculated\nat runtime and depends on orientation and whether the stack is\npositive or negative.",
              "samples": [
                {
                  "name": "Vertically aligned top",
                  "value": "highcharts/yaxis/stacklabels-verticalalign-top/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Vertically aligned middle",
                  "value": "highcharts/yaxis/stacklabels-verticalalign-middle/",
                  "products": ["highcharts"]
                },
                {
                  "name": "Vertically aligned bottom",
                  "value": "highcharts/yaxis/stacklabels-verticalalign-bottom/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["Highcharts.VerticalAlignValue"] },
              "since": "2.1.5",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "yAxis.stackLabels.verticalAlign",
              "name": "verticalAlign",
              "line": 2767,
              "lineEnd": 2784,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "x": {
            "doclet": {
              "description": "The x position offset of the label relative to the left of the\nstacked bar. The default value is calculated at runtime and depends\non orientation and whether the stack is positive or negative.",
              "samples": [
                {
                  "name": "Stack total labels with x offset",
                  "value": "highcharts/yaxis/stacklabels-x/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "2.1.5",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "yAxis.stackLabels.x",
              "name": "x",
              "line": 2785,
              "lineEnd": 2797,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "y": {
            "doclet": {
              "description": "The y position offset of the label relative to the tick position\non the axis. The default value is calculated at runtime and depends\non orientation and whether the stack is positive or negative.",
              "samples": [
                {
                  "name": "Stack total labels with y offset",
                  "value": "highcharts/yaxis/stacklabels-y/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "since": "2.1.5",
              "products": ["highcharts"]
            },
            "meta": {
              "fullname": "yAxis.stackLabels.y",
              "name": "y",
              "line": 2798,
              "lineEnd": 2810,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsYAxisStackLabelsOptions",
        "extended": 1
      },
      "stackShadow": {
        "doclet": {
          "description": "Relevant only for pictorial series. The `stackShadow` forms the background of\nstacked points. Requires `series.stacking` to be defined.",
          "samples": [
            {
              "name": "Pictorial stackShadow option",
              "value": "highcharts/demo/pictorial-stackshadow/",
              "products": ["highcharts"]
            }
          ],
          "declare": "Highcharts.YAxisOptions",
          "type": { "names": ["*"] },
          "since": "11.0.0",
          "products": ["highcharts"],
          "requires": ["module:modules/pictorial"]
        },
        "meta": {
          "fullname": "yAxis.stackShadow",
          "name": "stackShadow",
          "line": 469,
          "lineEnd": 482,
          "filename": "code/es-modules/Series/Pictorial/PictorialSeries.js",
          "column": 0
        },
        "children": {
          "borderColor": {
            "doclet": {
              "description": "The color of the `stackShadow` border.",
              "declare": "Highcharts.YAxisOptions",
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "defaultvalue": "transparent",
              "products": ["highcharts"],
              "requires": ["module:modules/pictorial"],
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "yAxis.stackShadow.borderColor",
              "name": "borderColor",
              "line": 483,
              "lineEnd": 492,
              "filename": "code/es-modules/Series/Pictorial/PictorialSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "borderWidth": {
            "doclet": {
              "description": "The width of the `stackShadow` border.",
              "declare": "Highcharts.YAxisOptions",
              "type": { "names": ["number"] },
              "defaultvalue": "0",
              "products": ["highcharts"],
              "requires": ["module:modules/pictorial"],
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "yAxis.stackShadow.borderWidth",
              "name": "borderWidth",
              "line": 493,
              "lineEnd": 502,
              "filename": "code/es-modules/Series/Pictorial/PictorialSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "color": {
            "doclet": {
              "description": "The color of the `stackShadow`.",
              "declare": "Highcharts.YAxisOptions",
              "type": {
                "names": [
                  "Highcharts.ColorString",
                  "Highcharts.GradientColorObject",
                  "Highcharts.PatternObject"
                ]
              },
              "defaultvalue": "#dedede",
              "products": ["highcharts"],
              "requires": ["module:modules/pictorial"],
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "yAxis.stackShadow.color",
              "name": "color",
              "line": 503,
              "lineEnd": 512,
              "filename": "code/es-modules/Series/Pictorial/PictorialSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "enabled": {
            "doclet": {
              "description": "Enable or disable `stackShadow`.",
              "declare": "Highcharts.YAxisOptions",
              "type": { "names": ["boolean"] },
              "defaultvalue": "undefined",
              "products": ["highcharts"],
              "requires": ["module:modules/pictorial"],
              "since": "11.0.0"
            },
            "meta": {
              "fullname": "yAxis.stackShadow.enabled",
              "name": "enabled",
              "line": 513,
              "lineEnd": 522,
              "filename": "code/es-modules/Series/Pictorial/PictorialSeries.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          }
        },
        "flutterClassName": "HighchartsYAxisStackShadowOptions",
        "extended": 1
      },
      "startOnTick": {
        "doclet": {
          "description": "Whether to force the axis to start on a tick. Use this option with\nthe `maxPadding` option to control the axis start.\n\nThis option is always disabled, when panning type is\neither `y` or `xy`.",
          "see": ["[type](#chart.panning.type)"],
          "samples": [
            {
              "name": "False by default",
              "value": "highcharts/xaxis/startontick-false/",
              "products": ["highcharts"]
            },
            {
              "name": "True",
              "value": "highcharts/xaxis/startontick-true/",
              "products": ["highcharts"]
            },
            {
              "name": "False for Y axis",
              "value": "stock/xaxis/endontick/",
              "products": ["highstock"]
            }
          ],
          "since": "1.2.0",
          "products": ["highcharts", "highstock", "gantt"],
          "type": { "names": ["boolean"] },
          "defaultvalue": true
        },
        "meta": {
          "fullname": "yAxis.startOnTick",
          "name": "startOnTick",
          "line": 2556,
          "lineEnd": 2565,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": true
        },
        "children": {},
        "extended": 1
      },
      "stops": {
        "doclet": {
          "description": "Solid gauge series only. Color stops for the solid gauge. Use this\nin cases where a linear gradient between a `minColor` and `maxColor`\nis not sufficient. The stops is an array of tuples, where the first\nitem is a float between 0 and 1 assigning the relative position in\nthe gradient, and the second item is the color.\n\nFor solid gauges, the Y axis also inherits the concept of\n[data classes](https://api.highcharts.com/highmaps#colorAxis.dataClasses)\nfrom the Highmaps color axis.",
          "samples": [
            {
              "name": "Gauge with stops",
              "value": "highcharts/demo/gauge-solid/",
              "products": ["highcharts"]
            }
          ],
          "see": ["[minColor](#yAxis.minColor)", "[maxColor](#yAxis.maxColor)"],
          "type": { "names": ["Array.<Array.<number, Highcharts.ColorType>>"] },
          "since": "4.0.0",
          "products": ["highcharts"]
        },
        "meta": {
          "fullname": "yAxis.stops",
          "name": "stops",
          "line": 2362,
          "lineEnd": 2383,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "tickPixelInterval": {
        "doclet": {
          "see": [
            "[tickInterval](#xAxis.tickInterval)",
            "[tickPositioner](#xAxis.tickPositioner)",
            "[tickPositions](#xAxis.tickPositions)"
          ],
          "type": { "names": ["number"] },
          "defaultvalue": 72
        },
        "meta": {
          "fullname": "yAxis.tickPixelInterval",
          "name": "tickPixelInterval",
          "line": 2457,
          "lineEnd": 2472,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "default": 72
        },
        "children": {},
        "extended": 1
      },
      "tickWidth": {
        "doclet": {
          "description": "The pixel width of the major tick marks.",
          "samples": [
            {
              "name": "10 px width",
              "value": "highcharts/xaxis/tickwidth/",
              "products": ["highcharts"]
            },
            {
              "name": "Formatted ticks on X axis",
              "value": "stock/xaxis/ticks/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number"] },
          "defaultvalue": "0",
          "products": ["highcharts", "highstock", "gantt"]
        },
        "meta": {
          "fullname": "yAxis.tickWidth",
          "name": "tickWidth",
          "line": 2384,
          "lineEnd": 2394,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "title": {
        "doclet": { "type": { "names": ["*"] }, "extends": "xAxis.title" },
        "meta": {
          "fullname": "yAxis.title",
          "name": "title",
          "line": 2831,
          "lineEnd": 2831,
          "column": 8,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js"
        },
        "children": {
          "margin": {
            "doclet": {
              "description": "The pixel distance between the axis labels and the title.\nPositive values are outside the axis line, negative are inside.",
              "samples": [
                {
                  "name": "Y axis title margin of 60",
                  "value": "highcharts/xaxis/title-margin/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["number"] },
              "defaultvalue": "40"
            },
            "meta": {
              "fullname": "yAxis.title.margin",
              "name": "margin",
              "line": 2832,
              "lineEnd": 2842,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "column": 0
            },
            "children": {},
            "extended": 1
          },
          "text": {
            "doclet": {
              "description": "The actual text of the axis title. Horizontal texts can contain\nHTML, but rotated texts are painted using vector techniques and\nmust be clean text. The Y axis title is disabled by setting the\n`text` option to `undefined`.",
              "samples": [
                {
                  "name": "Custom HTML",
                  "value": "highcharts/xaxis/title-text/",
                  "products": ["highcharts"]
                }
              ],
              "type": { "names": ["string", "null"] },
              "defaultByProduct": {
                "highcharts": "Values",
                "highstock": "undefined"
              },
              "products": ["highcharts", "highstock", "gantt"],
              "defaultvalue": "Values"
            },
            "meta": {
              "fullname": "yAxis.title.text",
              "name": "text",
              "line": 2832,
              "lineEnd": 2842,
              "column": 12,
              "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
              "default": "Values"
            },
            "children": {},
            "extended": 1
          },
          "align": {},
          "enabled": {},
          "offset": {},
          "position3d": {},
          "reserveSpace": {},
          "rotation": {},
          "skew3d": {},
          "style": {},
          "textAlign": {},
          "useHTML": {},
          "x": {},
          "y": {}
        },
        "flutterClassName": "HighchartsYAxisTitleOptions",
        "extended": 1
      },
      "tooltipValueFormat": {
        "doclet": {
          "description": "Parallel coordinates only. Format that will be used for point.y\nand available in [tooltip.pointFormat](#tooltip.pointFormat) as\n`{point.formattedValue}`. If not set, `{point.formattedValue}`\nwill use other options, in this order:\n\n1. [yAxis.labels.format](#yAxis.labels.format) will be used if\n   set\n\n2. If yAxis is a category, then category name will be displayed\n\n3. If yAxis is a datetime, then value will use the same format as\n   yAxis labels\n\n4. If yAxis is linear/logarithmic type, then simple value will be\n   used",
          "samples": [
            {
              "name": "Different tooltipValueFormats's",
              "value": "/highcharts/parallel-coordinates/tooltipvalueformat/",
              "products": ["highcharts"]
            }
          ],
          "type": { "names": ["string"] },
          "defaultvalue": "undefined",
          "since": "6.0.0",
          "products": ["highcharts"],
          "requires": ["module:modules/parallel-coordinates"]
        },
        "meta": {
          "fullname": "yAxis.tooltipValueFormat",
          "name": "tooltipValueFormat",
          "line": 104,
          "lineEnd": 131,
          "filename": "code/es-modules/Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "top": {
        "doclet": {
          "description": "The top position of the Y axis. If it's a number, it is interpreted\nas pixel position relative to the chart.\n\nSince Highcharts 2: If it's a percentage string, it is interpreted as\npercentages of the plot height, offset from plot area top.",
          "see": ["[yAxis.height](#yAxis.height)"],
          "samples": [
            {
              "name": "Percentage height panes",
              "value": "stock/demo/candlestick-and-volume/",
              "products": ["highstock"]
            }
          ],
          "type": { "names": ["number", "string"] },
          "products": ["highcharts", "highstock"]
        },
        "meta": {
          "fullname": "yAxis.top",
          "name": "top",
          "line": 2859,
          "lineEnd": 2874,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "type": {
        "doclet": {
          "description": "The type of axis. Can be one of `linear`, `logarithmic`, `datetime`,\n`category` or `treegrid`. Defaults to `treegrid` for Gantt charts,\n`linear` for other chart types.\n\nIn a datetime axis, the numbers are given in milliseconds, and tick\nmarks are placed on appropriate values, like full hours or days. In a\ncategory or treegrid axis, the [point names](#series.line.data.name)\nof the chart's series are used for categories, if a\n[categories](#xAxis.categories) array is not defined.",
          "samples": [
            {
              "name": "Logarithmic with minor grid lines",
              "value": "highcharts/yaxis/type-log-minorgrid/",
              "products": ["highcharts"]
            },
            {
              "name": "Logarithmic with extension to emulate negative values",
              "value": "highcharts/yaxis/type-log-negative/",
              "products": ["highcharts"]
            },
            {
              "name": "Treegrid axis",
              "value": "gantt/treegrid-axis/demo",
              "products": ["gantt"]
            }
          ],
          "type": { "names": ["Highcharts.AxisTypeValue"] },
          "defaultByProduct": { "highcharts": "linear", "gantt": "treegrid" },
          "products": ["highcharts", "gantt"]
        },
        "meta": {
          "fullname": "yAxis.type",
          "name": "type",
          "line": 2263,
          "lineEnd": 2286,
          "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
          "column": 0
        },
        "children": {},
        "extended": 1
      },
      "accessibility": {},
      "alignTicks": {},
      "allowDecimals": {},
      "alternateGridColor": {},
      "angle": {},
      "breaks": {},
      "categories": {},
      "ceiling": {},
      "className": {},
      "crosshair": {},
      "crossing": {},
      "dateTimeLabelFormats": {},
      "events": {},
      "floor": {},
      "gridLineColor": {},
      "gridLineDashStyle": {},
      "gridLineInterpolation": {},
      "gridZIndex": {},
      "id": {},
      "left": {},
      "lineColor": {},
      "linkedTo": {},
      "margin": {},
      "maxZoom": {},
      "minRange": {},
      "minTickInterval": {},
      "minorGridLineColor": {},
      "minorGridLineDashStyle": {},
      "minorGridLineWidth": {},
      "minorTickColor": {},
      "minorTickInterval": {},
      "minorTickLength": {},
      "minorTickPosition": {},
      "minorTickWidth": {},
      "minorTicks": {},
      "minorTicksPerMajor": {},
      "offset": {},
      "pane": {},
      "panningEnabled": {},
      "showEmpty": {},
      "showFirstLabel": {},
      "startOfWeek": {},
      "tickAmount": {},
      "tickColor": {},
      "tickInterval": {},
      "tickLength": {},
      "tickPosition": {},
      "tickPositioner": {},
      "tickPositions": {},
      "tickmarkPlacement": {},
      "uniqueNames": {},
      "units": {},
      "visible": {},
      "width": {},
      "zIndex": {},
      "zoomEnabled": {}
    },
    "flutterClassName": "HighchartsYAxisOptions",
    "extended": 1
  },
  "zAxis": {
    "doclet": {
      "description": "The Z axis or depth axis for 3D plots.\n\nSee the [Axis class](/class-reference/Highcharts.Axis) for programmatic\naccess to the axis.",
      "samples": [
        {
          "name": "Z-Axis with Categories",
          "value": "highcharts/3d/scatter-zaxis-categories/",
          "products": ["highcharts"]
        },
        {
          "name": "Z-Axis with styling",
          "value": "highcharts/3d/scatter-zaxis-grid/",
          "products": ["highcharts"]
        }
      ],
      "type": { "names": ["*", "Array.<*>"] },
      "extends": "xAxis",
      "since": "5.0.0",
      "products": ["highcharts"],
      "exclude": [
        "breaks",
        "crosshair",
        "height",
        "left",
        "lineColor",
        "lineWidth",
        "nameToX",
        "showEmpty",
        "top",
        "width"
      ]
    },
    "meta": {
      "fullname": "zAxis",
      "name": "zAxis",
      "line": 2229,
      "lineEnd": 2247,
      "filename": "code/es-modules/Core/Axis/AxisDefaults.js",
      "column": 0
    },
    "children": {
      "accessibility": {},
      "alignTicks": {},
      "allowDecimals": {},
      "alternateGridColor": {},
      "angle": {},
      "categories": {},
      "ceiling": {},
      "className": {},
      "crossing": {},
      "dateTimeLabelFormats": {},
      "endOnTick": {},
      "events": {},
      "floor": {},
      "gridLineColor": {},
      "gridLineDashStyle": {},
      "gridLineInterpolation": {},
      "gridLineWidth": {},
      "gridZIndex": {},
      "id": {},
      "labels": {},
      "linkedTo": {},
      "margin": {},
      "max": {},
      "maxPadding": {},
      "maxZoom": {},
      "min": {},
      "minPadding": {},
      "minRange": {},
      "minTickInterval": {},
      "minorGridLineColor": {},
      "minorGridLineDashStyle": {},
      "minorGridLineWidth": {},
      "minorTickColor": {},
      "minorTickInterval": {},
      "minorTickLength": {},
      "minorTickPosition": {},
      "minorTickWidth": {},
      "minorTicks": {},
      "minorTicksPerMajor": {},
      "offset": {},
      "opposite": {},
      "pane": {},
      "panningEnabled": {},
      "plotBands": {},
      "plotLines": {},
      "reversed": {},
      "reversedStacks": {},
      "showFirstLabel": {},
      "showLastLabel": {},
      "softMax": {},
      "softMin": {},
      "startOfWeek": {},
      "startOnTick": {},
      "tickAmount": {},
      "tickColor": {},
      "tickInterval": {},
      "tickLength": {},
      "tickPixelInterval": {},
      "tickPosition": {},
      "tickPositioner": {},
      "tickPositions": {},
      "tickWidth": {},
      "tickmarkPlacement": {},
      "title": {},
      "type": {},
      "uniqueNames": {},
      "units": {},
      "visible": {},
      "zIndex": {},
      "zoomEnabled": {}
    },
    "flutterClassName": "HighchartsZAxisOptions",
    "extended": 1
  }
}
